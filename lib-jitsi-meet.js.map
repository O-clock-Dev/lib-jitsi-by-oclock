{"version":3,"sources":["webpack://JitsiMeetJS/webpack/universalModuleDefinition","webpack://JitsiMeetJS/webpack/bootstrap","webpack://JitsiMeetJS/./JitsiConference.js","webpack://JitsiMeetJS/./JitsiConferenceErrors.js","webpack://JitsiMeetJS/./JitsiConferenceEventManager.js","webpack://JitsiMeetJS/./JitsiConferenceEvents.js","webpack://JitsiMeetJS/./JitsiConnection.js","webpack://JitsiMeetJS/./JitsiConnectionErrors.js","webpack://JitsiMeetJS/./JitsiConnectionEvents.js","webpack://JitsiMeetJS/./JitsiMediaDevices.js","webpack://JitsiMeetJS/./JitsiMediaDevicesEvents.js","webpack://JitsiMeetJS/./JitsiMeetJS.js","webpack://JitsiMeetJS/./JitsiParticipant.js","webpack://JitsiMeetJS/./JitsiTrackError.js","webpack://JitsiMeetJS/./JitsiTrackErrors.js","webpack://JitsiMeetJS/./JitsiTrackEvents.js","webpack://JitsiMeetJS/./JitsiTranscriptionStatus.js","webpack://JitsiMeetJS/./authenticateAndUpgradeRole.js","webpack://JitsiMeetJS/./index.js","webpack://JitsiMeetJS/./modules/DTMF/JitsiDTMFManager.js","webpack://JitsiMeetJS/./modules/P2PDominantSpeakerDetection.js","webpack://JitsiMeetJS/./modules/RTC/BridgeChannel.js","webpack://JitsiMeetJS/./modules/RTC/JitsiLocalTrack.js","webpack://JitsiMeetJS/./modules/RTC/JitsiRemoteTrack.js","webpack://JitsiMeetJS/./modules/RTC/JitsiTrack.js","webpack://JitsiMeetJS/./modules/RTC/LocalSdpMunger.js","webpack://JitsiMeetJS/./modules/RTC/RTC.js","webpack://JitsiMeetJS/./modules/RTC/RTCUtils.js","webpack://JitsiMeetJS/./modules/RTC/ScreenObtainer.js","webpack://JitsiMeetJS/./modules/RTC/TraceablePeerConnection.js","webpack://JitsiMeetJS/./modules/TalkMutedDetection.js","webpack://JitsiMeetJS/./modules/browser/BrowserCapabilities.js","webpack://JitsiMeetJS/./modules/browser/index.js","webpack://JitsiMeetJS/./modules/connectivity/ConnectionQuality.js","webpack://JitsiMeetJS/./modules/connectivity/IceFailedNotification.js","webpack://JitsiMeetJS/./modules/connectivity/ParticipantConnectionStatus.js","webpack://JitsiMeetJS/./modules/e2eping/e2eping.js","webpack://JitsiMeetJS/./modules/event/Jvb121EventGenerator.js","webpack://JitsiMeetJS/./modules/proxyconnection/ProxyConnectionPC.js","webpack://JitsiMeetJS/./modules/proxyconnection/ProxyConnectionService.js","webpack://JitsiMeetJS/./modules/proxyconnection/constants.js","webpack://JitsiMeetJS/./modules/recording/JibriSession.js","webpack://JitsiMeetJS/./modules/recording/RecordingManager.js","webpack://JitsiMeetJS/./modules/recording/recordingConstants.js","webpack://JitsiMeetJS/./modules/recording/recordingXMLUtils.js","webpack://JitsiMeetJS/./modules/rttmonitor/rttmonitor.js","webpack://JitsiMeetJS/./modules/settings/Settings.js","webpack://JitsiMeetJS/./modules/statistics/AnalyticsAdapter.js","webpack://JitsiMeetJS/./modules/statistics/AudioOutputProblemDetector.js","webpack://JitsiMeetJS/./modules/statistics/AvgRTPStatsReporter.js","webpack://JitsiMeetJS/./modules/statistics/CallStats.js","webpack://JitsiMeetJS/./modules/statistics/LocalStatsCollector.js","webpack://JitsiMeetJS/./modules/statistics/RTPStatsCollector.js","webpack://JitsiMeetJS/./modules/statistics/SpeakerStats.js","webpack://JitsiMeetJS/./modules/statistics/SpeakerStatsCollector.js","webpack://JitsiMeetJS/./modules/statistics/statistics.js","webpack://JitsiMeetJS/./modules/transcription/audioRecorder.js","webpack://JitsiMeetJS/./modules/transcription/recordingResult.js","webpack://JitsiMeetJS/./modules/transcription/transcriber.js","webpack://JitsiMeetJS/./modules/transcription/transcriptionServices/AbstractTranscriptionService.js","webpack://JitsiMeetJS/./modules/transcription/transcriptionServices/SphinxTranscriptionService.js","webpack://JitsiMeetJS/./modules/transcription/word.js","webpack://JitsiMeetJS/./modules/util/AsyncQueue.js","webpack://JitsiMeetJS/./modules/util/AuthUtil.js","webpack://JitsiMeetJS/./modules/util/EventEmitterForwarder.js","webpack://JitsiMeetJS/./modules/util/GlobalOnErrorHandler.js","webpack://JitsiMeetJS/./modules/util/Listenable.js","webpack://JitsiMeetJS/./modules/util/MathUtil.js","webpack://JitsiMeetJS/./modules/util/RandomUtil.js","webpack://JitsiMeetJS/./modules/util/ScriptUtil.js","webpack://JitsiMeetJS/./modules/util/StringUtils.js","webpack://JitsiMeetJS/./modules/util/UsernameGenerator.js","webpack://JitsiMeetJS/./modules/version/ComponentsVersions.js","webpack://JitsiMeetJS/./modules/videosipgw/JitsiVideoSIPGWSession.js","webpack://JitsiMeetJS/./modules/videosipgw/VideoSIPGW.js","webpack://JitsiMeetJS/./modules/videosipgw/VideoSIPGWConstants.js","webpack://JitsiMeetJS/./modules/xmpp/Caps.js","webpack://JitsiMeetJS/./modules/xmpp/ChatRoom.js","webpack://JitsiMeetJS/./modules/xmpp/ConnectionPlugin.js","webpack://JitsiMeetJS/./modules/xmpp/JingleSession.js","webpack://JitsiMeetJS/./modules/xmpp/JingleSessionPC.js","webpack://JitsiMeetJS/./modules/xmpp/JingleSessionState.js","webpack://JitsiMeetJS/./modules/xmpp/RtxModifier.js","webpack://JitsiMeetJS/./modules/xmpp/SDP.js","webpack://JitsiMeetJS/./modules/xmpp/SDPDiffer.js","webpack://JitsiMeetJS/./modules/xmpp/SDPUtil.js","webpack://JitsiMeetJS/./modules/xmpp/SdpConsistency.js","webpack://JitsiMeetJS/./modules/xmpp/SdpTransformUtil.js","webpack://JitsiMeetJS/./modules/xmpp/SignalingLayerImpl.js","webpack://JitsiMeetJS/./modules/xmpp/StropheBoshLastSuccess.js","webpack://JitsiMeetJS/./modules/xmpp/moderator.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.emuc.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.jingle.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.logger.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.ping.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.rayo.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.util.js","webpack://JitsiMeetJS/./modules/xmpp/xmpp.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-interop/lib/array-equals.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-interop/lib/index.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-interop/lib/interop.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-interop/lib/transform.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-simulcast/lib/index.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-simulcast/lib/transform-utils.js","webpack://JitsiMeetJS/./node_modules/async/lib/async.js","webpack://JitsiMeetJS/./node_modules/bowser/src/bowser.js","webpack://JitsiMeetJS/./node_modules/current-executing-script/dist/currentExecutingScript.js","webpack://JitsiMeetJS/./node_modules/events/events.js","webpack://JitsiMeetJS/./node_modules/jitsi-meet-logger/lib/LogCollector.js","webpack://JitsiMeetJS/./node_modules/jitsi-meet-logger/lib/Logger.js","webpack://JitsiMeetJS/./node_modules/jitsi-meet-logger/lib/index.js","webpack://JitsiMeetJS/./node_modules/js-md5/src/md5.js","webpack://JitsiMeetJS/./node_modules/js-utils/avatar/index.js","webpack://JitsiMeetJS/./node_modules/js-utils/browser-capabilities/BrowserCapabilities.js","webpack://JitsiMeetJS/./node_modules/js-utils/browser-capabilities/index.js","webpack://JitsiMeetJS/./node_modules/js-utils/browser-detection/BrowserDetection.js","webpack://JitsiMeetJS/./node_modules/js-utils/browser-detection/browsers.js","webpack://JitsiMeetJS/./node_modules/js-utils/browser-detection/index.js","webpack://JitsiMeetJS/./node_modules/js-utils/index.js","webpack://JitsiMeetJS/./node_modules/lodash.isequal/index.js","webpack://JitsiMeetJS/./node_modules/process/browser.js","webpack://JitsiMeetJS/./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/grammar.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/index.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/parser.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/writer.js","webpack://JitsiMeetJS/./node_modules/sdp/sdp.js","webpack://JitsiMeetJS/./node_modules/setimmediate/setImmediate.js","webpack://JitsiMeetJS/./node_modules/strophe.js/strophe.js","webpack://JitsiMeetJS/./node_modules/strophejs-plugin-disco/lib/strophe.disco.js","webpack://JitsiMeetJS/./node_modules/timers-browserify/main.js","webpack://JitsiMeetJS/(webpack)/buildin/amd-define.js","webpack://JitsiMeetJS/(webpack)/buildin/amd-options.js","webpack://JitsiMeetJS/(webpack)/buildin/global.js","webpack://JitsiMeetJS/(webpack)/buildin/module.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/common_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/utils.js","webpack://JitsiMeetJS/./service/RTC/CameraFacingMode.js","webpack://JitsiMeetJS/./service/RTC/MediaType.js","webpack://JitsiMeetJS/./service/RTC/RTCEvents.js","webpack://JitsiMeetJS/./service/RTC/Resolutions.js","webpack://JitsiMeetJS/./service/RTC/SignalingEvents.js","webpack://JitsiMeetJS/./service/RTC/SignalingLayer.js","webpack://JitsiMeetJS/./service/RTC/VideoType.js","webpack://JitsiMeetJS/./service/authentication/AuthenticationEvents.js","webpack://JitsiMeetJS/./service/connectivity/ConnectionQualityEvents.js","webpack://JitsiMeetJS/./service/e2eping/E2ePingEvents.js","webpack://JitsiMeetJS/./service/statistics/AnalyticsEvents.js","webpack://JitsiMeetJS/./service/statistics/Events.js","webpack://JitsiMeetJS/./service/statistics/constants.js","webpack://JitsiMeetJS/./service/xmpp/XMPPEvents.js"],"names":["logger","getLogger","__filename","JINGLE_SI_TIMEOUT","JitsiConference","options","name","toLowerCase","errmsg","error","Error","eventEmitter","EventEmitter","eventManager","JitsiConferenceEventManager","participants","_init","componentsVersions","ComponentsVersions","jvbJingleSession","lastDominantSpeaker","dtmfManager","somebodySupportsDTMF","authEnabled","startAudioMuted","startVideoMuted","startMutedPolicy","audio","video","isMutedByFocus","mutedByFocusActor","wasStopped","properties","connectionQuality","ConnectionQuality","avgRtpStatsReporter","AvgRTPStatsReporter","config","avgRtpStatsN","_audioOutputProblemDetector","AudioOutputProblemDetector","isJvbConnectionInterrupted","speakerStatsCollector","SpeakerStatsCollector","deferredStartP2PTask","delay","parseInt","p2p","backToP2PDelay","isNaN","info","isP2PConnectionInterrupted","p2pJingleSession","videoSIPGWHandler","VideoSIPGW","room","recordingManager","RecordingManager","prototype","constructor","resourceCreator","jid","isAuthenticatedUser","mucNickname","RandomUtil","randomHexString","Strophe","getNodeFromJid","substr","re","test","connection","xmpp","setupXMPPListeners","createRoom","_onIceConnectionInterrupted","bind","addListener","XMPPEvents","_onIceConnectionRestored","_onIceConnectionEstablished","_updateProperties","rttMonitor","RttMonitor","e2eping","E2ePing","message","to","sendMessage","warn","rtc","RTC","setupRTCListeners","participantConnectionStatus","ParticipantConnectionStatusHandler","rtcMuteTimeout","_peerConnStatusRtcMuteTimeout","outOfLastNTimeout","_peerConnStatusOutOfLastNTimeout","init","statistics","callStatsAliasName","myUserId","enableDisplayNameInStats","displayName","Statistics","callStatsConfIDNamespace","hosts","domain","confID","customScriptUrl","callStatsCustomScriptUrl","callStatsID","callStatsSecret","roomName","swapUserNameAndAlias","enableStatsID","applicationName","getWiFiStatsMethod","setupChatRoomListeners","setupStatisticsListeners","enableTalkWhileMuted","TalkMutedDetection","emit","JitsiConferenceEvents","setLastN","channelLastN","jvb121Status","Jvb121EventGenerator","p2pDominantSpeakerDetection","P2PDominantSpeakerDetection","deploymentInfo","userRegion","setLocalParticipantProperty","join","password","then","_maybeSetSITimeout","authenticateAndUpgradeRole","call","onCreateResource","isJoined","joined","isP2PEnabled","Boolean","enabled","isP2PTestModeEnabled","testing","p2pTestMode","leave","dispose","stop","getLocalTracks","forEach","track","onLocalTrackRemoved","closeBridgeChannel","_delayedIceFailed","cancel","close","removeListener","removeXMPPListeners","destroy","catch","getParticipants","participant","onMemberLeft","getJid","Promise","reject","getName","getConnection","isAuthEnabled","isLoggedIn","authIdentity","getAuthLogin","isExternalAuthEnabled","moderator","getExternalAuthUrl","urlForPopup","resolve","getPopupLoginUrl","getLoginUrl","mediaType","tracks","getLocalAudioTrack","getLocalVideoTrack","on","eventId","handler","off","addEventListener","removeEventListener","addCommandListener","command","addPresenceListener","removeCommandListener","removePresenceListener","sendTextMessage","elementName","getFromPresence","value","sendPrivateTextMessage","id","sendPrivateMessage","sendCommand","values","addToPresence","sendPresence","sendCommandOnce","removeCommand","removeFromPresence","setDisplayName","attributes","xmlns","setSubject","subject","isModerator","getTranscriber","transcriber","undefined","Transcriber","localAudioTracks","MediaType","localAudio","addTrack","remoteAudioTracks","getRemoteTracks","remoteTrack","getTranscriptionStatus","transcriptionStatus","isVideoTrack","localVideoTrack","replaceTrack","_fireAudioLevelChangeEvent","audioLevel","tpc","activeTpc","getActivePeerConnection","_fireMuteChangeEvent","isAudioTrack","isMuted","muteParticipant","myroomjid","actorParticipant","actorId","getResourceFromJid","_setConference","removeLocalTrack","JitsiTrackEvents","muteHandler","audioLevelHandler","videoType","VideoType","DESKTOP","sendScreenSharingEvent","removeTrack","oldTrack","newTrack","disposed","JitsiTrackError","JitsiTrackErrors","_doReplaceTrack","_setupNewTrack","replaceTrackPromises","push","all","devices","getCurrentlyAvailableMediaDevices","device","find","d","kind","getTrack","label","sendActiveDeviceListEvent","getEventDataForActiveDevice","addLocalTrack","setAudioMute","setVideoMute","_addLocalTrackAsUnmute","addAsUnmutePromises","addTrackAsUnmute","_removeLocalTrackAsMute","removeAsMutePromises","removeTrackAsMute","getRole","role","isHidden","getDomainFromJid","hiddenDomain","lock","lockRoom","err","JitsiConferenceErrors","unlock","selectParticipant","participantId","selectParticipants","participantIds","Array","isArray","selectEndpoints","pinParticipant","pinEndpoint","getLastN","lastN","Number","isInteger","n","RangeError","isVideoActive","setMediaTransferActive","isInLastN","Object","keys","map","key","getParticipantCount","countHidden","filter","p","length","getParticipantById","kickParticipant","kick","_maybeClearSITimeout","_sessionInitiateTimeout","window","clearTimeout","setTimeout","sendAnalytics","createJingleEvent","ACTION_JINGLE_SI_TIMEOUT","onMemberJoined","nick","statsID","status","identity","botType","JitsiParticipant","_role","_botType","_updateFeatures","_maybeStartOrStopP2P","getFeatures","features","_supportsDTMF","has","updateDTMFSupport","setProperty","_onMemberBotTypeChanged","peers","botParticipant","removedTracks","removeRemoteTracks","onMemberKicked","isSelfPresence","kickedParticipantId","kickedParticipant","onLocalRoleChanged","onUserRoleChanged","onDisplayNameChanged","_displayName","onRemoteTrackAdded","isP2P","isP2PActive","getParticipantId","_tracks","emitter","activeTPC","onCallAccepted","session","answer","setAnswer","onTransportInfo","transportInfo","addIceCandidates","onRemoteTrackRemoved","removedTrack","getTracks","i","splice","_onIncomingCallP2P","jingleSession","jingleOffer","rejectReason","browser","supportsP2P","reason","reasonDescription","errorMsg","_shouldBeInP2PMode","ACTION_P2P_DECLINED","_rejectIncomingCall","_acceptP2PIncomingCall","onIncomingCall","now","isFocus","remoteJid","description","_acceptJvbIncomingCall","connectionTimes","sendAnalyticsAndLog","ACTION_JINGLE_RESTART","serverRegion","$","attr","ACTION_JINGLE_SI_RECEIVED","initialize","GlobalOnErrorHandler","callErrorHandler","_setBridgeChannel","peerconnection","acceptOffer","_suspendMediaTransferForJvbConnection","startCallStats","startRemoteStats","e","offerIq","pc","wsUrl","webSocket","first","getAttribute","bridgeChannelType","openBridgeChannel","supportsDataChannels","initializeBridgeChannel","terminate","sendSessionTerminate","onCallEnded","reasonCondition","reasonText","ACTION_JINGLE_TERMINATE","stopRemoteStats","stopCallStats","analytics","addPermanentProperties","forceJvb121","p2pFailed","_stopP2PSession","sid","onSuspendDetected","supportsDTMF","isDTMFSupported","sendTones","tones","duration","pause","peerConnection","JitsiDTMFManager","startRecording","stopRecording","sessionID","isSIPCallingSupported","dial","number","hangup","startTranscriber","stopTranscriber","getPhoneNumber","getPhonePin","getConnectionState","setStartMutedPolicy","policy","getStartMutedPolicy","isStartAudioMuted","isStartVideoMuted","getLogs","data","getJingleLog","metadata","time","Date","url","location","href","ua","navigator","userAgent","log","getXmppLog","getConnectionTimes","removeLocalParticipantProperty","getLocalParticipantProperty","property","presMap","nodes","prop","tagName","sendFeedback","overallFeedback","detailedFeedback","isCallstatsEnabled","_onTrackAttach","container","isLocal","ssrc","remoteUserId","getLocalSSRC","getSSRC","associateStreamWithVideoTag","getUsageLabel","sendApplicationLog","sendLog","_isFocus","mucJid","_fireIncompatibleVersionsEvent","sendEndpointMessage","payload","sendChannelMessage","broadcastEndpointMessage","sendThroughVideobridge","messageType","messageToSend","hasOwnProperty","JITSI_MEET_MUC_TYPE","JSON","stringify","isConnectionInterrupted","_onIceConnectionFailed","createP2PEvent","ACTION_P2P_FAILED","initiator","isInitiator","isPingSupported","IceFailedNotification","start","sendIceFailedNotification","remoteID","getStatsID","localTracks","debug","_addRemoteJVBTracks","_addRemoteTracks","_addRemoteP2PTracks","logName","remoteTracks","RTCEvents","p2pEstablishmentDuration","establishmentDuration","jvbEstablishmentDuration","done","forceJVB121Ratio","Math","random","establishmentDurationDiff","ICE_ESTABLISHMENT_DURATION_DIFF","_setP2PStatus","_removeRemoteJVBTracks","ACTION_P2P_ESTABLISHED","changed","isEqual","analyticsKeys","replace","getProperty","_maybeClearDeferredStartP2P","_removeRemoteTracks","_removeRemoteP2PTracks","sessionNickname","_resumeMediaTransferForJvbConnection","newStatus","sendConnectionResumeOrHoldEvent","_startP2PSession","jingle","newP2PJingleSession","invite","userLeftEvent","peerCount","shouldBeInP2P","peer","myId","peersId","getId","ACTION_P2P_SWITCH_TO_JVB","hasBotPeer","wasP2PEstablished","getP2PConnectionState","startP2PSession","peerJid","stopP2PSession","getSpeakerStats","getStats","setReceiverVideoConstraint","maxFrameHeight","createVideoSIPGWSession","sipAddress","VideoSIPGWConstants","AUTHENTICATION_REQUIRED","CHAT_ERROR","CONFERENCE_DESTROYED","CONFERENCE_MAX_USERS","CONNECTION_ERROR","NOT_ALLOWED_ERROR","FOCUS_DISCONNECTED","FOCUS_LEFT","GRACEFUL_SHUTDOWN","INCOMPATIBLE_SERVER_VERSIONS","OFFER_ANSWER_FAILED","PASSWORD_NOT_SUPPORTED","PASSWORD_REQUIRED","RESERVATION_ERROR","SETUP_FAILED","VIDEOBRIDGE_NOT_AVAILABLE","conference","xmppListeners","sendMuteEvent","getType","chatRoom","chatRoomForwarder","EventEmitterForwarder","ICE_RESTARTING","ICE_RESTART_SUCCESS","AUDIO_MUTED_BY_FOCUS","actor","createRemotelyMutedEvent","forward","SUBJECT_CHANGED","MUC_JOINED","event","createConnectionStageReachedEvent","RENEGOTIATION_FAILED","ROOM_JOIN_ERROR","ROOM_CONNECT_ERROR","ROOM_CONNECT_NOT_ALLOWED_ERROR","ROOM_MAX_USERS_ERROR","BRIDGE_DOWN","createBridgeDownEvent","CONNECTION_ICE_FAILED","MUC_DESTROYED","CHAT_ERROR_RECEIVED","createFocusLeftEvent","SESSION_ACCEPT_TIMEOUT","ACTION_JINGLE_SA_TIMEOUT","RECORDER_STATE_CHANGED","TRANSCRIPTION_STATUS_CHANGED","VIDEO_SIP_GW_AVAILABILITY_CHANGED","VIDEO_SIP_GW_SESSION_STATE_CHANGED","PHONE_NUMBER_CHANGED","setParticipantPropertyListener","node","from","substring","KICKED","SUSPEND_DETECTED","MUC_LOCK_CHANGED","MUC_MEMBER_JOINED","MUC_MEMBER_BOT_TYPE_CHANGED","MUC_MEMBER_LEFT","MUC_LEFT","DISPLAY_NAME_CHANGED","LOCAL_ROLE_CHANGED","recorderSession","logObject","getError","getStatus","MUC_ROLE_CHANGED","AuthenticationEvents","IDENTITY_UPDATED","MESSAGE_RECEIVED","txt","myJid","ts","PRIVATE_MESSAGE_RECEIVED","PRESENCE_STATUS","_status","JSON_MESSAGE_RECEIVED","updated","sendIceConnectionFailedEvent","ADD_ICE_CANDIDATE_FAILED","sendAddIceCandidateFailed","REMOTE_TRACK_ADDED","REMOTE_TRACK_REMOVED","DOMINANT_SPEAKER_CHANGED","sendDominantSpeakerEvent","roomjid","DATA_CHANNEL_OPEN","performance","ENDPOINT_MESSAGE_RECEIVED","LOCAL_UFRAG_CHANGED","ufrag","REMOTE_UFRAG_CHANGED","CREATE_ANSWER_FAILED","sendCreateAnswerFailed","CREATE_OFFER_FAILED","sendCreateOfferFailed","SET_LOCAL_DESCRIPTION_FAILED","sendSetLocalDescFailed","SET_REMOTE_DESCRIPTION_FAILED","sendSetRemoteDescFailed","LOCAL_TRACK_SSRC_UPDATED","caps","PARTCIPANT_FEATURES_CHANGED","eventName","featuresChangedListener","_addConferenceXMPPListener","CALL_INCOMING","CALL_ACCEPTED","TRANSPORT_INFO","CALL_ENDED","START_MUTED_FROM_FOCUS","audioMuted","videoMuted","ignoreStartMuted","mute","listener","addAudioLevelListener","level","setAudioLevel","addBeforeDisposedListener","startSilent","addByteSentStatsListener","stats","_onByteSentStatsReceived","AUTH_STATUS_CHANGED","AVATAR_CHANGED","BEFORE_STATISTICS_DISPOSED","CONFERENCE_ERROR","CONFERENCE_FAILED","CONFERENCE_JOINED","CONFERENCE_LEFT","CONNECTION_ESTABLISHED","CONNECTION_INTERRUPTED","CONNECTION_RESTORED","DATA_CHANNEL_OPENED","DTMF_SUPPORT_CHANGED","JVB121_STATUS","PARTICIPANT_KICKED","LAST_N_ENDPOINTS_CHANGED","LOCK_STATE_CHANGED","SERVER_REGION_CHANGED","PARTICIPANT_CONN_STATUS_CHANGED","PARTICIPANT_PROPERTY_CHANGED","P2P_STATUS","PROPERTIES_CHANGED","START_MUTED_POLICY_CHANGED","STARTED_MUTED","TALK_WHILE_MUTED","TRACK_ADDED","TRACK_AUDIO_LEVEL_CHANGED","TRACK_MUTE_CHANGED","TRACK_REMOVED","USER_JOINED","USER_LEFT","USER_ROLE_CHANGED","USER_STATUS_CHANGED","BOT_TYPE_CHANGED","JitsiConnection","appID","token","XMPP","JitsiConnectionEvents","errType","msg","credentials","details","createConnectionFailedEvent","ANALYTICS_CONNECTION_DISCONNECTED","connect","attach","disconnect","setToken","initJitsiConference","addFeature","feature","submit","removeFeature","CONNECTION_DROPPED_ERROR","OTHER_ERROR","SERVER_ERROR","CONNECTION_DISCONNECTED","CONNECTION_FAILED","WRONG_STATE","AUDIO_PERMISSION_NAME","PERMISSION_GRANTED_STATUS","VIDEO_PERMISSION_NAME","JitsiMediaDevices","_eventEmitter","_grantedPermissions","DEVICE_LIST_CHANGED","JitsiMediaDevicesEvents","DEVICE_LIST_AVAILABLE","_logOutputDevice","getAudioOutputDevice","GRANTED_PERMISSIONS","grantedPermissions","_handleGrantedPermissions","_permissionsApiSupported","permissions","query","deviceID","deviceId","callback","enumerateDevices","isDeviceListAvailable","deviceType","isDeviceChangeAvailable","type","supported","promises","results","every","permissionStatus","grantStatus","state","isFirefox","availableDevices","setAudioOutputDevice","args","supportsVideo","PERMISSION_PROMPT_IS_SHOWN","Logger","USER_MEDIA_PERMISSION_PROMPT_TIMEOUT","getLowerResolution","resolution","Resolutions","order","res","resName","r","getAnalyticsAttributesFromOptions","includes","video_requested","_mergeNamespaceAndModule","module","JitsiMeetJS","assign","version","ProxyConnectionService","constants","ParticipantConnectionStatus","recording","recordingConstants","sipVideoGW","JitsiTranscriptionStatus","events","mediaDevices","ConnectionQualityEvents","E2ePingEvents","errors","JitsiConnectionErrors","errorTypes","logLevels","levels","enableAnalyticsLogging","enableWindowOnErrorHandler","addHandler","getGlobalOnErrorHandler","aprops","component","isDesktopSharingEnabled","isWebRtcSupported","setLogLevel","setLogLevelById","addGlobalLogTransport","globalTransport","addGlobalTransport","removeGlobalLogTransport","removeGlobalTransport","setGlobalLogOptions","setGlobalOptions","createLocalTracks","firePermissionPromptIsShownEvent","originalOptions","promiseFulfilled","emitEvent","obtainAudioAndVideoPermissions","createGetUserMediaEvent","disableAudioLevels","mStream","getOriginalStream","startLocalStats","stopLocalStats","currentlyAvailableMediaDevices","_setRealDeviceIdFromDeviceList","usesNewGumFlow","oldResolution","newResolution","gum","constraints","mandatory","sourceId","cameraDeviceId","sendGetUserMediaFailed","isMultipleAudioInputSupported","isCollectingLocalStats","audioLevelsEnabled","LocalStatsCollector","isLocalStatsSupported","source","lineno","colno","reportGlobalError","util","AuthUtil","ScriptUtil","hidden","_jid","_id","_conference","_hidden","_statsID","_connectionStatus","ACTIVE","_properties","_identity","some","jitsiTrack","isWebRTCTrackMuted","oldValue","slice","_isMediaTypeMuted","reduce","muted","timeout","String","TRACK_ERROR_TO_MESSAGE_MAP","constraintName","constraint","indexOf","getResolutionFromFailedConstraint","stack","create","failedConstraintName","minWidth","minHeight","CHROME_EXTENSION_GENERIC_ERROR","CHROME_EXTENSION_INSTALLATION_ERROR","CHROME_EXTENSION_USER_GESTURE_REQUIRED","CHROME_EXTENSION_USER_CANCELED","CONSTRAINT_FAILED","ELECTRON_DESKTOP_PICKER_ERROR","ELECTRON_DESKTOP_PICKER_NOT_FOUND","FIREFOX_EXTENSION_NEEDED","GENERAL","NOT_FOUND","PERMISSION_DENIED","TRACK_IS_DISPOSED","TRACK_NO_STREAM_FOUND","UNSUPPORTED_RESOLUTION","LOCAL_TRACK_STOPPED","TRACK_AUDIO_OUTPUT_CHANGED","TRACK_VIDEOTYPE_CHANGED","NO_DATA_FROM_SOURCE","ON","OFF","onLoginSuccessful","roomPassword","canceled","rejectPromise","process","authenticate","authenticationError","connectionError","exports","require","default","audioTrack","dtmfSender","createDTMFSender","insertDTMF","SPEECH_DETECT_THRESHOLD","_audioLevel","myUserID","BridgeChannel","TypeError","_channel","_mode","_areRetriesEnabled","_closedFromClient","datachannel","createDataChannel","protocol","_handleChannel","_wsUrl","_initWebSocket","ws","WebSocket","timeoutS","reload","isOpen","min","_retryTimeout","closeEvent","code","createBridgeChannelClosedEvent","once","_stopConnectionRetries","_startConnectionRetries","readyState","OPEN","_send","colibriClass","msgPayload","jsonObject","endpointId","pinnedEndpoint","endpointIds","selectedEndpoints","maxFrameHeightPixels","channel","onopen","onerror","onmessage","obj","parse","dominantSpeakerEndpoint","endpoint","isActive","active","ENDPOINT_CONN_STATUS_CHANGED","lastNEndpoints","LASTN_ENDPOINT_CHANGED","isSelected","IS_SELECTED_CHANGED","onclose","_retryWebSocketConnection","send","JitsiLocalTrack","facingMode","rtcId","sourceType","stream","effects","_setEffectInProgress","effect","isEnabled","_startStreamEffect","getSettings","height","_constraints","getConstraints","_prevSetMuted","_facingMode","_trackEnded","_hasSentData","_testDataSent","_realDeviceId","_trackMutedTS","_onDeviceListWillChange","oldRealDeviceId","RTCUtils","_onAudioOutputDeviceChanged","setAudioOutput","AUDIO_OUTPUT_DEVICE_CHANGED","DEVICE_LIST_WILL_CHANGE","_initNoDataFromSourceHandlers","_isNoDataFromSourceEventsEnabled","_setHandler","_fireNoDataFromSourceEvent","TRACK_UNMUTED","CAMERA","isReceivingData","createNoDataFromSourceEvent","storedMSID","getMSID","_streamEffect","_originalStream","_setStream","startEffect","stopEffect","_stopStreamEffect","_switchStreamEffect","containers","cont","attachMediaStream","_queueSetMuted","setMuted","_setMuted","promise","logMuteInfo","doesVideoMuteByStreamRemove","_removeStreamFromConferenceAsMute","_unregisterHandlers","stopStream","streamOptions","getDeviceId","getCameraFacingMode","newObtainAudioAndVideoPermissions","streamsInfo","streamInfo","_addStreamToConferenceAsUnmute","_sendMuteStatus","successCallback","errorCallback","detach","_maybeFireTrackAttached","bytesSent","iceConnectionState","sendEvent","NO_BYTES_SENT","trackSettings","CameraFacingMode","USER","_stopStreamInProgress","stopMediaStream","_switchCamera","ENVIRONMENT","_effectEnabled","JitsiTrack","ttfmTrackerAudioAttached","ttfmTrackerVideoAttached","containerEvents","JitsiRemoteTrack","ownerEndpointId","hasBeenMuted","_bindTrackHandlers","_containerHandlers","_containerEventHandler","_onTrackMute","_onTrackUnmute","REMOTE_TRACK_MUTE","REMOTE_TRACK_UNMUTE","console","gumStart","gumEnd","gumDuration","ttfm","createTtfmEvent","_playCallback","_getStatus","trackHandler2Prop","addMediaStreamInactiveHandler","mediaStream","oninactive","streamInactiveHandler","trackMediaType","handlers","Map","_streamInactiveHandler","set","delete","getVideoTracks","videoTrack","get","_attachTTFMTracker","cs","c","_onTrackDetach","removeAllListeners","getStreamID","streamId","getStreamId","trackId","getTrackId","audioOutputDeviceId","element","setSinkId","LocalSdpMunger","transformer","localVideos","videoMLine","selectMedia","modified","isInPeerConnection","isMediaStreamInPc","shouldFakeSdp","requiredSSRCs","isSimulcastOn","simulcast","ssrcCache","sdpConsistency","cachedPrimarySsrc","direction","primarySSRC","primaryCname","ssrcNum","removeSSRC","addSSRCAttribute","attribute","group","ssrcs","semantics","findGroup","addSSRCGroup","disableRtx","rtxModifier","modifyRtxSsrcs2","mediaSection","pcId","ssrcLine","streamAndTrackIDs","split","desc","SdpTransformWrap","sdp","_addMutedLocalVideoTracksToSDP","RTCSessionDescription","toRawSDP","sessionDesc","audioMLine","_transformMediaIdentifiers","peerConnectionIdCounter","rtcTrackIdCounter","tracksInfo","newTracks","trackInfo","micDeviceId","safeCounterIncrement","localTrack","_newCreateLocalTracks","mediaStreamMetaData","metaData","peerConnections","_channelOpen","_lastN","_lastNEndpoints","_maxFrameHeight","_pinnedEndpoint","_selectedEndpoints","_lastNChangeListener","_onLastNChanged","_onDeviceListChanged","_updateAudioOutputForAudioTracks","_channelOpenListener","sendPinnedEndpointMessage","sendSelectedEndpointsMessage","sendReceiverVideoConstraintMessage","_selectedEndpoint","sendSetLastNMessage","oldLastNEndpoints","leavingLastNEndpoints","enteringLastNEndpoints","mode","ids","signaling","iceConfig","pcConstraints","getPCConstraints","abtestSuspendVideo","setSuspendVideo","supportsSdpSemantics","sdpSemantics","newConnection","TraceablePeerConnection","traceablePeerConnection","localVideo","pcRemoteTracks","concat","mutePromises","unmute","pos","owner","pcRemovedTracks","getTrackBySSRC","LASTN_VALUE_CHANGED","obtainMediaPromise","eventType","p2pPcConstraints","elSelector","getTrackID","isSupported","isUserStreamById","Listenable","usesAdapter","AVAILABLE_DEVICES_POLL_INTERVAL_TIME","OLD_GUM_DEFAULT_RESOLUTION","OLD_GUM_DEFAULT_DEVICES","DEFAULT_CONSTRAINTS","aspectRatio","ideal","max","SS_DEFAULT_FRAME_RATE","audioOutputChanged","disableAP","disableAEC","disableNS","disableAGC","disableHPF","featureDetectionAudioEl","document","createElement","isAudioOutputDeviceChangeAvailable","availableDevicesPollTimer","initEnumerateDevicesWithCallback","setResolutionConstraints","isNewStyleConstraintsSupported","width","maxWidth","maxHeight","um","isSafariWithVP8","isEdge","isReactNative","optional","minFps","maxFps","fps","minFrameRate","maxFrameRate","echoCancellation","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","googNoiseSuppression2","googEchoCancellation2","googAutoGainControl2","isChrome","getSSConstraints","mozMediaSource","mediaSource","frameRate","bandwidth","firefox_fake_device","fake","newGetConstraints","desktopStream","chromeMediaSource","screen","chromeMediaSourceId","getTrackSSConstraints","desktopSharingFrameRate","updateGrantedPermissions","audioTracksReceived","getAudioTracks","videoTracksReceived","compareAvailableMediaDevices","newDevices","mediaDeviceInfoToJSON","sort","groupId","facing","sendDeviceListToAnalytics","deviceList","audioInputDeviceCount","audioOutputDeviceCount","videoInputDeviceCount","videoOutputDeviceCount","AVAILABLE_DEVICE","onMediaDevicesListChanged","devicesReceived","handleLocalStream","streams","audioStream","videoStream","audioVideo","audioTracks","MediaStream","videoTracks","j","desktop","defaultSetVideoSrc","srcObjectPropertyName","src","jitsiObjectURL","URL","createObjectURL","clearInterval","RTCPeerConnectionType","RTCPeerConnection","wrapAttachMediaStream","srcObject","isChromiumBased","SDPUtil","filterSpecialChars","_initPCConstraints","screenObtainer","getUserMediaWithConstraints","ds","updateKnownDevices","pds","supportsDeviceChangeEvent","setInterval","googHighStartBitrate","googPayloadPadding","googScreencastMinBitrate","googCpuOveruseDetection","googCpuOveruseEncodeUsage","googCpuUnderuseThreshold","googCpuOveruseThreshold","useIPv6","googIPv6","getUserMedia","umDevices","obtainStream","_parseDesktopSharingOptions","requestingDesktop","_getAudioAndVideoStreams","gumPromise","avStream","missingTracks","_getMissingTracks","desktopSharingSourceDevice","requestedDevices","missingDevices","audioDeviceRequested","videoDeviceRequested","desktopSharingExtensionExternalInstallation","desktopSharingSources","gumOptions","trackOptions","mediaStreamsMetaData","maybeRequestDesktopDevice","isDesktopDeviceRequested","matchingDevice","exact","_newGetUserMediaWithConstraints","applyConstrainsPromise","applyConstraints","_newGetDesktopMedia","maybeCreateAndAddDesktopTrack","maybeRequestCaptureDevices","requestedCaptureDevices","maybeCreateAndAddAVTracks","release","revokeObjectURL","deviceData","enable","googSuspendBelowMinBitrate","rtcUtils","origAttachMediaStream","apply","arguments","ex","callUnhandledRejectionHandler","chromeExtInstalled","chromeExtUpdateRequired","gumFunction","CHROME_NO_EXTENSION_ERROR_MSG","ScreenObtainer","intChromeExtPromise","desktopSharingChromeDisabled","desktopSharingChromeExtId","desktopSharingFirefoxDisabled","_createObtainStreamMethod","isNWJS","_","onSuccess","onFailure","JitsiMeetNW","obtainDesktopStream","jitsiError","isElectron","obtainScreenOnElectron","isOpera","supportsGetDisplayMedia","obtainScreenFromGetDisplayMedia","initChromeExtension","obtainScreenFromExtension","obtainScreenOnFirefox","obtainWebRTCScreen","JitsiMeetScreenObtainer","openDesktopPicker","desktopSharingChromeSources","streamType","onGetStreamResponse","response","streamCallback","failCallback","doGetStreamFromExtensionOptions","doGetStreamFromExtension","alert","handleExternalInstall","webStoreInstallUrl","getWebStoreInstallUrl","checkForChromeExtensionOnInterval","checkAgain","waitForExtensionAfterInstall","interval","getDisplayMedia","applyConstraintsPromise","isUpdateRequired","minVersion","extVersion","s1","s2","len","n1","n2","checkChromeExtInstalled","chrome","runtime","getVersion","lastError","updateRequired","desktopSharingChromeMinExtVersion","getStream","sources","initInlineInstalls","append","installed","waitInterval","retries","currentRetries","SIMULCAST_LAYERS","SIM_LAYER_1_RID","SIM_LAYER_2_RID","SIM_LAYER_3_RID","SIM_LAYER_RIDS","signalingLayer","audioTransferActive","videoTransferActive","_addedStreams","localSSRCs","localUfrag","remoteUfrag","_peerVideoTypeChanged","SignalingEvents","_peerMutedChanged","updateLog","statsinterval","maxstats","Interop","interop","Simulcast","numOfLayers","explodeRemoteSimulcast","SdpConsistency","toString","localSdpMunger","RtxModifier","trace","what","onicecandidate","candidate","onaddstream","_remoteStreamAdded","onremovestream","_remoteStreamRemoved","onsignalingstatechange","signalingState","oniceconnectionstatechange","onnegotiationneeded","ondatachannel","result","names","_processStat","stat","report","statValue","s","startTime","endTime","times","getTime","shift","dumpSDP","_getDesiredMediaDirection","mediaTransferActive","hasAnyTracksOfType","disableSimulcast","supportsSimulcast","enableFirefoxSimulcast","_setVideoType","setMute","endpoints","endpointTrackMap","mediaTrack","getSsrcByTrackId","findTrackById","onaddtrack","_remoteTrackAdded","onremovetrack","_remoteTrackRemoved","streamAudioTracks","streamVideoTracks","remoteSDP","SDP","remoteDescription","mediaLines","media","mls","startsWith","ssrcLines","findLines","line","ssrcStr","trackSsrc","getSSRCOwner","peerMediaInfo","getPeerMediaInfo","_createRemoteTrack","remoteTracksMap","existingTrack","isUserStream","_removeRemoteTrackById","_getRemoteTrackById","removedAudioTrack","removedVideoTrack","_removeRemoteTrack","toBeRemoved","extractSSRCMap","ssrcMap","groupsMap","transform","mLine","ssrcGroups","groupSSRCs","msid","ssrcInfo","groups","ssrcNumber","normalizePlanB","firstSsrcs","newSsrcLines","replaceDefaultUnifiedPlanMsid","resStr","write","isVersionGreaterThan","filteredLines","problematicSsrcIds","ssrcId","cnameLine","enforceSendRecv","localDescription","audioMedia","videoMedia","_getSSRC","_injectSsrcGroupForUnifiedSimulcast","mline","simulcast_03","getters","usesUnifiedPlan","toPlanB","maybeAddMutedLocalVideoTracksToSDP","transformStreamIdentifiers","defineProperty","webrtcStream","_addStream","generateNewStreamSSRCInfo","setPrimarySsrc","simGroup","groupInfo","setSsrcCache","fidGroups","rtxSsrcMapping","fidGroup","primarySsrc","rtxSsrc","addTrackUnmute","_assertTrackBelongs","webRtcStream","addStream","_removeStream","supportsRtpSender","_handleSenderRemoveStream","removeStream","methodName","doesBelong","findSenderByStream","getSenders","sender","extractPrimarySSRC","removeTrackMute","opts","_ensureSimulcastGroupIsLast","localSdp","sdpStr","videoStartIndex","simStartIndex","otherStartIndex","lastIndexOf","simEndIndex","simStr","otherEndIndex","sdpHead","simStrTrimmed","trim","sdpTail","_adjustLocalMediaDirection","modifiedDirection","desiredAudioDirection","desiredVideoDirection","setLocalDescription","disableH264","preferH264","parsedSdp","m","stripVideoCodec","preferVideoCodec","toUnifiedPlan","getUfrag","setAudioTransferActive","_insertUnifiedPlanSimulcastReceive","rids","setRemoteDescription","mungeRemoteDescription","stripRtx","isSafariWithWebrtc","_injectH264IfNotPresent","rtp","codec","fmtp","payloads","payloadsArray","dummyPayloadType","rate","setVideoTransferActive","generateRecvonlySsrc","newSSRC","generateSsrc","clearRecvonlySsrc","clearVideoSsrcCache","peerTracks","clear","_removePeerConnection","_fixAnswerRFC4145Setup","offer","a","findLine","raw","createAnswer","videoSender","simParams","encodings","rid","scaleResolutionDownBy","setParameters","_createOfferOrAnswer","createOffer","isOffer","handleSuccess","resultSdp","resolveFn","rejectFn","hasPrimarySsrcCached","makeVideoPrimarySsrcsConsistent","mungeLocalDescription","supportsRtx","modifyRtxSsrcs","_processLocalSSRCsMap","handleFailure","oaPromise","ssrcObj","trackMSID","oldSSRC","newSSRCNum","oldSSRCNum","addIceCandidate","sdpMid","sdpMLineIndex","usernameFragment","errback","currNumSsrcs","handleLayerSuspension","getParameters","parameters","simIndex","setIsSelected","enableLayerSuspension","_callback","_eventFired","_trackMuteChanged","_trackAdded","_isLocalAudioTrack","BrowserCapabilities","isSafari","isVersionLessThan","ondevicechange","usesPlanB","RTCRtpTransceiver","REQUIRED_CHROME_VERSION","_getChromiumBasedVersion","versions","chromium","match","BrowserDetection","STATS_MESSAGE_TYPE","kSimulcastFormats","layers","target","MAX_TARGET_BITRATE","startBitrate","videoBitrateCap","getTarget","millisSinceStart","simulcastFormat","f","targetHeight","pixels","rampUp","MAX_SAFE_INTEGER","pow","_localStats","jvbRTT","_lastConnectionQualityUpdate","_remoteStats","_timeIceConnected","_timeVideoUnmuted","_timeLastBwCapRemoved","ConferenceEvents","_updateLocalConnectionQuality","_broadcastLocalStats","ICE_CONNECTION_STATE_CHANGED","newState","_updateRemoteStats","addConnectionStatsListener","_updateLocalStats","_maybeUpdateUnmuteTime","bridgeCount","resolutionName","quality","packetLoss","upload","newVideoBitrateCap","bandwidthLimiter","getBandwidthLimit","bitrate","maxIncreasePerSecond","prevConnectionQuality","diffSeconds","avgAudioLevels","localAvgAudioLevels","transport","rtt","updateLocalConnectionQuality","_calculateConnectionQuality","ping","_canceled","_iceFailedTimeout","DEFAULT_NOT_IN_LAST_N_TIMEOUT","DEFAULT_RTC_MUTE_TIMEOUT","DEFAULT_RESTORING_TIMEOUT","INACTIVE","INTERRUPTED","RESTORING","isConnectionActiveByJvb","isRestoringTimedout","isVideoMuted","isVideoTrackFrozen","supportsVideoMuteOnConnInterrupted","trackTimers","connStatusFromJvb","rtcMutedTimestamp","enteredLastNTimestamp","restoringTimers","connectionStatusMap","_onEndpointConnStatusChanged","onEndpointConnStatusChanged","_onP2PStatus","refreshConnectionStatusForAll","_onUserLeft","onUserLeft","_onTrackRtcMuted","onTrackRtcMuted","_onTrackRtcUnmuted","onTrackRtcUnmuted","_onRemoteTrackAdded","_onRemoteTrackRemoved","_onSignallingMuteChanged","onSignallingMuteChanged","_onTrackVideoTypeChanged","onTrackVideoTypeChanged","_onLastNValueChanged","clearRtcMutedTimestamp","figureOutConnectionStatus","getConnectionStatus","_setConnectionStatus","hasAnyVideoRTCMuted","hasAnyVideoTrackWebRTCMuted","_getVideoFrozenTimeout","inP2PMode","isRestoringTimedOut","_isRestoringTimedout","audioOnlyMode","isConnActiveByJvb","_getNewStateForP2PMode","_getNewStateForJvbMode","_clearRestoringTimer","oldConnectionStatus","connectionStatus","nowMs","maybeSendParticipantConnectionStatusEvent","startedMs","getTracksByMediaType","_changeConnectionStatus","createParticipantConnectionStatusEvent","leavingLastN","enteringLastN","rTimer","E2E_PING_REQUEST","E2E_PING_RESPONSE","ParticipantWrapper","requests","lastRequestId","clearIntervals","sendRequest","handleResponse","maybeSendAnalytics","isDataChannelOpen","pingInterval","pingIntervalMs","analyticsInterval","analyticsIntervalMs","requestId","requestMessage","timeSent","request","Infinity","createE2eRttEvent","participantJoined","participantLeft","messageReceived","dataChannelOpened","participantWrapper","handleRequest","_jvb121","evaluateStatus","oldStatus","ProxyConnectionPC","_options","receiveAudio","receiveVideo","_peerConnection","_onError","_onRemoteStream","_onSendMessage","$jingle","ACTIONS","ACCEPT","_onSessionAccept","INITIATE","_onSessionInitiate","TERMINATE","_onSessionTerminate","_onTransportInfo","_createPeerConnection","configStub","connectionStub","sendIQ","iceConfigStub","iceServers","DEFAULT_STUN_SERVERS","roomStub","getMediaPresenceInfo","_rtc","JingleSessionPC","offerToReceiveAudio","offerToReceiveVideo","errorType","onError","jitsiRemoteTrack","onRemoteStream","iq","onSendMessage","onTerminated","jitsiConnection","otherOptions","p2pIceConfig","_onFatalError","getPeerJid","_convertStringToXML","action","processMessage","UNAVAILABLE","_selfCloseConnection","xml","xmlDom","DOMParser","parseFromString","pcOptions","$iq","t","up","isVideo","convertVideoToDesktop","jitsiLocalTracks","newCreateLocalTracks","stringifiedIq","XMLSerializer","serializeToString","nodeTree","onConnectionClosed","JibriSession","_connection","_setSessionID","setStatus","_error","_sessionID","_liveStreamViewURL","appData","broadcastId","focusMucJid","_createIQ","recordingXMLUtils","getSessionIdFromIq","_setErrorFromIq","errorIq","getElementsByTagName","setError","children","_sessions","_chatRoom","onPresence","PRESENCE_RECEIVED","fromHiddenDomain","presence","isFromFocus","_handleFocusPresence","_handleJibriPresence","getSession","getID","_addSession","_emitSessionUpdate","jibriStatus","getFocusRecordingUpdate","recordingMode","_createSession","getHiddenDomainUpdate","liveStreamViewURL","setLiveStreamViewURL","BUSY","ERROR","RESOURCE_CONSTRAINT","SERVICE_UNAVAILABLE","FILE","STREAM","PENDING","liveStreamViewURLContainer","textContent","modeContainer","sessionIDContainer","jibri","getSessionId","sessionIdContainer","sessionId","offerOptions","stunKeepAliveIntervalMs","PCMonitor","region","address","getStatsIntervalMs","getStatsInterval","rtts","candidates","stopped","startStatsInterval","handleCandidateRtt","rttTotal","candidateKey","responsesReceived","requestsSent","NaN","rttTotalDiff","responsesReceivedDiff","requestsResponsesDiff","supportsLocalCandidateRttStatistics","pcMonitors","startPCMonitors","initialDelay","stunServers","count","offset","createRttByRegionEvent","_callStatsUserName","_machineId","callStatsUserName","localStorage","getLocalStorage","getItem","generateCallStatsUserName","setItem","machineId","generateJitsiMeetId","removeItem","username","UsernameGenerator","generateUsername","jitsiMeetId","generateUniqueId","storage","_p8","MAX_CACHE_SIZE","AnalyticsAdapter","reset","analyticsHandlers","Set","cache","permanentProperties","conferenceName","Settings","size","setAnalyticsHandlers","_setUserProperties","_sendEvent","setUserProperties","TYPE_OPERATIONAL","actionSubject","_verifyRequiredFields","TYPE_PAGE","TYPE_UI","TYPE_TRACK","objectType","containerType","containerId","objectId","_maybeCacheEvent","NUMBER_OF_LOCAL_SAMPLES","_localAudioLevelCache","_reportedParticipants","_audioProblemCandidates","_numberOfRemoteAudioLevelsReceived","_onLocalAudioLevelsReport","_onRemoteAudioLevelReceived","_clearUserData","userID","numberOfReports","isAudioMuted","localAudioLevels","remoteAudioLevels","localAudioLevelsString","createAudioOutputProblemEvent","removeConnectionStatsListener","AverageStatReport","sum","samples","nextValue","calculate","ConnectionAvgStats","_n","_sampleIdx","_avgRTT","_avgRemoteRTTMap","_avgRtpStatsReporter","_avgEnd2EndRTT","_onConnectionStats","_calculateAvgStats","_onRemoteStatsUpdated","_processRemoteStats","supportsRTTStatistics","addNext","batchReport","localCandidateType","remoteCandidateType","appendReport","jvbEnd2EndRTT","jvbStatsMonitor","avgRemoteRTT","_calculateAvgRemoteRTT","avgLocalRTT","createRtpStatsEvent","_resetAvgStats","remoteAvg","avg","validData","rttAvg","_avgAudioBitrateUp","_avgAudioBitrateDown","_avgVideoBitrateUp","_avgVideoBitrateDown","_avgBandwidthUp","_avgBandwidthDown","_avgPacketLossTotal","_avgPacketLossUp","_avgPacketLossDown","_avgRemoteFPS","_avgRemoteScreenFPS","_avgLocalFPS","_avgLocalScreenFPS","_avgRemoteCameraPixels","_avgRemoteScreenPixels","_avgLocalCameraPixels","_avgLocalScreenPixels","_avgCQ","_onLocalStatsUpdated","_onP2PStatusChanged","p2pStatsMonitor","_onJvb121StatusChanged","_resetAvgJvbStats","confSize","framerate","download","supportsBandwidthStatistics","total","_calculateAvgVideoFps","_calculateAvgVideoPixels","peerResolutions","peerPixelsSum","myID","peerID","videosResolution","peerAvgPixels","_calculatePeerAvgVideoPixels","videos","peerSsrcCount","peerSsrcPixels","peerFpsSum","videosFps","peerAvgFPS","_calculatePeerAvgVideoFps","peerSsrcFps","wrtcFuncNames","iceConnectionFailure","signalingError","applicationLog","fabricEvent","fabricHold","fabricResume","audioMute","audioUnmute","videoPause","videoResume","fabricUsageEvent","fabricStats","fabricTerminated","screenShareStart","screenShareStop","dominantSpeaker","activeDeviceList","DEFAULT_REMOTE_USER","reportType","EVENT","MST_WITH_USERID","_fabrics","CallStats","backend","backendInitialized","atLeastOneFabric","defaultInstance","fabrics","callStatsInstance","hasFabric","_addNewFabric","_emptyReportQueue","csInstance","defaultConfID","defaultPC","reportsQueue","errorData","_reportError","eventData","sendFabricEvent","associateMstWithUserID","callStatsId","usageLabel","reportError","theBackend","tryCatchMethods","originalMethod","theArguments","debugMethods","originalReportError","exception","CallStatsBackend","callstats","_traceAndCatchBackendCalls","aliasName","userName","configParams","applicationVersion","siteID","_initCallback","attachWifiStatsHandler","addresses","devicesData","_reportEvent","conferenceID","overall","comment","sendUserFeedback","remoteUserID","add","fabricAttributes","remoteEndpointType","endpointType","server","ret","addNewFabric","fabricUsage","multiplex","_addNewFabricCallback","success","streamEndpointId","isResume","WEBAUDIO_ANALYZER_FFT_SIZE","WEBAUDIO_ANALYZER_SMOOTING_TIME","AudioContext","webkitAudioContext","context","suspend","timeDomainDataToAudioLevel","maxVolume","parseFloat","toFixed","animateLevel","newLevel","lastLevel","diff","intervalId","intervalMilis","resume","analyser","createAnalyser","smoothingTimeConstant","fftSize","createMediaStreamSource","self","array","Uint8Array","frequencyBinCount","getByteTimeDomainData","KEYS_BY_BROWSER_TYPE","browsers","FIREFOX","CHROME","EDGE","OPERA","NWJS","ELECTRON","SAFARI","REACT_NATIVE","calculatePacketLoss","lostPackets","totalPackets","round","SsrcStats","loss","setLoss","setResolution","addBitrate","resetBitrate","setFramerate","ConferenceStats","StatsCollector","audioLevelsInterval","statsInterval","_browserType","_usesPromiseGetStats","_getStatValue","_defineNewGetStatValueMethod","_defineGetStatValueMethod","baselineAudioLevelsReport","currentAudioLevelsReport","currentStatsReport","previousStatsReport","audioLevelReportHistory","audioLevelsIntervalId","conferenceStats","audioLevelsIntervalMilis","statsIntervalId","statsIntervalMilis","ssrc2stats","startAudioLevelStats","processNewAudioLevelReport","processAudioLevelReport","supportsRtpStatistics","processNewStatsReport","processStatsReport","keyFromName","itemStatByKey","item","pair","getNonNegativeStat","getStatValue","byteSentStats","idx","receiveBandwidth","sendBandwidth","ip","localip","conferenceStatsTransport","selected","local","localCandidateId","remote","remoteCandidateId","ipAddress","portNumber","candidateType","msType","remoteAddress","localAddress","before","ssrcIds","isRemote","remoteSource","ssrcStats","isDownloadStream","packetsNow","packetsBefore","packetsDiff","packetsLostNow","packetsLostBefore","packetsLostDiff","packetsTotal","packetsLost","bytesReceivedNow","bytesReceivedBefore","bytesReceived","nowBytesTransmitted","timeMs","timestamp","bitrateReceivedKbps","bitrateSentKbps","StatisticsEvents","_processAndEmitReport","bitrateDownload","bitrateUpload","resolutions","framerates","audioBitrateDownload","audioBitrateUpload","videoBitrateDownload","videoBitrateUpload","userResolutions","userFramerates","avgAudioLevel","currentValue","getNonNegativeValue","v","_calculateBitrate","fieldName","bytesNow","bytesBefore","bytesProcessed","bitrateKbps","nominated","availableIncomingBitrate","availableOutgoingBitrate","remoteUsedCandidate","localUsedCandidate","remoteIpAddress","remotePort","localIpAddress","localPort","localIp","networkType","currentRoundTripTime","framerateMean","frameHeight","frameWidth","framesPerSecond","framesSent","numberOfFramesSinceBefore","trackIdentifier","SpeakerStats","userId","isLocalStats","_userId","_isLocalStats","setDominantSpeaker","totalDominantSpeakerTime","_dominantSpeakerStart","_hasLeft","newName","isNowDominantSpeaker","isDominantSpeaker","timeElapsed","users","dominantSpeakerId","_onDominantSpeaker","_onUserJoin","_onUserLeave","_onDisplayNameChange","SPEAKER_STATS_RECEIVED","_updateStats","oldDominantSpeaker","newDominantSpeaker","savedUser","getDisplayName","markAsHasLeft","newStats","speakerStatsToUpdate","_instances","isCallstatsLoaded","loadCallStatsAPI","loadScript","_initCallStatsBackend","isBackendInitialized","initBackend","formatJitsiTrackErrorForCallStats","disableThirdPartyRequests","rtpStatsMap","callStatsIntegrationEnabled","callsStatsInstances","instances","rtpStats","RTPStats","localStats","LocalStats","removeAudioLevelListener","removeBeforeDisposedListener","removeByteSentStatsListener","callStats","tpcId","_stopRemoteStats","newInstance","_getCallStatsConfID","_getAllCallStatsInstances","csInstances","sendTerminateEvent","instance","sendResumeOrHoldEvent","roomJid","globalSet","globalSubSet","next","csPerStats","FEEDBACK","rating","LOCAL_JID","eventToLog","RecordingResult","AUDIO_WEBM","AUDIO_OGG","TrackRecorder","recorder","startRecorder","trackRecorder","stopRecorder","determineCorrectFileType","MediaRecorder","isTypeSupported","AudioRecorder","jitsiConference","recorders","fileType","isRecording","instantiateTrackRecorder","updateNames","originalStream","createEmptyStream","mimeType","ondataavailable","dataEvent","recorderToRemove","blob","Blob","body","appendChild","style","click","getRecordingResults","getFileType","wordArray","SphinxService","BEFORE_STATE","RECORDING_STATE","TRANSCRIBING_STATE","FINISHED_STATE","MAXIMUM_SENTENCE_LENGTH","audioRecorder","transcriptionService","counter","transcription","lineLength","callBack","blobCallBack","recordingResult","getUTCMilliseconds","wordObject","begin","end","word","maybeMerge","merge","arrays","potentialWords","hasPopulatedArrays","pushWordToSortedArray","lowestWordArray","wordToAdd","updateTranscription","foundSmaller","wordToCompare","twoDimensionalArray","getTranscription","getState","TranscriptionService","verify","formatResponse","audioBlob","Word","getURL","audioFileBlob","XMLHttpRequest","onreadystatechange","DONE","responseText","open","setRequestHeader","objects","filler","json","sphinxURL","toReturn","getWord","getBeginTime","getEndTime","AsyncQueue","_queue","async","queue","_processQueueTasks","_stopped","kill","task","finishedCallback","getTokenAuthUrl","urlPattern","roleUpgrade","dest","srcEvent","Function","oldOnErrorHandler","JitsiGlobalErrorHandler","oldOnUnhandledRejection","onunhandledrejection","JitsiGlobalUnhandledRejection","errHandler","ALPHANUM","HEX_DIGITS","randomInt","floor","randomElement","arr","randomAlphanumStr","randomHexDigit","currentExecutingScript","prepend","relativeURL","loadCallback","script","referenceNode","scriptEl","scriptSrc","baseScriptSrc","onload","parentNode","insertBefore","integerHash","string","char","hash","charCodeAt","abs","suffix","processVersions","mucResource","getComponentVersion","componentName","STATE_CHANGED","JitsiVideoSIPGWSession","_sendJibriIQ","failureReason","oldState","sipaddress","displayname","setState","sessions","sessionStateChangeListener","sessionStateChanged","handleJibriSIPState","Constants","failure_reason","addStateListener","removeStateListener","STATUS_AVAILABLE","STATUS_UNDEFINED","STATUS_BUSY","STATE_ON","STATE_OFF","STATE_PENDING","STATE_RETRYING","STATE_FAILED","ERROR_NO_CONNECTION","ERROR_SESSION_EXISTS","IDENTITY_PROPERTIES","IDENTITY_PROPERTIES_FOR_COMPARE","HASH","compareIdentities","b","generateSha","identities","sortedIdentities","accumulatedValue","tmp","sortedFeatures","b64_sha1","Caps","disco","versionToCapabilities","jidToVersion","rooms","emuc","EMUC_ROOM_ADDED","_addChatRoom","EMUC_ROOM_REMOVED","_removeChatRoom","addNamespace","NS","CAPS","_handleCaps","_onMucMemberLeft","_removeJidToVersionEntry","_generateVersion","user","_getDiscoInfo","sha","receivedNode","each","el","category","_fixChatRoomPresenceMap","ver","_identities","_features","_notifyVersionChanged","stanza","querySelector","oldVersion","parser","packet2JSON","xmlElement","child","text","getText","xmlunescape","json2packet","packet","filterNodeFromPresenceJSON","pres","nodeName","ChatRoom","getBareJidFromJid","members","presHandlers","noBridgeAvailable","Moderator","initPresenceMap","lastPresences","phoneNumber","phonePin","participantPropertyListener","locked","xns","addVideoInfoToPresence","disableFocus","preJoin","allocateConferenceFocus","fromJoin","$pres","flush","getInfo","DISCO_INFO","getForm","form","formSubmit","member","statusEl","hasStatusUpdate","hasVersionUpdate","xElement","getElementsByTagNameNS","mucUserItem","affiliation","getFocusUserJid","isHiddenDomain","xEl","remove","extractIdentityInformation","userInfo","tag","newRole","_initFocus","memberOfThis","displayJids","CONFERENCE_PROPERTIES_CHANGED","att","phone","pin","processNode","tagHandlers","nickname","$msg","SENDING_CHAT_MESSAGE","SENDING_PRIVATE_CHAT_MESSAGE","skipEvents","onMucMemberLeft","reasonSelect","doLeave","isKick","membersKeys","actorSelect","actorNick","onParticipantLeft","subjectText","stamp","dateParts","discoRoomInfo","jsonMessage","parsedJson","tryParseJSONAndVerify","toDomain","anonymousdomain","kickIQ","onNotSupported","formsubmit","handlerIdx","sendVideoInfoPresence","sendAudioInfoPresence","addAudioInfoToPresence","mutedNode","videoTypeNode","isSipGatewayEnabled","rayo","iqToFocus","onMucLeft","doReject","getConnectionPluginDefinition","base","ConnectionPluginListenable","JingleSession","localJid","mediaConstraints","usedrip","dripContainer","JingleSessionState","doInitialize","contents","failure","IQ_TIMEOUT","DEFAULT_MAX_STATS","jingleContents","videoContents","senders","_bridgeSessionId","_iceCheckingStartedTimestamp","_gatheringStartedTimestamp","_localVideoActive","_remoteVideoActive","_gatheringReported","lasticecandidate","closed","SignalingLayerImpl","modificationQueue","wasConnected","failICE","isReconnect","wasstable","webrtcIceUdpDisable","webrtcIceTcpDisable","gatherStats","_abtestSuspendVideoEnabled","createPeerConnection","ev","ICE_DURATION","phase","sendIceCandidate","connectionState","ICE_STATE_CHANGED","reconnect","iceStarted","PEERCONNECTION_READY","setChatRoom","_renegotiate","localSDP","ice","iceparams","jcand","candidateToJingle","errorMesssage","sendIceCandidates","_assertNotEnded","cand","initiatorJid","mid","cands","parseMLine","creator","fingerprintLine","parseFingerprint","required","fingerprint","attrs","newJingleErrorHandler","sessionInfo","elem","iceCandidates","candidateFromJingle","rtcCandidate","RTCIceCandidate","outerHTML","workFunction","iceCandidate","ssrcElement","setSSRCOwner","i3","ssrcInfoElement","setOfferAnswerCycle","sendSessionAccept","offerSdp","sendSessionInitiate","toJingle","tree","jingleAnswer","jingleOfferAnswerIq","newRemoteSdp","_processNewJingleOfferIq","oldLocalSdp","bridgeSession","bridgeSessionId","sendContentModify","newLocalSdp","notifyMySSRCUpdate","jingleOfferElem","originalOffer","clone","newFingerprint","sendTransportAccept","accept","responder","responderJid","removeTcpCandidates","removeUdpCandidates","newSendersValue","sessionModify","transportAccept","medialines","transportToJingle","transportReject","sessionTerminate","sourceAddElem","currentRemoteSdp","addSsrcInfo","i1","content","lines","containsSSRC","i2","_addOrRemoveRemoteStream","isAdd","logPrefix","readSsrcInfo","errMsg","addOrRemoveSsrcInfo","_parseSsrcInfoFromSourceAdd","_parseSsrcInfoFromSourceRemove","_processRemoteAddSource","_processRemoteRemoveSource","remoteSdp","fromJingle","removeSsrcInfo","pop","optionalRemoteSdp","_initiatorRenegotiate","_responderRenegotiate","shouldRenegotiate","newLocalSDP","sourceRemoveElem","operationName","oldSDP","currentLocalSDP","sdpDiff","SDPDiffer","addedMedia","getNewMedia","removedMedia","_addRemoveTrackAsMuteUnmute","isMute","oldLocalSDP","tpcOperation","_verifyNoSSRCChanged","audioActive","videoActive","logAudioStr","logVideoStr","isSessionActive","audioActiveChanged","pcVideoActiveChanged","newVideoSenders","parseVideoSenders","_modifyRemoteVideoActive","remoteVideoSenders","isRemoteVideoActive","newSDP","sdpDiffer","removedAnySSRCs","containsNewSSRCs","failureCb","errResponse","errorElSel","errorReasonSel","errorMsgSel","finishCallback","shutdown","abTesting","enableSuspendVideoTest","_getInitiatorJid","ENDED","updateAssociatedRtxStream","primarySsrcInfo","primarySsrcMsid","primarySsrcCname","cname","previousRtxSSRC","getRtxSSRC","dumpSSRCGroups","removeGroupsWithSSRC","correspondingRtxSsrcs","ssrcMapping","sdpTransformer","getSSRCCount","primaryVideoSsrcs","getPrimaryVideoSSRCs","getSSRCAttrValue","correspondingRtxSsrc","previousAssociatedRtxStream","containsAnySSRCGroups","findGroups","removeGroupsBySemantics","parseSecondarySSRC","mediaI","getMediaSsrcMap","mediaSSRCs","mediaindex","parseMID","linessrc","medias","mangle","newdesc","rtpmap","fmt","parseRTPMap","buildMLine","removeSessionLines","prefix","removeMediaLines","thecreator","k","assrcline","amidline","afmtpline","parseFmtp","rtcpFbToJingle","crypto","parseCrypto","parseSSRC","availableSsrc","ssrcParameters","ssrcSdpLine","kv","ssrcGroupLines","ridLines","ridLine","ridInfo","unifiedSimulcast","parseExtmap","uri","port","sctpmap","sctpAttrs","parseSCTPMap","fingerprints","setup","payloadtype","parseRTCPFB","params","rtcpFbFromJingle","jingle2media","sctp","proto","streamCount","buildICEUfrag","buildICEPwd","buildRTPMap","setAttribute","arrayEquals","array1","array2","l","equals","mySDP","otherSDP","myMedias","othersMedias","newMedia","othersMediaIdx","myMedia","othersMedia","myContainMsid","newContainMsid","otherSsrcGroup","matched","mySsrcGroup","modify","sdpMediaSsrcs","mediaSsrc","nv","ssrcGroup","mediadesc","sessiondesc","pwd","parseICEUfrag","parseICEPwd","frag","parts","clockrate","channels","sctpPort","parseICECandidate","elems","foundation","priority","generation","tcptype","network","buildICECandidate","hasOwnAttribute","pt","haystack","needle","sessionpart","needles","parsePrimaryVideoSsrc","numSsrcs","index","numGroups","getSsrcAttribute","attributeName","parseGroupSsrcs","getMedia","ufragLines","codecName","payloadType","payloadTypes","payloadIndex","unshift","removePts","rtxApts","rtxPts","allPts","keepPts","rtcpFb","injectRecvOnly","newPrimarySsrc","getPrimaryVideoSsrc","replaceSSRC","parsePrimarySSRC","_getSSRCCount","MLineWrap","attrName","fecGroup","findGroupByPrimarySSRC","videoSSRCs","getSSRCs","ssrcGroupInfo","secondarySsrc","rawSDP","parsedSDP","selectedMLine","ssrcOwners","oldChatRoom","_audioMuteHandler","_videoMuteHandler","_videoTypeHandler","SignalingLayer","LastRequestTracker","_nextValidRid","_lastSuccess","stropheConnection","nextValidRid","createExpBackoffTimer","step","xmppService","getNextTimeout","getNextErrorTimeout","externalAuthEnabled","sipGatewayEnabled","call_control","origin","attachEvent","resource","setFocusUserJid","focusJid","focusUserJid","getFocusComponent","focusComponent","focus","createConferenceIq","machineUID","enforcedBridge","enableTcc","enableRemb","minParticipants","enableLipSync","audioPacketDelay","minBitrate","octo","probability","openSctp","stereo","useRoomAsSharedDocumentName","parseSessionId","resultIq","parseConfigOptions","authenticationEnabled","_allocateConferenceFocusSuccess","_allocateConferenceFocusError","invalidSession","reservationErr","errorCode","errorTextNode","waitMs","retrySec","urlCallback","failureCallback","_getLoginUrl","popup","urlCb","str","decodeURIComponent","logout","logoutUrl","MucConnectionPlugin","onPresenceUnavailable","onPresenceError","onMessage","onMute","createNonAnonymousRoom","addConnectionPlugin","JingleConnectionPlugin","jvbIceConfig","jvb","onJingle","fromJid","ack","sess","startMuted","modifyContents","ACTION_JINGLE_TR_RECEIVED","replaceTransport","successTime","ACTION_JINGLE_TR_SUCCESS","sendTransportReject","addRemoteStream","removeRemoteStream","me","iceservers","dict","credential","useStunTurn","ConnectionPlugin","initJingle","StropheLogger","rawInput","logIncoming","rawOutput","logOutgoing","PING_INTERVAL","PING_TIMEOUT","PING_THRESHOLD","PING_TIMESTAMPS_TO_KEEP","PingConnectionPlugin","failedPings","pingExecIntervals","_addPingExecutionTimestamp","PING","pingIntervals","maxInterval","previousTS","currentInterval","RAYO_XMLNS","RayoConnectionPlugin","onRayo","roomPass","req","callResource","lastErrorStatus","resetLastErrorStatusRegExpr","lastErrorStatusRegExpr","LogLevel","WARN","DEBUG","errStatusCapture","exec","FATAL","getLastErrorStatus","getStatusString","Status","CONNECTING","CONNFAIL","AUTHENTICATING","AUTHFAIL","CONNECTED","DISCONNECTED","DISCONNECTING","ATTACHED","createConnection","bosh","conn","Connection","maxRetries","urls","disconnectInProgress","authenticatedUser","_initStrophePlugins","_lastSuccessTracker","LastSuccessTracker","startTracking","clientNode","initFeaturesList","_pingSupported","statusStr","CONNECTION_STATUS_CHANGED","getStunAndTurnCredentials","pingJid","getFeaturesAndIdentities","startInterval","speakerStatsComponentAddress","_onPrivateMessage","connected","anonymousConnectionFailed","connectionFailed","lastErrorMsg","stopInterval","wasIntentionalDisconnect","_getConnectionFailedReasonDetails","connectionHandler","attaching","configDomain","search","hostname","_connect","muc","getLog","disconnectListener","evType","sync","sendBeacon","disconnecting","_changeConnectStatus","_proto","_buildBody","CLIENT","cnode","service","serialize","_abortAllRequests","_doDisconnect","p2pStunServers","iceTransportPolicy","initEmuc","initStropheUtil","initPing","initRayo","initStropheLogger","shard","lastResponseHeaders","headersArr","headers","header","shard_changed","suspend_time","getPingSuspendTime","time_since_last_success","getTimeSinceLastSuccess","jsonString","getAvatarURL","avatarID","email","urlPrefix","urlSuffix","getGravatarURL","generateAvatarURL","md5","hex","isValidEmail","capabilitiesDB","isUsingIFrame","browserInfo","capabilitiesByVersion","browserCapabilities","capabilities","_capabilities","iframeCapabilities","audioIn","audioOut","screenSharing","videoIn","videoOut","bowserNameToJitsiName","INTERNET_EXPLORER","_detectChromiumBased","_detectElectron","_detectNWJS","_detectReactNative","product","_detect","detectors","bowser","UNKNOWN","detectedBrowserInfo","_name","_version","compareVersions","compareVersion","AUDIO","VIDEO","TRACK_ATTACHED","PEER_MUTED_CHANGED","PEER_VIDEO_TYPE_CHANGED","LOCAL_STATS_UPDATED","REMOTE_STATS_UPDATED","E2E_RTT_CHANGED","bridgeDown","errorMessage","stage","AUDIO_LEVEL","BEFORE_DISPOSED","BYTE_SENT_STATS","CONNECTION_STATS","ETHERPAD","PARTICIPANT_AUDIO_MUTED","PARTICIPANT_VIDEO_MUTED","PARTICIPANT_VIDEO_TYPE_CHANGED","PROMPT_FOR_LOGIN","READY_TO_JOIN","REMOTE_STATS"],"mappings":"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ACfrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACa;;AAEb,gBAAgB,mBAAO,CAAC,uEAAa;AACrC,kBAAkB,mBAAO,CAAC,6EAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,KAAK;AACpD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,yBAAyB;AACzB;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;;AAEd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,yBAAyB;AAChD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACt0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,gEAAe;;AAEvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,gEAAe;AACvC,qBAAqB,mBAAO,CAAC,qFAAmB;AAChD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,oCAAoC,6BAA6B,EAAE;AACnE,oCAAoC,6CAA6C,EAAE;AACnF,iCAAiC,uBAAuB,EAAE;AAC1D;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,2BAA2B;;AAElD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,2BAA2B;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,aAAa;AACb;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,gDAAgD;AAC1E,4BAA4B,oCAAoC;AAChE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kCAAkC,EAAE;AACnF;AACA;AACA;AACA,oCAAoC,2BAA2B;AAC/D,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAA2D,EAAE;AAC7F;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB,EAAE;AACvD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,gEAAgE,kCAAkC,EAAE;AACpG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;;;;;;;;;;;ACjgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,yBAAyB;AACvF,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA,mBAAmB,mCAAmC;AACtD;;AAEA;AACA,mBAAmB,iDAAiD;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA,aAAa;AACb;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,KAA6B;AACrC;AACA;AACA;AACA,aAAa,IAA2C;AACxD,QAAQ,iCAAO,EAAE,mCAAE;AACnB;AACA,SAAS;AAAA,oGAAC;AACV;AACA;AACA,SAAS,EAEJ;;AAEL,CAAC;;;;;;;;;;;;;AClmCD;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,KAA4B;AAClC,WAAW,IAAyC,EAAE,8FAAM;AAC5D,OAAO,EAAyB;AAChC,CAAC;AACD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,MAAM;AACpB,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,kDAAkD;AAClD,kDAAkD;AAClD;AACA,cAAc,cAAc;AAC5B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC3mBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAA0C;AAChD;AACA,IAAI,iCAAO,EAAE,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC;AACvB,GAAG,MAAM,EAON;AACH,CAAC;AACD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA,8FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kEAAkE;AAClE;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA,yJAAyJ;;AAEzJ;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,KAAK;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,iCAAiC,EAAE;AAChF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,iCAAiC,EAAE;AAChF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC,EAAE;AAC5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,KAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;AC3dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,mEAAa;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM,OAAO;AACb;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,QAAQ,0BAA0B;AAClC,cAAc;AACd;AACA;AACA;AACA,iEAAiE,YAAY;AAC7E,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,4BAA4B,uBAAuB;AACnD;AACA,mDAAmD;AACnD;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,eAAe,sBAAsB;AACrC,qDAAqD,aAAa;AAClE,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,gEAAU;AAC/B,mBAAmB,mBAAO,CAAC,4EAAgB;;AAE3C;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,WAAW,gCAAgC,0BAA0B;AACnF,cAAc,WAAW,gCAAgC,0BAA0B;AACnF,cAAc,WAAW,+BAA+B,yBAAyB;AACjF,cAAc,WAAW,8BAA8B,wBAAwB;AAC/E,cAAc,WAAW,+BAA+B,yBAAyB;AACjF,cAAc,WAAW,gCAAgC,0BAA0B;AACnF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,mBAAmB,sBAAsB;AACzC,yDAAyD,aAAa;AACtE,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB,sBAAsB;AAC5C;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;;AAEA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjIA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY,KAA4B,IAAI,gGAAU;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,oCAAoC;AACjD,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oCAAoC;AACjD,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oCAAoC;AACjD,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oCAAoC;AACjD,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oCAAoC;AACjD,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oCAAoC;AACjD,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oCAAoC;AACjD,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,oCAAoC;AACjD,eAAe,IAAI;AACnB,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA,SAAS;AACT,8BAA8B,0BAA0B;AACxD;AACA;AACA;AACA,OAAO;AACP;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,8BAA8B,0BAA0B;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,oCAAoC;AACnD,iBAAiB,OAAO;AACxB;AACA,eAAe;AACf,0DAA0D;AAC1D,2DAA2D;AAC3D;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf,+BAA+B;AAC/B;AACA;AACA;AACA,MAAM,mCAAO;AACb;AACA,OAAO;AAAA,oGAAC;A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,SAAhB,C;;;;;;;;;;;;ACtBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,KAA0B;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,6BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA,8CAA8C,kBAAkB,EAAE;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvzDA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;ACvLtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,eAAe,mBAAO,CAAC,sCAAK;;AAE5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa;AACtB;;AAEA;AACA;AACA;AACA,SAAS,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,+BAA+B;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;AC9nDA;AACA;AACA;AACA;AACA,GAAG;AACH,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,OAAO,cAAc;AACrB,OAAO,gBAAgB;AACvB,OAAO,gBAAgB;AACvB,OAAO,oBAAoB;AAC3B,OAAO,kBAAkB;AACzB,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK,kCAAkC,UAAU;AACjD,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK,+BAA+B,eAAe,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK,0BAA0B,aAAa;AAC5C,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,sCAAsC;AACtC,yBAAyB;AACzB,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA,gCAAgC;AAChC,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;ACnVD,aAAa,mBAAO,CAAC,4DAAU;AAC/B,aAAa,mBAAO,CAAC,4DAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,+CAA+C;;AAE/C;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,8DAAW;AACjC;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC,uCAAuC;AACvC;;AAEA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,6BAA6B;AACnD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,8EAA8E;AAC9E,GAAG;AACH;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;ACzHA,cAAc,mBAAO,CAAC,8DAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;;;;;;;;;;;;;ACjHA;AACa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,0BAA0B;AAC1B;AACA;AACA;AACA,yDAAyD;AACzD,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,IAA0B;AAC9B;AACA;;;;;;;;;;;;ACnqBA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;ACzLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,IAA0C;AAClD;AACA;AACA;AACA;AACA,QAAQ,iCAAO,EAAE,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC;AAC3B,KAAK,MAAM,gBAcN;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB,mBAAmB;AACnB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;;AAEA;AACA;AACA;AACA,8CAA8C,OAAO;AACraAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,0CAA0C;AAC1C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,uFAAuF;AACvF;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED,oDAAoD;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,UAAU,IAA2B;AAC1C;AACA,KAAK,MAAM,EAGN;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA,mBAAmB,iBAAiB;AACpC,YAAY,oDAAoD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C,eAAe,kBAAkB;AACjC,eAAe,oCAAoC;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wCAAwC;;AAEjE;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,iDAAiD,YAAY;AAC7D,YAAY,gDAAgD;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C,EAAE;AACvF,kCAAkC,sDAAsD,EAAE;AAC1F;AACA;AACA,yCAAyC,4CAA4C,EAAE;AACvF,kCAAkC,sDAAsD,EAAE;AAC1F;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,UAAU,IAA2B;AAC1C;AACA,KAAK,MAAM,EAGN;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,UAAU,IAA2B;AAC1C;AACA,KAAK,MAAM,EAGN;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,kDAAkD;AAClD,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,WAAW,IAA2B;AAC3C;AACA;AACA;AACA;AACA;AACA,KAAK,MAAM,UAcN;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yCAAyC;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAA8C;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yCAAyC;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAA+C;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0CAA0C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe,KAAK,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;;AAEjC;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA,aAAa;AACb;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,wCAAwC;AACxC,wCAAwC;AACxC,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,iCAAiC;AACjC,iCAAiC;AACjC,mCAAmC;AACnC,mCAAmC;AACnC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;;AAEjC;AACA;AACA;AACA;;AAEA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,4BAA4B;AACnD;AACA;AACA;;AAEA,uBAAuB,4BAA4B;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,8BAA8B,0CAA0C;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,yBAAyB;AACzB;AACA;AACA;;AAEA,+BAA+B,4BAA4B;AAC3D;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,aAAa;AACb;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,aAAa;;AAEjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qBAAqB;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uDAAuD;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gBAAgB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACriBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;;AAEpC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;;AAGL;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;;AAEhC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc,uBAAuB;AACtD,iCAAiC;AACjC;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD,yBAAyB,uBAAuB;AAChD,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,+BAA+B,gCAAgC;AAC/D,sCAAsC,uBAAuB;AAC7D,2CAA2C;AAC3C,aAAa;AACb,+BAA+B,gCAAgC;AAC/D,sCAAsC,uBAAuB;AAC7D;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,mCAAmC;AACtE,iDAAiD,0BAA0B;AAC3E;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,UAAU;AACzB;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,UAAU,IAA2B;AAC1C;;AAEA;AACA,KAAK,MAAM,EAGN;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB;AACnB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA,mBAAmB,gCAAgC;AACnD;AACA,mBAAmB,gCAAgC;AACnD;AACA,yBAAyB,4CAA4C;AACrE,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sCAAsC,SAAS;AAC/C;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,UAAU,IAA2B;AAC1C;;AAEA;AACA,KAAK,MAAM,EAGN;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,kDAAkD;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,8BAA8B;AACvE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,SAAS,aAAa;AACtB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,UAAU,IAA2B;AAC1C;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC/xMA;AACA,CAAC,KAA4D,WAAW,mBAAO,CAAC,wDAAY;AAC5F,CAAC,SACwB;AACzB,CAAC,+BAA+B;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAuD;AACtF;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAuD;AACjF;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA,mCAAmC;AACnC,4CAA4C;AAC5C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA,oCAAoC;AACpC,4CAA4C;AAC5C;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uBAAuB;;AAE9D;AACA,4BAA4B,SAAS;AACrC;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,CAAC;AACD;;;;;;;;;;;;ACzOA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,mBAAO,CAAC,iEAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9DA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;;;;;;;;;;;;;ACDA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,qBAAqB,mBAAO,CAAC,qFAAsB;AACnD,iCAAiC,sBAAsB;;;;;;;;;;;;;;ACZvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,YAAY,mBAAO,CAAC,8DAAS;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAO,CAAC,wFAAsB;AACjD,iBAAiB,mBAAO,CAAC,gFAAkB;AAC3C,oBAAoB,mBAAO,CAAC,4FAAwB;AACpD,mBAAmB,mBAAO,CAAC,wFAAsB;AACjD,mBAAmB,mBAAO,CAAC,0EAAe;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY,mBAAO,CAAC,kEAAa;AACjC;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,+DAA+D;AAC/D;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,mFAAgB;AAC5C;;;;;;;;;;;;;AChqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY,mBAAO,CAAC,kEAAa;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA,gDAAgD;AAChD;AACA;AACA,yDAAyD,oBAAoB;AAC7E,yDAAyD;AACzD;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,eAAe,mBAAO,CAAC,sCAAK;AAC5B,YAAY,mBAAO,CAAC,8DAAS;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,+DAAU;AAC9B,4BAA4B,mBAAO,CAAC,0FAAwB;;AAE5D;AACA,oBAAoB,mBAAO,CAAC,iFAAgB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,+DAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,mCAAmC;AACnC;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,oFAAgB;AAC5C;;;;;;;;;;;;;AC/MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,+DAAU;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,8BAA8B;AAC9B,oCAAoC,EAAE;AACtC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAgE;AAC7E,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY,mBAAO,CAAC,+DAAU;;AAE9B;AACA;;AAEA;AACA;AACA,qCAAqC,EAAE;;AAEvuBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACt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","file":"lib-jitsi-meet.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JitsiMeetJS\"] = factory();\n\telse\n\t\troot[\"JitsiMeetJS\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","/* global __filename, $, Promise */\nimport { Strophe } from 'strophe.js';\n\nimport EventEmitter from 'events';\nimport { getLogger } from 'jitsi-meet-logger';\nimport isEqual from 'lodash.isequal';\n\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport JitsiConferenceEventManager from './JitsiConferenceEventManager';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport JitsiParticipant from './JitsiParticipant';\nimport JitsiTrackError from './JitsiTrackError';\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\nimport authenticateAndUpgradeRole from './authenticateAndUpgradeRole';\nimport JitsiDTMFManager from './modules/DTMF/JitsiDTMFManager';\nimport P2PDominantSpeakerDetection from './modules/P2PDominantSpeakerDetection';\nimport RTC from './modules/RTC/RTC';\nimport TalkMutedDetection from './modules/TalkMutedDetection';\nimport browser from './modules/browser';\nimport ConnectionQuality from './modules/connectivity/ConnectionQuality';\nimport IceFailedNotification\n    from './modules/connectivity/IceFailedNotification';\nimport ParticipantConnectionStatusHandler\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport E2ePing from './modules/e2eping/e2eping';\nimport Jvb121EventGenerator from './modules/event/Jvb121EventGenerator';\nimport RecordingManager from './modules/recording/RecordingManager';\nimport RttMonitor from './modules/rttmonitor/rttmonitor';\nimport AvgRTPStatsReporter from './modules/statistics/AvgRTPStatsReporter';\nimport AudioOutputProblemDetector from './modules/statistics/AudioOutputProblemDetector';\nimport SpeakerStatsCollector from './modules/statistics/SpeakerStatsCollector';\nimport Statistics from './modules/statistics/statistics';\nimport Transcriber from './modules/transcription/transcriber';\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\nimport RandomUtil from './modules/util/RandomUtil';\nimport ComponentsVersions from './modules/version/ComponentsVersions';\nimport VideoSIPGW from './modules/videosipgw/VideoSIPGW';\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\nimport { JITSI_MEET_MUC_TYPE } from './modules/xmpp/xmpp';\nimport * as MediaType from './service/RTC/MediaType';\nimport * as RTCEvents from './service/RTC/RTCEvents';\nimport VideoType from './service/RTC/VideoType';\nimport {\n    ACTION_JINGLE_RESTART,\n    ACTION_JINGLE_SI_RECEIVED,\n    ACTION_JINGLE_SI_TIMEOUT,\n    ACTION_JINGLE_TERMINATE,\n    ACTION_P2P_DECLINED,\n    ACTION_P2P_ESTABLISHED,\n    ACTION_P2P_FAILED,\n    ACTION_P2P_SWITCH_TO_JVB,\n    ICE_ESTABLISHMENT_DURATION_DIFF,\n    createJingleEvent,\n    createP2PEvent\n} from './service/statistics/AnalyticsEvents';\nimport * as XMPPEvents from './service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * How long since Jicofo is supposed to send a session-initiate, before\n * {@link ACTION_JINGLE_SI_TIMEOUT} analytics event is sent (in ms).\n * @type {number}\n */\nconst JINGLE_SI_TIMEOUT = 5000;\n\n/**\n * Creates a JitsiConference object with the given name and properties.\n * Note: this constructor is not a part of the public API (objects should be\n * created using JitsiConnection.createConference).\n * @param options.config properties / settings related to the conference that\n * will be created.\n * @param options.name the name of the conference\n * @param options.connection the JitsiConnection object for this\n * JitsiConference.\n * @param {number} [options.config.avgRtpStatsN=15] how many samples are to be\n * collected by {@link AvgRTPStatsReporter}, before arithmetic mean is\n * calculated and submitted to the analytics module.\n * @param {boolean} [options.config.p2p.enabled] when set to <tt>true</tt>\n * the peer to peer mode will be enabled. It means that when there are only 2\n * participants in the conference an attempt to make direct connection will be\n * made. If the connection succeeds the conference will stop sending data\n * through the JVB connection and will use the direct one instead.\n * @param {number} [options.config.p2p.backToP2PDelay=5] a delay given in\n * seconds, before the conference switches back to P2P, after the 3rd\n * participant has left the room.\n * @param {number} [options.config.channelLastN=-1] The requested amount of\n * videos are going to be delivered after the value is in effect. Set to -1 for\n * unlimited or all available videos.\n * @param {number} [options.config.forceJVB121Ratio]\n * \"Math.random() < forceJVB121Ratio\" will determine whether a 2 people\n * conference should be moved to the JVB instead of P2P. The decision is made on\n * the responder side, after ICE succeeds on the P2P connection.\n * @param {*} [options.config.openBridgeChannel] Which kind of communication to\n * open with the videobridge. Values can be \"datachannel\", \"websocket\", true\n * (treat it as \"datachannel\"), undefined (treat it as \"datachannel\") and false\n * (don't open any channel).\n * @constructor\n *\n * FIXME Make all methods which are called from lib-internal classes\n *       to non-public (use _). To name a few:\n *       {@link JitsiConference.onLocalRoleChanged}\n *       {@link JitsiConference.onUserRoleChanged}\n *       {@link JitsiConference.onMemberLeft}\n *       and so on...\n */\nexport default function JitsiConference(options) {\n    if (!options.name || options.name.toLowerCase() !== options.name) {\n        const errmsg\n            = 'Invalid conference name (no conference name passed or it '\n                + 'contains invalid characters like capital letters)!';\n\n        logger.error(errmsg);\n        throw new Error(errmsg);\n    }\n    this.eventEmitter = new EventEmitter();\n    this.options = options;\n    this.eventManager = new JitsiConferenceEventManager(this);\n    this.participants = {};\n    this._init(options);\n    this.componentsVersions = new ComponentsVersions(this);\n\n    /**\n     * Jingle session instance for the JVB connection.\n     * @type {JingleSessionPC}\n     */\n    this.jvbJingleSession = null;\n    this.lastDominantSpeaker = null;\n    this.dtmfManager = null;\n    this.somebodySupportsDTMF = false;\n    this.authEnabled = false;\n    this.startAudioMuted = false;\n    this.startVideoMuted = false;\n    this.startMutedPolicy = {\n        audio: false,\n        video: false\n    };\n    this.isMutedByFocus = false;\n\n    // when muted by focus we receive the jid of the initiator of the mute\n    this.mutedByFocusActor = null;\n\n    // Flag indicates if the 'onCallEnded' method was ever called on this\n    // instance. Used to log extra analytics event for debugging purpose.\n    // We need to know if the potential issue happened before or after\n    // the restart.\n    this.wasStopped = false;\n\n    // Conference properties, maintained by jicofo.\n    this.properties = {};\n\n    /**\n     * The object which monitors local and remote connection statistics (e.g.\n     * sending bitrate) and calculates a number which represents the connection\n     * quality.\n     */\n    this.connectionQuality\n        = new ConnectionQuality(this, this.eventEmitter, options);\n\n    /**\n     * Reports average RTP statistics to the analytics module.\n     * @type {AvgRTPStatsReporter}\n     */\n    this.avgRtpStatsReporter\n        = new AvgRTPStatsReporter(this, options.config.avgRtpStatsN || 15);\n\n    /**\n     * Detects issues with the audio of remote participants.\n     * @type {AudioOutputProblemDetector}\n     */\n    this._audioOutputProblemDetector = new AudioOutputProblemDetector(this);\n\n    /**\n     * Indicates whether the connection is interrupted or not.\n     */\n    this.isJvbConnectionInterrupted = false;\n\n    /**\n     * The object which tracks active speaker times\n     */\n    this.speakerStatsCollector = new SpeakerStatsCollector(this);\n\n    /* P2P related fields below: */\n\n    /**\n     * Stores reference to deferred start P2P task. It's created when 3rd\n     * participant leaves the room in order to avoid ping pong effect (it\n     * could be just a page reload).\n     * @type {number|null}\n     */\n    this.deferredStartP2PTask = null;\n\n    const delay\n        = parseInt(options.config.p2p && options.config.p2p.backToP2PDelay, 10);\n\n    /**\n     * A delay given in seconds, before the conference switches back to P2P\n     * after the 3rd participant has left.\n     * @type {number}\n     */\n    this.backToP2PDelay = isNaN(delay) ? 5 : delay;\n    logger.info(`backToP2PDelay: ${this.backToP2PDelay}`);\n\n    /**\n     * If set to <tt>true</tt> it means the P2P ICE is no longer connected.\n     * When <tt>false</tt> it means that P2P ICE (media) connection is up\n     * and running.\n     * @type {boolean}\n     */\n    this.isP2PConnectionInterrupted = false;\n\n    /**\n     * Flag set to <tt>true</tt> when P2P session has been established\n     * (ICE has been connected) and this conference is currently in the peer to\n     * peer mode (P2P connection is the active one).\n     * @type {boolean}\n     */\n    this.p2p = false;\n\n    /**\n     * A JingleSession for the direct peer to peer connection.\n     * @type {JingleSessionPC}\n     */\n    this.p2pJingleSession = null;\n\n    this.videoSIPGWHandler = new VideoSIPGW(this.room);\n    this.recordingManager = new RecordingManager(this.room);\n}\n\n// FIXME convert JitsiConference to ES6 - ASAP !\nJitsiConference.prototype.constructor = JitsiConference;\n\n/**\n * Create a resource for the a jid. We use the room nickname (the resource part\n * of the occupant JID, see XEP-0045) as the endpoint ID in colibri. We require\n * endpoint IDs to be 8 hex digits because in some cases they get serialized\n * into a 32bit field.\n *\n * @param {string} jid - The id set onto the XMPP connection.\n * @param {boolean} isAuthenticatedUser - Whether or not the user has connected\n * to the XMPP service with a password.\n * @returns {string}\n * @static\n */\nJitsiConference.resourceCreator = function(jid, isAuthenticatedUser) {\n    let mucNickname;\n\n    if (isAuthenticatedUser) {\n        // For authenticated users generate a random ID.\n        mucNickname = RandomUtil.randomHexString(8).toLowerCase();\n    } else {\n        // We try to use the first part of the node (which for anonymous users\n        // on prosody is a UUID) to match the previous behavior (and maybe make\n        // debugging easier).\n        mucNickname = Strophe.getNodeFromJid(jid).substr(0, 8)\n            .toLowerCase();\n\n        // But if this doesn't have the required format we just generate a new\n        // random nickname.\n        const re = /[0-9a-f]{8}/g;\n\n        if (!re.test(mucNickname)) {\n            mucNickname = RandomUtil.randomHexString(8).toLowerCase();\n        }\n    }\n\n    return mucNickname;\n};\n\n/**\n * Initializes the conference object properties\n * @param options {object}\n * @param options.connection {JitsiConnection} overrides this.connection\n */\nJitsiConference.prototype._init = function(options = {}) {\n    // Override connection and xmpp properties (Useful if the connection\n    // reloaded)\n    if (options.connection) {\n        this.connection = options.connection;\n        this.xmpp = this.connection.xmpp;\n\n        // Setup XMPP events only if we have new connection object.\n        this.eventManager.setupXMPPListeners();\n    }\n\n    const { config } = this.options;\n\n    this.room = this.xmpp.createRoom(\n        this.options.name,\n        config,\n        JitsiConference.resourceCreator\n    );\n\n    // Connection interrupted/restored listeners\n    this._onIceConnectionInterrupted\n        = this._onIceConnectionInterrupted.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_INTERRUPTED, this._onIceConnectionInterrupted);\n\n    this._onIceConnectionRestored = this._onIceConnectionRestored.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_RESTORED, this._onIceConnectionRestored);\n\n    this._onIceConnectionEstablished\n        = this._onIceConnectionEstablished.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_ESTABLISHED, this._onIceConnectionEstablished);\n\n    this._updateProperties = this._updateProperties.bind(this);\n    this.room.addListener(XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\n        this._updateProperties);\n\n    this.rttMonitor = new RttMonitor(config.rttMonitor || {});\n\n    this.e2eping = new E2ePing(\n        this,\n        config,\n        (message, to) => {\n            try {\n                this.sendMessage(\n                    message, to, true /* sendThroughVideobridge */);\n            } catch (error) {\n                logger.warn('Failed to send a ping request or response.');\n            }\n        });\n\n    if (!this.rtc) {\n        this.rtc = new RTC(this, options);\n        this.eventManager.setupRTCListeners();\n    }\n\n    this.participantConnectionStatus\n        = new ParticipantConnectionStatusHandler(\n            this.rtc,\n            this,\n            {\n                // Both these options are not public API, leaving it here only\n                // as an entry point through config for tuning up purposes.\n                // Default values should be adjusted as soon as optimal values\n                // are discovered.\n                rtcMuteTimeout: config._peerConnStatusRtcMuteTimeout,\n                outOfLastNTimeout: config._peerConnStatusOutOfLastNTimeout\n            });\n    this.participantConnectionStatus.init();\n\n    if (!this.statistics) {\n        let callStatsAliasName = this.myUserId();\n\n        if (config.enableDisplayNameInStats && config.displayName) {\n            callStatsAliasName = config.displayName;\n        }\n\n        this.statistics = new Statistics(this.xmpp, {\n            callStatsAliasName,\n            callStatsConfIDNamespace: this.connection.options.hosts.domain,\n            confID: config.confID || `${this.connection.options.hosts.domain}/${this.options.name}`,\n            customScriptUrl: config.callStatsCustomScriptUrl,\n            callStatsID: config.callStatsID,\n            callStatsSecret: config.callStatsSecret,\n            roomName: this.options.name,\n            swapUserNameAndAlias: config.enableStatsID,\n            applicationName: config.applicationName,\n            getWiFiStatsMethod: config.getWiFiStatsMethod\n        });\n    }\n\n    this.eventManager.setupChatRoomListeners();\n\n    // Always add listeners because on reload we are executing leave and the\n    // listeners are removed from statistics module.\n    this.eventManager.setupStatisticsListeners();\n\n    if (config.enableTalkWhileMuted) {\n        // eslint-disable-next-line no-new\n        new TalkMutedDetection(\n            this,\n            () =>\n                this.eventEmitter.emit(JitsiConferenceEvents.TALK_WHILE_MUTED));\n    }\n\n    if ('channelLastN' in config) {\n        this.setLastN(config.channelLastN);\n    }\n\n    /**\n     * Emits {@link JitsiConferenceEvents.JVB121_STATUS}.\n     * @type {Jvb121EventGenerator}\n     */\n    this.jvb121Status = new Jvb121EventGenerator(this);\n\n    // creates dominant speaker detection that works only in p2p mode\n    this.p2pDominantSpeakerDetection = new P2PDominantSpeakerDetection(this);\n\n    if (config && config.deploymentInfo && config.deploymentInfo.userRegion) {\n        this.setLocalParticipantProperty(\n            'region', config.deploymentInfo.userRegion);\n    }\n};\n\n/**\n * Joins the conference.\n * @param password {string} the password\n */\nJitsiConference.prototype.join = function(password) {\n    if (this.room) {\n        this.room.join(password).then(() => this._maybeSetSITimeout());\n    }\n};\n\n/**\n * Authenticates and upgrades the role of the local participant/user.\n *\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\n * authenticating and upgrading the role of the local participant/user finishes\n * and (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\n * process.\n */\nJitsiConference.prototype.authenticateAndUpgradeRole = function(options) {\n    return authenticateAndUpgradeRole.call(this, {\n        ...options,\n        onCreateResource: JitsiConference.resourceCreator\n    });\n};\n\n/**\n * Check if joined to the conference.\n */\nJitsiConference.prototype.isJoined = function() {\n    return this.room && this.room.joined;\n};\n\n/**\n * Tells whether or not the P2P mode is enabled in the configuration.\n * @return {boolean}\n */\nJitsiConference.prototype.isP2PEnabled = function() {\n    return Boolean(this.options.config.p2p && this.options.config.p2p.enabled)\n\n        // FIXME: remove once we have a default config template. -saghul\n        || typeof this.options.config.p2p === 'undefined';\n};\n\n/**\n * When in P2P test mode, the conference will not automatically switch to P2P\n * when there 2 participants.\n * @return {boolean}\n */\nJitsiConference.prototype.isP2PTestModeEnabled = function() {\n    return Boolean(this.options.config.testing\n        && this.options.config.testing.p2pTestMode);\n};\n\n/**\n * Leaves the conference.\n * @returns {Promise}\n */\nJitsiConference.prototype.leave = function() {\n    if (this.participantConnectionStatus) {\n        this.participantConnectionStatus.dispose();\n        this.participantConnectionStatus = null;\n    }\n    if (this.avgRtpStatsReporter) {\n        this.avgRtpStatsReporter.dispose();\n        this.avgRtpStatsReporter = null;\n    }\n\n    if (this._audioOutputProblemDetector) {\n        this._audioOutputProblemDetector.dispose();\n        this._audioOutputProblemDetector = null;\n    }\n\n    if (this.rttMonitor) {\n        this.rttMonitor.stop();\n        this.rttMonitor = null;\n    }\n\n    if (this.e2eping) {\n        this.e2eping.stop();\n        this.e2eping = null;\n    }\n\n    this.getLocalTracks().forEach(track => this.onLocalTrackRemoved(track));\n\n    this.rtc.closeBridgeChannel();\n    if (this.statistics) {\n        this.statistics.dispose();\n    }\n\n    this._delayedIceFailed && this._delayedIceFailed.cancel();\n\n    // Close both JVb and P2P JingleSessions\n    if (this.jvbJingleSession) {\n        this.jvbJingleSession.close();\n        this.jvbJingleSession = null;\n    }\n    if (this.p2pJingleSession) {\n        this.p2pJingleSession.close();\n        this.p2pJingleSession = null;\n    }\n\n    // leave the conference\n    if (this.room) {\n        const room = this.room;\n\n        // Unregister connection state listeners\n        room.removeListener(\n            XMPPEvents.CONNECTION_INTERRUPTED,\n            this._onIceConnectionInterrupted);\n        room.removeListener(\n            XMPPEvents.CONNECTION_RESTORED,\n            this._onIceConnectionRestored);\n        room.removeListener(\n            XMPPEvents.CONNECTION_ESTABLISHED,\n            this._onIceConnectionEstablished);\n\n        room.removeListener(\n            XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\n            this._updateProperties);\n\n        this.eventManager.removeXMPPListeners();\n\n        this.room = null;\n\n        return room.leave()\n            .then(() => {\n                if (this.rtc) {\n                    this.rtc.destroy();\n                }\n            })\n            .catch(error => {\n                // remove all participants because currently the conference\n                // won't be usable anyway. This is done on success automatically\n                // by the ChatRoom instance.\n                this.getParticipants().forEach(\n                    participant => this.onMemberLeft(participant.getJid()));\n\n                throw error;\n            });\n    }\n\n    // If this.room == null we are calling second time leave().\n    return Promise.reject(\n        new Error('The conference is has been already left'));\n};\n\n/**\n * Returns name of this conference.\n */\nJitsiConference.prototype.getName = function() {\n    return this.options.name;\n};\n\n/**\n * Returns the {@link JitsiConnection} used by this this conference.\n */\nJitsiConference.prototype.getConnection = function() {\n    return this.connection;\n};\n\n/**\n * Check if authentication is enabled for this conference.\n */\nJitsiConference.prototype.isAuthEnabled = function() {\n    return this.authEnabled;\n};\n\n/**\n * Check if user is logged in.\n */\nJitsiConference.prototype.isLoggedIn = function() {\n    return Boolean(this.authIdentity);\n};\n\n/**\n * Get authorized login.\n */\nJitsiConference.prototype.getAuthLogin = function() {\n    return this.authIdentity;\n};\n\n/**\n * Check if external authentication is enabled for this conference.\n */\nJitsiConference.prototype.isExternalAuthEnabled = function() {\n    return this.room && this.room.moderator.isExternalAuthEnabled();\n};\n\n/**\n * Get url for external authentication.\n * @param {boolean} [urlForPopup] if true then return url for login popup,\n *                                else url of login page.\n * @returns {Promise}\n */\nJitsiConference.prototype.getExternalAuthUrl = function(urlForPopup) {\n    return new Promise((resolve, reject) => {\n        if (!this.isExternalAuthEnabled()) {\n            reject();\n\n            return;\n        }\n        if (urlForPopup) {\n            this.room.moderator.getPopupLoginUrl(resolve, reject);\n        } else {\n            this.room.moderator.getLoginUrl(resolve, reject);\n        }\n    });\n};\n\n/**\n * Returns the local tracks of the given media type, or all local tracks if no\n * specific type is given.\n * @param {MediaType} [mediaType] Optional media type (audio or video).\n */\nJitsiConference.prototype.getLocalTracks = function(mediaType) {\n    let tracks = [];\n\n    if (this.rtc) {\n        tracks = this.rtc.getLocalTracks(mediaType);\n    }\n\n    return tracks;\n};\n\n/**\n * Obtains local audio track.\n * @return {JitsiLocalTrack|null}\n */\nJitsiConference.prototype.getLocalAudioTrack = function() {\n    return this.rtc ? this.rtc.getLocalAudioTrack() : null;\n};\n\n/**\n * Obtains local video track.\n * @return {JitsiLocalTrack|null}\n */\nJitsiConference.prototype.getLocalVideoTrack = function() {\n    return this.rtc ? this.rtc.getLocalVideoTrack() : null;\n};\n\n/**\n * Attaches a handler for events(For example - \"participant joined\".) in the\n * conference. All possible event are defined in JitsiConferenceEvents.\n * @param eventId the event ID.\n * @param handler handler for the event.\n *\n * Note: consider adding eventing functionality by extending an EventEmitter\n * impl, instead of rolling ourselves\n */\nJitsiConference.prototype.on = function(eventId, handler) {\n    if (this.eventEmitter) {\n        this.eventEmitter.on(eventId, handler);\n    }\n};\n\n/**\n * Removes event listener\n * @param eventId the event ID.\n * @param [handler] optional, the specific handler to unbind\n *\n * Note: consider adding eventing functionality by extending an EventEmitter\n * impl, instead of rolling ourselves\n */\nJitsiConference.prototype.off = function(eventId, handler) {\n    if (this.eventEmitter) {\n        this.eventEmitter.removeListener(eventId, handler);\n    }\n};\n\n// Common aliases for event emitter\nJitsiConference.prototype.addEventListener = JitsiConference.prototype.on;\nJitsiConference.prototype.removeEventListener = JitsiConference.prototype.off;\n\n/**\n * Receives notifications from other participants about commands / custom events\n * (sent by sendCommand or sendCommandOnce methods).\n * @param command {String} the name of the command\n * @param handler {Function} handler for the command\n */\nJitsiConference.prototype.addCommandListener = function(command, handler) {\n    if (this.room) {\n        this.room.addPresenceListener(command, handler);\n    }\n};\n\n/**\n  * Removes command  listener\n  * @param command {String} the name of the command\n  * @param handler {Function} handler to remove for the command\n  */\nJitsiConference.prototype.removeCommandListener = function(command, handler) {\n    if (this.room) {\n        this.room.removePresenceListener(command, handler);\n    }\n};\n\n/**\n * Sends text message to the other participants in the conference\n * @param message the text message.\n * @param elementName the element name to encapsulate the message.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.sendTextMessage = function(\n        message, elementName = 'body') {\n    if (this.room) {\n        const displayName = (this.room.getFromPresence('nick') || {}).value;\n\n        this.room.sendMessage(message, elementName, displayName);\n    }\n};\n\n/**\n * Send private text message to another participant of the conference\n * @param id the id of the participant to send a private message.\n * @param message the text message.\n * @param elementName the element name to encapsulate the message.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.sendPrivateTextMessage = function(\n        id, message, elementName = 'body') {\n    if (this.room) {\n        this.room.sendPrivateMessage(id, message, elementName);\n    }\n};\n\n/**\n * Send presence command.\n * @param name {String} the name of the command.\n * @param values {Object} with keys and values that will be sent.\n **/\nJitsiConference.prototype.sendCommand = function(name, values) {\n    if (this.room) {\n        this.room.addToPresence(name, values);\n        this.room.sendPresence();\n    } else {\n        logger.warn('Not sending a command, room not initialized.');\n    }\n\n};\n\n/**\n * Send presence command one time.\n * @param name {String} the name of the command.\n * @param values {Object} with keys and values that will be sent.\n **/\nJitsiConference.prototype.sendCommandOnce = function(name, values) {\n    this.sendCommand(name, values);\n    this.removeCommand(name);\n};\n\n/**\n * Removes presence command.\n * @param name {String} the name of the command.\n **/\nJitsiConference.prototype.removeCommand = function(name) {\n    if (this.room) {\n        this.room.removeFromPresence(name);\n    }\n};\n\n/**\n * Sets the display name for this conference.\n * @param name the display name to set\n */\nJitsiConference.prototype.setDisplayName = function(name) {\n    if (this.room) {\n        // remove previously set nickname\n        this.room.removeFromPresence('nick');\n\n        this.room.addToPresence('nick', {\n            attributes: { xmlns: 'http://jabber.org/protocol/nick' },\n            value: name\n        });\n        this.room.sendPresence();\n    }\n};\n\n/**\n * Set new subject for this conference. (available only for moderator)\n * @param {string} subject new subject\n */\nJitsiConference.prototype.setSubject = function(subject) {\n    if (this.room && this.isModerator()) {\n        this.room.setSubject(subject);\n    }\n};\n\n/**\n * Get a transcriber object for all current participants in this conference\n * @return {Transcriber} the transcriber object\n */\nJitsiConference.prototype.getTranscriber = function() {\n    if (this.transcriber === undefined) {\n        this.transcriber = new Transcriber();\n\n        // add all existing local audio tracks to the transcriber\n        const localAudioTracks = this.getLocalTracks(MediaType.AUDIO);\n\n        for (const localAudio of localAudioTracks) {\n            this.transcriber.addTrack(localAudio);\n        }\n\n        // and all remote audio tracks\n        const remoteAudioTracks = this.rtc.getRemoteTracks(MediaType.AUDIO);\n\n        for (const remoteTrack of remoteAudioTracks) {\n            this.transcriber.addTrack(remoteTrack);\n        }\n    }\n\n    return this.transcriber;\n};\n\n/**\n * Returns the transcription status.\n *\n * @returns {String} \"on\" or \"off\".\n */\nJitsiConference.prototype.getTranscriptionStatus = function() {\n    return this.room.transcriptionStatus;\n};\n\n/**\n * Adds JitsiLocalTrack object to the conference.\n * @param track the JitsiLocalTrack object.\n * @returns {Promise<JitsiLocalTrack>}\n * @throws {Error} if the specified track is a video track and there is already\n * another video track in the conference.\n */\nJitsiConference.prototype.addTrack = function(track) {\n    if (track.isVideoTrack()) {\n        // Ensure there's exactly 1 local video track in the conference.\n        const localVideoTrack = this.rtc.getLocalVideoTrack();\n\n        if (localVideoTrack) {\n            // Don't be excessively harsh and severe if the API client happens\n            // to attempt to add the same local video track twice.\n            if (track === localVideoTrack) {\n                return Promise.resolve(track);\n            }\n\n            return Promise.reject(new Error(\n                'cannot add second video track to the conference'));\n\n        }\n    }\n\n    return this.replaceTrack(null, track);\n};\n\n/**\n * Fires TRACK_AUDIO_LEVEL_CHANGED change conference event (for local tracks).\n * @param {number} audioLevel the audio level\n * @param {TraceablePeerConnection} [tpc]\n */\nJitsiConference.prototype._fireAudioLevelChangeEvent = function(\n        audioLevel,\n        tpc) {\n    const activeTpc = this.getActivePeerConnection();\n\n    // There will be no TraceablePeerConnection if audio levels do not come from\n    // a peerconnection. LocalStatsCollector.js measures audio levels using Web\n    // Audio Analyser API and emits local audio levels events through\n    // JitsiTrack.setAudioLevel, but does not provide TPC instance which is\n    // optional.\n    if (!tpc || activeTpc === tpc) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n            this.myUserId(), audioLevel);\n    }\n};\n\n/**\n * Fires TRACK_MUTE_CHANGED change conference event.\n * @param track the JitsiTrack object related to the event.\n */\nJitsiConference.prototype._fireMuteChangeEvent = function(track) {\n    // check if track was muted by focus and now is unmuted by user\n    if (this.isMutedByFocus && track.isAudioTrack() && !track.isMuted()) {\n        this.isMutedByFocus = false;\n\n        // unmute local user on server\n        this.room.muteParticipant(this.room.myroomjid, false);\n    }\n\n    let actorParticipant;\n\n    if (this.mutedByFocusActor) {\n        const actorId = Strophe.getResourceFromJid(this.mutedByFocusActor);\n\n        actorParticipant = this.participants[actorId];\n    }\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track, actorParticipant);\n};\n\n/**\n * Clear JitsiLocalTrack properties and listeners.\n * @param track the JitsiLocalTrack object.\n */\nJitsiConference.prototype.onLocalTrackRemoved = function(track) {\n    track._setConference(null);\n    this.rtc.removeLocalTrack(track);\n    track.removeEventListener(JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        track.muteHandler);\n    track.removeEventListener(JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        track.audioLevelHandler);\n\n    // send event for stopping screen sharing\n    // FIXME: we assume we have only one screen sharing track\n    // if we change this we need to fix this check\n    if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\n        this.statistics.sendScreenSharingEvent(false);\n    }\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track);\n};\n\n/**\n * Removes JitsiLocalTrack from the conference and performs\n * a new offer/answer cycle.\n * @param {JitsiLocalTrack} track\n * @returns {Promise}\n */\nJitsiConference.prototype.removeTrack = function(track) {\n    return this.replaceTrack(track, null);\n};\n\n/**\n * Replaces oldTrack with newTrack and performs a single offer/answer\n *  cycle after both operations are done.  Either oldTrack or newTrack\n *  can be null; replacing a valid 'oldTrack' with a null 'newTrack'\n *  effectively just removes 'oldTrack'\n * @param {JitsiLocalTrack} oldTrack the current stream in use to be replaced\n * @param {JitsiLocalTrack} newTrack the new stream to use\n * @returns {Promise} resolves when the replacement is finished\n */\nJitsiConference.prototype.replaceTrack = function(oldTrack, newTrack) {\n    // First do the removal of the oldTrack at the JitsiConference level\n    if (oldTrack) {\n        if (oldTrack.disposed) {\n            return Promise.reject(\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\n        }\n    }\n    if (newTrack) {\n        if (newTrack.disposed) {\n            return Promise.reject(\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\n        }\n    }\n\n    // Now replace the stream at the lower levels\n    return this._doReplaceTrack(oldTrack, newTrack)\n        .then(() => {\n            if (oldTrack) {\n                this.onLocalTrackRemoved(oldTrack);\n            }\n            if (newTrack) {\n                // Now handle the addition of the newTrack at the\n                // JitsiConference level\n                this._setupNewTrack(newTrack);\n            }\n\n            return Promise.resolve();\n        }, error => Promise.reject(new Error(error)));\n};\n\n/**\n * Replaces the tracks at the lower level by going through the Jingle session\n * and WebRTC peer connection. The method will resolve immediately if there is\n * currently no JingleSession started.\n * @param {JitsiLocalTrack|null} oldTrack the track to be removed during\n * the process or <tt>null</t> if the method should act as \"add track\"\n * @param {JitsiLocalTrack|null} newTrack the new track to be added or\n * <tt>null</tt> if the method should act as \"remove track\"\n * @return {Promise} resolved when the process is done or rejected with a string\n * which describes the error.\n * @private\n */\nJitsiConference.prototype._doReplaceTrack = function(oldTrack, newTrack) {\n    const replaceTrackPromises = [];\n\n    if (this.jvbJingleSession) {\n        replaceTrackPromises.push(\n            this.jvbJingleSession.replaceTrack(oldTrack, newTrack));\n    } else {\n        logger.info('_doReplaceTrack - no JVB JingleSession');\n    }\n\n    if (this.p2pJingleSession) {\n        replaceTrackPromises.push(\n            this.p2pJingleSession.replaceTrack(oldTrack, newTrack));\n    } else {\n        logger.info('_doReplaceTrack - no P2P JingleSession');\n    }\n\n    return Promise.all(replaceTrackPromises);\n};\n\n/**\n * Operations related to creating a new track\n * @param {JitsiLocalTrack} newTrack the new track being created\n */\nJitsiConference.prototype._setupNewTrack = function(newTrack) {\n    if (newTrack.isAudioTrack() || (newTrack.isVideoTrack()\n            && newTrack.videoType !== VideoType.DESKTOP)) {\n        // Report active device to statistics\n        const devices = RTC.getCurrentlyAvailableMediaDevices();\n        const device\n            = devices.find(\n                d =>\n                    d.kind === `${newTrack.getTrack().kind}input`\n                        && d.label === newTrack.getTrack().label);\n\n        if (device) {\n            Statistics.sendActiveDeviceListEvent(\n                RTC.getEventDataForActiveDevice(device));\n        }\n    }\n    if (newTrack.isVideoTrack()) {\n        this.removeCommand('videoType');\n        this.sendCommand('videoType', {\n            value: newTrack.videoType,\n            attributes: {\n                xmlns: 'http://jitsi.org/jitmeet/video'\n            }\n        });\n    }\n    this.rtc.addLocalTrack(newTrack);\n\n    // ensure that we're sharing proper \"is muted\" state\n    if (newTrack.isAudioTrack()) {\n        this.room.setAudioMute(newTrack.isMuted());\n    } else {\n        this.room.setVideoMute(newTrack.isMuted());\n    }\n\n    newTrack.muteHandler = this._fireMuteChangeEvent.bind(this, newTrack);\n    newTrack.audioLevelHandler = this._fireAudioLevelChangeEvent.bind(this);\n    newTrack.addEventListener(\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        newTrack.muteHandler);\n    newTrack.addEventListener(\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        newTrack.audioLevelHandler);\n\n    newTrack._setConference(this);\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_ADDED, newTrack);\n};\n\n/**\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to add\n * back the underlying WebRTC MediaStream to the PeerConnection (which has\n * removed on video mute).\n * @param {JitsiLocalTrack} track the local track that will be added as part of\n * the unmute operation.\n * @return {Promise} resolved when the process is done or rejected with a string\n * which describes the error.\n */\nJitsiConference.prototype._addLocalTrackAsUnmute = function(track) {\n    const addAsUnmutePromises = [];\n\n    if (this.jvbJingleSession) {\n        addAsUnmutePromises.push(this.jvbJingleSession.addTrackAsUnmute(track));\n    } else {\n        logger.info(\n            'Add local MediaStream as unmute -'\n                + ' no JVB Jingle session started yet');\n    }\n\n    if (this.p2pJingleSession) {\n        addAsUnmutePromises.push(this.p2pJingleSession.addTrackAsUnmute(track));\n    } else {\n        logger.info(\n            'Add local MediaStream as unmute -'\n                + ' no P2P Jingle session started yet');\n    }\n\n    return Promise.all(addAsUnmutePromises);\n};\n\n/**\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to remove\n * the underlying WebRTC MediaStream from the PeerConnection. The purpose of\n * that is to stop sending any data and turn off the HW camera device.\n * @param {JitsiLocalTrack} track the local track that will be removed.\n * @return {Promise}\n */\nJitsiConference.prototype._removeLocalTrackAsMute = function(track) {\n    const removeAsMutePromises = [];\n\n    if (this.jvbJingleSession) {\n        removeAsMutePromises.push(\n            this.jvbJingleSession.removeTrackAsMute(track));\n    } else {\n        logger.info(\n            'Remove local MediaStream - no JVB JingleSession started yet');\n    }\n    if (this.p2pJingleSession) {\n        removeAsMutePromises.push(\n            this.p2pJingleSession.removeTrackAsMute(track));\n    } else {\n        logger.info(\n            'Remove local MediaStream - no P2P JingleSession started yet');\n    }\n\n    return Promise.all(removeAsMutePromises);\n};\n\n/**\n * Get role of the local user.\n * @returns {string} user role: 'moderator' or 'none'\n */\nJitsiConference.prototype.getRole = function() {\n    return this.room.role;\n};\n\n/**\n * Returns whether or not the current conference has been joined as a hidden\n * user.\n *\n * @returns {boolean|null} True if hidden, false otherwise. Will return null if\n * no connection is active.\n */\nJitsiConference.prototype.isHidden = function() {\n    if (!this.connection) {\n        return null;\n    }\n\n    return Strophe.getDomainFromJid(this.connection.getJid())\n        === this.options.config.hiddenDomain;\n};\n\n/**\n * Check if local user is moderator.\n * @returns {boolean|null} true if local user is moderator, false otherwise. If\n * we're no longer in the conference room then <tt>null</tt> is returned.\n */\nJitsiConference.prototype.isModerator = function() {\n    return this.room ? this.room.isModerator() : null;\n};\n\n/**\n * Set password for the room.\n * @param {string} password new password for the room.\n * @returns {Promise}\n */\nJitsiConference.prototype.lock = function(password) {\n    if (!this.isModerator()) {\n        return Promise.reject(new Error('You are not moderator.'));\n    }\n\n    return new Promise((resolve, reject) => {\n        this.room.lockRoom(\n            password || '',\n            () => resolve(),\n            err => reject(err),\n            () => reject(JitsiConferenceErrors.PASSWORD_NOT_SUPPORTED));\n    });\n};\n\n/**\n * Remove password from the room.\n * @returns {Promise}\n */\nJitsiConference.prototype.unlock = function() {\n    return this.lock();\n};\n\n/**\n * Elects the participant with the given id to be the selected participant in\n * order to receive higher video quality (if simulcast is enabled).\n * Or cache it if channel is not created and send it once channel is available.\n * @param participantId the identifier of the participant\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n * @returns {void}\n */\nJitsiConference.prototype.selectParticipant = function(participantId) {\n    this.selectParticipants([ participantId ]);\n};\n\n/*\n * Elects participants with given ids to be the selected participants in order\n * to receive higher video quality (if simulcast is enabled). The argument\n * should be an array of participant id strings or an empty array; an error will\n * be thrown if a non-array is passed in. The error is thrown as a layer of\n * protection against passing an invalid argument, as the error will happen in\n * the bridge and may not be visible in the client.\n *\n * @param {Array<strings>} participantIds - An array of identifiers for\n * participants.\n * @returns {void}\n */\nJitsiConference.prototype.selectParticipants = function(participantIds) {\n    if (!Array.isArray(participantIds)) {\n        throw new Error('Invalid argument; participantIds must be an array.');\n    }\n\n    this.rtc.selectEndpoints(participantIds);\n};\n\n/**\n * Elects the participant with the given id to be the pinned participant in\n * order to always receive video for this participant (even when last n is\n * enabled).\n * @param participantId the identifier of the participant\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n */\nJitsiConference.prototype.pinParticipant = function(participantId) {\n    this.rtc.pinEndpoint(participantId);\n};\n\n/**\n * Obtains the current value for \"lastN\". See {@link setLastN} for more info.\n * @returns {number}\n */\nJitsiConference.prototype.getLastN = function() {\n    return this.rtc.getLastN();\n};\n\n/**\n * Selects a new value for \"lastN\". The requested amount of videos are going\n * to be delivered after the value is in effect. Set to -1 for unlimited or\n * all available videos.\n * @param lastN the new number of videos the user would like to receive.\n * @throws Error or RangeError if the given value is not a number or is smaller\n * than -1.\n */\nJitsiConference.prototype.setLastN = function(lastN) {\n    if (!Number.isInteger(lastN) && !Number.parseInt(lastN, 10)) {\n        throw new Error(`Invalid value for lastN: ${lastN}`);\n    }\n    const n = Number(lastN);\n\n    if (n < -1) {\n        throw new RangeError('lastN cannot be smaller than -1');\n    }\n    this.rtc.setLastN(n);\n\n    // If the P2P session is not fully established yet, we wait until it gets\n    // established.\n    if (this.p2pJingleSession) {\n        const isVideoActive = n !== 0;\n\n        this.p2pJingleSession\n            .setMediaTransferActive(true, isVideoActive)\n            .catch(error => {\n                logger.error(\n                    `Failed to adjust video transfer status (${isVideoActive})`,\n                    error);\n            });\n    }\n};\n\n/**\n * Checks if the participant given by participantId is currently included in\n * the last N.\n * @param {string} participantId the identifier of the participant we would\n * like to check.\n * @return {boolean} true if the participant with id is in the last N set or\n * if there's no last N set, false otherwise.\n * @deprecated this method should never be used to figure out the UI, but\n * {@link ParticipantConnectionStatus} should be used instead.\n */\nJitsiConference.prototype.isInLastN = function(participantId) {\n    return this.rtc.isInLastN(participantId);\n};\n\n/**\n * @return Array<JitsiParticipant> an array of all participants in this\n * conference.\n */\nJitsiConference.prototype.getParticipants = function() {\n    return Object.keys(this.participants).map(function(key) {\n        return this.participants[key];\n    }, this);\n};\n\n/**\n * Returns the number of participants in the conference, including the local\n * participant.\n * @param countHidden {boolean} Whether or not to include hidden participants\n * in the count. Default: false.\n **/\nJitsiConference.prototype.getParticipantCount\n    = function(countHidden = false) {\n\n        let participants = this.getParticipants();\n\n        if (!countHidden) {\n            participants = participants.filter(p => !p.isHidden());\n        }\n\n        // Add one for the local participant.\n        return participants.length + 1;\n    };\n\n/**\n * @returns {JitsiParticipant} the participant in this conference with the\n * specified id (or undefined if there isn't one).\n * @param id the id of the participant.\n */\nJitsiConference.prototype.getParticipantById = function(id) {\n    return this.participants[id];\n};\n\n/**\n * Kick participant from this conference.\n * @param {string} id id of the participant to kick\n */\nJitsiConference.prototype.kickParticipant = function(id) {\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    this.room.kick(participant.getJid());\n};\n\n/**\n * Maybe clears the timeout which emits {@link ACTION_JINGLE_SI_TIMEOUT}\n * analytics event.\n * @private\n */\nJitsiConference.prototype._maybeClearSITimeout = function() {\n    if (this._sessionInitiateTimeout\n            && (this.jvbJingleSession || this.getParticipantCount() < 2)) {\n        window.clearTimeout(this._sessionInitiateTimeout);\n        this._sessionInitiateTimeout = null;\n    }\n};\n\n/**\n * Sets a timeout which will emit {@link ACTION_JINGLE_SI_TIMEOUT} analytics\n * event.\n * @private\n */\nJitsiConference.prototype._maybeSetSITimeout = function() {\n    // Jicofo is supposed to invite if there are at least 2 participants\n    if (!this.jvbJingleSession\n            && this.getParticipantCount() >= 2\n            && !this._sessionInitiateTimeout) {\n        this._sessionInitiateTimeout = window.setTimeout(() => {\n            this._sessionInitiateTimeout = null;\n            Statistics.sendAnalytics(createJingleEvent(\n                ACTION_JINGLE_SI_TIMEOUT,\n                {\n                    p2p: false,\n                    value: JINGLE_SI_TIMEOUT\n                }));\n        }, JINGLE_SI_TIMEOUT);\n    }\n};\n\n/**\n * Mutes a participant.\n * @param {string} id The id of the participant to mute.\n */\nJitsiConference.prototype.muteParticipant = function(id) {\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    this.room.muteParticipant(participant.getJid(), true);\n};\n\n/* eslint-disable max-params */\n\n/**\n * Notifies this JitsiConference that a new member has joined its chat room.\n *\n * FIXME This should NOT be exposed!\n *\n * @param jid the jid of the participant in the MUC\n * @param nick the display name of the participant\n * @param role the role of the participant in the MUC\n * @param isHidden indicates if this is a hidden participant (system\n * participant for example a recorder).\n * @param statsID the participant statsID (optional)\n * @param status the initial status if any\n * @param identity the member identity, if any\n * @param botType the member botType, if any\n */\nJitsiConference.prototype.onMemberJoined = function(\n        jid, nick, role, isHidden, statsID, status, identity, botType) {\n    const id = Strophe.getResourceFromJid(jid);\n\n    if (id === 'focus' || this.myUserId() === id) {\n        return;\n    }\n\n    const participant\n        = new JitsiParticipant(jid, this, nick, isHidden, statsID, status, identity);\n\n    participant._role = role;\n    participant._botType = botType;\n    this.participants[id] = participant;\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.USER_JOINED,\n        id,\n        participant);\n\n    this._updateFeatures(participant);\n\n    this._maybeStartOrStopP2P();\n    this._maybeSetSITimeout();\n};\n\n/* eslint-enable max-params */\n\n/**\n * Updates features for a participant.\n * @param {JitsiParticipant} participant - The participant to query for features.\n * @returns {void}\n * @private\n */\nJitsiConference.prototype._updateFeatures = function(participant) {\n    participant.getFeatures()\n        .then(features => {\n            participant._supportsDTMF = features.has('urn:xmpp:jingle:dtmf:0');\n            this.updateDTMFSupport();\n\n            if (features.has('http://jitsi.org/protocol/jigasi')) {\n                participant.setProperty('features_jigasi', true);\n            }\n        })\n        .catch(() => false);\n};\n\n/**\n * Get notified when member bot type had changed.\n * @param jid the member jid\n * @param botType the new botType value\n * @private\n */\nJitsiConference.prototype._onMemberBotTypeChanged = function(jid, botType) {\n\n    // find the participant and mark it as non bot, as the real one will join\n    // in a moment\n    const peers = this.getParticipants();\n    const botParticipant = peers.find(p => p.getJid() === jid);\n\n    if (botParticipant) {\n        botParticipant._botType = botType;\n        const id = Strophe.getResourceFromJid(jid);\n\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.BOT_TYPE_CHANGED,\n            id,\n            botType);\n    }\n\n    // if botType changed to undefined, botType was removed, in case of\n    // poltergeist mode this is the moment when the poltergeist had exited and\n    // the real participant had already replaced it.\n    // In this case we can check and try p2p\n    if (!botParticipant._botType) {\n        this._maybeStartOrStopP2P();\n    }\n};\n\nJitsiConference.prototype.onMemberLeft = function(jid) {\n    const id = Strophe.getResourceFromJid(jid);\n\n    if (id === 'focus' || this.myUserId() === id) {\n        return;\n    }\n\n    const participant = this.participants[id];\n\n    delete this.participants[id];\n\n    const removedTracks = this.rtc.removeRemoteTracks(id);\n\n    removedTracks.forEach(\n        track =>\n            this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track));\n\n    // there can be no participant in case the member that left is focus\n    if (participant) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.USER_LEFT, id, participant);\n    }\n\n    this._maybeStartOrStopP2P(true /* triggered by user left event */);\n    this._maybeClearSITimeout();\n};\n\n/**\n * Designates an event indicating that we were kicked from the XMPP MUC.\n * @param {boolean} isSelfPresence - whether it is for local participant\n * or another participant.\n * @param {string} actorId - the id of the participant who was initiator\n * of the kick.\n * @param {string?} kickedParticipantId - when it is not a kick for local participant,\n * this is the id of the participant which was kicked.\n */\nJitsiConference.prototype.onMemberKicked = function(isSelfPresence, actorId, kickedParticipantId) {\n    const actorParticipant = this.participants[actorId];\n\n    if (isSelfPresence) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.KICKED, actorParticipant);\n\n        this.leave();\n\n        return;\n    }\n\n    const kickedParticipant = this.participants[kickedParticipantId];\n\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.PARTICIPANT_KICKED, actorParticipant, kickedParticipant);\n};\n\n/**\n * Method called on local MUC role change.\n * @param {string} role the name of new user's role as defined by XMPP MUC.\n */\nJitsiConference.prototype.onLocalRoleChanged = function(role) {\n    // Emit role changed for local  JID\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.USER_ROLE_CHANGED, this.myUserId(), role);\n};\n\nJitsiConference.prototype.onUserRoleChanged = function(jid, role) {\n    const id = Strophe.getResourceFromJid(jid);\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    participant._role = role;\n    this.eventEmitter.emit(JitsiConferenceEvents.USER_ROLE_CHANGED, id, role);\n};\n\nJitsiConference.prototype.onDisplayNameChanged = function(jid, displayName) {\n    const id = Strophe.getResourceFromJid(jid);\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n\n    if (participant._displayName === displayName) {\n        return;\n    }\n\n    participant._displayName = displayName;\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\n        id,\n        displayName);\n};\n\n/**\n * Notifies this JitsiConference that a JitsiRemoteTrack was added into\n * the conference.\n *\n * @param {JitsiRemoteTrack} track the JitsiRemoteTrack which was added to this\n * JitsiConference\n */\nJitsiConference.prototype.onRemoteTrackAdded = function(track) {\n    if (track.isP2P && !this.isP2PActive()) {\n        logger.info(\n            'Trying to add remote P2P track, when not in P2P - IGNORED');\n\n        return;\n    } else if (!track.isP2P && this.isP2PActive()) {\n        logger.info(\n            'Trying to add remote JVB track, when in P2P - IGNORED');\n\n        return;\n    }\n\n    const id = track.getParticipantId();\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        logger.error(`No participant found for id: ${id}`);\n\n        return;\n    }\n\n    // Add track to JitsiParticipant.\n    participant._tracks.push(track);\n\n    if (this.transcriber) {\n        this.transcriber.addTrack(track);\n    }\n\n    const emitter = this.eventEmitter;\n\n    track.addEventListener(\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        () => emitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track));\n    track.addEventListener(\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        (audioLevel, tpc) => {\n            const activeTPC = this.getActivePeerConnection();\n\n            if (activeTPC === tpc) {\n                emitter.emit(\n                    JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n                    id,\n                    audioLevel);\n            }\n        }\n    );\n\n    emitter.emit(JitsiConferenceEvents.TRACK_ADDED, track);\n};\n\n/**\n * Callback called by the Jingle plugin when 'session-answer' is received.\n * @param {JingleSessionPC} session the Jingle session for which an answer was\n * received.\n * @param {jQuery} answer a jQuery selector pointing to 'jingle' IQ element\n */\n// eslint-disable-next-line no-unused-vars\nJitsiConference.prototype.onCallAccepted = function(session, answer) {\n    if (this.p2pJingleSession === session) {\n        logger.info('P2P setAnswer');\n        this.p2pJingleSession.setAnswer(answer);\n    }\n};\n\n/**\n * Callback called by the Jingle plugin when 'transport-info' is received.\n * @param {JingleSessionPC} session the Jingle session for which the IQ was\n * received\n * @param {jQuery} transportInfo a jQuery selector pointing to 'jingle' IQ\n * element\n */\n// eslint-disable-next-line no-unused-vars\nJitsiConference.prototype.onTransportInfo = function(session, transportInfo) {\n    if (this.p2pJingleSession === session) {\n        logger.info('P2P addIceCandidates');\n        this.p2pJingleSession.addIceCandidates(transportInfo);\n    }\n};\n\n/**\n * Notifies this JitsiConference that a JitsiRemoteTrack was removed from\n * the conference.\n *\n * @param {JitsiRemoteTrack} removedTrack\n */\nJitsiConference.prototype.onRemoteTrackRemoved = function(removedTrack) {\n    this.getParticipants().forEach(participant => {\n        const tracks = participant.getTracks();\n\n        for (let i = 0; i < tracks.length; i++) {\n            if (tracks[i] === removedTrack) {\n                // Since the tracks have been compared and are\n                // considered equal the result of splice can be ignored.\n                participant._tracks.splice(i, 1);\n\n                this.eventEmitter.emit(\n                    JitsiConferenceEvents.TRACK_REMOVED, removedTrack);\n\n                if (this.transcriber) {\n                    this.transcriber.removeTrack(removedTrack);\n                }\n\n                break;\n            }\n        }\n    }, this);\n};\n\n/**\n * Handles an incoming call event for the P2P jingle session.\n */\nJitsiConference.prototype._onIncomingCallP2P = function(\n        jingleSession,\n        jingleOffer) {\n\n    let rejectReason;\n\n    if (!browser.supportsP2P()) {\n        rejectReason = {\n            reason: 'unsupported-applications',\n            reasonDescription: 'P2P not supported',\n            errorMsg: 'This client does not support P2P connections'\n        };\n    } else if (!this.isP2PEnabled() && !this.isP2PTestModeEnabled()) {\n        rejectReason = {\n            reason: 'decline',\n            reasonDescription: 'P2P disabled',\n            errorMsg: 'P2P mode disabled in the configuration'\n        };\n    } else if (this.p2pJingleSession) {\n        // Reject incoming P2P call (already in progress)\n        rejectReason = {\n            reason: 'busy',\n            reasonDescription: 'P2P already in progress',\n            errorMsg: 'Duplicated P2P \"session-initiate\"'\n        };\n    } else if (!this._shouldBeInP2PMode()) {\n        rejectReason = {\n            reason: 'decline',\n            reasonDescription: 'P2P requirements not met',\n            errorMsg: 'Received P2P \"session-initiate\" when should not be in P2P mode'\n        };\n        Statistics.sendAnalytics(createJingleEvent(ACTION_P2P_DECLINED));\n    }\n\n    if (rejectReason) {\n        this._rejectIncomingCall(jingleSession, rejectReason);\n    } else {\n        this._acceptP2PIncomingCall(jingleSession, jingleOffer);\n    }\n};\n\n/**\n * Handles an incoming call event.\n */\nJitsiConference.prototype.onIncomingCall = function(\n        jingleSession,\n        jingleOffer,\n        now) {\n    // Handle incoming P2P call\n    if (jingleSession.isP2P) {\n        this._onIncomingCallP2P(jingleSession, jingleOffer);\n    } else {\n        if (!this.room.isFocus(jingleSession.remoteJid)) {\n            const description = 'Rejecting session-initiate from non-focus.';\n\n            this._rejectIncomingCall(\n                jingleSession, {\n                    reason: 'security-error',\n                    reasonDescription: description,\n                    errorMsg: description\n                });\n\n            return;\n        }\n        this._acceptJvbIncomingCall(jingleSession, jingleOffer, now);\n    }\n};\n\n/**\n * Accepts an incoming call event for the JVB jingle session.\n */\nJitsiConference.prototype._acceptJvbIncomingCall = function(\n        jingleSession,\n        jingleOffer,\n        now) {\n\n    // Accept incoming call\n    this.jvbJingleSession = jingleSession;\n    this.room.connectionTimes['session.initiate'] = now;\n\n    if (this.wasStopped) {\n        Statistics.sendAnalyticsAndLog(\n            createJingleEvent(ACTION_JINGLE_RESTART, { p2p: false }));\n    }\n\n    const serverRegion\n        = $(jingleOffer)\n            .find('>bridge-session[xmlns=\"http://jitsi.org/protocol/focus\"]')\n            .attr('region');\n\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.SERVER_REGION_CHANGED,\n        serverRegion);\n\n    this._maybeClearSITimeout();\n    Statistics.sendAnalytics(createJingleEvent(\n        ACTION_JINGLE_SI_RECEIVED,\n        {\n            p2p: false,\n            value: now\n        }));\n    try {\n        jingleSession.initialize(this.room, this.rtc, this.options.config);\n    } catch (error) {\n        GlobalOnErrorHandler.callErrorHandler(error);\n    }\n\n    // Open a channel with the videobridge.\n    this._setBridgeChannel(jingleOffer, jingleSession.peerconnection);\n\n    // Add local tracks to the session\n    try {\n        jingleSession.acceptOffer(\n            jingleOffer,\n            () => {\n                // If for any reason invite for the JVB session arrived after\n                // the P2P has been established already the media transfer needs\n                // to be turned off here.\n                if (this.isP2PActive() && this.jvbJingleSession) {\n                    this._suspendMediaTransferForJvbConnection();\n                }\n            },\n            error => {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error(\n                    'Failed to accept incoming Jingle session', error);\n            },\n            this.getLocalTracks()\n        );\n\n        // Start callstats as soon as peerconnection is initialized,\n        // do not wait for XMPPEvents.PEERCONNECTION_READY, as it may never\n        // happen in case if user doesn't have or denied permission to\n        // both camera and microphone.\n        logger.info('Starting CallStats for JVB connection...');\n        this.statistics.startCallStats(\n            this.jvbJingleSession.peerconnection,\n            'jitsi' /* Remote user ID for JVB is 'jitsi' */);\n        this.statistics.startRemoteStats(this.jvbJingleSession.peerconnection);\n    } catch (e) {\n        GlobalOnErrorHandler.callErrorHandler(e);\n        logger.error(e);\n    }\n};\n\n/**\n * Sets the BridgeChannel.\n *\n * @param {jQuery} offerIq a jQuery selector pointing to the jingle element of\n * the offer IQ which may carry the WebSocket URL for the 'websocket'\n * BridgeChannel mode.\n * @param {TraceablePeerConnection} pc the peer connection which will be used\n * to listen for new WebRTC Data Channels (in the 'datachannel' mode).\n */\nJitsiConference.prototype._setBridgeChannel = function(offerIq, pc) {\n    let wsUrl = null;\n    const webSocket\n        = $(offerIq)\n            .find('>content>transport>web-socket')\n            .first();\n\n    if (webSocket.length === 1) {\n        wsUrl = webSocket[0].getAttribute('url');\n    }\n\n    let bridgeChannelType;\n\n    switch (this.options.config.openBridgeChannel) {\n    case 'datachannel':\n    case true:\n    case undefined:\n        bridgeChannelType = 'datachannel';\n        break;\n    case 'websocket':\n        bridgeChannelType = 'websocket';\n        break;\n    }\n\n    if (bridgeChannelType === 'datachannel'\n        && !browser.supportsDataChannels()) {\n        bridgeChannelType = 'websocket';\n    }\n\n    if (bridgeChannelType === 'datachannel') {\n        this.rtc.initializeBridgeChannel(pc, null);\n    } else if (bridgeChannelType === 'websocket' && wsUrl) {\n        this.rtc.initializeBridgeChannel(null, wsUrl);\n    }\n};\n\n/**\n * Rejects incoming Jingle call.\n * @param {JingleSessionPC} jingleSession the session instance to be rejected.\n * @param {object} [options]\n * @param {string} options.reason the name of the reason element as defined\n * by Jingle\n * @param {string} options.reasonDescription the reason description which will\n * be included in Jingle 'session-terminate' message.\n * @param {string} options.errorMsg an error message to be logged on global\n * error handler\n * @private\n */\nJitsiConference.prototype._rejectIncomingCall = function(\n        jingleSession,\n        options) {\n    if (options && options.errorMsg) {\n        GlobalOnErrorHandler.callErrorHandler(new Error(options.errorMsg));\n    }\n\n    // Terminate the jingle session with a reason\n    jingleSession.terminate(\n        null /* success callback => we don't care */,\n        error => {\n            logger.warn(\n                'An error occurred while trying to terminate'\n                    + ' invalid Jingle session', error);\n        }, {\n            reason: options && options.reason,\n            reasonDescription: options && options.reasonDescription,\n            sendSessionTerminate: true\n        });\n};\n\n/**\n * Handles the call ended event.\n * XXX is this due to the remote side terminating the Jingle session?\n *\n * @param {JingleSessionPC} jingleSession the jingle session which has been\n * terminated.\n * @param {String} reasonCondition the Jingle reason condition.\n * @param {String|null} reasonText human readable reason text which may provide\n * more details about why the call has been terminated.\n */\nJitsiConference.prototype.onCallEnded = function(\n        jingleSession,\n        reasonCondition,\n        reasonText) {\n    logger.info(\n        `Call ended: ${reasonCondition} - ${reasonText} P2P ?${\n            jingleSession.isP2P}`);\n    if (jingleSession === this.jvbJingleSession) {\n        this.wasStopped = true;\n\n        Statistics.sendAnalytics(\n            createJingleEvent(ACTION_JINGLE_TERMINATE, { p2p: false }));\n\n        // Stop the stats\n        if (this.statistics) {\n            this.statistics.stopRemoteStats(\n                this.jvbJingleSession.peerconnection);\n            logger.info('Stopping JVB CallStats');\n            this.statistics.stopCallStats(\n                this.jvbJingleSession.peerconnection);\n        }\n\n        // Current JVB JingleSession is no longer valid, so set it to null\n        this.jvbJingleSession = null;\n\n        // Let the RTC service do any cleanups\n        this.rtc.onCallEnded();\n    } else if (jingleSession === this.p2pJingleSession) {\n        // It's the responder who decides to enforce JVB mode, so that both\n        // initiator and responder are aware if it was intentional.\n        if (reasonCondition === 'decline' && reasonText === 'force JVB121') {\n            logger.info('In forced JVB 121 mode...');\n            Statistics.analytics.addPermanentProperties({ forceJvb121: true });\n        } else if (reasonCondition === 'connectivity-error'\n            && reasonText === 'ICE FAILED') {\n            // It can happen that the other peer detects ICE failed and\n            // terminates the session, before we get the event on our side.\n            // But we are able to parse the reason and mark it here.\n            Statistics.analytics.addPermanentProperties({ p2pFailed: true });\n        }\n        this._stopP2PSession();\n    } else {\n        logger.error(\n            'Received onCallEnded for invalid session',\n            jingleSession.sid,\n            jingleSession.remoteJid,\n            reasonCondition,\n            reasonText);\n    }\n};\n\n/**\n * Handles the suspend detected event. Leaves the room and fires suspended.\n * @param {JingleSessionPC} jingleSession\n */\nJitsiConference.prototype.onSuspendDetected = function(jingleSession) {\n    if (!jingleSession.isP2P) {\n        this.leave();\n        this.eventEmitter.emit(JitsiConferenceEvents.SUSPEND_DETECTED);\n    }\n};\n\nJitsiConference.prototype.updateDTMFSupport = function() {\n    let somebodySupportsDTMF = false;\n    const participants = this.getParticipants();\n\n    // check if at least 1 participant supports DTMF\n    for (let i = 0; i < participants.length; i += 1) {\n        if (participants[i].supportsDTMF()) {\n            somebodySupportsDTMF = true;\n            break;\n        }\n    }\n    if (somebodySupportsDTMF !== this.somebodySupportsDTMF) {\n        this.somebodySupportsDTMF = somebodySupportsDTMF;\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.DTMF_SUPPORT_CHANGED,\n            somebodySupportsDTMF);\n    }\n};\n\n/**\n * Allows to check if there is at least one user in the conference\n * that supports DTMF.\n * @returns {boolean} true if somebody supports DTMF, false otherwise\n */\nJitsiConference.prototype.isDTMFSupported = function() {\n    return this.somebodySupportsDTMF;\n};\n\n/**\n * Returns the local user's ID\n * @return {string} local user's ID\n */\nJitsiConference.prototype.myUserId = function() {\n    return (\n        this.room && this.room.myroomjid\n            ? Strophe.getResourceFromJid(this.room.myroomjid)\n            : null);\n};\n\nJitsiConference.prototype.sendTones = function(tones, duration, pause) {\n    if (!this.dtmfManager) {\n        const peerConnection = this.getActivePeerConnection();\n\n        if (!peerConnection) {\n            logger.warn('cannot sendTones: no peer connection');\n\n            return;\n        }\n\n        const localAudio = this.getLocalAudioTrack();\n\n        if (!localAudio) {\n            logger.warn('cannot sendTones: no local audio stream');\n\n            return;\n        }\n        this.dtmfManager = new JitsiDTMFManager(localAudio, peerConnection);\n    }\n\n    this.dtmfManager.sendTones(tones, duration, pause);\n};\n\n/**\n * Starts recording the current conference.\n *\n * @param {Object} options - Configuration for the recording. See\n * {@link Chatroom#startRecording} for more info.\n * @returns {Promise} See {@link Chatroom#startRecording} for more info.\n */\nJitsiConference.prototype.startRecording = function(options) {\n    if (this.room) {\n        return this.recordingManager.startRecording(options);\n    }\n\n    return Promise.reject(new Error('The conference is not created yet!'));\n};\n\n/**\n * Stop a recording session.\n *\n * @param {string} sessionID - The ID of the recording session that\n * should be stopped.\n * @returns {Promise} See {@link Chatroom#stopRecording} for more info.\n */\nJitsiConference.prototype.stopRecording = function(sessionID) {\n    if (this.room) {\n        return this.recordingManager.stopRecording(sessionID);\n    }\n\n    return Promise.reject(new Error('The conference is not created yet!'));\n};\n\n/**\n * Returns true if the SIP calls are supported and false otherwise\n */\nJitsiConference.prototype.isSIPCallingSupported = function() {\n    if (this.room) {\n        return this.room.isSIPCallingSupported();\n    }\n\n    return false;\n};\n\n/**\n * Dials a number.\n * @param number the number\n */\nJitsiConference.prototype.dial = function(number) {\n    if (this.room) {\n        return this.room.dial(number);\n    }\n\n    return new Promise((resolve, reject) => {\n        reject(new Error('The conference is not created yet!'));\n    });\n};\n\n/**\n * Hangup an existing call\n */\nJitsiConference.prototype.hangup = function() {\n    if (this.room) {\n        return this.room.hangup();\n    }\n\n    return new Promise((resolve, reject) => {\n        reject(new Error('The conference is not created yet!'));\n    });\n};\n\n/**\n * Starts the transcription service.\n */\nJitsiConference.prototype.startTranscriber = function() {\n    return this.dial('jitsi_meet_transcribe');\n};\n\n\n/**\n * Stops the transcription service.\n */\nJitsiConference.prototype.stopTranscriber = JitsiConference.prototype.hangup;\n\n/**\n * Returns the phone number for joining the conference.\n */\nJitsiConference.prototype.getPhoneNumber = function() {\n    if (this.room) {\n        return this.room.getPhoneNumber();\n    }\n\n    return null;\n};\n\n/**\n * Returns the pin for joining the conference with phone.\n */\nJitsiConference.prototype.getPhonePin = function() {\n    if (this.room) {\n        return this.room.getPhonePin();\n    }\n\n    return null;\n};\n\n/**\n * Will return P2P or JVB <tt>TraceablePeerConnection</tt> depending on\n * which connection is currently active.\n *\n * @return {TraceablePeerConnection|null} null if there isn't any active\n * <tt>TraceablePeerConnection</tt> currently available.\n * @public (FIXME how to make package local ?)\n */\nJitsiConference.prototype.getActivePeerConnection = function() {\n    if (this.isP2PActive()) {\n        return this.p2pJingleSession.peerconnection;\n    }\n\n    return this.jvbJingleSession ? this.jvbJingleSession.peerconnection : null;\n};\n\n/**\n * Returns the connection state for the current room. Its ice connection state\n * for its session.\n * NOTE that \"completed\" ICE state which can appear on the P2P connection will\n * be converted to \"connected\".\n * @return {string|null} ICE state name or <tt>null</tt> if there is no active\n * peer connection at this time.\n */\nJitsiConference.prototype.getConnectionState = function() {\n    const peerConnection = this.getActivePeerConnection();\n\n    return peerConnection ? peerConnection.getConnectionState() : null;\n};\n\n/**\n * Make all new participants mute their audio/video on join.\n * @param policy {Object} object with 2 boolean properties for video and audio:\n * @param {boolean} audio if audio should be muted.\n * @param {boolean} video if video should be muted.\n */\nJitsiConference.prototype.setStartMutedPolicy = function(policy) {\n    if (!this.isModerator()) {\n        return;\n    }\n    this.startMutedPolicy = policy;\n    this.room.removeFromPresence('startmuted');\n    this.room.addToPresence('startmuted', {\n        attributes: {\n            audio: policy.audio,\n            video: policy.video,\n            xmlns: 'http://jitsi.org/jitmeet/start-muted'\n        }\n    });\n    this.room.sendPresence();\n};\n\n/**\n * Returns current start muted policy\n * @returns {Object} with 2 properties - audio and video.\n */\nJitsiConference.prototype.getStartMutedPolicy = function() {\n    return this.startMutedPolicy;\n};\n\n/**\n * Check if audio is muted on join.\n */\nJitsiConference.prototype.isStartAudioMuted = function() {\n    return this.startAudioMuted;\n};\n\n/**\n * Check if video is muted on join.\n */\nJitsiConference.prototype.isStartVideoMuted = function() {\n    return this.startVideoMuted;\n};\n\n/**\n * Get object with internal logs.\n */\nJitsiConference.prototype.getLogs = function() {\n    const data = this.xmpp.getJingleLog();\n\n    const metadata = {};\n\n    metadata.time = new Date();\n    metadata.url = window.location.href;\n    metadata.ua = navigator.userAgent;\n\n    const log = this.xmpp.getXmppLog();\n\n    if (log) {\n        metadata.xmpp = log;\n    }\n\n    data.metadata = metadata;\n\n    return data;\n};\n\n/**\n * Returns measured connectionTimes.\n */\nJitsiConference.prototype.getConnectionTimes = function() {\n    return this.room.connectionTimes;\n};\n\n/**\n * Sets a property for the local participant.\n */\nJitsiConference.prototype.setLocalParticipantProperty = function(name, value) {\n    this.sendCommand(`jitsi_participant_${name}`, { value });\n};\n\n/**\n *  Removes a property for the local participant and sends the updated presence.\n */\nJitsiConference.prototype.removeLocalParticipantProperty = function(name) {\n    this.removeCommand(`jitsi_participant_${name}`);\n    this.room.sendPresence();\n};\n\n/**\n * Gets a local participant property.\n *\n * @return value of the local participant property if the tagName exists in the\n * list of properties, otherwise returns undefined.\n */\nJitsiConference.prototype.getLocalParticipantProperty = function(name) {\n    const property = this.room.presMap.nodes.find(prop =>\n        prop.tagName === `jitsi_participant_${name}`\n    );\n\n    return property ? property.value : undefined;\n};\n\n/**\n * Sends the given feedback through CallStats if enabled.\n *\n * @param overallFeedback an integer between 1 and 5 indicating the\n * user feedback\n * @param detailedFeedback detailed feedback from the user. Not yet used\n * @returns {Promise} Resolves if feedback is submitted successfully.\n */\nJitsiConference.prototype.sendFeedback = function(\n        overallFeedback,\n        detailedFeedback) {\n    return this.statistics.sendFeedback(overallFeedback, detailedFeedback);\n};\n\n/**\n * Returns true if the callstats integration is enabled, otherwise returns\n * false.\n *\n * @returns true if the callstats integration is enabled, otherwise returns\n * false.\n */\nJitsiConference.prototype.isCallstatsEnabled = function() {\n    return this.statistics.isCallstatsEnabled();\n};\n\n\n/**\n * Handles track attached to container (Calls associateStreamWithVideoTag method\n * from statistics module)\n * @param {JitsiLocalTrack|JitsiRemoteTrack} track the track\n * @param container the container\n */\nJitsiConference.prototype._onTrackAttach = function(track, container) {\n    const isLocal = track.isLocal();\n    let ssrc = null;\n    const isP2P = track.isP2P;\n    const remoteUserId = isP2P ? track.getParticipantId() : 'jitsi';\n    const peerConnection\n        = isP2P\n            ? this.p2pJingleSession && this.p2pJingleSession.peerconnection\n            : this.jvbJingleSession && this.jvbJingleSession.peerconnection;\n\n    if (isLocal) {\n        // Local tracks have SSRC stored on per peer connection basis\n        if (peerConnection) {\n            ssrc = peerConnection.getLocalSSRC(track);\n        }\n    } else {\n        ssrc = track.getSSRC();\n    }\n    if (!container.id || !ssrc || !peerConnection) {\n        return;\n    }\n\n    this.statistics.associateStreamWithVideoTag(\n        peerConnection,\n        ssrc,\n        isLocal,\n        remoteUserId,\n        track.getUsageLabel(),\n        container.id);\n};\n\n/**\n * Logs an \"application log\" message.\n * @param message {string} The message to log. Note that while this can be a\n * generic string, the convention used by lib-jitsi-meet and jitsi-meet is to\n * log valid JSON strings, with an \"id\" field used for distinguishing between\n * message types. E.g.: {id: \"recorder_status\", status: \"off\"}\n */\nJitsiConference.prototype.sendApplicationLog = function(message) {\n    Statistics.sendLog(message);\n};\n\n/**\n * Checks if the user identified by given <tt>mucJid</tt> is the conference\n * focus.\n * @param mucJid the full MUC address of the user to be checked.\n * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus,\n * <tt>false</tt> when is not. <tt>null</tt> if we're not in the MUC anymore and\n * are unable to figure out the status or if given <tt>mucJid</tt> is invalid.\n */\nJitsiConference.prototype._isFocus = function(mucJid) {\n    return this.room ? this.room.isFocus(mucJid) : null;\n};\n\n/**\n * Fires CONFERENCE_FAILED event with INCOMPATIBLE_SERVER_VERSIONS parameter\n */\nJitsiConference.prototype._fireIncompatibleVersionsEvent = function() {\n    this.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.INCOMPATIBLE_SERVER_VERSIONS);\n};\n\n/**\n * Sends a message via the data channel.\n * @param to {string} the id of the endpoint that should receive the message.\n * If \"\" the message will be sent to all participants.\n * @param payload {object} the payload of the message.\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.sendEndpointMessage = function(to, payload) {\n    this.rtc.sendChannelMessage(to, payload);\n};\n\n/**\n * Sends a broadcast message via the data channel.\n * @param payload {object} the payload of the message.\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.broadcastEndpointMessage = function(payload) {\n    this.sendEndpointMessage('', payload);\n};\n\n/**\n * Sends a message to a given endpoint (if 'to' is a non-empty string), or\n * broadcasts it to all endpoints in the conference.\n * @param {string} to The ID of the endpoint/participant which is to receive\n * the message, or '' to broadcast the message to all endpoints in the\n * conference.\n * @param {string|object} message the message to send. If this is of type\n * 'string' it will be sent as a chat message. If it is of type 'object', it\n * will be encapsulated in a format recognized by jitsi-meet and converted to\n * JSON before being sent.\n * @param {boolean} sendThroughVideobridge Whether to send the message through\n * jitsi-videobridge (via the COLIBRI data channel or web socket), or through\n * the XMPP MUC. Currently only objects can be sent through jitsi-videobridge.\n */\nJitsiConference.prototype.sendMessage = function(\n        message,\n        to = '',\n        sendThroughVideobridge = false) {\n    const messageType = typeof message;\n\n    // Through videobridge we support only objects. Through XMPP we support\n    // objects (encapsulated in a specific JSON format) and strings (i.e.\n    // regular chat messages).\n    if (messageType !== 'object'\n            && (sendThroughVideobridge || messageType !== 'string')) {\n        logger.error(`Can not send a message of type ${messageType}`);\n\n        return;\n    }\n\n    if (sendThroughVideobridge) {\n        this.sendEndpointMessage(to, message);\n    } else {\n        let messageToSend = message;\n\n        // Name of packet extension of message stanza to send the required\n        // message in.\n        let elementName = 'body';\n\n        if (messageType === 'object') {\n            elementName = 'json-message';\n\n            // Mark as valid JSON message if not already\n            if (!messageToSend.hasOwnProperty(JITSI_MEET_MUC_TYPE)) {\n                messageToSend[JITSI_MEET_MUC_TYPE] = '';\n            }\n\n            try {\n                messageToSend = JSON.stringify(messageToSend);\n            } catch (e) {\n                logger.error('Can not send a message, stringify failed: ', e);\n\n                return;\n            }\n        }\n\n        if (to) {\n            this.sendPrivateTextMessage(to, messageToSend, elementName);\n        } else {\n            // Broadcast\n            this.sendTextMessage(messageToSend, elementName);\n        }\n    }\n\n};\n\nJitsiConference.prototype.isConnectionInterrupted = function() {\n    return this.isP2PActive()\n        ? this.isP2PConnectionInterrupted : this.isJvbConnectionInterrupted;\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_INTERRUPTED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionInterrupted = function(session) {\n    if (session.isP2P) {\n        this.isP2PConnectionInterrupted = true;\n    } else {\n        this.isJvbConnectionInterrupted = true;\n    }\n    if (session.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_INTERRUPTED);\n    }\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_ICE_FAILED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionFailed = function(session) {\n    // We do nothing for the JVB connection, because it's up to the Jicofo to\n    // eventually come up with the new offer (at least for the time being).\n    if (session.isP2P) {\n        // Add p2pFailed property to analytics to distinguish, between \"good\"\n        // and \"bad\" connection\n        Statistics.analytics.addPermanentProperties({ p2pFailed: true });\n\n        if (this.p2pJingleSession) {\n            Statistics.sendAnalyticsAndLog(\n                createP2PEvent(\n                    ACTION_P2P_FAILED,\n                    {\n                        initiator: this.p2pJingleSession.isInitiator\n                    }));\n\n        }\n        this._stopP2PSession('connectivity-error', 'ICE FAILED');\n    } else if (session && this.jvbJingleSession === session) {\n        if (this.xmpp.isPingSupported()) {\n            this._delayedIceFailed = new IceFailedNotification(this);\n            this._delayedIceFailed.start(session);\n        } else {\n            // Let Jicofo know that the JVB's ICE connection has failed\n            logger.info('PING not supported - sending ICE failed immediately');\n            session.sendIceFailedNotification();\n        }\n    }\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_RESTORED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionRestored = function(session) {\n    if (session.isP2P) {\n        this.isP2PConnectionInterrupted = false;\n    } else {\n        this.isJvbConnectionInterrupted = false;\n        this._delayedIceFailed && this._delayedIceFailed.cancel();\n    }\n\n    if (session.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_RESTORED);\n    }\n};\n\n/**\n * Accept incoming P2P Jingle call.\n * @param {JingleSessionPC} jingleSession the session instance\n * @param {jQuery} jingleOffer a jQuery selector pointing to 'jingle' IQ element\n * @private\n */\nJitsiConference.prototype._acceptP2PIncomingCall = function(\n        jingleSession,\n        jingleOffer) {\n    this.isP2PConnectionInterrupted = false;\n\n    // Accept the offer\n    this.p2pJingleSession = jingleSession;\n\n    this.p2pJingleSession.initialize(this.room, this.rtc, this.options.config);\n\n    logger.info('Starting CallStats for P2P connection...');\n\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\n\n    if (this.options.config.enableStatsID) {\n        const participant = this.participants[remoteID];\n\n        if (participant) {\n            remoteID = participant.getStatsID() || remoteID;\n        }\n    }\n\n    this.statistics.startCallStats(\n        this.p2pJingleSession.peerconnection,\n        remoteID);\n\n    const localTracks = this.getLocalTracks();\n\n    this.p2pJingleSession.acceptOffer(\n        jingleOffer,\n        () => {\n            logger.debug('Got RESULT for P2P \"session-accept\"');\n        },\n        error => {\n            logger.error(\n                'Failed to accept incoming P2P Jingle session', error);\n        },\n        localTracks);\n};\n\n/**\n * Adds remote tracks to the conference associated with the JVB session.\n * @private\n */\nJitsiConference.prototype._addRemoteJVBTracks = function() {\n    this._addRemoteTracks(\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Adds remote tracks to the conference associated with the P2P session.\n * @private\n */\nJitsiConference.prototype._addRemoteP2PTracks = function() {\n    this._addRemoteTracks(\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Generates fake \"remote track added\" events for given Jingle session.\n * @param {string} logName the session's nickname which will appear in log\n * messages.\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be added\n * @private\n */\nJitsiConference.prototype._addRemoteTracks = function(logName, remoteTracks) {\n    for (const track of remoteTracks) {\n        logger.info(`Adding remote ${logName} track: ${track}`);\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, track);\n    }\n};\n\n/**\n * Called when {@link XMPPEvents.CONNECTION_ESTABLISHED} event is\n * triggered for a {@link JingleSessionPC}. Switches the conference to use\n * the P2P connection if the event comes from the P2P session.\n * @param {JingleSessionPC} jingleSession the session instance.\n * @private\n */\nJitsiConference.prototype._onIceConnectionEstablished = function(\n        jingleSession) {\n    if (this.p2pJingleSession !== null) {\n        // store the establishment time of the p2p session as a field of the\n        // JitsiConference because the p2pJingleSession might get disposed (thus\n        // the value is lost).\n        this.p2pEstablishmentDuration\n            = this.p2pJingleSession.establishmentDuration;\n    }\n\n    if (this.jvbJingleSession !== null) {\n        this.jvbEstablishmentDuration\n            = this.jvbJingleSession.establishmentDuration;\n    }\n\n    let done = false;\n    const forceJVB121Ratio = this.options.config.forceJVB121Ratio;\n\n    // We don't care about the JVB case, there's nothing to be done\n    if (!jingleSession.isP2P) {\n        done = true;\n    } else if (this.p2pJingleSession !== jingleSession) {\n        logger.error('CONNECTION_ESTABLISHED - wrong P2P session instance ?!');\n\n        done = true;\n    } else if (!jingleSession.isInitiator\n        && typeof forceJVB121Ratio === 'number'\n        && Math.random() < forceJVB121Ratio) {\n        logger.info(`Forcing JVB 121 mode (ratio=${forceJVB121Ratio})...`);\n        Statistics.analytics.addPermanentProperties({ forceJvb121: true });\n        this._stopP2PSession('decline', 'force JVB121');\n\n        done = true;\n    }\n\n    if (!isNaN(this.p2pEstablishmentDuration)\n        && !isNaN(this.jvbEstablishmentDuration)) {\n        const establishmentDurationDiff\n            = this.p2pEstablishmentDuration - this.jvbEstablishmentDuration;\n\n        Statistics.sendAnalytics(\n            ICE_ESTABLISHMENT_DURATION_DIFF,\n            { value: establishmentDurationDiff });\n    }\n\n    if (jingleSession.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_ESTABLISHED);\n    }\n\n    if (done) {\n\n        return;\n    }\n\n    // Update P2P status and emit events\n    this._setP2PStatus(true);\n\n    // Remove remote tracks\n    if (this.jvbJingleSession) {\n        this._removeRemoteJVBTracks();\n    } else {\n        logger.info('Not removing remote JVB tracks - no session yet');\n    }\n\n    this._addRemoteP2PTracks();\n\n    // Stop media transfer over the JVB connection\n    if (this.jvbJingleSession) {\n        this._suspendMediaTransferForJvbConnection();\n    }\n\n    logger.info('Starting remote stats with p2p connection');\n    this.statistics.startRemoteStats(this.p2pJingleSession.peerconnection);\n\n    Statistics.sendAnalyticsAndLog(\n        createP2PEvent(\n            ACTION_P2P_ESTABLISHED,\n            {\n                initiator: this.p2pJingleSession.isInitiator\n            }));\n\n};\n\n/**\n * Called when the chat room reads a new list of properties from jicofo's\n * presence. The properties may have changed, but they don't have to.\n *\n * @param {Object} properties - The properties keyed by the property name\n * ('key').\n * @private\n */\nJitsiConference.prototype._updateProperties = function(properties = {}) {\n    const changed = !isEqual(properties, this.properties);\n\n    this.properties = properties;\n    if (changed) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.PROPERTIES_CHANGED,\n            this.properties);\n\n        // Some of the properties need to be added to analytics events.\n        const analyticsKeys = [\n\n            // The number of jitsi-videobridge instances currently used for the\n            // conference.\n            'bridge-count',\n\n            // The conference creation time (set by jicofo).\n            'created-ms',\n            'octo-enabled'\n        ];\n\n        analyticsKeys.forEach(key => {\n            if (properties[key] !== undefined) {\n                Statistics.analytics.addPermanentProperties({\n                    [key.replace('-', '_')]: properties[key]\n                });\n            }\n        });\n    }\n};\n\n/**\n * Gets a conference property with a given key.\n *\n * @param {string} key - The key.\n * @returns {*} The value\n */\nJitsiConference.prototype.getProperty = function(key) {\n    return this.properties[key];\n};\n\n/**\n * Clears the deferred start P2P task if it has been scheduled.\n * @private\n */\nJitsiConference.prototype._maybeClearDeferredStartP2P = function() {\n    if (this.deferredStartP2PTask) {\n        logger.info('Cleared deferred start P2P task');\n        clearTimeout(this.deferredStartP2PTask);\n        this.deferredStartP2PTask = null;\n    }\n};\n\n/**\n * Removes from the conference remote tracks associated with the JVB\n * connection.\n * @private\n */\nJitsiConference.prototype._removeRemoteJVBTracks = function() {\n    this._removeRemoteTracks(\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Removes from the conference remote tracks associated with the P2P\n * connection.\n * @private\n */\nJitsiConference.prototype._removeRemoteP2PTracks = function() {\n    this._removeRemoteTracks(\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Generates fake \"remote track removed\" events for given Jingle session.\n * @param {string} sessionNickname the session's nickname which will appear in\n * log messages.\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be removed\n * @private\n */\nJitsiConference.prototype._removeRemoteTracks = function(\n        sessionNickname,\n        remoteTracks) {\n    for (const track of remoteTracks) {\n        logger.info(`Removing remote ${sessionNickname} track: ${track}`);\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, track);\n    }\n};\n\n/**\n * Resumes media transfer over the JVB connection.\n * @private\n */\nJitsiConference.prototype._resumeMediaTransferForJvbConnection = function() {\n    logger.info('Resuming media transfer over the JVB connection...');\n    this.jvbJingleSession.setMediaTransferActive(true, true).then(\n        () => {\n            logger.info('Resumed media transfer over the JVB connection!');\n        },\n        error => {\n            logger.error(\n                'Failed to resume media transfer over the JVB connection:',\n                error);\n        });\n};\n\n/**\n * Sets new P2P status and updates some events/states hijacked from\n * the <tt>JitsiConference</tt>.\n * @param {boolean} newStatus the new P2P status value, <tt>true</tt> means that\n * P2P is now in use, <tt>false</tt> means that the JVB connection is now in use\n * @private\n */\nJitsiConference.prototype._setP2PStatus = function(newStatus) {\n    if (this.p2p === newStatus) {\n        logger.debug(`Called _setP2PStatus with the same status: ${newStatus}`);\n\n        return;\n    }\n    this.p2p = newStatus;\n    if (newStatus) {\n        logger.info('Peer to peer connection established!');\n\n        // When we end up in a valid P2P session need to reset the properties\n        // in case they have persisted, after session with another peer.\n        Statistics.analytics.addPermanentProperties({\n            p2pFailed: false,\n            forceJvb121: false\n        });\n\n        // Sync up video transfer active in case p2pJingleSession not existed\n        // when the lastN value was being adjusted.\n        const isVideoActive = this.rtc.getLastN() !== 0;\n\n        this.p2pJingleSession\n            .setMediaTransferActive(true, isVideoActive)\n            .catch(error => {\n                logger.error(\n                    'Failed to sync up P2P video transfer status'\n                        + `(${isVideoActive})`, error);\n            });\n    } else {\n        logger.info('Peer to peer connection closed!');\n    }\n\n    // Put the JVB connection on hold/resume\n    if (this.jvbJingleSession) {\n        this.statistics.sendConnectionResumeOrHoldEvent(\n            this.jvbJingleSession.peerconnection, !newStatus);\n    }\n\n    // Clear dtmfManager, so that it can be recreated with new connection\n    this.dtmfManager = null;\n\n    // Update P2P status\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.P2P_STATUS,\n        this,\n        this.p2p);\n\n    // Refresh connection interrupted/restored\n    this.eventEmitter.emit(\n        this.isConnectionInterrupted()\n            ? JitsiConferenceEvents.CONNECTION_INTERRUPTED\n            : JitsiConferenceEvents.CONNECTION_RESTORED);\n};\n\n/**\n * Starts new P2P session.\n * @param {string} remoteJid the JID of the remote participant\n * @private\n */\nJitsiConference.prototype._startP2PSession = function(remoteJid) {\n    this._maybeClearDeferredStartP2P();\n    if (this.p2pJingleSession) {\n        logger.error('P2P session already started!');\n\n        return;\n    }\n\n    this.isP2PConnectionInterrupted = false;\n    this.p2pJingleSession\n        = this.xmpp.connection.jingle.newP2PJingleSession(\n            this.room.myroomjid,\n            remoteJid);\n    logger.info(\n        'Created new P2P JingleSession', this.room.myroomjid, remoteJid);\n\n    this.p2pJingleSession.initialize(this.room, this.rtc, this.options.config);\n\n    logger.info('Starting CallStats for P2P connection...');\n\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\n\n    if (this.options.config.enableStatsID) {\n        const participant = this.participants[remoteID];\n\n        if (participant) {\n            remoteID = participant.getStatsID() || remoteID;\n        }\n    }\n\n    this.statistics.startCallStats(\n        this.p2pJingleSession.peerconnection,\n        remoteID);\n\n    // NOTE one may consider to start P2P with the local tracks detached,\n    // but no data will be sent until ICE succeeds anyway. And we switch\n    // immediately once the P2P ICE connects.\n    const localTracks = this.getLocalTracks();\n\n    this.p2pJingleSession.invite(localTracks);\n};\n\n/**\n * Suspends media transfer over the JVB connection.\n * @private\n */\nJitsiConference.prototype._suspendMediaTransferForJvbConnection = function() {\n    logger.info('Suspending media transfer over the JVB connection...');\n    this.jvbJingleSession.setMediaTransferActive(false, false).then(\n        () => {\n            logger.info('Suspended media transfer over the JVB connection !');\n        },\n        error => {\n            logger.error(\n                'Failed to suspend media transfer over the JVB connection:',\n                error);\n        });\n};\n\n/**\n * Method when called will decide whether it's the time to start or stop\n * the P2P session.\n * @param {boolean} userLeftEvent if <tt>true</tt> it means that the call\n * originates from the user left event.\n * @private\n */\nJitsiConference.prototype._maybeStartOrStopP2P = function(userLeftEvent) {\n    if (!browser.supportsP2P()\n        || !this.isP2PEnabled()\n        || this.isP2PTestModeEnabled()) {\n        logger.info('Auto P2P disabled');\n\n        return;\n    }\n    const peers = this.getParticipants();\n    const peerCount = peers.length;\n\n    // FIXME 1 peer and it must *support* P2P switching\n    const shouldBeInP2P = this._shouldBeInP2PMode();\n\n    // Clear deferred \"start P2P\" task\n    if (!shouldBeInP2P && this.deferredStartP2PTask) {\n        this._maybeClearDeferredStartP2P();\n    }\n\n    // Start peer to peer session\n    if (!this.p2pJingleSession && shouldBeInP2P) {\n        const peer = peerCount && peers[0];\n\n\n        const myId = this.myUserId();\n        const peersId = peer.getId();\n\n        if (myId > peersId) {\n            logger.debug(\n                'I\\'m the bigger peersId - '\n                + 'the other peer should start P2P', myId, peersId);\n\n            return;\n        } else if (myId === peersId) {\n            logger.error('The same IDs ? ', myId, peersId);\n\n            return;\n        }\n\n        const jid = peer.getJid();\n\n        if (userLeftEvent) {\n            if (this.deferredStartP2PTask) {\n                logger.error('Deferred start P2P task\\'s been set already!');\n\n                return;\n            }\n            logger.info(\n                `Will start P2P with: ${jid} after ${\n                    this.backToP2PDelay} seconds...`);\n            this.deferredStartP2PTask = setTimeout(\n                this._startP2PSession.bind(this, jid),\n                this.backToP2PDelay * 1000);\n        } else {\n            logger.info(`Will start P2P with: ${jid}`);\n            this._startP2PSession(jid);\n        }\n    } else if (this.p2pJingleSession && !shouldBeInP2P) {\n        logger.info(`Will stop P2P with: ${this.p2pJingleSession.remoteJid}`);\n\n        // Log that there will be a switch back to the JVB connection\n        if (this.p2pJingleSession.isInitiator && peerCount > 1) {\n            Statistics.sendAnalyticsAndLog(\n                createP2PEvent(ACTION_P2P_SWITCH_TO_JVB));\n        }\n        this._stopP2PSession();\n    }\n};\n\n/**\n * Tells whether or not this conference should be currently in the P2P mode.\n *\n * @private\n * @returns {boolean}\n */\nJitsiConference.prototype._shouldBeInP2PMode = function() {\n    const peers = this.getParticipants();\n    const peerCount = peers.length;\n    const hasBotPeer = peers.find(p => p._botType === 'poltergeist') !== undefined;\n    const shouldBeInP2P = peerCount === 1 && !hasBotPeer;\n\n    logger.debug(`P2P? peerCount: ${peerCount}, hasBotPeer: ${hasBotPeer} => ${shouldBeInP2P}`);\n\n    return shouldBeInP2P;\n};\n\n/**\n * Stops the current P2P session.\n * @param {string} [reason=\"success\"] one of the Jingle \"reason\" element\n * names as defined by https://xmpp.org/extensions/xep-0166.html#def-reason\n * @param {string} [reasonDescription=\"Turing off P2P session\"] text\n * description that will be included in the session terminate message\n * @private\n */\nJitsiConference.prototype._stopP2PSession = function(\n        reason,\n        reasonDescription) {\n    if (!this.p2pJingleSession) {\n        logger.error('No P2P session to be stopped!');\n\n        return;\n    }\n\n    const wasP2PEstablished = this.isP2PActive();\n\n    // Swap remote tracks, but only if the P2P has been fully established\n    if (wasP2PEstablished) {\n        if (this.jvbJingleSession) {\n            this._resumeMediaTransferForJvbConnection();\n        }\n\n        // Remove remote P2P tracks\n        this._removeRemoteP2PTracks();\n    }\n\n    // Stop P2P stats\n    logger.info('Stopping remote stats for P2P connection');\n    this.statistics.stopRemoteStats(this.p2pJingleSession.peerconnection);\n    logger.info('Stopping CallStats for P2P connection');\n    this.statistics.stopCallStats(this.p2pJingleSession.peerconnection);\n\n    this.p2pJingleSession.terminate(\n        () => {\n            logger.info('P2P session terminate RESULT');\n        },\n        error => {\n            // Because both initiator and responder are simultaneously\n            // terminating their JingleSessions in case of the 'to JVB switch'\n            // when 3rd participant joins, both will dispose their sessions and\n            // reply with 'item-not-found' (see strophe.jingle.js). We don't\n            // want to log this as an error since it's expected behaviour.\n            //\n            // We want them both to terminate, because in case of initiator's\n            // crash the responder would stay in P2P mode until ICE fails which\n            // could take up to 20 seconds.\n            //\n            // NOTE lack of 'reason' is considered as graceful session terminate\n            // where both initiator and responder terminate their sessions\n            // simultaneously.\n            if (reason) {\n                logger.error(\n                    'An error occurred while trying to terminate'\n                        + ' P2P Jingle session', error);\n            }\n        }, {\n            reason: reason ? reason : 'success',\n            reasonDescription: reasonDescription\n                ? reasonDescription : 'Turing off P2P session',\n            sendSessionTerminate: this.room\n                && this.getParticipantById(\n                    Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid))\n        });\n\n    this.p2pJingleSession = null;\n\n    // Update P2P status and other affected events/states\n    this._setP2PStatus(false);\n\n    if (wasP2PEstablished) {\n        // Add back remote JVB tracks\n        if (this.jvbJingleSession) {\n            this._addRemoteJVBTracks();\n        } else {\n            logger.info('Not adding remote JVB tracks - no session yet');\n        }\n    }\n};\n\n/**\n * Checks whether or not the conference is currently in the peer to peer mode.\n * Being in peer to peer mode means that the direct connection has been\n * established and the P2P connection is being used for media transmission.\n * @return {boolean} <tt>true</tt> if in P2P mode or <tt>false</tt> otherwise.\n */\nJitsiConference.prototype.isP2PActive = function() {\n    return this.p2p;\n};\n\n/**\n * Returns the current ICE state of the P2P connection.\n * NOTE: method is used by the jitsi-meet-torture tests.\n * @return {string|null} an ICE state or <tt>null</tt> if there's currently\n * no P2P connection.\n */\nJitsiConference.prototype.getP2PConnectionState = function() {\n    if (this.isP2PActive()) {\n        return this.p2pJingleSession.peerconnection.getConnectionState();\n    }\n\n    return null;\n};\n\n\n/**\n * Manually starts new P2P session (should be used only in the tests).\n */\nJitsiConference.prototype.startP2PSession = function() {\n    const peers = this.getParticipants();\n\n    // Start peer to peer session\n    if (peers.length === 1) {\n        const peerJid = peers[0].getJid();\n\n        this._startP2PSession(peerJid);\n    } else {\n        throw new Error(\n            'There must be exactly 1 participant to start the P2P session !');\n    }\n};\n\n/**\n * Manually stops the current P2P session (should be used only in the tests)\n */\nJitsiConference.prototype.stopP2PSession = function() {\n    this._stopP2PSession();\n};\n\n/**\n * Get a summary of how long current participants have been the dominant speaker\n * @returns {object}\n */\nJitsiConference.prototype.getSpeakerStats = function() {\n    return this.speakerStatsCollector.getStats();\n};\n\n/**\n * Sets the maximum video size the local participant should receive from remote\n * participants.\n *\n * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\n * this receiver is willing to receive.\n * @returns {void}\n */\nJitsiConference.prototype.setReceiverVideoConstraint = function(\n        maxFrameHeight) {\n    this.rtc.setReceiverVideoConstraint(maxFrameHeight);\n};\n\n/**\n * Creates a video SIP GW session and returns it if service is enabled. Before\n * creating a session one need to check whether video SIP GW service is\n * available in the system {@link JitsiConference.isVideoSIPGWAvailable}. Even\n * if there are available nodes to serve this request, after creating the\n * session those nodes can be taken and the request about using the\n * created session can fail.\n *\n * @param {string} sipAddress - The sip address to be used.\n * @param {string} displayName - The display name to be used for this session.\n * @returns {JitsiVideoSIPGWSession|Error} Returns null if conference is not\n * initialised and there is no room.\n */\nJitsiConference.prototype.createVideoSIPGWSession\n    = function(sipAddress, displayName) {\n        if (!this.room) {\n            return new Error(VideoSIPGWConstants.ERROR_NO_CONNECTION);\n        }\n\n        return this.videoSIPGWHandler\n            .createVideoSIPGWSession(sipAddress, displayName);\n    };\n","/**\n * The errors for the conference.\n */\n\n/**\n * Indicates that client must be authenticated to create the conference.\n */\nexport const AUTHENTICATION_REQUIRED = 'conference.authenticationRequired';\n\n/**\n * Indicates that chat error occurred.\n */\nexport const CHAT_ERROR = 'conference.chatError';\n\n/**\n * Indicates that conference has been destroyed.\n */\nexport const CONFERENCE_DESTROYED = 'conference.destroyed';\n\n/**\n * Indicates that max users limit has been reached.\n */\nexport const CONFERENCE_MAX_USERS = 'conference.max_users';\n\n/**\n * Indicates that a connection error occurred when trying to join a conference.\n */\nexport const CONNECTION_ERROR = 'conference.connectionError';\n\n/**\n * Indicates that a connection error is due to not allowed,\n * occurred when trying to join a conference.\n */\nexport const NOT_ALLOWED_ERROR = 'conference.connectionError.notAllowed';\n\n/**\n * Indicates that focus error happened.\n */\nexport const FOCUS_DISCONNECTED = 'conference.focusDisconnected';\n\n/**\n * Indicates that focus left the conference.\n */\nexport const FOCUS_LEFT = 'conference.focusLeft';\n\n/**\n * Indicates that graceful shutdown happened.\n */\nexport const GRACEFUL_SHUTDOWN = 'conference.gracefulShutdown';\n\n/**\n * Indicates that the versions of the server side components are incompatible\n * with the client side.\n */\nexport const INCOMPATIBLE_SERVER_VERSIONS\n    = 'conference.incompatible_server_versions';\n\n/**\n * Indicates that offer/answer had failed.\n */\nexport const OFFER_ANSWER_FAILED = 'conference.offerAnswerFailed';\n\n/**\n * Indicates that password cannot be set for this conference.\n */\nexport const PASSWORD_NOT_SUPPORTED = 'conference.passwordNotSupported';\n\n/**\n * Indicates that a password is required in order to join the conference.\n */\nexport const PASSWORD_REQUIRED = 'conference.passwordRequired';\n\n/**\n * Indicates that reservation system returned error.\n */\nexport const RESERVATION_ERROR = 'conference.reservationError';\n\n/**\n * Indicates that the conference setup failed.\n */\nexport const SETUP_FAILED = 'conference.setup_failed';\n\n/**\n * Indicates that there is no available videobridge.\n */\nexport const VIDEOBRIDGE_NOT_AVAILABLE = 'conference.videobridgeNotAvailable';\n","/* global __filename */\nimport { Strophe } from 'strophe.js';\n\nimport {\n    ACTION_JINGLE_SA_TIMEOUT,\n    createBridgeDownEvent,\n    createConnectionStageReachedEvent,\n    createFocusLeftEvent,\n    createJingleEvent,\n    createRemotelyMutedEvent\n} from './service/statistics/AnalyticsEvents';\nimport AuthenticationEvents\n    from './service/authentication/AuthenticationEvents';\nimport EventEmitterForwarder from './modules/util/EventEmitterForwarder';\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport * as MediaType from './service/RTC/MediaType';\nimport RTCEvents from './service/RTC/RTCEvents';\nimport VideoType from './service/RTC/VideoType';\nimport Statistics from './modules/statistics/statistics';\nimport XMPPEvents from './service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * Setups all event listeners related to conference\n * @param conference {JitsiConference} the conference\n */\nexport default function JitsiConferenceEventManager(conference) {\n    this.conference = conference;\n    this.xmppListeners = {};\n\n    // Listeners related to the conference only\n    conference.on(JitsiConferenceEvents.TRACK_MUTE_CHANGED,\n        track => {\n            if (!track.isLocal() || !conference.statistics) {\n                return;\n            }\n            const session\n                = track.isP2P\n                    ? conference.p2pJingleSession : conference.jvbJingleSession;\n\n            // TPC will be null, before the conference starts, but the event\n            // still should be queued\n            const tpc = (session && session.peerconnection) || null;\n\n            conference.statistics.sendMuteEvent(\n                tpc,\n                track.isMuted(),\n                track.getType());\n        });\n}\n\n/**\n * Setups event listeners related to conference.chatRoom\n */\nJitsiConferenceEventManager.prototype.setupChatRoomListeners = function() {\n    const conference = this.conference;\n    const chatRoom = conference.room;\n\n    this.chatRoomForwarder = new EventEmitterForwarder(chatRoom,\n        this.conference.eventEmitter);\n\n    chatRoom.addListener(XMPPEvents.ICE_RESTARTING, jingleSession => {\n        if (!jingleSession.isP2P) {\n            // If using DataChannel as bridge channel, it must be closed\n            // before ICE restart, otherwise Chrome will not trigger \"opened\"\n            // event for the channel established with the new bridge.\n            // TODO: This may be bypassed when using a WebSocket as bridge\n            // channel.\n            conference.rtc.closeBridgeChannel();\n        }\n\n        // else: there are no DataChannels in P2P session (at least for now)\n    });\n\n    chatRoom.addListener(\n        XMPPEvents.ICE_RESTART_SUCCESS,\n        (jingleSession, offerIq) => {\n            // The JVB data chanel needs to be reopened in case the conference\n            // has been moved to a new bridge.\n            !jingleSession.isP2P\n                && conference._setBridgeChannel(\n                    offerIq, jingleSession.peerconnection);\n        });\n\n\n    chatRoom.addListener(XMPPEvents.AUDIO_MUTED_BY_FOCUS,\n        actor => {\n            // TODO: Add a way to differentiate between commands which caused\n            // us to mute and those that did not change our state (i.e. we were\n            // already muted).\n            Statistics.sendAnalytics(createRemotelyMutedEvent());\n\n            conference.mutedByFocusActor = actor;\n\n            // set isMutedByFocus when setAudioMute Promise ends\n            conference.rtc.setAudioMute(true).then(\n                () => {\n                    conference.isMutedByFocus = true;\n                    conference.mutedByFocusActor = null;\n                })\n                .catch(\n                    error => {\n                        conference.mutedByFocusActor = null;\n                        logger.warn(\n                            'Error while audio muting due to focus request', error);\n                    });\n        }\n    );\n\n    this.chatRoomForwarder.forward(XMPPEvents.SUBJECT_CHANGED,\n        JitsiConferenceEvents.SUBJECT_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_JOINED,\n        JitsiConferenceEvents.CONFERENCE_JOINED);\n\n    // send some analytics events\n    chatRoom.addListener(XMPPEvents.MUC_JOINED,\n        () => {\n            this.conference.isJvbConnectionInterrupted = false;\n\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\n            Object.keys(chatRoom.connectionTimes).forEach(key => {\n                const event\n                    = createConnectionStageReachedEvent(\n                        `conference_${key}`,\n                        { value: chatRoom.connectionTimes[key] });\n\n                Statistics.sendAnalytics(event);\n            });\n\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\n            Object.keys(chatRoom.xmpp.connectionTimes).forEach(key => {\n                const event\n                    = createConnectionStageReachedEvent(\n                        `xmpp_${key}`,\n                        { value: chatRoom.xmpp.connectionTimes[key] });\n\n                Statistics.sendAnalytics(event);\n            });\n        });\n\n    chatRoom.addListener(XMPPEvents.RENEGOTIATION_FAILED, (e, session) => {\n        if (!session.isP2P) {\n            conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n        }\n    });\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_JOIN_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONNECTION_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONNECTION_ERROR);\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.NOT_ALLOWED_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_MAX_USERS_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONFERENCE_MAX_USERS);\n\n    this.chatRoomForwarder.forward(XMPPEvents.PASSWORD_REQUIRED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.PASSWORD_REQUIRED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.AUTHENTICATION_REQUIRED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.AUTHENTICATION_REQUIRED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.BRIDGE_DOWN,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.VIDEOBRIDGE_NOT_AVAILABLE);\n    chatRoom.addListener(\n        XMPPEvents.BRIDGE_DOWN,\n        () => Statistics.sendAnalytics(createBridgeDownEvent()));\n\n    this.chatRoomForwarder.forward(XMPPEvents.RESERVATION_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.RESERVATION_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.GRACEFUL_SHUTDOWN,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.GRACEFUL_SHUTDOWN);\n\n    chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\n        jingleSession => {\n            conference._onIceConnectionFailed(jingleSession);\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_DESTROYED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONFERENCE_DESTROYED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.CHAT_ERROR_RECEIVED,\n        JitsiConferenceEvents.CONFERENCE_ERROR,\n        JitsiConferenceErrors.CHAT_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.FOCUS_DISCONNECTED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.FOCUS_DISCONNECTED);\n\n    chatRoom.addListener(XMPPEvents.FOCUS_LEFT,\n        () => {\n            Statistics.sendAnalytics(createFocusLeftEvent());\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.CONFERENCE_FAILED,\n                JitsiConferenceErrors.FOCUS_LEFT);\n        });\n\n    chatRoom.addListener(XMPPEvents.SESSION_ACCEPT_TIMEOUT,\n        jingleSession => {\n            Statistics.sendAnalyticsAndLog(\n                createJingleEvent(\n                    ACTION_JINGLE_SA_TIMEOUT,\n                    { p2p: jingleSession.isP2P }));\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.RECORDER_STATE_CHANGED,\n        JitsiConferenceEvents.RECORDER_STATE_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\n        JitsiConferenceEvents.TRANSCRIPTION_STATUS_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED,\n        JitsiConferenceEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED);\n\n    this.chatRoomForwarder.forward(\n        XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\n        JitsiConferenceEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.PHONE_NUMBER_CHANGED,\n        JitsiConferenceEvents.PHONE_NUMBER_CHANGED);\n\n    chatRoom.setParticipantPropertyListener((node, from) => {\n        const participant = conference.getParticipantById(from);\n\n        if (!participant) {\n            return;\n        }\n\n        participant.setProperty(\n            node.tagName.substring('jitsi_participant_'.length),\n            node.value);\n    });\n\n    chatRoom.addListener(XMPPEvents.KICKED,\n        conference.onMemberKicked.bind(conference));\n    chatRoom.addListener(XMPPEvents.SUSPEND_DETECTED,\n        conference.onSuspendDetected.bind(conference));\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOCK_CHANGED,\n        JitsiConferenceEvents.LOCK_STATE_CHANGED);\n\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_JOINED,\n        conference.onMemberJoined.bind(conference));\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\n        conference._onMemberBotTypeChanged.bind(conference));\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_LEFT,\n        conference.onMemberLeft.bind(conference));\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LEFT,\n        JitsiConferenceEvents.CONFERENCE_LEFT);\n\n    chatRoom.addListener(XMPPEvents.DISPLAY_NAME_CHANGED,\n        conference.onDisplayNameChanged.bind(conference));\n\n    chatRoom.addListener(XMPPEvents.LOCAL_ROLE_CHANGED, role => {\n        conference.onLocalRoleChanged(role);\n\n        // log all events for the recorder operated by the moderator\n        if (conference.statistics && conference.isModerator()) {\n            conference.on(JitsiConferenceEvents.RECORDER_STATE_CHANGED,\n                recorderSession => {\n                    const logObject = {\n                        error: recorderSession.getError(),\n                        id: 'recorder_status',\n                        status: recorderSession.getStatus()\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n                });\n        }\n    });\n\n    chatRoom.addListener(XMPPEvents.MUC_ROLE_CHANGED,\n        conference.onUserRoleChanged.bind(conference));\n\n    chatRoom.addListener(AuthenticationEvents.IDENTITY_UPDATED,\n        (authEnabled, authIdentity) => {\n            conference.authEnabled = authEnabled;\n            conference.authIdentity = authIdentity;\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.AUTH_STATUS_CHANGED, authEnabled,\n                authIdentity);\n        });\n\n    chatRoom.addListener(\n        XMPPEvents.MESSAGE_RECEIVED,\n\n        // eslint-disable-next-line max-params\n        (jid, displayName, txt, myJid, ts) => {\n            const id = Strophe.getResourceFromJid(jid);\n\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.MESSAGE_RECEIVED,\n                id, txt, ts, displayName);\n        });\n\n    chatRoom.addListener(\n        XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\n\n        // eslint-disable-next-line max-params\n        (jid, displayName, txt, myJid, ts) => {\n            const id = Strophe.getResourceFromJid(jid);\n\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.PRIVATE_MESSAGE_RECEIVED,\n                id, txt, ts);\n        });\n\n    chatRoom.addListener(XMPPEvents.PRESENCE_STATUS,\n        (jid, status) => {\n            const id = Strophe.getResourceFromJid(jid);\n            const participant = conference.getParticipantById(id);\n\n            if (!participant || participant._status === status) {\n                return;\n            }\n            participant._status = status;\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.USER_STATUS_CHANGED, id, status);\n        });\n\n    chatRoom.addListener(XMPPEvents.JSON_MESSAGE_RECEIVED,\n        (from, payload) => {\n            const id = Strophe.getResourceFromJid(from);\n            const participant = conference.getParticipantById(id);\n\n            if (participant) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n                    participant, payload);\n            } else {\n                logger.warn(\n                    'Ignored XMPPEvents.JSON_MESSAGE_RECEIVED for not existing '\n                    + `participant: ${from}`,\n                    payload);\n            }\n        });\n\n    chatRoom.addPresenceListener('startmuted', (data, from) => {\n        let isModerator = false;\n\n        if (conference.myUserId() === from && conference.isModerator()) {\n            isModerator = true;\n        } else {\n            const participant = conference.getParticipantById(from);\n\n            if (participant && participant.isModerator()) {\n                isModerator = true;\n            }\n        }\n\n        if (!isModerator) {\n            return;\n        }\n\n        const startAudioMuted = data.attributes.audio === 'true';\n        const startVideoMuted = data.attributes.video === 'true';\n\n        let updated = false;\n\n        if (startAudioMuted !== conference.startMutedPolicy.audio) {\n            conference.startMutedPolicy.audio = startAudioMuted;\n            updated = true;\n        }\n\n        if (startVideoMuted !== conference.startMutedPolicy.video) {\n            conference.startMutedPolicy.video = startVideoMuted;\n            updated = true;\n        }\n\n        if (updated) {\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.START_MUTED_POLICY_CHANGED,\n                conference.startMutedPolicy\n            );\n        }\n    });\n\n    if (conference.statistics) {\n        // FIXME ICE related events should end up in RTCEvents eventually\n        chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\n            session => {\n                conference.statistics.sendIceConnectionFailedEvent(\n                    session.peerconnection);\n            });\n\n        // FIXME XMPPEvents.ADD_ICE_CANDIDATE_FAILED is never emitted\n        chatRoom.addListener(XMPPEvents.ADD_ICE_CANDIDATE_FAILED,\n            (e, pc) => {\n                conference.statistics.sendAddIceCandidateFailed(e, pc);\n            });\n    }\n};\n\n/**\n * Setups event listeners related to conference.rtc\n */\nJitsiConferenceEventManager.prototype.setupRTCListeners = function() {\n    const conference = this.conference;\n    const rtc = conference.rtc;\n\n    rtc.addListener(\n        RTCEvents.REMOTE_TRACK_ADDED,\n        conference.onRemoteTrackAdded.bind(conference));\n\n    rtc.addListener(\n        RTCEvents.REMOTE_TRACK_REMOVED,\n        conference.onRemoteTrackRemoved.bind(conference));\n\n    rtc.addListener(RTCEvents.DOMINANT_SPEAKER_CHANGED,\n        id => {\n            if (conference.lastDominantSpeaker !== id && conference.room) {\n                conference.lastDominantSpeaker = id;\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED, id);\n\n                if (conference.statistics && conference.myUserId() === id) {\n                    // We are the new dominant speaker.\n                    conference.statistics.sendDominantSpeakerEvent(\n                        conference.room.roomjid);\n                }\n            }\n        });\n\n    rtc.addListener(RTCEvents.DATA_CHANNEL_OPEN, () => {\n        const now = window.performance.now();\n        const key = 'data.channel.opened';\n\n        // TODO: Move all of the 'connectionTimes' logic to its own module.\n        logger.log(`(TIME) ${key}`, now);\n        conference.room.connectionTimes[key] = now;\n        Statistics.sendAnalytics(\n            createConnectionStageReachedEvent(key, { value: now }));\n\n        conference.eventEmitter.emit(JitsiConferenceEvents.DATA_CHANNEL_OPENED);\n    });\n\n    rtc.addListener(RTCEvents.ENDPOINT_MESSAGE_RECEIVED,\n        (from, payload) => {\n            const participant = conference.getParticipantById(from);\n\n            if (participant) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n                    participant, payload);\n            } else {\n                logger.warn(\n                    'Ignored ENDPOINT_MESSAGE_RECEIVED for not existing '\n                        + `participant: ${from}`,\n                    payload);\n            }\n        });\n\n    rtc.addListener(RTCEvents.LOCAL_UFRAG_CHANGED,\n        (tpc, ufrag) => {\n            if (!tpc.isP2P) {\n                Statistics.sendLog(\n                    JSON.stringify({\n                        id: 'local_ufrag',\n                        value: ufrag\n                    }));\n            }\n        });\n    rtc.addListener(RTCEvents.REMOTE_UFRAG_CHANGED,\n        (tpc, ufrag) => {\n            if (!tpc.isP2P) {\n                Statistics.sendLog(\n                    JSON.stringify({\n                        id: 'remote_ufrag',\n                        value: ufrag\n                    }));\n            }\n        });\n\n    rtc.addListener(RTCEvents.CREATE_ANSWER_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendCreateAnswerFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.CREATE_OFFER_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendCreateOfferFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendSetLocalDescFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendSetRemoteDescFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\n        (track, ssrc) => {\n            // when starting screen sharing, the track is created and when\n            // we do set local description and we process the ssrc we\n            // will be notified for it and we will report it with the event\n            // for screen sharing\n            if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\n                conference.statistics.sendScreenSharingEvent(true, ssrc);\n            }\n        });\n};\n\n/**\n * Removes event listeners related to conference.xmpp\n */\nJitsiConferenceEventManager.prototype.removeXMPPListeners = function() {\n    const conference = this.conference;\n\n    conference.xmpp.caps.removeListener(\n        XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\n        this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED]);\n    delete this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED];\n\n    Object.keys(this.xmppListeners).forEach(eventName => {\n        conference.xmpp.removeListener(\n            eventName,\n            this.xmppListeners[eventName]);\n    });\n    this.xmppListeners = {};\n};\n\n\n/**\n * Setups event listeners related to conference.xmpp\n */\nJitsiConferenceEventManager.prototype.setupXMPPListeners = function() {\n    const conference = this.conference;\n\n    const featuresChangedListener = from => {\n        const participant\n            = conference.getParticipantById(\n            Strophe.getResourceFromJid(from));\n\n        if (participant) {\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.PARTCIPANT_FEATURES_CHANGED,\n                participant);\n        }\n    };\n\n    conference.xmpp.caps.addListener(\n        XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\n        featuresChangedListener);\n    this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED]\n        = featuresChangedListener;\n\n    this._addConferenceXMPPListener(\n        XMPPEvents.CALL_INCOMING,\n        conference.onIncomingCall.bind(conference));\n    this._addConferenceXMPPListener(\n        XMPPEvents.CALL_ACCEPTED,\n        conference.onCallAccepted.bind(conference));\n    this._addConferenceXMPPListener(\n        XMPPEvents.TRANSPORT_INFO,\n        conference.onTransportInfo.bind(conference));\n    this._addConferenceXMPPListener(\n        XMPPEvents.CALL_ENDED,\n        conference.onCallEnded.bind(conference));\n\n    this._addConferenceXMPPListener(XMPPEvents.START_MUTED_FROM_FOCUS,\n        (audioMuted, videoMuted) => {\n            if (conference.options.config.ignoreStartMuted) {\n                return;\n            }\n\n            conference.startAudioMuted = audioMuted;\n            conference.startVideoMuted = videoMuted;\n\n            // mute existing local tracks because this is initial mute from\n            // Jicofo\n            conference.getLocalTracks().forEach(track => {\n                switch (track.getType()) {\n                case MediaType.AUDIO:\n                    conference.startAudioMuted && track.mute();\n                    break;\n                case MediaType.VIDEO:\n                    conference.startVideoMuted && track.mute();\n                    break;\n                }\n            });\n\n            conference.eventEmitter.emit(JitsiConferenceEvents.STARTED_MUTED);\n        });\n};\n\n/**\n * Add XMPP listener and save its reference for remove on leave conference.\n */\nJitsiConferenceEventManager.prototype._addConferenceXMPPListener = function(\n        eventName, listener) {\n    this.xmppListeners[eventName] = listener;\n    this.conference.xmpp.addListener(eventName, listener);\n};\n\n/**\n * Setups event listeners related to conference.statistics\n */\nJitsiConferenceEventManager.prototype.setupStatisticsListeners = function() {\n    const conference = this.conference;\n\n    if (!conference.statistics) {\n        return;\n    }\n\n    /* eslint-disable max-params */\n    conference.statistics.addAudioLevelListener((tpc, ssrc, level, isLocal) => {\n        conference.rtc.setAudioLevel(tpc, ssrc, level, isLocal);\n    });\n\n    /* eslint-enable max-params */\n\n    // Forward the \"before stats disposed\" event\n    conference.statistics.addBeforeDisposedListener(() => {\n        conference.eventEmitter.emit(\n            JitsiConferenceEvents.BEFORE_STATISTICS_DISPOSED);\n    });\n\n    // if we are in startSilent mode we will not be sending/receiving so nothing to detect\n    if (!conference.options.config.startSilent) {\n        conference.statistics.addByteSentStatsListener((tpc, stats) => {\n            conference.getLocalTracks(MediaType.AUDIO).forEach(track => {\n                const ssrc = tpc.getLocalSSRC(track);\n\n                if (!ssrc || !stats.hasOwnProperty(ssrc)) {\n                    return;\n                }\n\n                track._onByteSentStatsReceived(tpc, stats[ssrc]);\n            });\n        });\n    }\n};\n","/**\n * The events for the conference.\n */\n\n/**\n * Indicates that authentication status changed.\n */\nexport const AUTH_STATUS_CHANGED = 'conference.auth_status_changed';\n\n/**\n * A participant avatar has changed.\n */\nexport const AVATAR_CHANGED = 'conference.avatarChanged';\n\n/**\n * Fired just before the statistics module is disposed and it's the last chance\n * to submit some logs to the statistics service (ex. CallStats if enabled),\n * before it's disconnected.\n */\nexport const BEFORE_STATISTICS_DISPOSED = 'conference.beforeStatisticsDisposed';\n\n/**\n * Indicates that an error occured.\n */\nexport const CONFERENCE_ERROR = 'conference.error';\n\n/**\n * Indicates that conference failed.\n */\nexport const CONFERENCE_FAILED = 'conference.failed';\n\n/**\n * Indicates that conference has been joined. The event does NOT provide any\n * parameters to its listeners.\n */\nexport const CONFERENCE_JOINED = 'conference.joined';\n\n/**\n * Indicates that conference has been left.\n */\nexport const CONFERENCE_LEFT = 'conference.left';\n\n/**\n * Indicates that the connection to the conference has been established\n * XXX This is currently fired whenVthe *ICE* connection enters 'connected'\n * state for the first time.\n */\nexport const CONNECTION_ESTABLISHED = 'conference.connectionEstablished';\n\n/**\n * Indicates that the connection to the conference has been interrupted for some\n * reason.\n * XXX This is currently fired when the *ICE* connection is interrupted.\n */\nexport const CONNECTION_INTERRUPTED = 'conference.connectionInterrupted';\n\n/**\n * Indicates that the connection to the conference has been restored.\n * XXX This is currently fired when the *ICE* connection is restored.\n */\nexport const CONNECTION_RESTORED = 'conference.connectionRestored';\n\n/**\n * A connection to the video bridge's data channel has been established.\n */\nexport const DATA_CHANNEL_OPENED = 'conference.dataChannelOpened';\n\n/**\n * A user has changed it display name\n */\nexport const DISPLAY_NAME_CHANGED = 'conference.displayNameChanged';\n\n/**\n * The dominant speaker was changed.\n */\nexport const DOMINANT_SPEAKER_CHANGED = 'conference.dominantSpeaker';\n\n/**\n * Indicates that DTMF support changed.\n */\nexport const DTMF_SUPPORT_CHANGED = 'conference.dtmfSupportChanged';\n\n/**\n * Indicates that a message from another participant is received on data\n * channel.\n */\nexport const ENDPOINT_MESSAGE_RECEIVED = 'conference.endpoint_message_received';\n\n/**\n * NOTE This is lib-jitsi-meet internal event and can be removed at any time !\n *\n * Event emitted when conference transits, between one to one and multiparty JVB\n * conference. If the conference switches to P2P it's neither one to one nor\n * a multiparty JVB conference, but P2P (the status argument of this event will\n * be <tt>false</tt>).\n *\n * The first argument is a boolean which carries the previous value and\n * the seconds argument is a boolean with the new status. The event is emitted\n * only if the previous and the new values are different.\n *\n * @type {string}\n */\nexport const JVB121_STATUS = 'conference.jvb121Status';\n\n/**\n * You are kicked from the conference.\n * @param {JitsiParticipant} the participant that initiated the kick.\n */\nexport const KICKED = 'conference.kicked';\n\n/**\n * Participant was kicked from the conference.\n * @param {JitsiParticipant} the participant that initiated the kick.\n * @param {JitsiParticipant} the participant that was kicked.\n */\nexport const PARTICIPANT_KICKED = 'conference.participant_kicked';\n\n/**\n * The Last N set is changed.\n *\n * @param {Array<string>|null} leavingEndpointIds the ids of all the endpoints\n * which are leaving Last N\n * @param {Array<string>|null} enteringEndpointIds the ids of all the endpoints\n * which are entering Last N\n */\nexport const LAST_N_ENDPOINTS_CHANGED = 'conference.lastNEndpointsChanged';\n\n/**\n * Indicates that the room has been locked or unlocked.\n */\nexport const LOCK_STATE_CHANGED = 'conference.lock_state_changed';\n\n/**\n * Indicates that the region of the media server (jitsi-videobridge) that we\n * are connected to changed (or was initially set).\n * @type {string} the region.\n */\nexport const SERVER_REGION_CHANGED = 'conference.server_region_changed';\n\n/**\n * New text message was received.\n */\nexport const MESSAGE_RECEIVED = 'conference.messageReceived';\n\n/**\n * New private text message was received.\n */\nexport const PRIVATE_MESSAGE_RECEIVED = 'conference.privateMessageReceived';\n\n/**\n * Event fired when JVB sends notification about interrupted/restored user's\n * ICE connection status or we detect local problem with the video track.\n * First argument is the ID of the participant and\n * the seconds is a string indicating if the connection is currently\n * - active - the connection is active\n * - inactive - the connection is inactive, was intentionally interrupted by\n * the bridge\n * - interrupted - a network problem occurred\n * - restoring - the connection was inactive and is restoring now\n *\n * The current status value can be obtained by calling\n * JitsiParticipant.getConnectionStatus().\n */\nexport const PARTICIPANT_CONN_STATUS_CHANGED\n    = 'conference.participant_conn_status_changed';\n\n/**\n * Indicates that the features of the participant has been changed.\n */\nexport const PARTCIPANT_FEATURES_CHANGED\n    = 'conference.partcipant_features_changed';\n\n/**\n * Indicates that a the value of a specific property of a specific participant\n * has changed.\n */\nexport const PARTICIPANT_PROPERTY_CHANGED\n    = 'conference.participant_property_changed';\n\n/**\n * Indicates that the conference has switched between JVB and P2P connections.\n * The first argument of this event is a <tt>boolean</tt> which when set to\n * <tt>true</tt> means that the conference is running on the P2P connection.\n */\nexport const P2P_STATUS = 'conference.p2pStatus';\n\n/**\n * Indicates that phone number changed.\n */\nexport const PHONE_NUMBER_CHANGED = 'conference.phoneNumberChanged';\n\n/**\n * The conference properties changed.\n * @type {string}\n */\nexport const PROPERTIES_CHANGED = 'conference.propertiesChanged';\n\n/**\n * Indicates that recording state changed.\n */\nexport const RECORDER_STATE_CHANGED = 'conference.recorderStateChanged';\n\n/**\n * Indicates that video SIP GW state changed.\n * @param {VideoSIPGWConstants} status.\n */\nexport const VIDEO_SIP_GW_AVAILABILITY_CHANGED\n    = 'conference.videoSIPGWAvailabilityChanged';\n\n/**\n * Indicates that video SIP GW Session state changed.\n * @param {options} event - {\n *     {string} address,\n *     {VideoSIPGWConstants} oldState,\n *     {VideoSIPGWConstants} newState,\n *     {string} displayName}\n * }.\n */\nexport const VIDEO_SIP_GW_SESSION_STATE_CHANGED\n    = 'conference.videoSIPGWSessionStateChanged';\n\n/**\n * Indicates that start muted settings changed.\n */\nexport const START_MUTED_POLICY_CHANGED\n    = 'conference.start_muted_policy_changed';\n\n/**\n * Indicates that the local user has started muted.\n */\nexport const STARTED_MUTED = 'conference.started_muted';\n\n/**\n * Indicates that subject of the conference has changed.\n */\nexport const SUBJECT_CHANGED = 'conference.subjectChanged';\n\n/**\n * Indicates that DTMF support changed.\n */\nexport const SUSPEND_DETECTED = 'conference.suspendDetected';\n\n/**\n * Event indicates that local user is talking while he muted himself\n */\nexport const TALK_WHILE_MUTED = 'conference.talk_while_muted';\n\n/**\n * A new media track was added to the conference. The event provides the\n * following parameters to its listeners:\n *\n * @param {JitsiTrack} track the added JitsiTrack\n */\nexport const TRACK_ADDED = 'conference.trackAdded';\n\n/**\n * Audio levels of a media track ( attached to the conference) was changed.\n */\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'conference.audioLevelsChanged';\n\n/**\n * A media track ( attached to the conference) mute status was changed.\n * @param {JitsiParticipant|null} the participant that initiated the mute\n * if it is a remote mute.\n */\nexport const TRACK_MUTE_CHANGED = 'conference.trackMuteChanged';\n\n/**\n * The media track was removed from the conference. The event provides the\n * following parameters to its listeners:\n *\n * @param {JitsiTrack} track the removed JitsiTrack\n */\nexport const TRACK_REMOVED = 'conference.trackRemoved';\n\n/**\n * Notifies for transcription status changes. The event provides the\n * following parameters to its listeners:\n *\n * @param {String} status - The new status.\n */\nexport const TRANSCRIPTION_STATUS_CHANGED\n    = 'conference.transcriptionStatusChanged';\n\n\n/**\n * A new user joined the conference.\n */\nexport const USER_JOINED = 'conference.userJoined';\n\n/**\n * A user has left the conference.\n */\nexport const USER_LEFT = 'conference.userLeft';\n\n/**\n * User role changed.\n */\nexport const USER_ROLE_CHANGED = 'conference.roleChanged';\n\n/**\n * User status changed.\n */\nexport const USER_STATUS_CHANGED = 'conference.statusChanged';\n\n/**\n * Event indicates that the bot participant type changed.\n */\nexport const BOT_TYPE_CHANGED = 'conference.bot_type_changed';\n","import {\n    CONNECTION_DISCONNECTED as ANALYTICS_CONNECTION_DISCONNECTED,\n    createConnectionFailedEvent\n} from './service/statistics/AnalyticsEvents';\nimport JitsiConference from './JitsiConference';\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\nimport Statistics from './modules/statistics/statistics';\nimport XMPP from './modules/xmpp/xmpp';\n\n/**\n * Creates a new connection object for the Jitsi Meet server side video\n * conferencing service. Provides access to the JitsiConference interface.\n * @param appID identification for the provider of Jitsi Meet video conferencing\n * services.\n * @param token the JWT token used to authenticate with the server(optional)\n * @param options Object with properties / settings related to connection with\n * the server.\n * @constructor\n */\nexport default function JitsiConnection(appID, token, options) {\n    this.appID = appID;\n    this.token = token;\n    this.options = options;\n    this.xmpp = new XMPP(options, token);\n\n    /* eslint-disable max-params */\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_FAILED,\n        (errType, msg, credentials, details) => {\n            Statistics.sendAnalyticsAndLog(\n                createConnectionFailedEvent(errType, msg, details));\n        });\n    /* eslint-enable max-params */\n\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_DISCONNECTED,\n        msg => {\n            // we can see disconnects from normal tab closing of the browser\n            // and then there are no msgs, but we want to log only disconnects\n            // when there is real error\n            // XXX Do we need the difference in handling between the log and\n            // analytics event here?\n            if (msg) {\n                Statistics.sendAnalytics(\n                    ANALYTICS_CONNECTION_DISCONNECTED,\n                    { message: msg });\n            }\n            Statistics.sendLog(\n                JSON.stringify(\n                    {\n                        id: ANALYTICS_CONNECTION_DISCONNECTED,\n                        msg\n                    }));\n        });\n}\n\n/**\n * Connect the client with the server.\n * @param options {object} connecting options\n * (for example authentications parameters).\n */\nJitsiConnection.prototype.connect = function(options = {}) {\n    this.xmpp.connect(options.id, options.password);\n};\n\n/**\n * Attach to existing connection. Can be used for optimizations. For example:\n * if the connection is created on the server we can attach to it and start\n * using it.\n *\n * @param options {object} connecting options - rid, sid and jid.\n */\nJitsiConnection.prototype.attach = function(options) {\n    this.xmpp.attach(options);\n};\n\n/**\n * Disconnect the client from the server.\n * @returns {Promise} - Resolves when the disconnect process is finished or rejects with an error.\n */\nJitsiConnection.prototype.disconnect = function(...args) {\n    // XXX Forward any arguments passed to JitsiConnection.disconnect to\n    // XMPP.disconnect. For example, the caller of JitsiConnection.disconnect\n    // may optionally pass the event which triggered the disconnect in order to\n    // provide the implementation with finer-grained context.\n    return this.xmpp.disconnect(...args);\n};\n\n/**\n * Returns the jid of the participant associated with the XMPP connection.\n *\n * @returns {string} The jid of the participant.\n */\nJitsiConnection.prototype.getJid = function() {\n    return this.xmpp.getJid();\n};\n\n/**\n * This method allows renewal of the tokens if they are expiring.\n * @param token the new token.\n */\nJitsiConnection.prototype.setToken = function(token) {\n    this.token = token;\n};\n\n/**\n * Creates and joins new conference.\n * @param name the name of the conference; if null - a generated name will be\n * provided from the api\n * @param options Object with properties / settings related to the conference\n * that will be created.\n * @returns {JitsiConference} returns the new conference object.\n */\nJitsiConnection.prototype.initJitsiConference = function(name, options) {\n    return new JitsiConference({\n        name,\n        config: options,\n        connection: this\n    });\n};\n\n/**\n * Subscribes the passed listener to the event.\n * @param event {JitsiConnectionEvents} the connection event.\n * @param listener {Function} the function that will receive the event\n */\nJitsiConnection.prototype.addEventListener = function(event, listener) {\n    this.xmpp.addListener(event, listener);\n};\n\n/**\n * Unsubscribes the passed handler.\n * @param event {JitsiConnectionEvents} the connection event.\n * @param listener {Function} the function that will receive the event\n */\nJitsiConnection.prototype.removeEventListener = function(event, listener) {\n    this.xmpp.removeListener(event, listener);\n};\n\n/**\n * Returns measured connectionTimes.\n */\nJitsiConnection.prototype.getConnectionTimes = function() {\n    return this.xmpp.connectionTimes;\n};\n\n/**\n * Adds new feature to the list of supported features for the local\n * participant.\n * @param {String} feature the name of the feature.\n * @param {boolean} submit if true - the new list of features will be\n * immediately submitted to the others.\n */\nJitsiConnection.prototype.addFeature = function(feature, submit = false) {\n    return this.xmpp.caps.addFeature(feature, submit);\n};\n\n/**\n * Removes a feature from the list of supported features for the local\n * participant\n * @param {String} feature the name of the feature.\n * @param {boolean} submit if true - the new list of features will be\n * immediately submitted to the others.\n */\nJitsiConnection.prototype.removeFeature = function(feature, submit = false) {\n    return this.xmpp.caps.removeFeature(feature, submit);\n};\n","/**\n * The errors for the connection.\n */\n\n/**\n * Indicates that the connection was dropped with an error which was most likely\n * caused by some networking issues. The dropped term in this context means that\n * the connection was closed unexpectedly (not on user's request).\n *\n * One example is 'item-not-found' error thrown by Prosody when the BOSH session\n * times out after 60 seconds of inactivity. On the other hand 'item-not-found'\n * could also happen when BOSH request is sent to the server with the session-id\n * that is not know to the server. But this should not happen in lib-jitsi-meet\n * case as long as the service is configured correctly (there is no bug).\n */\nexport const CONNECTION_DROPPED_ERROR = 'connection.droppedError';\n\n/**\n * Not specified errors.\n */\nexport const OTHER_ERROR = 'connection.otherError';\n\n/**\n * Indicates that a password is required in order to join the conference.\n */\nexport const PASSWORD_REQUIRED = 'connection.passwordRequired';\n\n/**\n * Indicates that the connection was dropped, because of too many 5xx HTTP\n * errors on BOSH requests.\n */\nexport const SERVER_ERROR = 'connection.serverError';\n","/**\n * The events for the connection.\n */\n\n/**\n * Indicates that the connection has been disconnected. The event provides\n * the following parameters to its listeners:\n *\n * @param msg {string} a message associated with the disconnect such as the\n * last (known) error message\n */\nexport const CONNECTION_DISCONNECTED = 'connection.connectionDisconnected';\n\n/**\n * Indicates that the connection has been established. The event provides\n * the following parameters to its listeners:\n *\n * @param id {string} the ID of the local endpoint/participant/peer (within\n * the context of the established connection)\n */\nexport const CONNECTION_ESTABLISHED = 'connection.connectionEstablished';\n\n/**\n * Indicates that the connection has been failed for some reason. The event\n * provides the following parameters to its listeners:\n *\n * @param errType {JitsiConnectionErrors} the type of error associated with\n * the failure\n * @param errReason {string} the error (message) associated with the failure\n * @param credentials {object} the credentials used to connect (if any)\n * @param errReasonDetails {object} an optional object with details about\n * the error, like shard moving, suspending. Used for analytics purposes.\n */\nexport const CONNECTION_FAILED = 'connection.connectionFailed';\n\n/**\n * Indicates that the performed action cannot be executed because the\n * connection is not in the correct state(connected, disconnected, etc.)\n */\nexport const WRONG_STATE = 'connection.wrongState';\n","import EventEmitter from 'events';\n\nimport * as MediaType from './service/RTC/MediaType';\nimport browser from './modules/browser';\nimport RTC from './modules/RTC/RTC';\nimport RTCEvents from './service/RTC/RTCEvents';\nimport Statistics from './modules/statistics/statistics';\n\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\n\nconst AUDIO_PERMISSION_NAME = 'microphone';\nconst PERMISSION_GRANTED_STATUS = 'granted';\nconst VIDEO_PERMISSION_NAME = 'camera';\n\n/**\n * Media devices utilities for Jitsi.\n */\nclass JitsiMediaDevices {\n    /**\n     * Initializes a {@code JitsiMediaDevices} object. There will be a single\n     * instance of this class.\n     */\n    constructor() {\n        this._eventEmitter = new EventEmitter();\n        this._grantedPermissions = {};\n\n        RTC.addListener(\n            RTCEvents.DEVICE_LIST_CHANGED,\n            devices =>\n                this._eventEmitter.emit(\n                    JitsiMediaDevicesEvents.DEVICE_LIST_CHANGED,\n                    devices));\n        RTC.addListener(\n            RTCEvents.DEVICE_LIST_AVAILABLE,\n            devices =>\n                this._logOutputDevice(\n                    this.getAudioOutputDevice(),\n                    devices));\n        RTC.addListener(\n            RTCEvents.GRANTED_PERMISSIONS,\n            grantedPermissions =>\n                this._handleGrantedPermissions(grantedPermissions));\n\n        // Test if the W3C Permissions API is implemented and the 'camera' and\n        // 'microphone' permissions are implemented. (Testing for at least one\n        // of them seems sufficient).\n        this._permissionsApiSupported = new Promise(resolve => {\n            if (!navigator.permissions) {\n                resolve(false);\n\n                return;\n            }\n\n            navigator.permissions.query({ name: VIDEO_PERMISSION_NAME })\n                .then(() => resolve(true), () => resolve(false));\n        });\n    }\n\n    /**\n     * Updated the local granted permissions cache. A permissions might be\n     * granted, denied, or undefined. This is represented by having its media\n     * type key set to {@code true} or {@code false} respectively.\n     *\n     * @param {Object} grantedPermissions - Array with the permissions\n     * which were granted.\n     */\n    _handleGrantedPermissions(grantedPermissions) {\n        this._grantedPermissions = {\n            ...this._grantedPermissions,\n            ...grantedPermissions\n        };\n    }\n\n    /**\n     * Gathers data and sends it to statistics.\n     * @param deviceID the device id to log\n     * @param devices list of devices\n     */\n    _logOutputDevice(deviceID, devices) {\n        const device\n            = devices.find(\n                d => d.kind === 'audiooutput' && d.deviceId === deviceID);\n\n        if (device) {\n            Statistics.sendActiveDeviceListEvent(\n                RTC.getEventDataForActiveDevice(device));\n        }\n    }\n\n    /**\n     * Executes callback with list of media devices connected.\n     * @param {function} callback\n     */\n    enumerateDevices(callback) {\n        RTC.enumerateDevices(callback);\n    }\n\n    /**\n     * Checks if its possible to enumerate available cameras/micropones.\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\n     * the WebRTC stack is ready, either with true if the device listing is\n     * available available or with false otherwise.\n     */\n    isDeviceListAvailable() {\n        return RTC.isDeviceListAvailable();\n    }\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @param {string} [deviceType] - type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     */\n    isDeviceChangeAvailable(deviceType) {\n        return RTC.isDeviceChangeAvailable(deviceType);\n    }\n\n    /**\n     * Checks if the permission for the given device was granted.\n     *\n     * @param {'audio'|'video'} [type] - type of devices to check,\n     *      undefined stands for both 'audio' and 'video' together\n     * @returns {Promise<boolean>}\n     */\n    isDevicePermissionGranted(type) {\n        return new Promise(resolve => {\n            // Shortcut: first check if we already know the permission was\n            // granted.\n            if (type in this._grantedPermissions) {\n                resolve(this._grantedPermissions[type]);\n\n                return;\n            }\n\n            // Check using the Permissions API.\n            this._permissionsApiSupported.then(supported => {\n                if (!supported) {\n                    resolve(false);\n\n                    return;\n                }\n\n                const promises = [];\n\n                switch (type) {\n                case MediaType.VIDEO:\n                    promises.push(\n                        navigator.permissions.query({\n                            name: VIDEO_PERMISSION_NAME\n                        }));\n                    break;\n                case MediaType.AUDIO:\n                    promises.push(\n                        navigator.permissions.query({\n                            name: AUDIO_PERMISSION_NAME\n                        }));\n                    break;\n                default:\n                    promises.push(\n                        navigator.permissions.query({\n                            name: VIDEO_PERMISSION_NAME\n                        }));\n                    promises.push(\n                        navigator.permissions.query({\n                            name: AUDIO_PERMISSION_NAME\n                        }));\n                }\n\n                Promise.all(promises).then(\n                    results => resolve(results.every(permissionStatus => {\n                        // The status attribute is deprecated, and state\n                        // should be used instead, but check both for now\n                        // for backwards compatibility.\n                        const grantStatus = permissionStatus.state\n                            || permissionStatus.status;\n\n                        return grantStatus === PERMISSION_GRANTED_STATUS;\n                    })),\n                    () => resolve(false)\n                );\n            });\n        });\n    }\n\n    /**\n     * Returns true if it is possible to be simultaneously capturing audio\n     * from more than one device.\n     *\n     * @returns {boolean}\n     */\n    isMultipleAudioInputSupported() {\n        return !browser.isFirefox();\n    }\n\n    /**\n     * Returns currently used audio output device id, 'default' stands\n     * for default device\n     * @returns {string}\n     */\n    getAudioOutputDevice() {\n        return RTC.getAudioOutputDevice();\n    }\n\n    /**\n     * Sets current audio output device.\n     * @param {string} deviceId - id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices(), 'default' is for\n     *      default device\n     * @returns {Promise} - resolves when audio output is changed, is rejected\n     *      otherwise\n     */\n    setAudioOutputDevice(deviceId) {\n        const availableDevices = RTC.getCurrentlyAvailableMediaDevices();\n\n        if (availableDevices && availableDevices.length > 0) {\n            // if we have devices info report device to stats\n            // normally this will not happen on startup as this method is called\n            // too early. This will happen only on user selection of new device\n            this._logOutputDevice(\n                deviceId, RTC.getCurrentlyAvailableMediaDevices());\n        }\n\n        return RTC.setAudioOutputDevice(deviceId);\n    }\n\n    /**\n     * Adds an event handler.\n     * @param {string} event - event name\n     * @param {function} handler - event handler\n     */\n    addEventListener(event, handler) {\n        this._eventEmitter.addListener(event, handler);\n    }\n\n    /**\n     * Removes event handler.\n     * @param {string} event - event name\n     * @param {function} handler - event handler\n     */\n    removeEventListener(event, handler) {\n        this._eventEmitter.removeListener(event, handler);\n    }\n\n    /**\n     * Emits an event.\n     * @param {string} event - event name\n     */\n    emitEvent(event, ...args) {\n        this._eventEmitter.emit(event, ...args);\n    }\n\n    /**\n     * Returns whether or not the current browser can support capturing video,\n     * be it camera or desktop, and displaying received video.\n     *\n     * @returns {boolean}\n     */\n    supportsVideo() {\n        // Defer to the browser capabilities to allow exposure of the api to the\n        // consumer but prevent other files from having to import\n        // JitsiMediaDevices.\n        return browser.supportsVideo();\n    }\n}\n\nexport default new JitsiMediaDevices();\n","/**\n * The events for the media devices.\n */\n\n/**\n * Indicates that the list of available media devices has been changed. The\n * event provides the following parameters to its listeners:\n *\n * @param {MediaDeviceInfo[]} devices - array of MediaDeviceInfo or\n *  MediaDeviceInfo-like objects that are currently connected.\n *  @see https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo\n */\nexport const DEVICE_LIST_CHANGED = 'mediaDevices.devicechange';\n\n/**\n * Indicates that the environment is currently showing permission prompt to\n * access camera and/or microphone. The event provides the following\n * parameters to its listeners:\n *\n * @param {'chrome'|'opera'|'firefox'|'safari'|'nwjs'\n *  |'react-native'|'android'} environmentType - type of browser or\n *  other execution environment.\n */\nexport const PERMISSION_PROMPT_IS_SHOWN\n    = 'mediaDevices.permissionPromptIsShown';\n","/* global __filename */\n\nimport { createGetUserMediaEvent } from './service/statistics/AnalyticsEvents';\nimport AuthUtil from './modules/util/AuthUtil';\nimport * as ConnectionQualityEvents\n    from './service/connectivity/ConnectionQualityEvents';\nimport * as E2ePingEvents from './service/e2eping/E2ePingEvents';\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport JitsiConnection from './JitsiConnection';\nimport * as JitsiConnectionErrors from './JitsiConnectionErrors';\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\nimport JitsiMediaDevices from './JitsiMediaDevices';\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\nimport JitsiTrackError from './JitsiTrackError';\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\nimport * as JitsiTranscriptionStatus from './JitsiTranscriptionStatus';\nimport LocalStatsCollector from './modules/statistics/LocalStatsCollector';\nimport Logger from 'jitsi-meet-logger';\nimport * as MediaType from './service/RTC/MediaType';\nimport Resolutions from './service/RTC/Resolutions';\nimport { ParticipantConnectionStatus }\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport RTC from './modules/RTC/RTC';\nimport browser from './modules/browser';\nimport ScriptUtil from './modules/util/ScriptUtil';\nimport recordingConstants from './modules/recording/recordingConstants';\nimport ProxyConnectionService\n    from './modules/proxyconnection/ProxyConnectionService';\nimport Statistics from './modules/statistics/statistics';\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\n\nconst logger = Logger.getLogger(__filename);\n\n/**\n * The amount of time to wait until firing\n * {@link JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN} event.\n */\nconst USER_MEDIA_PERMISSION_PROMPT_TIMEOUT = 1000;\n\n/**\n * Gets the next lowest desirable resolution to try for a camera. If the given\n * resolution is already the lowest acceptable resolution, returns {@code null}.\n *\n * @param resolution the current resolution\n * @return the next lowest resolution from the given one, or {@code null} if it\n * is already the lowest acceptable resolution.\n */\nfunction getLowerResolution(resolution) {\n    if (!Resolutions[resolution]) {\n        return null;\n    }\n    const order = Resolutions[resolution].order;\n    let res = null;\n    let resName = null;\n\n    Object.keys(Resolutions).forEach(r => {\n        const value = Resolutions[r];\n\n        if (!res || (res.order < value.order && value.order < order)) {\n            resName = r;\n            res = value;\n        }\n    });\n\n    if (resName === resolution) {\n        resName = null;\n    }\n\n    return resName;\n}\n\n/**\n * Extracts from an 'options' objects with a specific format (TODO what IS the\n * format?) the attributes which are to be logged in analytics events.\n *\n * @param options gum options (???)\n * @returns {*} the attributes to attach to analytics events.\n */\nfunction getAnalyticsAttributesFromOptions(options) {\n    const attributes = {\n        'audio_requested':\n            options.devices.includes('audio'),\n        'video_requested':\n            options.devices.includes('video'),\n        'screen_sharing_requested':\n            options.devices.includes('desktop')\n    };\n\n    if (attributes.video_requested) {\n        attributes.resolution = options.resolution;\n    }\n\n    return attributes;\n}\n\n/**\n * Tries to deal with the following problem: {@code JitsiMeetJS} is not only\n * this module, it's also a global (i.e. attached to {@code window}) namespace\n * for all globals of the projects in the Jitsi Meet family. If lib-jitsi-meet\n * is loaded through an HTML {@code script} tag, {@code JitsiMeetJS} will\n * automatically be attached to {@code window} by webpack. Unfortunately,\n * webpack's source code does not check whether the global variable has already\n * been assigned and overwrites it. Which is OK for the module\n * {@code JitsiMeetJS} but is not OK for the namespace {@code JitsiMeetJS}\n * because it may already contain the values of other projects in the Jitsi Meet\n * family. The solution offered here works around webpack by merging all\n * existing values of the namespace {@code JitsiMeetJS} into the module\n * {@code JitsiMeetJS}.\n *\n * @param {Object} module - The module {@code JitsiMeetJS} (which will be\n * exported and may be attached to {@code window} by webpack later on).\n * @private\n * @returns {Object} - A {@code JitsiMeetJS} module which contains all existing\n * value of the namespace {@code JitsiMeetJS} (if any).\n */\nfunction _mergeNamespaceAndModule(module) {\n    return (\n        typeof window.JitsiMeetJS === 'object'\n            ? Object.assign({}, window.JitsiMeetJS, module)\n            : module);\n}\n\n/**\n * The public API of the Jitsi Meet library (a.k.a. {@code JitsiMeetJS}).\n */\nexport default _mergeNamespaceAndModule({\n\n    version: '{#COMMIT_HASH#}',\n\n    JitsiConnection,\n\n    /**\n     * {@code ProxyConnectionService} is used to connect a remote peer to a\n     * local Jitsi participant without going through a Jitsi conference. It is\n     * currently used for room integration development, specifically wireless\n     * screensharing. Its API is experimental and will likely change; usage of\n     * it is advised against.\n     */\n    ProxyConnectionService,\n\n    constants: {\n        participantConnectionStatus: ParticipantConnectionStatus,\n        recording: recordingConstants,\n        sipVideoGW: VideoSIPGWConstants,\n        transcriptionStatus: JitsiTranscriptionStatus\n    },\n    events: {\n        conference: JitsiConferenceEvents,\n        connection: JitsiConnectionEvents,\n        track: JitsiTrackEvents,\n        mediaDevices: JitsiMediaDevicesEvents,\n        connectionQuality: ConnectionQualityEvents,\n        e2eping: E2ePingEvents\n    },\n    errors: {\n        conference: JitsiConferenceErrors,\n        connection: JitsiConnectionErrors,\n        track: JitsiTrackErrors\n    },\n    errorTypes: {\n        JitsiTrackError\n    },\n    logLevels: Logger.levels,\n    mediaDevices: JitsiMediaDevices,\n    analytics: Statistics.analytics,\n    init(options = {}) {\n        Statistics.init(options);\n\n        // Initialize global window.connectionTimes\n        // FIXME do not use 'window'\n        if (!window.connectionTimes) {\n            window.connectionTimes = {};\n        }\n\n        if (options.enableAnalyticsLogging !== true) {\n            logger.warn('Analytics disabled, disposing.');\n            this.analytics.dispose();\n        }\n\n        if (options.enableWindowOnErrorHandler) {\n            GlobalOnErrorHandler.addHandler(\n                this.getGlobalOnErrorHandler.bind(this));\n        }\n\n        // Log deployment-specific information, if available. Defined outside\n        // the application by individual deployments\n        const aprops = options.deploymentInfo;\n\n        if (aprops && Object.keys(aprops).length > 0) {\n            const logObject = {};\n\n            for (const attr in aprops) {\n                if (aprops.hasOwnProperty(attr)) {\n                    logObject[attr] = aprops[attr];\n                }\n            }\n\n            logObject.id = 'deployment_info';\n            Statistics.sendLog(JSON.stringify(logObject));\n        }\n\n        if (this.version) {\n            const logObject = {\n                id: 'component_version',\n                component: 'lib-jitsi-meet',\n                version: this.version\n            };\n\n            Statistics.sendLog(JSON.stringify(logObject));\n        }\n\n        return RTC.init(options);\n    },\n\n    /**\n     * Returns whether the desktop sharing is enabled or not.\n     *\n     * @returns {boolean}\n     */\n    isDesktopSharingEnabled() {\n        return RTC.isDesktopSharingEnabled();\n    },\n\n    /**\n     * Returns whether the current execution environment supports WebRTC (for\n     * use within this library).\n     *\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\n     * execution environment (for use within this library); {@code false},\n     * otherwise.\n     */\n    isWebRtcSupported() {\n        return RTC.isWebRtcSupported();\n    },\n\n    setLogLevel(level) {\n        Logger.setLogLevel(level);\n    },\n\n    /**\n     * Sets the log level to the <tt>Logger</tt> instance with given id.\n     *\n     * @param {Logger.levels} level the logging level to be set\n     * @param {string} id the logger id to which new logging level will be set.\n     * Usually it's the name of the JavaScript source file including the path\n     * ex. \"modules/xmpp/ChatRoom.js\"\n     */\n    setLogLevelById(level, id) {\n        Logger.setLogLevelById(level, id);\n    },\n\n    /**\n     * Registers new global logger transport to the library logging framework.\n     *\n     * @param globalTransport\n     * @see Logger.addGlobalTransport\n     */\n    addGlobalLogTransport(globalTransport) {\n        Logger.addGlobalTransport(globalTransport);\n    },\n\n    /**\n     * Removes global logging transport from the library logging framework.\n     *\n     * @param globalTransport\n     * @see Logger.removeGlobalTransport\n     */\n    removeGlobalLogTransport(globalTransport) {\n        Logger.removeGlobalTransport(globalTransport);\n    },\n\n    /**\n    * Sets global options which will be used by all loggers. Changing these\n    * works even after other loggers are created.\n    *\n    * @param options\n    * @see Logger.setGlobalOptions\n    */\n    setGlobalLogOptions(options) {\n        Logger.setGlobalOptions(options);\n    },\n\n    /**\n     * Creates the media tracks and returns them trough the callback.\n     *\n     * @param options Object with properties / settings specifying the tracks\n     * which should be created. should be created or some additional\n     * configurations about resolution for example.\n     * @param {Array} options.effects optional effects array for the track\n     * @param {Array} options.devices the devices that will be requested\n     * @param {string} options.resolution resolution constraints\n     * @param {string} options.cameraDeviceId\n     * @param {string} options.micDeviceId\n     * @param {object} options.desktopSharingExtensionExternalInstallation -\n     * enables external installation process for desktop sharing extension if\n     * the inline installation is not posible. The following properties should\n     * be provided:\n     * @param {intiger} interval - the interval (in ms) for\n     * checking whether the desktop sharing extension is installed or not\n     * @param {Function} checkAgain - returns boolean. While checkAgain()==true\n     * createLocalTracks will wait and check on every \"interval\" ms for the\n     * extension. If the desktop extension is not install and checkAgain()==true\n     * createLocalTracks will finish with rejected Promise.\n     * @param {Function} listener - The listener will be called to notify the\n     * user of lib-jitsi-meet that createLocalTracks is starting external\n     * extension installation process.\n     * NOTE: If the inline installation process is not possible and external\n     * installation is enabled the listener property will be called to notify\n     * the start of external installation process. After that createLocalTracks\n     * will start to check for the extension on every interval ms until the\n     * plugin is installed or until checkAgain return false. If the extension\n     * is found createLocalTracks will try to get the desktop sharing track and\n     * will finish the execution. If checkAgain returns false, createLocalTracks\n     * will finish the execution with rejected Promise.\n     *\n     * @param {boolean} (firePermissionPromptIsShownEvent) - if event\n     * JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN should be fired\n     * @param originalOptions - internal use only, to be able to store the\n     * originally requested options.\n     * @returns {Promise.<{Array.<JitsiTrack>}, JitsiConferenceError>} A promise\n     * that returns an array of created JitsiTracks if resolved, or a\n     * JitsiConferenceError if rejected.\n     */\n    createLocalTracks(\n            options = {}, firePermissionPromptIsShownEvent, originalOptions) {\n        let promiseFulfilled = false;\n\n        if (firePermissionPromptIsShownEvent === true) {\n            window.setTimeout(() => {\n                if (!promiseFulfilled) {\n                    JitsiMediaDevices.emitEvent(\n                        JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN,\n                        browser.getName());\n                }\n            }, USER_MEDIA_PERMISSION_PROMPT_TIMEOUT);\n        }\n\n        if (!window.connectionTimes) {\n            window.connectionTimes = {};\n        }\n        window.connectionTimes['obtainPermissions.start']\n            = window.performance.now();\n\n        return RTC.obtainAudioAndVideoPermissions(options)\n            .then(tracks => {\n                promiseFulfilled = true;\n\n                window.connectionTimes['obtainPermissions.end']\n                    = window.performance.now();\n\n                Statistics.sendAnalytics(\n                    createGetUserMediaEvent(\n                        'success',\n                        getAnalyticsAttributesFromOptions(options)));\n\n                if (!RTC.options.disableAudioLevels) {\n                    for (let i = 0; i < tracks.length; i++) {\n                        const track = tracks[i];\n                        const mStream = track.getOriginalStream();\n\n                        if (track.getType() === MediaType.AUDIO) {\n                            Statistics.startLocalStats(mStream,\n                                track.setAudioLevel.bind(track));\n                            track.addEventListener(\n                                JitsiTrackEvents.LOCAL_TRACK_STOPPED,\n                                () => {\n                                    Statistics.stopLocalStats(mStream);\n                                });\n                        }\n                    }\n                }\n\n                // set real device ids\n                const currentlyAvailableMediaDevices\n                    = RTC.getCurrentlyAvailableMediaDevices();\n\n                if (currentlyAvailableMediaDevices) {\n                    for (let i = 0; i < tracks.length; i++) {\n                        const track = tracks[i];\n\n                        track._setRealDeviceIdFromDeviceList(\n                            currentlyAvailableMediaDevices);\n                    }\n                }\n\n                return tracks;\n            })\n            .catch(error => {\n                promiseFulfilled = true;\n\n                if (error.name === JitsiTrackErrors.UNSUPPORTED_RESOLUTION\n                    && !browser.usesNewGumFlow()) {\n                    const oldResolution = options.resolution || '720';\n                    const newResolution = getLowerResolution(oldResolution);\n\n                    if (newResolution !== null) {\n                        options.resolution = newResolution;\n\n                        logger.debug(\n                            'Retry createLocalTracks with resolution',\n                            newResolution);\n\n                        Statistics.sendAnalytics(createGetUserMediaEvent(\n                            'warning',\n                            {\n                                'old_resolution': oldResolution,\n                                'new_resolution': newResolution,\n                                reason: 'unsupported resolution'\n                            }));\n\n                        return this.createLocalTracks(\n                            options,\n                            undefined,\n                            originalOptions || Object.assign({}, options));\n                    }\n\n                    // We tried everything. If there is a mandatory device id,\n                    // remove it and let gum find a device to use.\n                    if (originalOptions\n                        && error.gum.constraints\n                        && error.gum.constraints.video\n                        && error.gum.constraints.video.mandatory\n                        && error.gum.constraints.video.mandatory.sourceId) {\n                        originalOptions.cameraDeviceId = undefined;\n\n                        return this.createLocalTracks(originalOptions);\n                    }\n                }\n\n                if (error.name\n                        === JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED) {\n                    // User cancelled action is not really an error, so only\n                    // log it as an event to avoid having conference classified\n                    // as partially failed\n                    const logObject = {\n                        id: 'chrome_extension_user_canceled',\n                        message: error.message\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n\n                    Statistics.sendAnalytics(\n                        createGetUserMediaEvent(\n                            'warning',\n                            {\n                                reason: 'extension install user canceled'\n                            }));\n                } else if (error.name === JitsiTrackErrors.NOT_FOUND) {\n                    // logs not found devices with just application log to cs\n                    const logObject = {\n                        id: 'usermedia_missing_device',\n                        status: error.gum.devices\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n\n                    const attributes\n                        = getAnalyticsAttributesFromOptions(options);\n\n                    attributes.reason = 'device not found';\n                    attributes.devices = error.gum.devices.join('.');\n                    Statistics.sendAnalytics(\n                        createGetUserMediaEvent('error', attributes));\n                } else {\n                    // Report gUM failed to the stats\n                    Statistics.sendGetUserMediaFailed(error);\n\n                    const attributes\n                        = getAnalyticsAttributesFromOptions(options);\n\n                    attributes.reason = error.name;\n                    Statistics.sendAnalytics(\n                        createGetUserMediaEvent('error', attributes));\n                }\n\n                window.connectionTimes['obtainPermissions.end']\n                    = window.performance.now();\n\n                return Promise.reject(error);\n            });\n    },\n\n    /**\n     * Checks if its possible to enumerate available cameras/microphones.\n     *\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\n     * the WebRTC stack is ready, either with true if the device listing is\n     * available available or with false otherwise.\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceListAvailable instead\n     */\n    isDeviceListAvailable() {\n        logger.warn('This method is deprecated, use '\n            + 'JitsiMeetJS.mediaDevices.isDeviceListAvailable instead');\n\n        return this.mediaDevices.isDeviceListAvailable();\n    },\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     *\n     * @param {string} [deviceType] - type of device to change. Default is\n     * {@code undefined} or 'input', 'output' - for audio output device change.\n     * @returns {boolean} {@code true} if available; {@code false}, otherwise.\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead\n     */\n    isDeviceChangeAvailable(deviceType) {\n        logger.warn('This method is deprecated, use '\n            + 'JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead');\n\n        return this.mediaDevices.isDeviceChangeAvailable(deviceType);\n    },\n\n\n    /**\n     * Checks if the current environment supports having multiple audio\n     * input devices in use simultaneously.\n     *\n     * @returns {boolean} True if multiple audio input devices can be used.\n     */\n    isMultipleAudioInputSupported() {\n        return this.mediaDevices.isMultipleAudioInputSupported();\n    },\n\n    /**\n     * Checks if local tracks can collect stats and collection is enabled.\n     *\n     * @param {boolean} True if stats are being collected for local tracks.\n     */\n    isCollectingLocalStats() {\n        return Statistics.audioLevelsEnabled\n            && LocalStatsCollector.isLocalStatsSupported();\n    },\n\n    /**\n     * Executes callback with list of media devices connected.\n     *\n     * @param {function} callback\n     * @deprecated use JitsiMeetJS.mediaDevices.enumerateDevices instead\n     */\n    enumerateDevices(callback) {\n        logger.warn('This method is deprecated, use '\n            + 'JitsiMeetJS.mediaDevices.enumerateDevices instead');\n        this.mediaDevices.enumerateDevices(callback);\n    },\n\n    /* eslint-disable max-params */\n\n    /**\n     * @returns function that can be used to be attached to window.onerror and\n     * if options.enableWindowOnErrorHandler is enabled returns\n     * the function used by the lib.\n     * (function(message, source, lineno, colno, error)).\n     */\n    getGlobalOnErrorHandler(message, source, lineno, colno, error) {\n        logger.error(\n            `UnhandledError: ${message}`,\n            `Script: ${source}`,\n            `Line: ${lineno}`,\n            `Column: ${colno}`,\n            'StackTrace: ', error);\n        Statistics.reportGlobalError(error);\n    },\n\n    /* eslint-enable max-params */\n\n    /**\n     * Represents a hub/namespace for utility functionality which may be of\n     * interest to lib-jitsi-meet clients.\n     */\n    util: {\n        AuthUtil,\n        ScriptUtil,\n        browser\n    }\n});\n","\nimport { Strophe } from 'strophe.js';\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport { ParticipantConnectionStatus }\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport * as MediaType from './service/RTC/MediaType';\n\nconst logger = getLogger(__filename);\n\n/**\n * Represents a participant in (i.e. a member of) a conference.\n */\nexport default class JitsiParticipant {\n\n    /* eslint-disable max-params */\n\n    /**\n     * Initializes a new JitsiParticipant instance.\n     *\n     * @constructor\n     * @param jid the conference XMPP jid\n     * @param conference\n     * @param displayName\n     * @param {Boolean} hidden - True if the new JitsiParticipant instance is to\n     * represent a hidden participant; otherwise, false.\n     * @param {string} statsID - optional participant statsID\n     * @param {string} status - the initial status if any.\n     * @param {object} identity - the xmpp identity\n     */\n    constructor(jid, conference, displayName, hidden, statsID, status, identity) {\n        this._jid = jid;\n        this._id = Strophe.getResourceFromJid(jid);\n        this._conference = conference;\n        this._displayName = displayName;\n        this._supportsDTMF = false;\n        this._tracks = [];\n        this._role = 'none';\n        this._status = status;\n        this._hidden = hidden;\n        this._statsID = statsID;\n        this._connectionStatus = ParticipantConnectionStatus.ACTIVE;\n        this._properties = {};\n        this._identity = identity;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * @returns {JitsiConference} The conference that this participant belongs\n     * to.\n     */\n    getConference() {\n        return this._conference;\n    }\n\n    /**\n     * Gets the value of a property of this participant.\n     */\n    getProperty(name) {\n        return this._properties[name];\n    }\n\n    /**\n     * Checks whether this <tt>JitsiParticipant</tt> has any video tracks which\n     * are muted according to their underlying WebRTC <tt>MediaStreamTrack</tt>\n     * muted status.\n     * @return {boolean} <tt>true</tt> if this <tt>participant</tt> contains any\n     * video <tt>JitsiTrack</tt>s which are muted as defined in\n     * {@link JitsiTrack.isWebRTCTrackMuted}.\n     */\n    hasAnyVideoTrackWebRTCMuted() {\n        return (\n            this.getTracks().some(\n                jitsiTrack =>\n                    jitsiTrack.getType() === MediaType.VIDEO\n                        && jitsiTrack.isWebRTCTrackMuted()));\n    }\n\n    /**\n     * Updates participant's connection status.\n     * @param {string} state the current participant connection state.\n     * {@link ParticipantConnectionStatus}.\n     * @private\n     */\n    _setConnectionStatus(status) {\n        this._connectionStatus = status;\n    }\n\n    /**\n     * Return participant's connectivity status.\n     *\n     * @returns {string} the connection status\n     * <tt>ParticipantConnectionStatus</tt> of the user.\n     * {@link ParticipantConnectionStatus}.\n     */\n    getConnectionStatus() {\n        return this._connectionStatus;\n    }\n\n    /**\n     * Sets the value of a property of this participant, and fires an event if\n     * the value has changed.\n     * @name the name of the property.\n     * @value the value to set.\n     */\n    setProperty(name, value) {\n        const oldValue = this._properties[name];\n\n        if (value !== oldValue) {\n            this._properties[name] = value;\n            this._conference.eventEmitter.emit(\n                JitsiConferenceEvents.PARTICIPANT_PROPERTY_CHANGED,\n                this,\n                name,\n                oldValue,\n                value);\n        }\n    }\n\n    /**\n     * @returns {Array.<JitsiTrack>} The list of media tracks for this\n     * participant.\n     */\n    getTracks() {\n        return this._tracks.slice();\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @returns {Array.<JitsiTrack>} an array of media tracks for this\n     * participant, for given media type.\n     */\n    getTracksByMediaType(mediaType) {\n        return this.getTracks().filter(track => track.getType() === mediaType);\n    }\n\n    /**\n     * @returns {String} The ID of this participant.\n     */\n    getId() {\n        return this._id;\n    }\n\n    /**\n     * @returns {String} The JID of this participant.\n     */\n    getJid() {\n        return this._jid;\n    }\n\n    /**\n     * @returns {String} The human-readable display name of this participant.\n     */\n    getDisplayName() {\n        return this._displayName;\n    }\n\n    /**\n     * @returns {String} The stats ID of this participant.\n     */\n    getStatsID() {\n        return this._statsID;\n    }\n\n    /**\n     * @returns {String} The status of the participant.\n     */\n    getStatus() {\n        return this._status;\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant is a moderator or not.\n     */\n    isModerator() {\n        return this._role === 'moderator';\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant is a hidden participant. Some\n     * special system participants may want to join hidden (like for example the\n     * recorder).\n     */\n    isHidden() {\n        return this._hidden;\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant has muted their audio.\n     */\n    isAudioMuted() {\n        return this._isMediaTypeMuted(MediaType.AUDIO);\n    }\n\n    /**\n     * Determines whether all JitsiTracks which are of a specific MediaType and\n     * which belong to this JitsiParticipant are muted.\n     *\n     * @param {MediaType} mediaType - The MediaType of the JitsiTracks to be\n     * checked.\n     * @private\n     * @returns {Boolean} True if all JitsiTracks which are of the specified\n     * mediaType and which belong to this JitsiParticipant are muted; otherwise,\n     * false.\n     */\n    _isMediaTypeMuted(mediaType) {\n        return this.getTracks().reduce(\n            (muted, track) =>\n                muted && (track.getType() !== mediaType || track.isMuted()),\n            true);\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant has muted their video.\n     */\n    isVideoMuted() {\n        return this._isMediaTypeMuted(MediaType.VIDEO);\n    }\n\n    /**\n     * @returns {String} The role of this participant.\n     */\n    getRole() {\n        return this._role;\n    }\n\n    /**\n     *\n     */\n    supportsDTMF() {\n        return this._supportsDTMF;\n    }\n\n    /**\n     * Returns a set with the features for the participant.\n     * @param {int} timeout the timeout in ms for reply from the participant.\n     * @returns {Promise<Set<String>, Error>}\n     */\n    getFeatures(timeout = 5000) {\n        return this._conference.xmpp.caps.getFeatures(this._jid, timeout)\n            .catch(error => {\n                // when we detect version mismatch we return a string as error\n                // we want to retry in such case\n                if (error && error.constructor === String) {\n                    return this._conference.xmpp.caps.getFeatures(this._jid, timeout);\n                }\n\n                logger.warn(`Failed to discover features of ${this._jid}`, error);\n\n                return Promise.reject(error);\n            });\n    }\n\n    /**\n     * Returns the bot type for the participant.\n     *\n     * @returns {string|undefined} - The bot type of the participant.\n     */\n    getBotType() {\n        return this._botType;\n    }\n}\n","import * as JitsiTrackErrors from './JitsiTrackErrors';\n\nconst TRACK_ERROR_TO_MESSAGE_MAP = {};\n\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.UNSUPPORTED_RESOLUTION]\n    = 'Video resolution is not supported: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR]\n    = 'Failed to install Chrome extension';\nTRACK_ERROR_TO_MESSAGE_MAP[\n    JitsiTrackErrors.CHROME_EXTENSION_USER_GESTURE_REQUIRED]\n    = 'Failed to install Chrome extension - installations can only be initiated'\n        + ' by a user gesture.';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED]\n    = 'User canceled Chrome\\'s screen sharing prompt';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR]\n    = 'Unknown error from Chrome extension';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR]\n    = 'Unkown error from desktop picker';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND]\n    = 'Failed to detect desktop picker';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.GENERAL]\n    = 'Generic getUserMedia error';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.PERMISSION_DENIED]\n    = 'User denied permission to use device(s): ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.NOT_FOUND]\n    = 'Requested device(s) was/were not found: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CONSTRAINT_FAILED]\n    = 'Constraint could not be satisfied: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_IS_DISPOSED]\n    = 'Track has been already disposed';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_NO_STREAM_FOUND]\n    = 'Track does not have an associated Media Stream';\n\n// FIXME: Using prototype inheritance because otherwise instanceof is not\n// working properly (see https://github.com/babel/babel/issues/3083)\n\n/**\n *\n * Represents an error that occurred to a JitsiTrack. Can represent various\n * types of errors. For error descriptions (@see JitsiTrackErrors).\n *\n * @extends Error\n *\n *\n * @constructor\n * @param {Object|string} error - error object or error name\n * @param {Object|string} (options) - getUserMedia constraints object or\n * error message\n * @param {('audio'|'video'|'desktop'|'screen'|'audiooutput')[]} (devices) -\n * list of getUserMedia requested devices\n */\nfunction JitsiTrackError(error, options, devices) {\n    if (typeof error === 'object' && typeof error.name !== 'undefined') {\n        /**\n         * Additional information about original getUserMedia error\n         * and constraints.\n         * @type {{\n         *     error: Object,\n         *     constraints: Object,\n         *     devices: Array.<'audio'|'video'|'desktop'|'screen'>\n         * }}\n         */\n        this.gum = {\n            error,\n            constraints: options,\n            devices: devices && Array.isArray(devices)\n                ? devices.slice(0)\n                : undefined\n        };\n\n        switch (error.name) {\n        case 'NotAllowedError':\n        case 'PermissionDeniedError':\n        case 'SecurityError':\n            this.name = JitsiTrackErrors.PERMISSION_DENIED;\n            this.message\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                    + (this.gum.devices || []).join(', ');\n            break;\n        case 'DevicesNotFoundError':\n        case 'NotFoundError':\n            this.name = JitsiTrackErrors.NOT_FOUND;\n            this.message\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                    + (this.gum.devices || []).join(', ');\n            break;\n        case 'ConstraintNotSatisfiedError':\n        case 'OverconstrainedError': {\n            const constraintName = error.constraintName || error.constraint;\n\n            // we treat deviceId as unsupported resolution, as we want to\n            // retry and finally if everything fails to remove deviceId from\n            // mandatory constraints\n            if (options\n                    && options.video\n                    && (!devices || devices.indexOf('video') > -1)\n                    && (constraintName === 'minWidth'\n                        || constraintName === 'maxWidth'\n                        || constraintName === 'minHeight'\n                        || constraintName === 'maxHeight'\n                        || constraintName === 'width'\n                        || constraintName === 'height'\n                        || constraintName === 'deviceId')) {\n                this.name = JitsiTrackErrors.UNSUPPORTED_RESOLUTION;\n                this.message\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                        + getResolutionFromFailedConstraint(\n                            constraintName,\n                            options);\n            } else {\n                this.name = JitsiTrackErrors.CONSTRAINT_FAILED;\n                this.message\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                        + error.constraintName;\n            }\n            break;\n        }\n\n        default:\n            this.name = JitsiTrackErrors.GENERAL;\n            this.message\n                = error.message || TRACK_ERROR_TO_MESSAGE_MAP[this.name];\n            break;\n        }\n    } else if (typeof error === 'string') {\n        if (TRACK_ERROR_TO_MESSAGE_MAP[error]) {\n            this.name = error;\n            this.message = options || TRACK_ERROR_TO_MESSAGE_MAP[error];\n        } else {\n            // this is some generic error that do not fit any of our\n            // pre-defined errors, so don't give it any specific name, just\n            // store message\n            this.message = error;\n        }\n    } else {\n        throw new Error('Invalid arguments');\n    }\n\n    this.stack = error.stack || (new Error()).stack;\n}\n\nJitsiTrackError.prototype = Object.create(Error.prototype);\nJitsiTrackError.prototype.constructor = JitsiTrackError;\n\n/**\n * Gets failed resolution constraint from corresponding object.\n * @param {string} failedConstraintName\n * @param {Object} constraints\n * @returns {string|number}\n */\nfunction getResolutionFromFailedConstraint(failedConstraintName, constraints) {\n    if (constraints && constraints.video && constraints.video.mandatory) {\n        switch (failedConstraintName) {\n        case 'width':\n            return constraints.video.mandatory.minWidth;\n        case 'height':\n            return constraints.video.mandatory.minHeight;\n        default:\n            return constraints.video.mandatory[failedConstraintName] || '';\n        }\n    }\n\n    return '';\n}\n\nexport default JitsiTrackError;\n","/**\n * The errors for the JitsiTrack objects.\n */\n\n/**\n * Generic error for jidesha extension for Chrome.\n */\nexport const CHROME_EXTENSION_GENERIC_ERROR\n    = 'gum.chrome_extension_generic_error';\n\n/**\n * An error which indicates that the jidesha extension for Chrome is\n * failed to install.\n */\nexport const CHROME_EXTENSION_INSTALLATION_ERROR\n    = 'gum.chrome_extension_installation_error';\n\n/**\n * This error indicates that the attempt to start screensharing was initiated by\n * a script which did not originate in user gesture handler. It means that\n * you should to trigger the action again in response to a button click for\n * example.\n * @type {string}\n */\nexport const CHROME_EXTENSION_USER_GESTURE_REQUIRED\n    = 'gum.chrome_extension_user_gesture_required';\n\n/**\n * An error which indicates that user canceled screen sharing window\n * selection dialog in jidesha extension for Chrome.\n */\nexport const CHROME_EXTENSION_USER_CANCELED\n    = 'gum.chrome_extension_user_canceled';\n\n/**\n * An error which indicates that some of requested constraints in\n * getUserMedia call were not satisfied.\n */\nexport const CONSTRAINT_FAILED = 'gum.constraint_failed';\n\n/**\n * A generic error which indicates an error occurred while selecting\n * a DesktopCapturerSource from the electron app.\n */\nexport const ELECTRON_DESKTOP_PICKER_ERROR\n    = 'gum.electron_desktop_picker_error';\n\n/**\n * An error which indicates a custom desktop picker could not be detected\n * for the electron app.\n */\nexport const ELECTRON_DESKTOP_PICKER_NOT_FOUND\n    = 'gum.electron_desktop_picker_not_found';\n\n/**\n * An error which indicates that the jidesha extension for Firefox is\n * needed to proceed with screen sharing, and that it is not installed.\n */\nexport const FIREFOX_EXTENSION_NEEDED = 'gum.firefox_extension_needed';\n\n/**\n * Generic getUserMedia error.\n */\nexport const GENERAL = 'gum.general';\n\n/**\n * An error which indicates that requested device was not found.\n */\nexport const NOT_FOUND = 'gum.not_found';\n\n/**\n * An error which indicates that user denied permission to share requested\n * device.\n */\nexport const PERMISSION_DENIED = 'gum.permission_denied';\n\n/**\n * An error which indicates that track has been already disposed and cannot\n * be longer used.\n */\nexport const TRACK_IS_DISPOSED = 'track.track_is_disposed';\n\n/**\n * An error which indicates that track has no MediaStream associated.\n */\nexport const TRACK_NO_STREAM_FOUND = 'track.no_stream_found';\n\n/**\n * An error which indicates that requested video resolution is not supported\n * by a webcam.\n */\nexport const UNSUPPORTED_RESOLUTION = 'gum.unsupported_resolution';\n","/**\n * The media track was removed to the conference.\n */\nexport const LOCAL_TRACK_STOPPED = 'track.stopped';\n\n/**\n * Audio levels of a this track was changed.\n * The first argument is a number with audio level value in range [0, 1].\n * The second argument is a <tt>TraceablePeerConnection</tt> which is the peer\n * connection which measured the audio level (one audio track can be added\n * to multiple peer connection at the same time). This argument is optional for\n * local tracks for which we can measure audio level without the peer\n * connection (the value will be <tt>undefined</tt>).\n *\n * NOTE The second argument should be treated as library internal and can be\n * removed at any time.\n */\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'track.audioLevelsChanged';\n\n/**\n * The audio output of the track was changed.\n */\nexport const TRACK_AUDIO_OUTPUT_CHANGED = 'track.audioOutputChanged';\n\n/**\n * A media track mute status was changed.\n */\nexport const TRACK_MUTE_CHANGED = 'track.trackMuteChanged';\n\n/**\n * The video type(\"camera\" or \"desktop\") of the track was changed.\n */\nexport const TRACK_VIDEOTYPE_CHANGED = 'track.videoTypeChanged';\n\n/**\n * Indicates that the track is not receiving any data even though we expect it\n * to receive data (i.e. the stream is not stopped).\n */\nexport const NO_DATA_FROM_SOURCE = 'track.no_data_from_source';\n","/**\n * The transciption is on.\n *\n * @type {String}\n */\nexport const ON = 'on';\n\n/**\n * The transciption is off.\n *\n * @type {String}\n */\nexport const OFF = 'off';\n","import {\n    CONNECTION_DISCONNECTED,\n    CONNECTION_ESTABLISHED,\n    CONNECTION_FAILED\n} from './JitsiConnectionEvents';\nimport XMPP from './modules/xmpp/xmpp';\n\n/**\n * @typedef {Object} UpgradeRoleError\n *\n * @property {JitsiConnectionErrors} [connectionError] - One of\n * {@link JitsiConnectionErrors} which occurred when trying to connect to the\n * XMPP server.\n * @property {String} [authenticationError] - One of XMPP error conditions\n * returned by Jicofo on authentication attempt. See\n * {@link https://xmpp.org/rfcs/rfc3920.html#streams-error}.\n * @property {String} [message] - More details about the error.\n * @property {Object} [credentials] - The credentials that failed the\n * authentication.\n * @property {String} [credentials.jid] - The XMPP ID part of the credentials\n * that failed the authentication.\n * @property {string} [credentials.password] - The password part of the\n * credentials that failed the authentication.\n *\n * NOTE If neither one of the errors is present, then the operation has been\n * canceled.\n */\n\n/* eslint-disable no-invalid-this */\n\n/**\n * Connects to the XMPP server using the specified credentials and contacts\n * Jicofo in order to obtain a session ID (which is then stored in the local\n * storage). The user's role of the parent conference will be upgraded to\n * moderator (by Jicofo). It's also used to join the conference when starting\n * from anonymous domain and only authenticated users are allowed to create new\n * rooms.\n *\n * @param {Object} options\n * @param {string} options.id - XMPP user's ID to log in. For example,\n * user@xmpp-server.com.\n * @param {string} options.password - XMPP user's password to log in with.\n * @param {string} [options.roomPassword] - The password to join the MUC with.\n * @param {Function} [options.onLoginSuccessful] - Callback called when logging\n * into the XMPP server was successful. The next step will be to obtain a new\n * session ID from Jicofo and join the MUC using it which will effectively\n * upgrade the user's role to moderator.\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\n * authenticating and upgrading the role of the specified XMPP user finishes and\n * (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\n * process. If the process finishes successfully, the session ID has been stored\n * in the settings and the <tt>thenable</tt> is resolved. If the process\n * finishes with failure, the <tt>thenable</tt> is rejected with reason of type\n * {@link UpgradeRoleError} which will have either <tt>connectionError</tt> or\n * <tt>authenticationError</tt> property set depending on which of the steps has\n * failed. If <tt>cancel</tt> is called before the process finishes, then the\n * thenable will be rejected with an empty object (i.e. no error property will\n * be set on the rejection reason).\n */\nexport default function authenticateAndUpgradeRole({\n    // 1. Log the specified XMPP user in.\n    id,\n    password,\n    onCreateResource,\n\n    // 2. Let the API client/consumer know as soon as the XMPP user has been\n    //    successfully logged in.\n    onLoginSuccessful,\n\n    // 3. Join the MUC.\n    roomPassword\n}) {\n    let canceled = false;\n    let rejectPromise;\n    let xmpp = new XMPP(this.connection.options);\n\n    const process = new Promise((resolve, reject) => {\n        // The process is represented by a Thenable with a cancel method. The\n        // Thenable is implemented using Promise and the cancel using the\n        // Promise's reject function.\n        rejectPromise = reject;\n\n\n        xmpp.addListener(\n            CONNECTION_DISCONNECTED,\n            () => {\n                xmpp = undefined;\n            });\n        xmpp.addListener(\n            CONNECTION_ESTABLISHED,\n            () => {\n                if (canceled) {\n                    return;\n                }\n\n                // Let the caller know that the XMPP login was successful.\n                onLoginSuccessful && onLoginSuccessful();\n\n                // Now authenticate with Jicofo and get a new session ID.\n                const room = xmpp.createRoom(\n                    this.options.name,\n                    this.options.config,\n                    onCreateResource\n                );\n\n                room.moderator.authenticate()\n                    .then(() => {\n                        xmpp && xmpp.disconnect();\n\n                        if (canceled) {\n                            return;\n                        }\n\n                        // At this point we should have the new session ID\n                        // stored in the settings. Jicofo will allow to join the\n                        // room.\n                        this.join(roomPassword);\n\n                        resolve();\n                    })\n                    .catch(({ error, message }) => {\n                        xmpp.disconnect();\n\n                        reject({\n                            authenticationError: error,\n                            message\n                        });\n                    });\n            });\n        xmpp.addListener(\n            CONNECTION_FAILED,\n            (connectionError, message, credentials) => {\n                reject({\n                    connectionError,\n                    credentials,\n                    message\n                });\n                xmpp = undefined;\n            });\n\n        canceled || xmpp.connect(id, password);\n    });\n\n    /**\n     * Cancels the process, if it's in progress, of authenticating and upgrading\n     * the role of the local participant/user.\n     *\n     * @public\n     * @returns {void}\n     */\n    process.cancel = () => {\n        canceled = true;\n        rejectPromise({});\n        xmpp && xmpp.disconnect();\n    };\n\n    return process;\n}\n\n/* eslint-enable no-invalid-this */\n","// For legacy purposes, preserve the UMD of the public API of the Jitsi Meet\n// library (a.k.a. JitsiMeetJS).\nmodule.exports = require('./JitsiMeetJS').default;\n","const logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n *\n * @param localAudio\n * @param peerConnection\n */\nfunction JitsiDTMFManager(localAudio, peerConnection) {\n    const audioTrack = localAudio.getTrack();\n\n    if (!audioTrack) {\n        throw new Error('Failed to initialize DTMFSender: no audio track.');\n    }\n    this.dtmfSender\n        = peerConnection.peerconnection.createDTMFSender(audioTrack);\n    logger.debug('Initialized DTMFSender');\n}\n\nJitsiDTMFManager.prototype.sendTones = function(tones, duration, pause) {\n    this.dtmfSender.insertDTMF(tones, duration || 200, pause || 200);\n};\n\nmodule.exports = JitsiDTMFManager;\n\n","import * as JitsiConferenceEvents from '../JitsiConferenceEvents';\nimport RTCEvents from '../service/RTC/RTCEvents';\n\n/**\n * The value which we use to say, every sound over this threshold\n * is talking on the mic.\n * @type {number}\n */\nconst SPEECH_DETECT_THRESHOLD = 0.6;\n\n/**\n * The <tt>P2PDominantSpeakerDetection</tt> is activated only when p2p is\n * currently used.\n * Listens for changes in the audio level changes of the local p2p audio track\n * or remote p2p one and fires dominant speaker events to be able to use\n * features depending on those events (speaker stats), to make them work without\n * the video bridge.\n */\nexport default class P2PDominantSpeakerDetection {\n    /**\n     * Creates P2PDominantSpeakerDetection\n     * @param conference the JitsiConference instance that created us.\n     * @constructor\n     */\n    constructor(conference) {\n        this.conference = conference;\n\n        conference.addEventListener(\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n            this._audioLevel.bind(this));\n\n        this.myUserID = this.conference.myUserId();\n    }\n\n    /**\n     * Receives audio level events for all streams in the conference.\n     *\n     * @param {String} id - The participant id\n     * @param {number} audioLevel - The audio level.\n     */\n    _audioLevel(id, audioLevel) {\n\n        // we do not process if p2p is not active\n        // or audio level is under certain threshold\n        // or if the audio level is for local audio track which is muted\n        if (!this.conference.isP2PActive()\n            || audioLevel <= SPEECH_DETECT_THRESHOLD\n            || (id === this.myUserID\n                    && this.conference.getLocalAudioTrack().isMuted())) {\n            return;\n        }\n\n        this.conference.rtc.eventEmitter.emit(\n            RTCEvents.DOMINANT_SPEAKER_CHANGED,\n            id);\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport { createBridgeChannelClosedEvent } from '../../service/statistics/AnalyticsEvents';\nimport Statistics from '../statistics/statistics';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = getLogger(__filename);\n\n/**\n * Handles a WebRTC RTCPeerConnection or a WebSocket instance to communicate\n * with the videobridge.\n */\nexport default class BridgeChannel {\n    /**\n     * Binds \"ondatachannel\" event listener on the given RTCPeerConnection\n     * instance, or creates a WebSocket connection with the videobridge.\n     * At least one of both, peerconnection or wsUrl parameters, must be\n     * given.\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\n     * instance.\n     * @param {string} [wsUrl] WebSocket URL.\n     * @param {EventEmitter} eventEmitter EventEmitter instance.\n     */\n    constructor(peerconnection, wsUrl, emitter) {\n        if (!peerconnection && !wsUrl) {\n            throw new TypeError(\n                'At least peerconnection or wsUrl must be given');\n        } else if (peerconnection && wsUrl) {\n            throw new TypeError(\n                'Just one of peerconnection or wsUrl must be given');\n        }\n\n        if (peerconnection) {\n            logger.debug('constructor() with peerconnection');\n        } else {\n            logger.debug(`constructor() with wsUrl:\"${wsUrl}\"`);\n        }\n\n        // The underlying WebRTC RTCDataChannel or WebSocket instance.\n        // @type {RTCDataChannel|WebSocket}\n        this._channel = null;\n\n        // @type {EventEmitter}\n        this._eventEmitter = emitter;\n\n        // Whether a RTCDataChannel or WebSocket is internally used.\n        // @type {string} \"datachannel\" / \"websocket\"\n        this._mode = null;\n\n        // Indicates whether the connection retries are enabled or not.\n        this._areRetriesEnabled = false;\n\n        // Indicates whether the connection was closed from the client or not.\n        this._closedFromClient = false;\n\n        // If a RTCPeerConnection is given, listen for new RTCDataChannel\n        // event.\n        if (peerconnection) {\n            const datachannel\n                = peerconnection.createDataChannel(\n                    'JVB data channel', {\n                        protocol: 'http://jitsi.org/protocols/colibri'\n                    });\n\n            // Handle the RTCDataChannel.\n            this._handleChannel(datachannel);\n            this._mode = 'datachannel';\n\n        // Otherwise create a WebSocket connection.\n        } else if (wsUrl) {\n            this._areRetriesEnabled = true;\n            this._wsUrl = wsUrl;\n            this._initWebSocket();\n        }\n    }\n\n    /**\n     * Initializes the web socket channel.\n     *\n     * @returns {void}\n     */\n    _initWebSocket() {\n        // Create a WebSocket instance.\n        const ws = new WebSocket(this._wsUrl);\n\n        // Handle the WebSocket.\n        this._handleChannel(ws);\n        this._mode = 'websocket';\n    }\n\n    /**\n     * Starts the websocket connection retries.\n     *\n     * @returns {void}\n     */\n    _startConnectionRetries() {\n        let timeoutS = 1;\n\n        const reload = () => {\n            if (this.isOpen()) {\n                return;\n            }\n            this._initWebSocket(this._wsUrl);\n            timeoutS = Math.min(timeoutS * 2, 60);\n            this._retryTimeout = setTimeout(reload, timeoutS * 1000);\n        };\n\n        this._retryTimeout = setTimeout(reload, timeoutS * 1000);\n    }\n\n    /**\n     * Stops the websocket connection retries.\n     *\n     * @returns {void}\n     */\n    _stopConnectionRetries() {\n        if (this._retryTimeout) {\n            clearTimeout(this._retryTimeout);\n            this._retryTimeout = undefined;\n        }\n    }\n\n    /**\n     * Retries to establish the websocket connection after the connection was closed by the server.\n     *\n     * @param {CloseEvent} closeEvent - The close event that triggered the retries.\n     * @returns {void}\n     */\n    _retryWebSocketConnection(closeEvent) {\n        if (!this._areRetriesEnabled) {\n            return;\n        }\n        const { code, reason } = closeEvent;\n\n        Statistics.sendAnalytics(createBridgeChannelClosedEvent(code, reason));\n        this._areRetriesEnabled = false;\n        this._eventEmitter.once(RTCEvents.DATA_CHANNEL_OPEN, () => {\n            this._stopConnectionRetries();\n            this._areRetriesEnabled = true;\n        });\n        this._startConnectionRetries();\n    }\n\n    /**\n     * The channel mode.\n     * @return {string} \"datachannel\" or \"websocket\" (or null if not yet set).\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    /**\n     * Closes the currently opened channel.\n     */\n    close() {\n        this._closedFromClient = true;\n        this._stopConnectionRetries();\n        this._areRetriesEnabled = false;\n        if (this._channel) {\n            try {\n                this._channel.close();\n            } catch (error) {} // eslint-disable-line no-empty\n\n            this._channel = null;\n        }\n    }\n\n    /**\n     * Whether there is an underlying RTCDataChannel or WebSocket and it's\n     * open.\n     * @return {boolean}\n     */\n    isOpen() {\n        return this._channel && (this._channel.readyState === 'open'\n            || this._channel.readyState === WebSocket.OPEN);\n    }\n\n    /**\n     * Sends message via the channel.\n     * @param {string} to The id of the endpoint that should receive the\n     * message. If \"\" the message will be sent to all participants.\n     * @param  {object} payload The payload of the message.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    sendMessage(to, payload) {\n        this._send({\n            colibriClass: 'EndpointMessage',\n            msgPayload: payload,\n            to\n        });\n    }\n\n    /**\n     * Sends a \"lastN value changed\" message via the channel.\n     * @param {number} value The new value for lastN. -1 means unlimited.\n     */\n    sendSetLastNMessage(value) {\n        const jsonObject = {\n            colibriClass: 'LastNChangedEvent',\n            lastN: value\n        };\n\n        this._send(jsonObject);\n        logger.log(`Channel lastN set to: ${value}`);\n    }\n\n    /**\n     * Sends a \"pinned endpoint changed\" message via the channel.\n     * @param {string} endpointId The id of the pinned endpoint.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    sendPinnedEndpointMessage(endpointId) {\n        logger.log(\n            'sending pinned changed notification to the bridge for endpoint ',\n            endpointId);\n\n        this._send({\n            colibriClass: 'PinnedEndpointChangedEvent',\n            pinnedEndpoint: endpointId || null\n        });\n    }\n\n    /**\n     * Sends a \"selected endpoints changed\" message via the channel.\n     *\n     * @param {Array<string>} endpointIds - The ids of the selected endpoints.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    sendSelectedEndpointsMessage(endpointIds) {\n        logger.log(\n            'sending selected changed notification to the bridge for endpoints',\n            endpointIds);\n\n        this._send({\n            colibriClass: 'SelectedEndpointsChangedEvent',\n            selectedEndpoints: endpointIds\n        });\n    }\n\n    /**\n     * Sends a \"receiver video constraint\" message via the channel.\n     * @param {Number} maxFrameHeightPixels the maximum frame height,\n     * in pixels, this receiver is willing to receive\n     */\n    sendReceiverVideoConstraintMessage(maxFrameHeightPixels) {\n        logger.log('sending a ReceiverVideoConstraint message with '\n            + `a maxFrameHeight of ${maxFrameHeightPixels} pixels`);\n        this._send({\n            colibriClass: 'ReceiverVideoConstraint',\n            maxFrameHeight: maxFrameHeightPixels\n        });\n    }\n\n    /**\n     * Set events on the given RTCDataChannel or WebSocket instance.\n     */\n    _handleChannel(channel) {\n        const emitter = this._eventEmitter;\n\n        channel.onopen = () => {\n            logger.info(`${this._mode} channel opened`);\n\n            // Code sample for sending string and/or binary data.\n            // Sends string message to the bridge:\n            //     channel.send(\"Hello bridge!\");\n            // Sends 12 bytes binary message to the bridge:\n            //     channel.send(new ArrayBuffer(12));\n\n            emitter.emit(RTCEvents.DATA_CHANNEL_OPEN);\n        };\n\n        channel.onerror = event => {\n            // WS error events contain no information about the failure (this is available in the onclose event) and\n            // the event references the WS object itself, which causes hangs on mobile.\n            if (this._mode !== 'websocket') {\n                logger.error(`Channel error: ${event.message}`);\n            }\n        };\n\n        channel.onmessage = ({ data }) => {\n            // JSON object.\n            let obj;\n\n            try {\n                obj = JSON.parse(data);\n            } catch (error) {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error(\n                    'Failed to parse channel message as JSON: ',\n                    data, error);\n\n                return;\n            }\n\n            const colibriClass = obj.colibriClass;\n\n            switch (colibriClass) {\n            case 'DominantSpeakerEndpointChangeEvent': {\n                // Endpoint ID from the Videobridge.\n                const dominantSpeakerEndpoint = obj.dominantSpeakerEndpoint;\n\n                logger.info(\n                    'Channel new dominant speaker event: ',\n                    dominantSpeakerEndpoint);\n                emitter.emit(\n                    RTCEvents.DOMINANT_SPEAKER_CHANGED,\n                    dominantSpeakerEndpoint);\n                break;\n            }\n            case 'EndpointConnectivityStatusChangeEvent': {\n                const endpoint = obj.endpoint;\n                const isActive = obj.active === 'true';\n\n                logger.info(\n                    `Endpoint connection status changed: ${endpoint} active ? ${\n                        isActive}`);\n                emitter.emit(RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\n                    endpoint, isActive);\n\n                break;\n            }\n            case 'EndpointMessage': {\n                emitter.emit(\n                    RTCEvents.ENDPOINT_MESSAGE_RECEIVED, obj.from,\n                    obj.msgPayload);\n\n                break;\n            }\n            case 'LastNEndpointsChangeEvent': {\n                // The new/latest list of last-n endpoint IDs.\n                const lastNEndpoints = obj.lastNEndpoints;\n\n                logger.info('Channel new last-n event: ',\n                    lastNEndpoints, obj);\n                emitter.emit(RTCEvents.LASTN_ENDPOINT_CHANGED,\n                    lastNEndpoints, obj);\n\n                break;\n            }\n            case 'SelectedUpdateEvent': {\n                const isSelected = obj.isSelected;\n\n                logger.info(`SelectedUpdateEvent isSelected? ${isSelected}`);\n                emitter.emit(RTCEvents.IS_SELECTED_CHANGED, isSelected);\n                break;\n            }\n            default: {\n                logger.debug('Channel JSON-formatted message: ', obj);\n\n                // The received message appears to be appropriately formatted\n                // (i.e. is a JSON object which assigns a value to the\n                // mandatory property colibriClass) so don't just swallow it,\n                // expose it to public consumption.\n                emitter.emit(`rtc.datachannel.${colibriClass}`, obj);\n            }\n            }\n        };\n\n        channel.onclose = event => {\n            logger.info(`Channel closed by ${this._closedFromClient ? 'client' : 'server'}`);\n\n            if (this._mode === 'websocket') {\n                if (!this._closedFromClient) {\n                    logger.error(`Channel closed: ${event.code} ${event.reason}`);\n                    this._retryWebSocketConnection(event);\n                }\n            }\n\n            // Remove the channel.\n            this._channel = null;\n        };\n\n        // Store the channel.\n        this._channel = channel;\n    }\n\n    /**\n     * Sends passed object via the channel.\n     * @param {object} jsonObject The object that will be sent.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    _send(jsonObject) {\n        const channel = this._channel;\n\n        if (!this.isOpen()) {\n            logger.error('Bridge Channel send: no opened channel.');\n            throw new Error('No opened channel');\n        }\n\n        channel.send(JSON.stringify(jsonObject));\n    }\n}\n","/* global __filename, Promise */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport JitsiTrack from './JitsiTrack';\nimport JitsiTrackError from '../../JitsiTrackError';\nimport {\n    TRACK_IS_DISPOSED,\n    TRACK_NO_STREAM_FOUND\n} from '../../JitsiTrackErrors';\nimport {\n    LOCAL_TRACK_STOPPED,\n    NO_DATA_FROM_SOURCE,\n    TRACK_MUTE_CHANGED\n} from '../../JitsiTrackEvents';\nimport browser from '../browser';\nimport RTCUtils from './RTCUtils';\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport VideoType from '../../service/RTC/VideoType';\nimport {\n    NO_BYTES_SENT,\n    TRACK_UNMUTED,\n    createNoDataFromSourceEvent\n} from '../../service/statistics/AnalyticsEvents';\nimport Statistics from '../statistics/statistics';\n\nconst logger = getLogger(__filename);\n\n/**\n * Represents a single media track(either audio or video).\n * One <tt>JitsiLocalTrack</tt> corresponds to one WebRTC MediaStreamTrack.\n */\nexport default class JitsiLocalTrack extends JitsiTrack {\n    /**\n     * Constructs new JitsiLocalTrack instance.\n     *\n     * @constructor\n     * @param {Object} trackInfo\n     * @param {number} trackInfo.rtcId the ID assigned by the RTC module\n     * @param trackInfo.stream WebRTC MediaStream, parent of the track\n     * @param trackInfo.track underlying WebRTC MediaStreamTrack for new\n     * JitsiRemoteTrack\n     * @param trackInfo.mediaType the MediaType of the JitsiRemoteTrack\n     * @param trackInfo.videoType the VideoType of the JitsiRemoteTrack\n     * @param trackInfo.effects the effects array contains the effect instance to use\n     * @param trackInfo.resolution the video resolution if it's a video track\n     * @param trackInfo.deviceId the ID of the local device for this track\n     * @param trackInfo.facingMode the camera facing mode used in getUserMedia\n     * call\n     * @param {sourceId} trackInfo.sourceId - The id of the desktop sharing\n     * source. NOTE: defined for desktop sharing tracks only.\n     */\n    constructor({\n        deviceId,\n        facingMode,\n        mediaType,\n        resolution,\n        rtcId,\n        sourceId,\n        sourceType,\n        stream,\n        track,\n        videoType,\n        effects = []\n    }) {\n        super(\n            /* conference */ null,\n            stream,\n            track,\n            /* streamInactiveHandler */ () => this.emit(LOCAL_TRACK_STOPPED),\n            mediaType,\n            videoType);\n\n        this._setEffectInProgress = false;\n        const effect = effects.find(e => e.isEnabled(this));\n\n        if (effect) {\n            this._startStreamEffect(effect);\n        }\n\n        /**\n         * The ID assigned by the RTC module on instance creation.\n         *\n         * @type {number}\n         */\n        this.rtcId = rtcId;\n        this.sourceId = sourceId;\n        this.sourceType = sourceType;\n\n        if (browser.usesNewGumFlow()) {\n            // Get the resolution from the track itself because it cannot be\n            // certain which resolution webrtc has fallen back to using.\n            this.resolution = track.getSettings().height;\n\n            // Cache the constraints of the track in case of any this track\n            // model needs to call getUserMedia again, such as when unmuting.\n            this._constraints = track.getConstraints();\n        } else {\n            // FIXME Currently, Firefox is ignoring our constraints about\n            // resolutions so we do not store it, to avoid wrong reporting of\n            // local track resolution.\n            this.resolution = browser.isFirefox() ? null : resolution;\n        }\n\n        this.deviceId = deviceId;\n\n        /**\n         * The <tt>Promise</tt> which represents the progress of a previously\n         * queued/scheduled {@link _setMuted} (from the point of view of\n         * {@link _queueSetMuted}).\n         *\n         * @private\n         * @type {Promise}\n         */\n        this._prevSetMuted = Promise.resolve();\n\n        /**\n         * The facing mode of the camera from which this JitsiLocalTrack\n         * instance was obtained.\n         *\n         * @private\n         * @type {CameraFacingMode|undefined}\n         */\n        this._facingMode = facingMode;\n\n        // Currently there is no way to know the MediaStreamTrack ended due to\n        // to device disconnect in Firefox through e.g. \"readyState\" property.\n        // Instead we will compare current track's label with device labels from\n        // enumerateDevices() list.\n        this._trackEnded = false;\n\n        /**\n         * Indicates whether data has been sent or not.\n         */\n        this._hasSentData = false;\n\n        /**\n         * Used only for detection of audio problems. We want to check only once\n         * whether the track is sending data ot not. This flag is set to false\n         * after the check.\n         */\n        this._testDataSent = true;\n\n        // Currently there is no way to determine with what device track was\n        // created (until getConstraints() support), however we can associate\n        // tracks with real devices obtained from enumerateDevices() call as\n        // soon as it's called.\n        // NOTE: this.deviceId corresponds to the device id specified in GUM constraints and this._realDeviceId seems to\n        // correspond to the id of a matching device from the available device list.\n        this._realDeviceId = this.deviceId === '' ? undefined : this.deviceId;\n\n        this._trackMutedTS = 0;\n\n        this._onDeviceListWillChange = devices => {\n            const oldRealDeviceId = this._realDeviceId;\n\n            this._setRealDeviceIdFromDeviceList(devices);\n\n            if (\n                // Mark track as ended for those browsers that do not support\n                // \"readyState\" property. We do not touch tracks created with\n                // default device ID \"\".\n                (typeof this.getTrack().readyState === 'undefined'\n                    && typeof this._realDeviceId !== 'undefined'\n                    && !devices.find(d => d.deviceId === this._realDeviceId))\n\n                // If there was an associated realDeviceID and after the device change the realDeviceId is undefined\n                // then the associated device has been disconnected and the _trackEnded flag needs to be set. In\n                // addition on some Chrome versions the readyState property is set after the device change event is\n                // triggered which causes issues in jitsi-meet with the selection of a new device because we don't\n                // detect that the old one was removed.\n                || (typeof oldRealDeviceId !== 'undefined' && typeof this._realDeviceId === 'undefined')\n            ) {\n                this._trackEnded = true;\n            }\n        };\n\n        // Subscribe each created local audio track to\n        // RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED event. This is different from\n        // handling this event for remote tracks (which are handled in RTC.js),\n        // because there might be local tracks not attached to a conference.\n        if (this.isAudioTrack() && RTCUtils.isDeviceChangeAvailable('output')) {\n            this._onAudioOutputDeviceChanged = this.setAudioOutput.bind(this);\n            RTCUtils.addListener(\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                this._onAudioOutputDeviceChanged);\n        }\n\n        RTCUtils.addListener(RTCEvents.DEVICE_LIST_WILL_CHANGE, this._onDeviceListWillChange);\n\n        this._initNoDataFromSourceHandlers();\n    }\n\n    /**\n     * Returns if associated MediaStreamTrack is in the 'ended' state\n     *\n     * @returns {boolean}\n     */\n    isEnded() {\n        if (this.isVideoTrack() && this.isMuted()) {\n            // If a video track is muted the readyState will be ended, that's why we need to rely only on the\n            // _trackEnded flag.\n            return this._trackEnded;\n        }\n\n        return this.getTrack().readyState === 'ended' || this._trackEnded;\n    }\n\n    /**\n     * Sets handlers to the MediaStreamTrack object that will detect camera\n     * issues.\n     */\n    _initNoDataFromSourceHandlers() {\n        if (!this._isNoDataFromSourceEventsEnabled()) {\n            return;\n        }\n\n        this._setHandler('track_mute', () => {\n            this._trackMutedTS = window.performance.now();\n            this._fireNoDataFromSourceEvent();\n        });\n\n        this._setHandler('track_unmute', () => {\n            this._fireNoDataFromSourceEvent();\n            Statistics.sendAnalyticsAndLog(\n                TRACK_UNMUTED,\n                {\n                    'media_type': this.getType(),\n                    'track_type': 'local',\n                    value: window.performance.now() - this._trackMutedTS\n                });\n        });\n\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\n            this._setHandler('track_ended', () => {\n                if (!this.isReceivingData()) {\n                    this._fireNoDataFromSourceEvent();\n                }\n            });\n        }\n    }\n\n    /**\n     * Returns true if no data from source events are enabled for this JitsiLocalTrack and false otherwise.\n     *\n     * @returns {boolean} - True if no data from source events are enabled for this JitsiLocalTrack and false otherwise.\n     */\n    _isNoDataFromSourceEventsEnabled() {\n        // Disable the events for screen sharing.\n        return !this.isVideoTrack() || this.videoType !== VideoType.DESKTOP;\n    }\n\n    /**\n     * Fires NO_DATA_FROM_SOURCE event and logs it to analytics and callstats.\n     */\n    _fireNoDataFromSourceEvent() {\n        const value = !this.isReceivingData();\n\n        this.emit(NO_DATA_FROM_SOURCE, value);\n\n        // FIXME: Should we report all of those events\n        Statistics.sendAnalytics(createNoDataFromSourceEvent(this.getType(), value));\n        Statistics.sendLog(JSON.stringify({\n            name: NO_DATA_FROM_SOURCE,\n            log: value\n        }));\n    }\n\n    /**\n     * Sets real device ID by comparing track information with device\n     * information. This is temporary solution until getConstraints() method\n     * will be implemented in browsers.\n     *\n     * @param {MediaDeviceInfo[]} devices - list of devices obtained from\n     * enumerateDevices() call\n     */\n    _setRealDeviceIdFromDeviceList(devices) {\n        const track = this.getTrack();\n        const kind = `${track.kind}input`;\n        let device = devices.find(d => d.kind === kind && d.label === track.label);\n\n        if (!device && this._realDeviceId === 'default') { // the default device has been changed.\n            // If the default device was 'A' and the default device is changed to 'B' the label for the track will\n            // remain 'Default - A' but the label for the device in the device list will be updated to 'A'. That's\n            // why in order to match it we need to remove the 'Default - ' part.\n            const label = (track.label || '').replace('Default - ', '');\n\n            device = devices.find(d => d.kind === kind && d.label === label);\n        }\n\n        if (device) {\n            this._realDeviceId = device.deviceId;\n        } else {\n            this._realDeviceId = undefined;\n        }\n    }\n\n    /**\n     * Sets the stream property of JitsiLocalTrack object and sets all stored\n     * handlers to it.\n     *\n     * @param {MediaStream} stream the new stream.\n     * @protected\n     */\n    _setStream(stream) {\n        super._setStream(stream);\n\n        if (stream) {\n            // Store the MSID for video mute/unmute purposes.\n            this.storedMSID = this.getMSID();\n            logger.debug(`Setting new MSID: ${this.storedMSID} on ${this}`);\n        } else {\n            logger.debug(`Setting 'null' stream on ${this}`);\n        }\n    }\n\n    /**\n     * Starts the effect process and returns the modified stream.\n     *\n     * @private\n     * @param {*} effect - Represents effect instance\n     * @returns {void}\n     */\n    _startStreamEffect(effect) {\n        this._streamEffect = effect;\n        this._originalStream = this.stream;\n        this._setStream(this._streamEffect.startEffect(this._originalStream));\n    }\n\n    /**\n     * Stops the effect process and returns the original stream.\n     *\n     * @private\n     * @returns {void}\n     */\n    _stopStreamEffect() {\n        if (this._streamEffect) {\n            this._streamEffect.stopEffect();\n            this._setStream(this._originalStream);\n            this._originalStream = undefined;\n        }\n    }\n\n    /**\n     * Stops the currently used effect (if there is one) and starts the passed effect (if there is one).\n     *\n     * @param {Object|undefined} effect - The new effect to be set.\n     */\n    _switchStreamEffect(effect) {\n        if (this._streamEffect) {\n            this._stopStreamEffect();\n            this._streamEffect = undefined;\n        }\n        if (effect) {\n            this._startStreamEffect(effect);\n        }\n    }\n\n    /**\n     * Sets the effect and switches between the modified stream and original one.\n     *\n     * @param {Object} effect - Represents the effect instance to be used.\n     * @returns {Promise}\n     */\n    setEffect(effect) {\n        if (typeof this._streamEffect === 'undefined' && typeof effect === 'undefined') {\n            return Promise.resolve();\n        }\n\n        if (typeof effect !== 'undefined' && !effect.isEnabled(this)) {\n            return Promise.reject(new Error('Incompatible effect instance!'));\n        }\n\n        if (this._setEffectInProgress === true) {\n            return Promise.reject(new Error('setEffect already in progress!'));\n        }\n\n        if (this.isMuted()) {\n            this._streamEffect = effect;\n\n            return Promise.resolve();\n        }\n\n        const conference = this.conference;\n\n        if (!conference) {\n            this._switchStreamEffect(effect);\n\n            return Promise.resolve();\n        }\n\n        this._setEffectInProgress = true;\n\n        // TODO: Create new JingleSessionPC method for replacing a stream in JitsiLocalTrack without offer answer.\n        return conference.removeTrack(this)\n            .then(() => {\n                this._switchStreamEffect(effect);\n                if (this.isVideoTrack()) {\n                    this.containers.forEach(cont => RTCUtils.attachMediaStream(cont, this.stream));\n                }\n\n                return conference.addTrack(this);\n            })\n            .then(() => {\n                this._setEffectInProgress = false;\n            })\n            .catch(error => {\n                // Any error will be not recovarable and will trigger CONFERENCE_FAILED event. But let's try to cleanup\n                // everyhting related to the effect functionality.\n                this._setEffectInProgress = false;\n                this._switchStreamEffect();\n                logger.error('Failed to switch to the new stream!', error);\n                throw error;\n            });\n    }\n\n    /**\n     * Asynchronously mutes this track.\n     *\n     * @returns {Promise}\n     */\n    mute() {\n        return this._queueSetMuted(true);\n    }\n\n    /**\n     * Asynchronously unmutes this track.\n     *\n     * @returns {Promise}\n     */\n    unmute() {\n        return this._queueSetMuted(false);\n    }\n\n    /**\n     * Initializes a new Promise to execute {@link #_setMuted}. May be called\n     * multiple times in a row and the invocations of {@link #_setMuted} and,\n     * consequently, {@link #mute} and/or {@link #unmute} will be resolved in a\n     * serialized fashion.\n     *\n     * @param {boolean} muted - The value to invoke <tt>_setMuted</tt> with.\n     * @returns {Promise}\n     */\n    _queueSetMuted(muted) {\n        const setMuted = this._setMuted.bind(this, muted);\n\n        this._prevSetMuted = this._prevSetMuted.then(setMuted, setMuted);\n\n        return this._prevSetMuted;\n    }\n\n    /**\n     * Mutes / unmutes this track.\n     *\n     * @param {boolean} muted - If <tt>true</tt>, this track will be muted;\n     * otherwise, this track will be unmuted.\n     * @private\n     * @returns {Promise}\n     */\n    _setMuted(muted) {\n        if (this.isMuted() === muted) {\n            return Promise.resolve();\n        }\n\n        if (this.disposed) {\n            return Promise.reject(new JitsiTrackError(TRACK_IS_DISPOSED));\n        }\n\n        let promise = Promise.resolve();\n\n        // A function that will print info about muted status transition\n        const logMuteInfo = () => logger.info(`Mute ${this}: ${muted}`);\n\n        if (this.isAudioTrack()\n                || this.videoType === VideoType.DESKTOP\n                || !browser.doesVideoMuteByStreamRemove()) {\n            logMuteInfo();\n            if (this.track) {\n                this.track.enabled = !muted;\n            }\n        } else if (muted) {\n            promise = new Promise((resolve, reject) => {\n                logMuteInfo();\n                this._removeStreamFromConferenceAsMute(\n                    () => {\n                        if (this._streamEffect) {\n                            this._stopStreamEffect();\n                        }\n\n                        // FIXME: Maybe here we should set the SRC for the\n                        // containers to something\n                        // We don't want any events to be fired on this stream\n                        this._unregisterHandlers();\n                        this.stopStream();\n                        this._setStream(null);\n                        resolve();\n                    },\n                    reject);\n            });\n        } else {\n            logMuteInfo();\n\n            // This path is only for camera.\n            const streamOptions = {\n                cameraDeviceId: this.getDeviceId(),\n                devices: [ MediaType.VIDEO ],\n                effects: this._streamEffect ? [ this._streamEffect ] : [],\n                facingMode: this.getCameraFacingMode()\n            };\n\n            if (browser.usesNewGumFlow()) {\n                promise\n                    = RTCUtils.newObtainAudioAndVideoPermissions(Object.assign(\n                        {},\n                        streamOptions,\n                        { constraints: { video: this._constraints } }));\n            } else {\n                if (this.resolution) {\n                    streamOptions.resolution = this.resolution;\n                }\n\n                promise\n                    = RTCUtils.obtainAudioAndVideoPermissions(streamOptions);\n            }\n\n            promise.then(streamsInfo => {\n                const mediaType = this.getType();\n                const streamInfo\n                    = browser.usesNewGumFlow()\n                        ? streamsInfo.find(\n                            info => info.track.kind === mediaType)\n                        : streamsInfo.find(\n                            info => info.mediaType === mediaType);\n\n                if (streamInfo) {\n                    this._setStream(streamInfo.stream);\n                    this.track = streamInfo.track;\n\n                    // This is not good when video type changes after\n                    // unmute, but let's not crash here\n                    if (this.videoType !== streamInfo.videoType) {\n                        logger.warn(\n                            `${this}: video type has changed after unmute!`,\n                            this.videoType, streamInfo.videoType);\n                        this.videoType = streamInfo.videoType;\n                    }\n                } else {\n                    throw new JitsiTrackError(TRACK_NO_STREAM_FOUND);\n                }\n\n                if (this._streamEffect) {\n                    this._startStreamEffect(this._streamEffect);\n                }\n\n                this.containers.map(\n                    cont => RTCUtils.attachMediaStream(cont, this.stream));\n\n                return this._addStreamToConferenceAsUnmute();\n            });\n        }\n\n        return promise\n            .then(() => this._sendMuteStatus(muted))\n            .then(() => this.emit(TRACK_MUTE_CHANGED, this));\n    }\n\n    /**\n     * Adds stream to conference and marks it as \"unmute\" operation.\n     *\n     * @private\n     * @returns {Promise}\n     */\n    _addStreamToConferenceAsUnmute() {\n        if (!this.conference) {\n            return Promise.resolve();\n        }\n\n        // FIXME it would be good to not included conference as part of this\n        // process. Only TraceablePeerConnections to which the track is attached\n        // should care about this action. The TPCs to which the track is not\n        // attached can sync up when track is re-attached.\n        // A problem with that is that the \"modify sources\" queue is part of\n        // the JingleSessionPC and it would be excluded from the process. One\n        // solution would be to extract class between TPC and JingleSessionPC\n        // which would contain the queue and would notify the signaling layer\n        // when local SSRCs are changed. This would help to separate XMPP from\n        // the RTC module.\n        return new Promise((resolve, reject) => {\n            this.conference._addLocalTrackAsUnmute(this)\n                .then(resolve, error => reject(new Error(error)));\n        });\n    }\n\n    /**\n     * Removes stream from conference and marks it as \"mute\" operation.\n     *\n     * @param {Function} successCallback will be called on success\n     * @param {Function} errorCallback will be called on error\n     * @private\n     */\n    _removeStreamFromConferenceAsMute(successCallback, errorCallback) {\n        if (!this.conference) {\n            successCallback();\n\n            return;\n        }\n        this.conference._removeLocalTrackAsMute(this).then(\n            successCallback,\n            error => errorCallback(new Error(error)));\n    }\n\n    /**\n     * Sends mute status for a track to conference if any.\n     *\n     * @param {boolean} mute - If track is muted.\n     * @private\n     * @returns {Promise}\n     */\n    _sendMuteStatus(mute) {\n        if (!this.conference || !this.conference.room) {\n            return Promise.resolve();\n        }\n\n        return new Promise(resolve => {\n            this.conference.room[\n                this.isAudioTrack()\n                    ? 'setAudioMute'\n                    : 'setVideoMute'](mute, resolve);\n        });\n    }\n\n    /**\n     * @inheritdoc\n     *\n     * Stops sending the media track. And removes it from the HTML.\n     * NOTE: Works for local tracks only.\n     *\n     * @extends JitsiTrack#dispose\n     * @returns {Promise}\n     */\n    dispose() {\n        this._switchStreamEffect();\n\n        let promise = Promise.resolve();\n\n        if (this.conference) {\n            promise = this.conference.removeTrack(this);\n        }\n\n        if (this.stream) {\n            this.stopStream();\n            this.detach();\n        }\n\n        RTCUtils.removeListener(RTCEvents.DEVICE_LIST_WILL_CHANGE, this._onDeviceListWillChange);\n\n        if (this._onAudioOutputDeviceChanged) {\n            RTCUtils.removeListener(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                this._onAudioOutputDeviceChanged);\n        }\n\n        return promise.then(() => super.dispose());\n    }\n\n    /**\n     * Returns <tt>true</tt> - if the stream is muted and <tt>false</tt>\n     * otherwise.\n     *\n     * @returns {boolean} <tt>true</tt> - if the stream is muted and\n     * <tt>false</tt> otherwise.\n     */\n    isMuted() {\n        // this.stream will be null when we mute local video on Chrome\n        if (!this.stream) {\n            return true;\n        }\n        if (this.isVideoTrack() && !this.isActive()) {\n            return true;\n        }\n\n        return !this.track || !this.track.enabled;\n    }\n\n    /**\n     * Sets the JitsiConference object associated with the track. This is temp\n     * solution.\n     *\n     * @param conference the JitsiConference object\n     */\n    _setConference(conference) {\n        this.conference = conference;\n\n        // We want to keep up with postponed events which should have been fired\n        // on \"attach\" call, but for local track we not always have the\n        // conference before attaching. However this may result in duplicated\n        // events if they have been triggered on \"attach\" already.\n        for (let i = 0; i < this.containers.length; i++) {\n            this._maybeFireTrackAttached(this.containers[i]);\n        }\n    }\n\n    /**\n     * Returns <tt>true</tt>.\n     *\n     * @returns {boolean} <tt>true</tt>\n     */\n    isLocal() {\n        return true;\n    }\n\n    /**\n     * Returns device id associated with track.\n     *\n     * @returns {string}\n     */\n    getDeviceId() {\n        return this._realDeviceId || this.deviceId;\n    }\n\n    /**\n     * Returns the participant id which owns the track.\n     *\n     * @returns {string} the id of the participants. It corresponds to the\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\n     */\n    getParticipantId() {\n        return this.conference && this.conference.myUserId();\n    }\n\n    /**\n     * Handles bytes sent statistics.\n     *\n     * @param {TraceablePeerConnection} tpc the source of the \"bytes sent\" stat\n     * @param {number} bytesSent the new value\n     * NOTE: used only for audio tracks to detect audio issues.\n     */\n    _onByteSentStatsReceived(tpc, bytesSent) {\n        if (bytesSent > 0) {\n            this._hasSentData = true;\n        }\n        const iceConnectionState = tpc.getConnectionState();\n\n        if (this._testDataSent && iceConnectionState === 'connected') {\n            setTimeout(() => {\n                if (!this._hasSentData) {\n                    logger.warn(`${this} 'bytes sent' <= 0: \\\n                        ${bytesSent}`);\n\n                    Statistics.analytics.sendEvent(NO_BYTES_SENT, { 'media_type': this.getType() });\n                }\n            }, 3000);\n            this._testDataSent = false;\n        }\n    }\n\n    /**\n     * Returns facing mode for video track from camera. For other cases (e.g.\n     * audio track or 'desktop' video track) returns undefined.\n     *\n     * @returns {CameraFacingMode|undefined}\n     */\n    getCameraFacingMode() {\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\n            // MediaStreamTrack#getSettings() is not implemented in many\n            // browsers, so we need feature checking here. Progress on the\n            // respective browser's implementation can be tracked at\n            // https://bugs.chromium.org/p/webrtc/issues/detail?id=2481 for\n            // Chromium and https://bugzilla.mozilla.org/show_bug.cgi?id=1213517\n            // for Firefox. Even if a browser implements getSettings() already,\n            // it might still not return anything for 'facingMode'.\n            let trackSettings;\n\n            try {\n                trackSettings = this.track.getSettings();\n            } catch (e) {\n                // XXX React-native-webrtc, for example, defines\n                // MediaStreamTrack#getSettings() but the implementation throws\n                // a \"Not implemented\" Error.\n            }\n            if (trackSettings && 'facingMode' in trackSettings) {\n                return trackSettings.facingMode;\n            }\n\n            if (typeof this._facingMode !== 'undefined') {\n                return this._facingMode;\n            }\n\n            // In most cases we are showing a webcam. So if we've gotten here,\n            // it should be relatively safe to assume that we are probably\n            // showing the user-facing camera.\n            return CameraFacingMode.USER;\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Stops the associated MediaStream.\n     */\n    stopStream() {\n        /**\n         * Indicates that we are executing {@link #stopStream} i.e.\n         * {@link RTCUtils#stopMediaStream} for the <tt>MediaStream</tt>\n         * associated with this <tt>JitsiTrack</tt> instance.\n         *\n         * @private\n         * @type {boolean}\n         */\n        this._stopStreamInProgress = true;\n\n        try {\n            RTCUtils.stopMediaStream(this.stream);\n        } finally {\n            this._stopStreamInProgress = false;\n        }\n    }\n\n    /**\n     * Switches the camera facing mode if the WebRTC implementation supports the\n     * custom MediaStreamTrack._switchCamera method. Currently, the method in\n     * question is implemented in react-native-webrtc only. When such a WebRTC\n     * implementation is executing, the method is the preferred way to switch\n     * between the front/user-facing and the back/environment-facing cameras\n     * because it will likely be (as is the case of react-native-webrtc)\n     * noticeably faster that creating a new MediaStreamTrack via a new\n     * getUserMedia call with the switched facingMode constraint value.\n     * Moreover, the approach with a new getUserMedia call may not even work:\n     * WebRTC on Android and iOS is either very slow to open the camera a second\n     * time or plainly freezes attempting to do that.\n     */\n    _switchCamera() {\n        if (this.isVideoTrack()\n                && this.videoType === VideoType.CAMERA\n                && typeof this.track._switchCamera === 'function') {\n            this.track._switchCamera();\n\n            this._facingMode\n                = this._facingMode === CameraFacingMode.ENVIRONMENT\n                    ? CameraFacingMode.USER\n                    : CameraFacingMode.ENVIRONMENT;\n        }\n    }\n\n    /**\n     * Checks whether the attached MediaStream is receiving data from source or\n     * not. If the stream property is null(because of mute or another reason)\n     * this method will return false.\n     * NOTE: This method doesn't indicate problem with the streams directly.\n     * For example in case of video mute the method will return false or if the\n     * user has disposed the track.\n     *\n     * @returns {boolean} true if the stream is receiving data and false\n     * this otherwise.\n     */\n    isReceivingData() {\n        if (this.isVideoTrack()\n            && (this.isMuted() || this._stopStreamInProgress || this.videoType === VideoType.DESKTOP)) {\n            return true;\n        }\n\n        if (!this.stream) {\n            return false;\n        }\n\n        // In older version of the spec there is no muted property and\n        // readyState can have value muted. In the latest versions\n        // readyState can have values \"live\" and \"ended\" and there is\n        // muted boolean property. If the stream is muted that means that\n        // we aren't receiving any data from the source. We want to notify\n        // the users for error if the stream is muted or ended on it's\n        // creation.\n\n        // For video blur enabled use the original video stream\n        const stream = this._effectEnabled ? this._originalStream : this.stream;\n\n        return stream.getTracks().some(track =>\n            (!('readyState' in track) || track.readyState === 'live')\n                && (!('muted' in track) || track.muted !== true));\n    }\n\n    /**\n     * Creates a text representation of this local track instance.\n     *\n     * @return {string}\n     */\n    toString() {\n        return `LocalTrack[${this.rtcId},${this.getType()}]`;\n    }\n}\n","import { createTtfmEvent } from '../../service/statistics/AnalyticsEvents';\nimport JitsiTrack from './JitsiTrack';\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport Statistics from '../statistics/statistics';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\nconst RTCEvents = require('../../service/RTC/RTCEvents');\n\nlet ttfmTrackerAudioAttached = false;\nlet ttfmTrackerVideoAttached = false;\n\n/**\n * List of container events that we are going to process. _onContainerEventHandler will be added as listener to the\n * container for every event in the list.\n */\nconst containerEvents = [\n    'abort', 'canplay', 'canplaythrough', 'emptied', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart',\n    'pause', 'play', 'playing', 'ratechange', 'stalled', 'suspend', 'waiting'\n];\n\n/* eslint-disable max-params */\n\n/**\n * Represents a single media track (either audio or video).\n */\nexport default class JitsiRemoteTrack extends JitsiTrack {\n    /**\n     * Creates new JitsiRemoteTrack instance.\n     * @param {RTC} rtc the RTC service instance.\n     * @param {JitsiConference} conference the conference to which this track\n     *        belongs to\n     * @param {string} ownerEndpointId the endpoint ID of the track owner\n     * @param {MediaStream} stream WebRTC MediaStream, parent of the track\n     * @param {MediaStreamTrack} track underlying WebRTC MediaStreamTrack for\n     *        the new JitsiRemoteTrack\n     * @param {MediaType} mediaType the type of the media\n     * @param {VideoType} videoType the type of the video if applicable\n     * @param {number} ssrc the SSRC number of the Media Stream\n     * @param {boolean} muted the initial muted state\n     * @param {boolean} isP2P indicates whether or not this track belongs to a\n     * P2P session\n     * @throws {TypeError} if <tt>ssrc</tt> is not a number.\n     * @constructor\n     */\n    constructor(\n            rtc,\n            conference,\n            ownerEndpointId,\n            stream,\n            track,\n            mediaType,\n            videoType,\n            ssrc,\n            muted,\n            isP2P) {\n        super(\n            conference,\n            stream,\n            track,\n            () => {\n                // Nothing to do if the track is inactive.\n            },\n            mediaType,\n            videoType);\n        this.rtc = rtc;\n\n        // Prevent from mixing up type of SSRC which should be a number\n        if (typeof ssrc !== 'number') {\n            throw new TypeError(`SSRC ${ssrc} is not a number`);\n        }\n        this.ssrc = ssrc;\n        this.ownerEndpointId = ownerEndpointId;\n        this.muted = muted;\n        this.isP2P = isP2P;\n\n        logger.debug(`New remote track added: ${this}`);\n\n        // we want to mark whether the track has been ever muted\n        // to detect ttfm events for startmuted conferences, as it can\n        // significantly increase ttfm values\n        this.hasBeenMuted = muted;\n\n        // Bind 'onmute' and 'onunmute' event handlers\n        if (this.rtc && this.track) {\n            this._bindTrackHandlers();\n        }\n        this._containerHandlers = {};\n        containerEvents.forEach(event => {\n            this._containerHandlers[event] = this._containerEventHandler.bind(this, event);\n        });\n    }\n\n    /* eslint-enable max-params */\n    /**\n     * Attaches the track handlers.\n     *\n     * @returns {void}\n     */\n    _bindTrackHandlers() {\n        this.track.addEventListener('mute', () => this._onTrackMute());\n        this.track.addEventListener('unmute', () => this._onTrackUnmute());\n        this.track.addEventListener('ended', () => {\n            logger.debug(`\"onended\" event(${Date.now()}): ${this}`);\n        });\n    }\n\n    /**\n     * Callback invoked when the track is muted. Emits an event notifying\n     * listeners of the mute event.\n     *\n     * @private\n     * @returns {void}\n     */\n    _onTrackMute() {\n        logger.debug(`\"onmute\" event(${Date.now()}): ${this}`);\n\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_MUTE, this);\n    }\n\n    /**\n     * Callback invoked when the track is unmuted. Emits an event notifying\n     * listeners of the mute event.\n     *\n     * @private\n     * @returns {void}\n     */\n    _onTrackUnmute() {\n        logger.debug(`\"onunmute\" event(${Date.now()}): ${this}`);\n\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_UNMUTE, this);\n    }\n\n    /**\n     * Sets current muted status and fires an events for the change.\n     * @param value the muted status.\n     */\n    setMute(value) {\n        if (this.muted === value) {\n            return;\n        }\n\n        if (value) {\n            this.hasBeenMuted = true;\n        }\n\n        // we can have a fake video stream\n        if (this.stream) {\n            this.stream.muted = value;\n        }\n\n        this.muted = value;\n        this.emit(JitsiTrackEvents.TRACK_MUTE_CHANGED, this);\n    }\n\n    /**\n     * Returns the current muted status of the track.\n     * @returns {boolean|*|JitsiRemoteTrack.muted} <tt>true</tt> if the track is\n     * muted and <tt>false</tt> otherwise.\n     */\n    isMuted() {\n        return this.muted;\n    }\n\n    /**\n     * Returns the participant id which owns the track.\n     *\n     * @returns {string} the id of the participants. It corresponds to the\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\n     */\n    getParticipantId() {\n        return this.ownerEndpointId;\n    }\n\n    /**\n     * Return false;\n     */\n    isLocal() {\n        return false;\n    }\n\n    /**\n     * Returns the synchronization source identifier (SSRC) of this remote\n     * track.\n     *\n     * @returns {number} the SSRC of this remote track.\n     */\n    getSSRC() {\n        return this.ssrc;\n    }\n\n    /**\n     * Changes the video type of the track.\n     *\n     * @param {string} type - The new video type(\"camera\", \"desktop\").\n     */\n    _setVideoType(type) {\n        if (this.videoType === type) {\n            return;\n        }\n        this.videoType = type;\n        this.emit(JitsiTrackEvents.TRACK_VIDEOTYPE_CHANGED, type);\n    }\n\n    /**\n     * Handles track play events.\n     */\n    _playCallback() {\n        const type = this.isVideoTrack() ? 'video' : 'audio';\n\n        const now = window.performance.now();\n\n        console.log(`(TIME) Render ${type}:\\t`, now);\n        this.conference.getConnectionTimes()[`${type}.render`] = now;\n\n        // The conference can be started without calling GUM\n        // FIXME if there would be a module for connection times this kind\n        // of logic (gumDuration or ttfm) should end up there\n        const gumStart = window.connectionTimes['obtainPermissions.start'];\n        const gumEnd = window.connectionTimes['obtainPermissions.end'];\n        const gumDuration\n            = !isNaN(gumEnd) && !isNaN(gumStart) ? gumEnd - gumStart : 0;\n\n        // Subtract the muc.joined-to-session-initiate duration because jicofo\n        // waits until there are 2 participants to start Jingle sessions.\n        const ttfm = now\n            - (this.conference.getConnectionTimes()['session.initiate']\n                - this.conference.getConnectionTimes()['muc.joined'])\n            - gumDuration;\n\n        this.conference.getConnectionTimes()[`${type}.ttfm`] = ttfm;\n        console.log(`(TIME) TTFM ${type}:\\t`, ttfm);\n\n        Statistics.sendAnalytics(createTtfmEvent(\n            {\n                'media_type': type,\n                muted: this.hasBeenMuted,\n                value: ttfm\n            }));\n\n    }\n\n    /**\n     * Attach time to first media tracker only if there is conference and only\n     * for the first element.\n     * @param container the HTML container which can be 'video' or 'audio'\n     * element.\n     * @private\n     */\n    _attachTTFMTracker(container) {\n        if ((ttfmTrackerAudioAttached && this.isAudioTrack())\n            || (ttfmTrackerVideoAttached && this.isVideoTrack())) {\n            return;\n        }\n\n        if (this.isAudioTrack()) {\n            ttfmTrackerAudioAttached = true;\n        }\n        if (this.isVideoTrack()) {\n            ttfmTrackerVideoAttached = true;\n        }\n\n        container.addEventListener('canplay', this._playCallback.bind(this));\n    }\n\n    /**\n     * Called when the track has been attached to a new container.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element.\n     * @private\n     */\n    _onTrackAttach(container) {\n        logger.debug(`Track has been attached to a container: ${this}`);\n\n        containerEvents.forEach(event => {\n            container.addEventListener(event, this._containerHandlers[event]);\n        });\n    }\n\n    /**\n     * Called when the track has been detached from a container.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element.\n     * @private\n     */\n    _onTrackDetach(container) {\n        logger.debug(`Track has been detached from a container: ${this}`);\n\n        containerEvents.forEach(event => {\n            container.removeEventListener(event, this._containerHandlers[event]);\n        });\n    }\n\n    /**\n     * An event handler for events triggered by the attached container.\n     *\n     * @param {string} type - The type of the event.\n     */\n    _containerEventHandler(type) {\n        logger.debug(`${type} handler was called for a container with attached ${this}`);\n    }\n\n    /**\n     * Returns a string with a description of the current status of the track.\n     *\n     * @returns {string}\n     */\n    _getStatus() {\n        const { enabled, muted, readyState } = this.track;\n\n        return `readyState: ${readyState}, muted: ${muted}, enabled: ${enabled}`;\n    }\n\n    /**\n     * Creates a text representation of this remote track instance.\n     * @return {string}\n     */\n    toString() {\n        return `RemoteTrack[userID: ${this.getParticipantId()}, type: ${this.getType()}, ssrc: ${\n            this.getSSRC()}, p2p: ${this.isP2P}, status: ${this._getStatus()}]`;\n    }\n}\n","/* global __filename, module */\nimport EventEmitter from 'events';\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCUtils from './RTCUtils';\n\nconst logger = getLogger(__filename);\n\n/**\n * Maps our handler types to MediaStreamTrack properties.\n */\nconst trackHandler2Prop = {\n    'track_mute': 'onmute', // Not supported on FF\n    'track_unmute': 'onunmute',\n    'track_ended': 'onended'\n};\n\n/**\n * Adds onended/oninactive handler to a MediaStream.\n * @param mediaStream a MediaStream to attach onended/oninactive handler\n * @param handler the handler\n */\nfunction addMediaStreamInactiveHandler(mediaStream, handler) {\n    mediaStream.oninactive = handler;\n}\n\n/**\n * Represents a single media track (either audio or video).\n */\nexport default class JitsiTrack extends EventEmitter {\n    /* eslint-disable max-params */\n    /**\n     * Represents a single media track (either audio or video).\n     * @constructor\n     * @param conference the rtc instance\n     * @param stream the WebRTC MediaStream instance\n     * @param track the WebRTC MediaStreamTrack instance, must be part of\n     * the given <tt>stream</tt>.\n     * @param streamInactiveHandler the function that will handle\n     *        onended/oninactive events of the stream.\n     * @param trackMediaType the media type of the JitsiTrack\n     * @param videoType the VideoType for this track if any\n     */\n    constructor(\n            conference,\n            stream,\n            track,\n            streamInactiveHandler,\n            trackMediaType,\n            videoType) {\n        super();\n\n        // aliases for addListener/removeListener\n        this.addEventListener = this.addListener;\n        this.removeEventListener = this.off = this.removeListener;\n\n        /**\n         * Array with the HTML elements that are displaying the streams.\n         * @type {Array}\n         */\n        this.containers = [];\n        this.conference = conference;\n        this.audioLevel = -1;\n        this.type = trackMediaType;\n        this.track = track;\n        this.videoType = videoType;\n        this.handlers = new Map();\n\n        /**\n         * Indicates whether this JitsiTrack has been disposed. If true, this\n         * JitsiTrack is to be considered unusable and operations involving it\n         * are to fail (e.g. {@link JitsiConference#addTrack(JitsiTrack)},\n         * {@link JitsiConference#removeTrack(JitsiTrack)}).\n         * @type {boolean}\n         */\n        this.disposed = false;\n\n        /**\n         * The inactive handler which will be triggered when the underlying\n         * <tt>MediaStream</tt> ends.\n         *\n         * @private\n         * @type {Function}\n         */\n        this._streamInactiveHandler = streamInactiveHandler;\n\n        this._setStream(stream);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Sets handler to the WebRTC MediaStream or MediaStreamTrack object\n     * depending on the passed type.\n     * @param {string} type the type of the handler that is going to be set\n     * @param {Function} handler the handler.\n     */\n    _setHandler(type, handler) {\n        if (!trackHandler2Prop.hasOwnProperty(type)) {\n            logger.error(`Invalid handler type ${type}`);\n\n            return;\n        }\n        if (handler) {\n            this.handlers.set(type, handler);\n        } else {\n            this.handlers.delete(type);\n        }\n\n        if (this.stream) {\n            for (const track of this.stream.getTracks()) {\n                track[trackHandler2Prop[type]] = handler;\n            }\n        }\n    }\n\n    /**\n     * Unregisters all event handlers bound to the underlying media stream/track\n     * @private\n     */\n    _unregisterHandlers() {\n        if (!this.stream) {\n            logger.warn(\n                `${this}: unable to unregister handlers - no stream object`);\n\n            return;\n        }\n\n        for (const type of this.handlers.keys()) {\n            // FIXME Why only video tracks?\n            for (const videoTrack of this.stream.getVideoTracks()) {\n                videoTrack[trackHandler2Prop[type]] = undefined;\n            }\n        }\n        if (this._streamInactiveHandler) {\n            addMediaStreamInactiveHandler(this.stream, undefined);\n        }\n    }\n\n    /**\n     * Sets the stream property of JitsiTrack object and sets all stored\n     * handlers to it.\n     *\n     * @param {MediaStream} stream the new stream.\n     * @protected\n     */\n    _setStream(stream) {\n        if (this.stream === stream) {\n            return;\n        }\n\n        this.stream = stream;\n\n        // TODO Practically, that's like the opposite of _unregisterHandlers\n        // i.e. may be abstracted into a function/method called\n        // _registerHandlers for clarity and easing the maintenance of the two\n        // pieces of source code.\n        if (this.stream) {\n            for (const type of this.handlers.keys()) {\n                this._setHandler(type, this.handlers.get(type));\n            }\n            if (this._streamInactiveHandler) {\n                addMediaStreamInactiveHandler(\n                    this.stream, this._streamInactiveHandler);\n            }\n        }\n    }\n\n    /**\n     * Returns the type (audio or video) of this track.\n     */\n    getType() {\n        return this.type;\n    }\n\n    /**\n     * Check if this is an audio track.\n     */\n    isAudioTrack() {\n        return this.getType() === MediaType.AUDIO;\n    }\n\n    /**\n     * Checks whether the underlying WebRTC <tt>MediaStreamTrack</tt> is muted\n     * according to it's 'muted' field status.\n     * @return {boolean} <tt>true</tt> if the underlying\n     * <tt>MediaStreamTrack</tt> is muted or <tt>false</tt> otherwise.\n     */\n    isWebRTCTrackMuted() {\n        return this.track && this.track.muted;\n    }\n\n    /**\n     * Check if this is a video track.\n     */\n    isVideoTrack() {\n        return this.getType() === MediaType.VIDEO;\n    }\n\n    /**\n     * Checks whether this is a local track.\n     * @abstract\n     * @return {boolean} 'true' if it's a local track or 'false' otherwise.\n     */\n    isLocal() {\n        throw new Error('Not implemented by subclass');\n    }\n\n    /**\n     * Returns the WebRTC MediaStream instance.\n     */\n    getOriginalStream() {\n        return this.stream;\n    }\n\n    /**\n     * Returns the ID of the underlying WebRTC Media Stream(if any)\n     * @returns {String|null}\n     */\n    getStreamId() {\n        return this.stream ? this.stream.id : null;\n    }\n\n    /**\n     * Return the underlying WebRTC MediaStreamTrack\n     * @returns {MediaStreamTrack}\n     */\n    getTrack() {\n        return this.track;\n    }\n\n    /**\n     * Returns the ID of the underlying WebRTC MediaStreamTrack(if any)\n     * @returns {String|null}\n     */\n    getTrackId() {\n        return this.track ? this.track.id : null;\n    }\n\n    /**\n     * Return meaningful usage label for this track depending on it's media and\n     * eventual video type.\n     * @returns {string}\n     */\n    getUsageLabel() {\n        if (this.isAudioTrack()) {\n            return 'mic';\n        }\n\n        return this.videoType ? this.videoType : 'default';\n    }\n\n    /**\n     * Eventually will trigger RTCEvents.TRACK_ATTACHED event.\n     * @param container the video/audio container to which this stream is\n     *        attached and for which event will be fired.\n     * @private\n     */\n    _maybeFireTrackAttached(container) {\n        if (this.conference && container) {\n            this.conference._onTrackAttach(this, container);\n        }\n    }\n\n    /**\n     * Attaches the MediaStream of this track to an HTML container.\n     * Adds the container to the list of containers that are displaying the\n     * track.\n     *\n     * @param container the HTML container which can be 'video' or 'audio'\n     * element.\n     *\n     * @returns {void}\n     */\n    attach(container) {\n        if (this.stream) {\n            this._onTrackAttach(container);\n            RTCUtils.attachMediaStream(container, this.stream);\n        }\n        this.containers.push(container);\n        this._maybeFireTrackAttached(container);\n        this._attachTTFMTracker(container);\n    }\n\n    /**\n     * Removes this JitsiTrack from the passed HTML container.\n     *\n     * @param container the HTML container to detach from this JitsiTrack. If\n     * <tt>null</tt> or <tt>undefined</tt>, all containers are removed. A\n     * container can be a 'video', 'audio' or 'object' HTML element instance to\n     * which this JitsiTrack is currently attached.\n     */\n    detach(container) {\n        for (let cs = this.containers, i = cs.length - 1; i >= 0; --i) {\n            const c = cs[i];\n\n            if (!container) {\n                this._onTrackDetach(c);\n                RTCUtils.attachMediaStream(c, null);\n            }\n            if (!container || c === container) {\n                cs.splice(i, 1);\n            }\n        }\n\n        if (container) {\n            this._onTrackDetach(container);\n            RTCUtils.attachMediaStream(container, null);\n        }\n    }\n\n    /**\n     * Called when the track has been attached to a new container.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element.\n     * @private\n     */\n    _onTrackAttach(container) { // eslint-disable-line no-unused-vars\n        // Should be defined by the classes that are extending JitsiTrack\n    }\n\n    /**\n     * Called when the track has been detached from a container.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element.\n     * @private\n     */\n    _onTrackDetach(container) { // eslint-disable-line no-unused-vars\n        // Should be defined by the classes that are extending JitsiTrack\n    }\n\n    /**\n     * Attach time to first media tracker only if there is conference and only\n     * for the first element.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element.\n     * @private\n     */\n    _attachTTFMTracker(container) { // eslint-disable-line no-unused-vars\n        // Should be defined by the classes that are extending JitsiTrack\n    }\n\n    /**\n     * Removes attached event listeners.\n     *\n     * @returns {Promise}\n     */\n    dispose() {\n        this.removeAllListeners();\n\n        this.disposed = true;\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Returns true if this is a video track and the source of the video is a\n     * screen capture as opposed to a camera.\n     */\n    isScreenSharing() {\n        // FIXME: Should be fixed or removed.\n    }\n\n    /**\n     * Returns id of the track.\n     * @returns {string|null} id of the track or null if this is fake track.\n     */\n    getId() {\n        if (this.stream) {\n            return RTCUtils.getStreamID(this.stream);\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks whether the MediaStream is active/not ended.\n     * When there is no check for active we don't have information and so\n     * will return that stream is active (in case of FF).\n     * @returns {boolean} whether MediaStream is active.\n     */\n    isActive() {\n        if (typeof this.stream.active !== 'undefined') {\n            return this.stream.active;\n        }\n\n        return true;\n    }\n\n    /**\n     * Sets the audio level for the stream\n     * @param {number} audioLevel value between 0 and 1\n     * @param {TraceablePeerConnection} [tpc] the peerconnection instance which\n     * is source for the audio level. It can be <tt>undefined</tt> for\n     * a local track if the audio level was measured outside of the\n     * peerconnection (see /modules/statistics/LocalStatsCollector.js).\n     */\n    setAudioLevel(audioLevel, tpc) {\n        if (this.audioLevel !== audioLevel) {\n            this.audioLevel = audioLevel;\n            this.emit(\n                JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n                audioLevel,\n                tpc);\n        }\n    }\n\n    /**\n     * Returns the msid of the stream attached to the JitsiTrack object or null\n     * if no stream is attached.\n     */\n    getMSID() {\n        const streamId = this.getStreamId();\n        const trackId = this.getTrackId();\n\n        return streamId && trackId ? `${streamId} ${trackId}` : null;\n    }\n\n    /**\n     * Sets new audio output device for track's DOM elements. Video tracks are\n     * ignored.\n     * @param {string} audioOutputDeviceId - id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices(), '' for default device\n     * @emits JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED\n     * @returns {Promise}\n     */\n    setAudioOutput(audioOutputDeviceId) {\n        if (!RTCUtils.isDeviceChangeAvailable('output')) {\n            return Promise.reject(\n                new Error('Audio output device change is not supported'));\n        }\n\n        // All audio communication is done through audio tracks, so ignore\n        // changing audio output for video tracks at all.\n        if (this.isVideoTrack()) {\n            return Promise.resolve();\n        }\n\n        return (\n            Promise.all(\n                this.containers.map(\n                    element =>\n                        element.setSinkId(audioOutputDeviceId)\n                            .catch(error => {\n                                logger.warn(\n                                    'Failed to change audio output device on'\n                                        + ' element. Default or previously set'\n                                        + ' audio output device will be used.',\n                                    element,\n                                    error);\n                                throw error;\n                            }))\n            )\n                .then(() => {\n                    this.emit(\n                        JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED,\n                        audioOutputDeviceId);\n                }));\n    }\n}\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport { SdpTransformWrap } from '../xmpp/SdpTransformUtil';\n\nconst logger = getLogger(__filename);\n\n/**\n * Fakes local SDP exposed to {@link JingleSessionPC} through the local\n * description getter. Modifies the SDP, so that it will contain muted local\n * video tracks description, even though their underlying {MediaStreamTrack}s\n * are no longer in the WebRTC peerconnection. That prevents from SSRC updates\n * being sent to Jicofo/remote peer and prevents sRD/sLD cycle on the remote\n * side.\n */\nexport default class LocalSdpMunger {\n\n    /**\n     * Creates new <tt>LocalSdpMunger</tt> instance.\n     *\n     * @param {TraceablePeerConnection} tpc\n     */\n    constructor(tpc) {\n        this.tpc = tpc;\n    }\n\n    /**\n     * Makes sure that muted local video tracks associated with the parent\n     * {@link TraceablePeerConnection} are described in the local SDP. It's done\n     * in order to prevent from sending 'source-remove'/'source-add' Jingle\n     * notifications when local video track is muted (<tt>MediaStream</tt> is\n     * removed from the peerconnection).\n     *\n     * NOTE 1 video track is assumed\n     *\n     * @param {SdpTransformWrap} transformer the transformer instance which will\n     * be used to process the SDP.\n     * @return {boolean} <tt>true</tt> if there were any modifications to\n     * the SDP wrapped by <tt>transformer</tt>.\n     * @private\n     */\n    _addMutedLocalVideoTracksToSDP(transformer) {\n        // Go over each video tracks and check if the SDP has to be changed\n        const localVideos = this.tpc.getLocalTracks(MediaType.VIDEO);\n\n        if (!localVideos.length) {\n            return false;\n        } else if (localVideos.length !== 1) {\n            logger.error(\n                `${this.tpc} there is more than 1 video track ! `\n                    + 'Strange things may happen !', localVideos);\n        }\n\n        const videoMLine = transformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(\n                `${this.tpc} unable to hack local video track SDP`\n                    + '- no \"video\" media');\n\n            return false;\n        }\n\n        let modified = false;\n\n        for (const videoTrack of localVideos) {\n            const muted = videoTrack.isMuted();\n            const mediaStream = videoTrack.getOriginalStream();\n\n            // During the mute/unmute operation there are periods of time when\n            // the track's underlying MediaStream is not added yet to\n            // the PeerConnection. The SDP needs to be munged in such case.\n            const isInPeerConnection\n                = mediaStream && this.tpc.isMediaStreamInPc(mediaStream);\n            const shouldFakeSdp = muted || !isInPeerConnection;\n\n            logger.debug(\n                `${this.tpc} ${videoTrack} muted: ${\n                    muted}, is in PeerConnection: ${\n                    isInPeerConnection} => should fake sdp ? : ${\n                    shouldFakeSdp}`);\n\n            if (!shouldFakeSdp) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            // Inject removed SSRCs\n            const requiredSSRCs\n                = this.tpc.isSimulcastOn()\n                    ? this.tpc.simulcast.ssrcCache\n                    : [ this.tpc.sdpConsistency.cachedPrimarySsrc ];\n\n            if (!requiredSSRCs.length) {\n                logger.error(\n                    `No SSRCs stored for: ${videoTrack} in ${this.tpc}`);\n\n                continue; // eslint-disable-line no-continue\n            }\n\n            modified = true;\n\n            // We need to fake sendrecv.\n            // NOTE the SDP produced here goes only to Jicofo and is never set\n            // as localDescription. That's why\n            // TraceablePeerConnection.mediaTransferActive is ignored here.\n            videoMLine.direction = 'sendrecv';\n\n            // Check if the recvonly has MSID\n            const primarySSRC = requiredSSRCs[0];\n\n            // FIXME The cname could come from the stream, but may turn out to\n            // be too complex. It is fine to come up with any value, as long as\n            // we only care about the actual SSRC values when deciding whether\n            // or not an update should be sent.\n            const primaryCname = `injected-${primarySSRC}`;\n\n            for (const ssrcNum of requiredSSRCs) {\n                // Remove old attributes\n                videoMLine.removeSSRC(ssrcNum);\n\n                // Inject\n                logger.debug(\n                    `${this.tpc} injecting video SSRC: ${ssrcNum} for ${\n                        videoTrack}`);\n                videoMLine.addSSRCAttribute({\n                    id: ssrcNum,\n                    attribute: 'cname',\n                    value: primaryCname\n                });\n                videoMLine.addSSRCAttribute({\n                    id: ssrcNum,\n                    attribute: 'msid',\n                    value: videoTrack.storedMSID\n                });\n            }\n            if (requiredSSRCs.length > 1) {\n                const group = {\n                    ssrcs: requiredSSRCs.join(' '),\n                    semantics: 'SIM'\n                };\n\n                if (!videoMLine.findGroup(group.semantics, group.ssrcs)) {\n                    // Inject the group\n                    logger.debug(\n                        `${this.tpc} injecting SIM group for ${videoTrack}`,\n                        group);\n                    videoMLine.addSSRCGroup(group);\n                }\n            }\n\n            // Insert RTX\n            // FIXME in P2P RTX is used by Chrome regardless of config option\n            // status. Because of that 'source-remove'/'source-add'\n            // notifications are still sent to remove/add RTX SSRC and FID group\n            if (!this.tpc.options.disableRtx) {\n                this.tpc.rtxModifier.modifyRtxSsrcs2(videoMLine);\n            }\n        }\n\n        return modified;\n    }\n\n    /**\n     * Modifies 'cname', 'msid', 'label' and 'mslabel' by appending\n     * the id of {@link LocalSdpMunger#tpc} at the end, preceding by a dash\n     * sign.\n     *\n     * @param {MLineWrap} mediaSection - The media part (audio or video) of the\n     * session description which will be modified in place.\n     * @returns {void}\n     * @private\n     */\n    _transformMediaIdentifiers(mediaSection) {\n        const pcId = this.tpc.id;\n\n        for (const ssrcLine of mediaSection.ssrcs) {\n            switch (ssrcLine.attribute) {\n            case 'cname':\n            case 'label':\n            case 'mslabel':\n                ssrcLine.value = ssrcLine.value && `${ssrcLine.value}-${pcId}`;\n                break;\n            case 'msid': {\n                if (ssrcLine.value) {\n                    const streamAndTrackIDs = ssrcLine.value.split(' ');\n\n                    if (streamAndTrackIDs.length === 2) {\n                        const streamId = streamAndTrackIDs[0];\n                        const trackId = streamAndTrackIDs[1];\n\n                        ssrcLine.value\n                            = `${streamId}-${pcId} ${trackId}-${pcId}`;\n                    } else {\n                        logger.warn(\n                            'Unable to munge local MSID'\n                                + `- weird format detected: ${ssrcLine.value}`);\n                    }\n                }\n                break;\n            }\n            }\n        }\n    }\n\n    /**\n     * Maybe modifies local description to fake local video tracks SDP when\n     * those are muted.\n     *\n     * @param {object} desc the WebRTC SDP object instance for the local\n     * description.\n     * @returns {RTCSessionDescription}\n     */\n    maybeAddMutedLocalVideoTracksToSDP(desc) {\n        if (!desc) {\n            throw new Error('No local description passed in.');\n        }\n\n        const transformer = new SdpTransformWrap(desc.sdp);\n\n        if (this._addMutedLocalVideoTracksToSDP(transformer)) {\n            return new RTCSessionDescription({\n                type: desc.type,\n                sdp: transformer.toRawSDP()\n            });\n        }\n\n        return desc;\n    }\n\n    /**\n     * This transformation will make sure that stream identifiers are unique\n     * across all of the local PeerConnections even if the same stream is used\n     * by multiple instances at the same time.\n     * Each PeerConnection assigns different SSRCs to the same local\n     * MediaStream, but the MSID remains the same as it's used to identify\n     * the stream by the WebRTC backend. The transformation will append\n     * {@link TraceablePeerConnection#id} at the end of each stream's identifier\n     * (\"cname\", \"msid\", \"label\" and \"mslabel\").\n     *\n     * @param {RTCSessionDescription} sessionDesc - The local session\n     * description (this instance remains unchanged).\n     * @return {RTCSessionDescription} - Transformed local session description\n     * (a modified copy of the one given as the input).\n     */\n    transformStreamIdentifiers(sessionDesc) {\n        // FIXME similar check is probably duplicated in all other transformers\n        if (!sessionDesc || !sessionDesc.sdp || !sessionDesc.type) {\n            return sessionDesc;\n        }\n\n        const transformer = new SdpTransformWrap(sessionDesc.sdp);\n        const audioMLine = transformer.selectMedia('audio');\n\n        if (audioMLine) {\n            this._transformMediaIdentifiers(audioMLine);\n        }\n\n        const videoMLine = transformer.selectMedia('video');\n\n        if (videoMLine) {\n            this._transformMediaIdentifiers(videoMLine);\n        }\n\n        return new RTCSessionDescription({\n            type: sessionDesc.type,\n            sdp: transformer.toRawSDP()\n        });\n    }\n}\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport BridgeChannel from './BridgeChannel';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport JitsiLocalTrack from './JitsiLocalTrack';\nimport Listenable from '../util/Listenable';\nimport { safeCounterIncrement } from '../util/MathUtil';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport browser from '../browser';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport RTCUtils from './RTCUtils';\nimport Statistics from '../statistics/statistics';\nimport TraceablePeerConnection from './TraceablePeerConnection';\nimport VideoType from '../../service/RTC/VideoType';\n\nconst logger = getLogger(__filename);\n\n/**\n * The counter used to generated id numbers assigned to peer connections\n * @type {number}\n */\nlet peerConnectionIdCounter = 0;\n\n/**\n * The counter used to generate id number for the local\n * <code>MediaStreamTrack</code>s.\n * @type {number}\n */\nlet rtcTrackIdCounter = 0;\n\n/**\n *\n * @param tracksInfo\n * @param options\n */\nfunction createLocalTracks(tracksInfo, options) {\n    const newTracks = [];\n    let deviceId = null;\n\n    tracksInfo.forEach(trackInfo => {\n        if (trackInfo.mediaType === MediaType.AUDIO) {\n            deviceId = options.micDeviceId;\n        } else if (trackInfo.videoType === VideoType.CAMERA) {\n            deviceId = options.cameraDeviceId;\n        }\n        rtcTrackIdCounter = safeCounterIncrement(rtcTrackIdCounter);\n        const localTrack = new JitsiLocalTrack({\n            ...trackInfo,\n            deviceId,\n            facingMode: options.facingMode,\n            rtcId: rtcTrackIdCounter,\n            effects: options.effects\n        });\n\n        newTracks.push(localTrack);\n    });\n\n    return newTracks;\n}\n\n/**\n * Creates {@code JitsiLocalTrack} instances from the passed in meta information\n * about MedieaTracks.\n *\n * @param {Object[]} mediaStreamMetaData - An array of meta information with\n * MediaTrack instances. Each can look like:\n * {{\n *     stream: MediaStream instance that holds a track with audio or video,\n *     track: MediaTrack within the MediaStream,\n *     videoType: \"camera\" or \"desktop\" or falsy,\n *     sourceId: ID of the desktopsharing source,\n *     sourceType: The desktopsharing source type,\n *     effects: Array of effect types\n * }}\n */\nfunction _newCreateLocalTracks(mediaStreamMetaData = []) {\n    return mediaStreamMetaData.map(metaData => {\n        const {\n            sourceId,\n            sourceType,\n            stream,\n            track,\n            videoType,\n            effects\n        } = metaData;\n\n        const { deviceId, facingMode } = track.getSettings();\n\n        // FIXME Move rtcTrackIdCounter to a static method in JitsiLocalTrack\n        // so RTC does not need to handle ID management. This move would be\n        // safer to do once the old createLocalTracks is removed.\n        rtcTrackIdCounter = safeCounterIncrement(rtcTrackIdCounter);\n\n        return new JitsiLocalTrack({\n            deviceId,\n            facingMode,\n            mediaType: track.kind,\n            rtcId: rtcTrackIdCounter,\n            sourceId,\n            sourceType,\n            stream,\n            track,\n            videoType: videoType || null,\n            effects\n        });\n    });\n}\n\n/**\n *\n */\nexport default class RTC extends Listenable {\n    /**\n     *\n     * @param conference\n     * @param options\n     */\n    constructor(conference, options = {}) {\n        super();\n        this.conference = conference;\n\n        /**\n         * A map of active <tt>TraceablePeerConnection</tt>.\n         * @type {Map.<number, TraceablePeerConnection>}\n         */\n        this.peerConnections = new Map();\n\n        this.localTracks = [];\n\n        this.options = options;\n\n        // BridgeChannel instance.\n        // @private\n        // @type {BridgeChannel}\n        this._channel = null;\n\n        // A flag whether we had received that the channel had opened we can\n        // get this flag out of sync if for some reason channel got closed\n        // from server, a desired behaviour so we can see errors when this\n        // happen.\n        // @private\n        // @type {boolean}\n        this._channelOpen = false;\n\n        /**\n         * The value specified to the last invocation of setLastN before the\n         * channel completed opening. If non-null, the value will be sent\n         * through a channel (once) as soon as it opens and will then be\n         * discarded.\n         * @private\n         * @type {number}\n         */\n        this._lastN = -1;\n\n        /**\n         * Defines the last N endpoints list. It can be null or an array once\n         * initialised with a channel last N event.\n         * @type {Array<string>|null}\n         * @private\n         */\n        this._lastNEndpoints = null;\n\n        /**\n         * The number representing the maximum video height the local client\n         * should receive from the bridge.\n         *\n         * @type {number|undefined}\n         * @private\n         */\n        this._maxFrameHeight = undefined;\n\n        /**\n         * The endpoint ID of currently pinned participant or <tt>null</tt> if\n         * no user is pinned.\n         * @type {string|null}\n         * @private\n         */\n        this._pinnedEndpoint = null;\n\n        /**\n         * The endpoint IDs of currently selected participants.\n         *\n         * @type {Array}\n         * @private\n         */\n        this._selectedEndpoints = [];\n\n        // The last N change listener.\n        this._lastNChangeListener = this._onLastNChanged.bind(this);\n\n        this._onDeviceListChanged = this._onDeviceListChanged.bind(this);\n        this._updateAudioOutputForAudioTracks\n            = this._updateAudioOutputForAudioTracks.bind(this);\n\n        // Switch audio output device on all remote audio tracks. Local audio\n        // tracks handle this event by themselves.\n        if (RTCUtils.isDeviceChangeAvailable('output')) {\n            RTCUtils.addListener(\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                this._updateAudioOutputForAudioTracks\n            );\n\n            RTCUtils.addListener(\n                RTCEvents.DEVICE_LIST_CHANGED,\n                this._onDeviceListChanged\n            );\n        }\n    }\n\n    /**\n     * Removes any listeners and stored state from this {@code RTC} instance.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        RTCUtils.removeListener(\n            RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n            this._updateAudioOutputForAudioTracks\n        );\n\n        RTCUtils.removeListener(\n            RTCEvents.DEVICE_LIST_CHANGED,\n            this._onDeviceListChanged\n        );\n\n        this.removeListener(\n            RTCEvents.LASTN_ENDPOINT_CHANGED,\n            this._lastNChangeListener\n        );\n\n        if (this._channelOpenListener) {\n            this.removeListener(\n                RTCEvents.DATA_CHANNEL_OPEN,\n                this._channelOpenListener\n            );\n        }\n    }\n\n    /**\n     * Exposes the private helper for converting a WebRTC MediaStream to a\n     * JitsiLocalTrack.\n     *\n     * @param {Array<Object>} tracksInfo\n     * @returns {Array<JitsiLocalTrack>}\n     */\n    static newCreateLocalTracks(tracksInfo) {\n        return _newCreateLocalTracks(tracksInfo);\n    }\n\n    /**\n     * Creates the local MediaStreams.\n     * @param {object} [options] Optional parameters.\n     * @param {array} options.devices The devices that will be requested.\n     * @param {string} options.resolution Resolution constraints.\n     * @param {string} options.cameraDeviceId\n     * @param {string} options.micDeviceId\n     * @returns {*} Promise object that will receive the new JitsiTracks\n     */\n    static obtainAudioAndVideoPermissions(options) {\n        const usesNewGumFlow = browser.usesNewGumFlow();\n        const obtainMediaPromise = usesNewGumFlow\n            ? RTCUtils.newObtainAudioAndVideoPermissions(options)\n            : RTCUtils.obtainAudioAndVideoPermissions(options);\n\n        return obtainMediaPromise.then(tracksInfo => {\n            if (usesNewGumFlow) {\n                return _newCreateLocalTracks(tracksInfo);\n            }\n\n            return createLocalTracks(tracksInfo, options);\n        });\n    }\n\n    /**\n     * Initializes the bridge channel of this instance.\n     * At least one of both, peerconnection or wsUrl parameters, must be\n     * given.\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\n     * instance.\n     * @param {string} [wsUrl] WebSocket URL.\n     */\n    initializeBridgeChannel(peerconnection, wsUrl) {\n        this._channel = new BridgeChannel(\n            peerconnection, wsUrl, this.eventEmitter);\n\n        this._channelOpenListener = () => {\n            // Mark that channel as opened.\n            this._channelOpen = true;\n\n            // When the channel becomes available, tell the bridge about\n            // video selections so that it can do adaptive simulcast,\n            // we want the notification to trigger even if userJid\n            // is undefined, or null.\n            try {\n                this._channel.sendPinnedEndpointMessage(\n                    this._pinnedEndpoint);\n                this._channel.sendSelectedEndpointsMessage(\n                    this._selectedEndpoints);\n\n                if (typeof this._maxFrameHeight !== 'undefined') {\n                    this._channel.sendReceiverVideoConstraintMessage(\n                        this._maxFrameHeight);\n                }\n            } catch (error) {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error(\n                    `Cannot send selected(${this._selectedEndpoint})`\n                    + `pinned(${this._pinnedEndpoint})`\n                    + `frameHeight(${this._maxFrameHeight}) endpoint message`,\n                    error);\n            }\n\n            this.removeListener(RTCEvents.DATA_CHANNEL_OPEN,\n                this._channelOpenListener);\n            this._channelOpenListener = null;\n\n            // If setLastN was invoked before the bridge channel completed\n            // opening, apply the specified value now that the channel\n            // is open. NOTE that -1 is the default value assumed by both\n            // RTC module and the JVB.\n            if (this._lastN !== -1) {\n                this._channel.sendSetLastNMessage(this._lastN);\n            }\n        };\n\n        this.addListener(RTCEvents.DATA_CHANNEL_OPEN,\n            this._channelOpenListener);\n\n        // Add Last N change listener.\n        this.addListener(RTCEvents.LASTN_ENDPOINT_CHANGED,\n            this._lastNChangeListener);\n    }\n\n    /**\n     * Callback invoked when the list of known audio and video devices has\n     * been updated. Attempts to update the known available audio output\n     * devices.\n     *\n     * @private\n     * @returns {void}\n     */\n    _onDeviceListChanged() {\n        this._updateAudioOutputForAudioTracks(RTCUtils.getAudioOutputDevice());\n    }\n\n    /**\n     * Receives events when Last N had changed.\n     * @param {array} lastNEndpoints The new Last N endpoints.\n     * @private\n     */\n    _onLastNChanged(lastNEndpoints = []) {\n        const oldLastNEndpoints = this._lastNEndpoints || [];\n        let leavingLastNEndpoints = [];\n        let enteringLastNEndpoints = [];\n\n        this._lastNEndpoints = lastNEndpoints;\n\n        leavingLastNEndpoints = oldLastNEndpoints.filter(\n            id => !this.isInLastN(id));\n\n        enteringLastNEndpoints = lastNEndpoints.filter(\n            id => oldLastNEndpoints.indexOf(id) === -1);\n\n        this.conference.eventEmitter.emit(\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\n            leavingLastNEndpoints,\n            enteringLastNEndpoints);\n    }\n\n    /**\n     * Should be called when current media session ends and after the\n     * PeerConnection has been closed using PeerConnection.close() method.\n     */\n    onCallEnded() {\n        if (this._channel) {\n            // The BridgeChannel is not explicitly closed as the PeerConnection\n            // is closed on call ended which triggers datachannel onclose\n            // events. If using a WebSocket, the channel must be closed since\n            // it is not managed by the PeerConnection.\n            // The reference is cleared to disable any logic related to the\n            // channel.\n            if (this._channel && this._channel.mode === 'websocket') {\n                this._channel.close();\n            }\n\n            this._channel = null;\n            this._channelOpen = false;\n        }\n    }\n\n    /**\n     * Sets the maximum video size the local participant should receive from\n     * remote participants. Will cache the value and send it through the channel\n     * once it is created.\n     *\n     * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\n     * this receiver is willing to receive.\n     * @returns {void}\n     */\n    setReceiverVideoConstraint(maxFrameHeight) {\n        this._maxFrameHeight = maxFrameHeight;\n\n        if (this._channel && this._channelOpen) {\n            this._channel.sendReceiverVideoConstraintMessage(maxFrameHeight);\n        }\n    }\n\n    /**\n     * Elects the participants with the given ids to be the selected\n     * participants in order to always receive video for this participant (even\n     * when last n is enabled). If there is no channel we store it and send it\n     * through the channel once it is created.\n     *\n     * @param {Array<string>} ids - The user ids.\n     * @throws NetworkError or InvalidStateError or Error if the operation\n     * fails.\n     * @returns {void}\n     */\n    selectEndpoints(ids) {\n        this._selectedEndpoints = ids;\n\n        if (this._channel && this._channelOpen) {\n            this._channel.sendSelectedEndpointsMessage(ids);\n        }\n    }\n\n    /**\n     * Elects the participant with the given id to be the pinned participant in\n     * order to always receive video for this participant (even when last n is\n     * enabled).\n     * @param {stirng} id The user id.\n     * @throws NetworkError or InvalidStateError or Error if the operation\n     * fails.\n     */\n    pinEndpoint(id) {\n        // Cache the value if channel is missing, till we open it.\n        this._pinnedEndpoint = id;\n        if (this._channel && this._channelOpen) {\n            this._channel.sendPinnedEndpointMessage(id);\n        }\n    }\n\n    /**\n     *\n     * @param eventType\n     * @param listener\n     */\n    static addListener(eventType, listener) {\n        RTCUtils.addListener(eventType, listener);\n    }\n\n    /**\n     *\n     * @param eventType\n     * @param listener\n     */\n    static removeListener(eventType, listener) {\n        RTCUtils.removeListener(eventType, listener);\n    }\n\n    /**\n     *\n     * @param options\n     */\n    static init(options = {}) {\n        this.options = options;\n\n        return RTCUtils.init(this.options);\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Creates new <tt>TraceablePeerConnection</tt>\n     * @param {SignalingLayer} signaling The signaling layer that will\n     *      provide information about the media or participants which is not\n     *      carried over SDP.\n     * @param {object} iceConfig An object describing the ICE config like\n     *      defined in the WebRTC specification.\n     * @param {boolean} isP2P Indicates whether or not the new TPC will be used\n     *      in a peer to peer type of session.\n     * @param {object} options The config options.\n     * @param {boolean} options.disableSimulcast If set to 'true' will disable\n     *      the simulcast.\n     * @param {boolean} options.disableRtx If set to 'true' will disable the\n     *      RTX.\n     * @param {boolean} options.disableH264 If set to 'true' H264 will be\n     *      disabled by removing it from the SDP.\n     * @param {boolean} options.preferH264 If set to 'true' H264 will be\n     *      preferred over other video codecs.\n     * @param {boolean} options.startSilent If set to 'true' no audio will be sent or received.\n     * @return {TraceablePeerConnection}\n     */\n    createPeerConnection(signaling, iceConfig, isP2P, options) {\n        const pcConstraints = RTC.getPCConstraints(isP2P);\n\n        if (typeof options.abtestSuspendVideo !== 'undefined') {\n            RTCUtils.setSuspendVideo(pcConstraints, options.abtestSuspendVideo);\n\n            Statistics.analytics.addPermanentProperties(\n                { abtestSuspendVideo: options.abtestSuspendVideo });\n        }\n\n        // FIXME: We should rename iceConfig to pcConfig.\n        if (browser.supportsSdpSemantics()) {\n            iceConfig.sdpSemantics = 'plan-b';\n        }\n\n        peerConnectionIdCounter = safeCounterIncrement(peerConnectionIdCounter);\n\n        const newConnection\n            = new TraceablePeerConnection(\n                this,\n                peerConnectionIdCounter,\n                signaling,\n                iceConfig, pcConstraints,\n                isP2P, options);\n\n        this.peerConnections.set(newConnection.id, newConnection);\n\n        return newConnection;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Removed given peer connection from this RTC module instance.\n     * @param {TraceablePeerConnection} traceablePeerConnection\n     * @return {boolean} <tt>true</tt> if the given peer connection was removed\n     * successfully or <tt>false</tt> if there was no peer connection mapped in\n     * this RTC instance.\n     */\n    _removePeerConnection(traceablePeerConnection) {\n        const id = traceablePeerConnection.id;\n\n        if (this.peerConnections.has(id)) {\n            // NOTE Remote tracks are not removed here.\n            this.peerConnections.delete(id);\n\n            return true;\n        }\n\n        return false;\n\n    }\n\n    /**\n     *\n     * @param track\n     */\n    addLocalTrack(track) {\n        if (!track) {\n            throw new Error('track must not be null nor undefined');\n        }\n\n        this.localTracks.push(track);\n\n        track.conference = this.conference;\n    }\n\n    /**\n     * Returns the current value for \"lastN\" - the amount of videos are going\n     * to be delivered. When set to -1 for unlimited or all available videos.\n     * @return {number}\n     */\n    getLastN() {\n        return this._lastN;\n    }\n\n    /**\n     * Get local video track.\n     * @returns {JitsiLocalTrack|undefined}\n     */\n    getLocalVideoTrack() {\n        const localVideo = this.getLocalTracks(MediaType.VIDEO);\n\n\n        return localVideo.length ? localVideo[0] : undefined;\n    }\n\n    /**\n     * Get local audio track.\n     * @returns {JitsiLocalTrack|undefined}\n     */\n    getLocalAudioTrack() {\n        const localAudio = this.getLocalTracks(MediaType.AUDIO);\n\n\n        return localAudio.length ? localAudio[0] : undefined;\n    }\n\n    /**\n     * Returns the local tracks of the given media type, or all local tracks if\n     * no specific type is given.\n     * @param {MediaType} [mediaType] Optional media type filter.\n     * (audio or video).\n     */\n    getLocalTracks(mediaType) {\n        let tracks = this.localTracks.slice();\n\n        if (mediaType !== undefined) {\n            tracks = tracks.filter(\n                track => track.getType() === mediaType);\n        }\n\n        return tracks;\n    }\n\n    /**\n     * Obtains all remote tracks currently known to this RTC module instance.\n     * @param {MediaType} [mediaType] The remote tracks will be filtered\n     *      by their media type if this argument is specified.\n     * @return {Array<JitsiRemoteTrack>}\n     */\n    getRemoteTracks(mediaType) {\n        let remoteTracks = [];\n\n        for (const tpc of this.peerConnections.values()) {\n            const pcRemoteTracks = tpc.getRemoteTracks(undefined, mediaType);\n\n            if (pcRemoteTracks) {\n                remoteTracks = remoteTracks.concat(pcRemoteTracks);\n            }\n        }\n\n        return remoteTracks;\n    }\n\n    /**\n     * Set mute for all local audio streams attached to the conference.\n     * @param value The mute value.\n     * @returns {Promise}\n     */\n    setAudioMute(value) {\n        const mutePromises = [];\n\n        this.getLocalTracks(MediaType.AUDIO).forEach(audioTrack => {\n            // this is a Promise\n            mutePromises.push(value ? audioTrack.mute() : audioTrack.unmute());\n        });\n\n        // We return a Promise from all Promises so we can wait for their\n        // execution.\n        return Promise.all(mutePromises);\n    }\n\n    /**\n     *\n     * @param track\n     */\n    removeLocalTrack(track) {\n        const pos = this.localTracks.indexOf(track);\n\n        if (pos === -1) {\n            return;\n        }\n\n        this.localTracks.splice(pos, 1);\n    }\n\n    /**\n     * Removes all JitsiRemoteTracks associated with given MUC nickname\n     * (resource part of the JID). Returns array of removed tracks.\n     *\n     * @param {string} Owner The resource part of the MUC JID.\n     * @returns {JitsiRemoteTrack[]}\n     */\n    removeRemoteTracks(owner) {\n        let removedTracks = [];\n\n        for (const tpc of this.peerConnections.values()) {\n            const pcRemovedTracks = tpc.removeRemoteTracks(owner);\n\n            removedTracks = removedTracks.concat(pcRemovedTracks);\n        }\n\n        logger.debug(\n            `Removed remote tracks for ${owner}`\n                + ` count: ${removedTracks.length}`);\n\n        return removedTracks;\n    }\n\n    /**\n     *\n     */\n    static getPCConstraints(isP2P) {\n        const pcConstraints\n            = isP2P ? RTCUtils.p2pPcConstraints : RTCUtils.pcConstraints;\n\n        if (!pcConstraints) {\n            return {};\n        }\n\n        return JSON.parse(JSON.stringify(pcConstraints));\n    }\n\n    /**\n     *\n     * @param elSelector\n     * @param stream\n     */\n    static attachMediaStream(elSelector, stream) {\n        return RTCUtils.attachMediaStream(elSelector, stream);\n    }\n\n    /**\n     * Returns the id of the given stream.\n     * @param {MediaStream} stream\n     */\n    static getStreamID(stream) {\n        return RTCUtils.getStreamID(stream);\n    }\n\n    /**\n     * Returns the id of the given track.\n     * @param {MediaStreamTrack} track\n     */\n    static getTrackID(track) {\n        return RTCUtils.getTrackID(track);\n    }\n\n    /**\n     * Returns true if retrieving the the list of input devices is supported\n     * and false if not.\n     */\n    static isDeviceListAvailable() {\n        return RTCUtils.isDeviceListAvailable();\n    }\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @param {string} [deviceType] Type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     */\n    static isDeviceChangeAvailable(deviceType) {\n        return RTCUtils.isDeviceChangeAvailable(deviceType);\n    }\n\n    /**\n     * Returns whether the current execution environment supports WebRTC (for\n     * use within this library).\n     *\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\n     * execution environment (for use within this library); {@code false},\n     * otherwise.\n     */\n    static isWebRtcSupported() {\n        return browser.isSupported();\n    }\n\n    /**\n     * Returns currently used audio output device id, '' stands for default\n     * device\n     * @returns {string}\n     */\n    static getAudioOutputDevice() {\n        return RTCUtils.getAudioOutputDevice();\n    }\n\n    /**\n     * Returns list of available media devices if its obtained, otherwise an\n     * empty array is returned/\n     * @returns {array} list of available media devices.\n     */\n    static getCurrentlyAvailableMediaDevices() {\n        return RTCUtils.getCurrentlyAvailableMediaDevices();\n    }\n\n    /**\n     * Returns event data for device to be reported to stats.\n     * @returns {MediaDeviceInfo} device.\n     */\n    static getEventDataForActiveDevice(device) {\n        return RTCUtils.getEventDataForActiveDevice(device);\n    }\n\n    /**\n     * Sets current audio output device.\n     * @param {string} deviceId Id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices().\n     * @returns {Promise} resolves when audio output is changed, is rejected\n     *      otherwise\n     */\n    static setAudioOutputDevice(deviceId) {\n        return RTCUtils.setAudioOutputDevice(deviceId);\n    }\n\n    /**\n     * Returns <tt>true<tt/> if given WebRTC MediaStream is considered a valid\n     * \"user\" stream which means that it's not a \"receive only\" stream nor a\n     * \"mixed\" JVB stream.\n     *\n     * Clients that implement Unified Plan, such as Firefox use recvonly\n     * \"streams/channels/tracks\" for receiving remote stream/tracks, as opposed\n     * to Plan B where there are only 3 channels: audio, video and data.\n     *\n     * @param {MediaStream} stream The WebRTC MediaStream instance.\n     * @returns {boolean}\n     */\n    static isUserStream(stream) {\n        return RTC.isUserStreamById(RTCUtils.getStreamID(stream));\n    }\n\n    /**\n     * Returns <tt>true<tt/> if a WebRTC MediaStream identified by given stream\n     * ID is considered a valid \"user\" stream which means that it's not a\n     * \"receive only\" stream nor a \"mixed\" JVB stream.\n     *\n     * Clients that implement Unified Plan, such as Firefox use recvonly\n     * \"streams/channels/tracks\" for receiving remote stream/tracks, as opposed\n     * to Plan B where there are only 3 channels: audio, video and data.\n     *\n     * @param {string} streamId The id of WebRTC MediaStream.\n     * @returns {boolean}\n     */\n    static isUserStreamById(streamId) {\n        return streamId && streamId !== 'mixedmslabel'\n            && streamId !== 'default';\n    }\n\n    /**\n     * Allows to receive list of available cameras/microphones.\n     * @param {function} callback Would receive array of devices as an\n     *      argument.\n     */\n    static enumerateDevices(callback) {\n        RTCUtils.enumerateDevices(callback);\n    }\n\n    /**\n     * A method to handle stopping of the stream.\n     * One point to handle the differences in various implementations.\n     * @param {MediaStream} mediaStream MediaStream object to stop.\n     */\n    static stopMediaStream(mediaStream) {\n        RTCUtils.stopMediaStream(mediaStream);\n    }\n\n    /**\n     * Returns whether the desktop sharing is enabled or not.\n     * @returns {boolean}\n     */\n    static isDesktopSharingEnabled() {\n        return RTCUtils.isDesktopSharingEnabled();\n    }\n\n    /**\n     * Closes the currently opened bridge channel.\n     */\n    closeBridgeChannel() {\n        if (this._channel) {\n            this._channel.close();\n            this._channelOpen = false;\n\n            this.removeListener(RTCEvents.LASTN_ENDPOINT_CHANGED,\n                this._lastNChangeListener);\n        }\n    }\n\n    /* eslint-disable max-params */\n    /**\n     *\n     * @param {TraceablePeerConnection} tpc\n     * @param {number} ssrc\n     * @param {number} audioLevel\n     * @param {boolean} isLocal\n     */\n    setAudioLevel(tpc, ssrc, audioLevel, isLocal) {\n        const track = tpc.getTrackBySSRC(ssrc);\n\n        if (!track) {\n            return;\n        } else if (!track.isAudioTrack()) {\n            logger.warn(`Received audio level for non-audio track: ${ssrc}`);\n\n            return;\n        } else if (track.isLocal() !== isLocal) {\n            logger.error(\n                `${track} was expected to ${isLocal ? 'be' : 'not be'} local`);\n        }\n\n        track.setAudioLevel(audioLevel, tpc);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Sends message via the bridge channel.\n     * @param {string} to The id of the endpoint that should receive the\n     *      message. If \"\" the message will be sent to all participants.\n     * @param {object} payload The payload of the message.\n     * @throws NetworkError or InvalidStateError or Error if the operation\n     * fails or there is no data channel created.\n     */\n    sendChannelMessage(to, payload) {\n        if (this._channel) {\n            this._channel.sendMessage(to, payload);\n        } else {\n            throw new Error('Channel support is disabled!');\n        }\n    }\n\n    /**\n     * Selects a new value for \"lastN\". The requested amount of videos are going\n     * to be delivered after the value is in effect. Set to -1 for unlimited or\n     * all available videos.\n     * @param {number} value the new value for lastN.\n     */\n    setLastN(value) {\n        if (this._lastN !== value) {\n            this._lastN = value;\n            if (this._channel && this._channelOpen) {\n                this._channel.sendSetLastNMessage(value);\n            }\n            this.eventEmitter.emit(RTCEvents.LASTN_VALUE_CHANGED, value);\n        }\n    }\n\n    /**\n     * Indicates if the endpoint id is currently included in the last N.\n     * @param {string} id The endpoint id that we check for last N.\n     * @returns {boolean} true if the endpoint id is in the last N or if we\n     * don't have bridge channel support, otherwise we return false.\n     */\n    isInLastN(id) {\n        return !this._lastNEndpoints // lastNEndpoints not initialised yet.\n            || this._lastNEndpoints.indexOf(id) > -1;\n    }\n\n    /**\n     * Updates the target audio output device for all remote audio tracks.\n     *\n     * @param {string} deviceId - The device id of the audio ouput device to\n     * use for all remote tracks.\n     * @private\n     * @returns {void}\n     */\n    _updateAudioOutputForAudioTracks(deviceId) {\n        const remoteAudioTracks = this.getRemoteTracks(MediaType.AUDIO);\n\n        for (const track of remoteAudioTracks) {\n            track.setAudioOutput(deviceId);\n        }\n    }\n}\n","/* global\n          __filename,\n          MediaStreamTrack,\n          RTCIceCandidate: true,\n          RTCPeerConnection,\n          RTCSessionDescription: true\n*/\n\nimport { AVAILABLE_DEVICE } from '../../service/statistics/AnalyticsEvents';\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\nimport EventEmitter from 'events';\nimport { getLogger } from 'jitsi-meet-logger';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport JitsiTrackError from '../../JitsiTrackError';\nimport Listenable from '../util/Listenable';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport Resolutions from '../../service/RTC/Resolutions';\nimport browser from '../browser';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport screenObtainer from './ScreenObtainer';\nimport SDPUtil from '../xmpp/SDPUtil';\nimport Statistics from '../statistics/statistics';\nimport VideoType from '../../service/RTC/VideoType';\n\nconst logger = getLogger(__filename);\n\n// Require adapter only for certain browsers. This is being done for\n// react-native, which has its own shims, and while browsers are being migrated\n// over to use adapter's shims.\nif (browser.usesAdapter()) {\n    require('webrtc-adapter');\n}\n\nconst eventEmitter = new EventEmitter();\n\nconst AVAILABLE_DEVICES_POLL_INTERVAL_TIME = 3000; // ms\n\n/**\n * Default resolution to obtain for video tracks if no resolution is specified.\n * This default is used for old gum flow only, as new gum flow uses\n * {@link DEFAULT_CONSTRAINTS}.\n */\nconst OLD_GUM_DEFAULT_RESOLUTION = 720;\n\n/**\n * Default devices to obtain when no specific devices are specified. This\n * default is used for old gum flow only.\n */\nconst OLD_GUM_DEFAULT_DEVICES = [ 'audio', 'video' ];\n\n/**\n * Default MediaStreamConstraints to use for calls to getUserMedia.\n *\n * @private\n */\nconst DEFAULT_CONSTRAINTS = {\n    video: {\n        aspectRatio: 16 / 9,\n        height: {\n            ideal: 720,\n            max: 720,\n            min: 240\n        }\n    }\n};\n\n/**\n * The default frame rate for Screen Sharing.\n */\nconst SS_DEFAULT_FRAME_RATE = 5;\n\n// Currently audio output device change is supported only in Chrome and\n// default output always has 'default' device ID\nlet audioOutputDeviceId = 'default'; // default device\n// whether user has explicitly set a device to use\nlet audioOutputChanged = false;\n\n// Disables all audio processing\nlet disableAP = false;\n\n// Disables Acoustic Echo Cancellation\nlet disableAEC = false;\n\n// Disables Noise Suppression\nlet disableNS = false;\n\n// Disables Automatic Gain Control\nlet disableAGC = false;\n\n// Disables Highpass Filter\nlet disableHPF = false;\n\nconst featureDetectionAudioEl = document.createElement('audio');\nconst isAudioOutputDeviceChangeAvailable\n    = typeof featureDetectionAudioEl.setSinkId !== 'undefined';\n\nlet availableDevices;\nlet availableDevicesPollTimer;\n\n/**\n * Initialize wrapper function for enumerating devices.\n * TODO: remove this, it should no longer be needed.\n *\n * @returns {?Function}\n */\nfunction initEnumerateDevicesWithCallback() {\n    if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n        return callback => {\n            navigator.mediaDevices.enumerateDevices()\n                .then(callback, () => callback([]));\n        };\n    }\n}\n\n/**\n *\n * @param constraints\n * @param isNewStyleConstraintsSupported\n * @param resolution\n */\nfunction setResolutionConstraints(\n        constraints,\n        isNewStyleConstraintsSupported,\n        resolution) {\n    if (Resolutions[resolution]) {\n        if (isNewStyleConstraintsSupported) {\n            constraints.video.width = {\n                ideal: Resolutions[resolution].width\n            };\n            constraints.video.height = {\n                ideal: Resolutions[resolution].height\n            };\n        }\n\n        constraints.video.mandatory.minWidth = Resolutions[resolution].width;\n        constraints.video.mandatory.minHeight = Resolutions[resolution].height;\n    }\n\n    if (constraints.video.mandatory.minWidth) {\n        constraints.video.mandatory.maxWidth\n            = constraints.video.mandatory.minWidth;\n    }\n\n    if (constraints.video.mandatory.minHeight) {\n        constraints.video.mandatory.maxHeight\n            = constraints.video.mandatory.minHeight;\n    }\n}\n\n/**\n * @param {string[]} um required user media types\n *\n * @param {Object} [options={}] optional parameters\n * @param {string} options.resolution\n * @param {number} options.bandwidth\n * @param {number} options.fps\n * @param {string} options.desktopStream\n * @param {string} options.cameraDeviceId\n * @param {string} options.micDeviceId\n * @param {CameraFacingMode} options.facingMode\n * @param {bool} firefox_fake_device\n * @param {Object} options.frameRate - used only for dekstop sharing.\n * @param {Object} options.frameRate.min - Minimum fps\n * @param {Object} options.frameRate.max - Maximum fps\n */\nfunction getConstraints(um, options = {}) {\n    const constraints = {\n        audio: false,\n        video: false\n    };\n\n    // Don't mix new and old style settings for Chromium as this leads\n    // to TypeError in new Chromium versions. @see\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=614716\n    // This is a temporary solution, in future we will fully split old and\n    // new style constraints when new versions of Chromium and Firefox will\n    // have stable support of new constraints format. For more information\n    // @see https://github.com/jitsi/lib-jitsi-meet/pull/136\n    const isNewStyleConstraintsSupported\n        = browser.isFirefox()\n            || browser.isSafariWithVP8()\n            || browser.isEdge()\n            || browser.isReactNative();\n\n    if (um.indexOf('video') >= 0) {\n        // same behaviour as true\n        constraints.video = { mandatory: {},\n            optional: [] };\n\n        if (options.cameraDeviceId) {\n            if (isNewStyleConstraintsSupported) {\n                // New style of setting device id.\n                constraints.video.deviceId = options.cameraDeviceId;\n            }\n\n            // Old style.\n            constraints.video.mandatory.sourceId = options.cameraDeviceId;\n        } else {\n            // Prefer the front i.e. user-facing camera (to the back i.e.\n            // environment-facing camera, for example).\n            // TODO: Maybe use \"exact\" syntax if options.facingMode is defined,\n            // but this probably needs to be decided when updating other\n            // constraints, as we currently don't use \"exact\" syntax anywhere.\n            const facingMode = options.facingMode || CameraFacingMode.USER;\n\n            if (isNewStyleConstraintsSupported) {\n                constraints.video.facingMode = facingMode;\n            }\n            constraints.video.optional.push({\n                facingMode\n            });\n        }\n\n        if (options.minFps || options.maxFps || options.fps) {\n            // for some cameras it might be necessary to request 30fps\n            // so they choose 30fps mjpg over 10fps yuy2\n            if (options.minFps || options.fps) {\n                // Fall back to options.fps for backwards compatibility\n                options.minFps = options.minFps || options.fps;\n                constraints.video.mandatory.minFrameRate = options.minFps;\n            }\n            if (options.maxFps) {\n                constraints.video.mandatory.maxFrameRate = options.maxFps;\n            }\n        }\n\n        setResolutionConstraints(\n            constraints, isNewStyleConstraintsSupported, options.resolution);\n    }\n    if (um.indexOf('audio') >= 0) {\n        if (browser.isReactNative()) {\n            // The react-native-webrtc project that we're currently using\n            // expects the audio constraint to be a boolean.\n            constraints.audio = true;\n        } else if (browser.isFirefox()) {\n            if (options.micDeviceId) {\n                constraints.audio = {\n                    mandatory: {},\n                    deviceId: options.micDeviceId, // new style\n                    optional: [ {\n                        sourceId: options.micDeviceId // old style\n                    } ] };\n            } else {\n                constraints.audio = true;\n            }\n        } else {\n            // same behaviour as true\n            constraints.audio = { mandatory: {},\n                optional: [] };\n            if (options.micDeviceId) {\n                if (isNewStyleConstraintsSupported) {\n                    // New style of setting device id.\n                    constraints.audio.deviceId = options.micDeviceId;\n                }\n\n                // Old style.\n                constraints.audio.optional.push({\n                    sourceId: options.micDeviceId\n                });\n            }\n\n            // if it is good enough for hangouts...\n            constraints.audio.optional.push(\n                { echoCancellation: !disableAEC && !disableAP },\n                { googEchoCancellation: !disableAEC && !disableAP },\n                { googAutoGainControl: !disableAGC && !disableAP },\n                { googNoiseSuppression: !disableNS && !disableAP },\n                { googHighpassFilter: !disableHPF && !disableAP },\n                { googNoiseSuppression2: !disableNS && !disableAP },\n                { googEchoCancellation2: !disableAEC && !disableAP },\n                { googAutoGainControl2: !disableAGC && !disableAP }\n            );\n        }\n    }\n    if (um.indexOf('screen') >= 0) {\n        if (browser.isChrome()) {\n            constraints.video = {\n                mandatory: getSSConstraints({\n                    ...options,\n                    source: 'screen'\n                }),\n                optional: []\n            };\n\n        } else if (browser.isFirefox()) {\n            constraints.video = {\n                mozMediaSource: 'window',\n                mediaSource: 'window',\n                frameRate: options.frameRate || {\n                    min: SS_DEFAULT_FRAME_RATE,\n                    max: SS_DEFAULT_FRAME_RATE\n                }\n            };\n\n        } else {\n            const errmsg\n                = '\\'screen\\' WebRTC media source is supported only in Chrome'\n                    + ' and Firefox';\n\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n            logger.error(errmsg);\n        }\n    }\n    if (um.indexOf('desktop') >= 0) {\n        constraints.video = {\n            mandatory: getSSConstraints({\n                ...options,\n                source: 'desktop'\n            }),\n            optional: []\n        };\n    }\n\n    if (options.bandwidth) {\n        if (!constraints.video) {\n            // same behaviour as true\n            constraints.video = { mandatory: {},\n                optional: [] };\n        }\n        constraints.video.optional.push({ bandwidth: options.bandwidth });\n    }\n\n    // we turn audio for both audio and video tracks, the fake audio & video\n    // seems to work only when enabled in one getUserMedia call, we cannot get\n    // fake audio separate by fake video this later can be a problem with some\n    // of the tests\n    if (browser.isFirefox() && options.firefox_fake_device) {\n        // seems to be fixed now, removing this experimental fix, as having\n        // multiple audio tracks brake the tests\n        // constraints.audio = true;\n        constraints.fake = true;\n    }\n\n    return constraints;\n}\n\n/**\n * Creates a constraints object to be passed into a call to getUserMedia.\n *\n * @param {Array} um - An array of user media types to get. The accepted\n * types are \"video\", \"audio\", and \"desktop.\"\n * @param {Object} options - Various values to be added to the constraints.\n * @param {string} options.cameraDeviceId - The device id for the video\n * capture device to get video from.\n * @param {Object} options.constraints - Default constraints object to use\n * as a base for the returned constraints.\n * @param {Object} options.desktopStream - The desktop source id from which\n * to capture a desktop sharing video.\n * @param {string} options.facingMode - Which direction the camera is\n * pointing to.\n * @param {string} options.micDeviceId - The device id for the audio capture\n * device to get audio from.\n * @param {Object} options.frameRate - used only for dekstop sharing.\n * @param {Object} options.frameRate.min - Minimum fps\n * @param {Object} options.frameRate.max - Maximum fps\n * @private\n * @returns {Object}\n */\nfunction newGetConstraints(um = [], options = {}) {\n    // Create a deep copy of the constraints to avoid any modification of\n    // the passed in constraints object.\n    const constraints = JSON.parse(JSON.stringify(\n        options.constraints || DEFAULT_CONSTRAINTS));\n\n    if (um.indexOf('video') >= 0) {\n        if (!constraints.video) {\n            constraints.video = {};\n        }\n\n        if (options.cameraDeviceId) {\n            constraints.video.deviceId = options.cameraDeviceId;\n        } else {\n            const facingMode = options.facingMode || CameraFacingMode.USER;\n\n            constraints.video.facingMode = facingMode;\n        }\n    } else {\n        constraints.video = false;\n    }\n\n    if (um.indexOf('audio') >= 0) {\n        if (!constraints.audio || typeof constraints.audio === 'boolean') {\n            constraints.audio = {};\n        }\n\n        // NOTE(brian): the new-style ('advanced' instead of 'optional')\n        // doesn't seem to carry through the googXXX constraints\n        // Changing back to 'optional' here (even with video using\n        // the 'advanced' style) allows them to be passed through\n        // but also requires the device id to capture to be set in optional\n        // as sourceId otherwise the constraints are considered malformed.\n        if (!constraints.audio.optional) {\n            constraints.audio.optional = [];\n        }\n\n        constraints.audio.optional.push(\n            { sourceId: options.micDeviceId },\n            { echoCancellation: !disableAEC && !disableAP },\n            { googEchoCancellation: !disableAEC && !disableAP },\n            { googAutoGainControl: !disableAGC && !disableAP },\n            { googNoiseSuppression: !disableNS && !disableAP },\n            { googHighpassFilter: !disableHPF && !disableAP },\n            { googNoiseSuppression2: !disableNS && !disableAP },\n            { googEchoCancellation2: !disableAEC && !disableAP },\n            { googAutoGainControl2: !disableAGC && !disableAP }\n        );\n    } else {\n        constraints.audio = false;\n    }\n\n    if (um.indexOf('desktop') >= 0) {\n        if (!constraints.video || typeof constraints.video === 'boolean') {\n            constraints.video = {};\n        }\n\n        constraints.video = {\n            mandatory: getSSConstraints({\n                ...options,\n                source: 'desktop'\n            })\n        };\n    }\n\n    return constraints;\n}\n\n/**\n * Generates GUM constraints for screen sharing.\n *\n * @param {Object} options - The options passed to\n * <tt>obtainAudioAndVideoPermissions</tt>.\n * @returns {Object} - GUM constraints.\n *\n * TODO: Currently only the new GUM flow and Chrome is using the method. We\n * should make it work for all use cases.\n */\nfunction getSSConstraints(options = {}) {\n    const {\n        desktopStream,\n        frameRate = {\n            min: SS_DEFAULT_FRAME_RATE,\n            max: SS_DEFAULT_FRAME_RATE\n        }\n    } = options;\n    const { max, min } = frameRate;\n\n    const constraints = {\n        chromeMediaSource: options.source,\n        maxWidth: window.screen.width,\n        maxHeight: window.screen.height\n    };\n\n    if (typeof min === 'number') {\n        constraints.minFrameRate = min;\n    }\n\n    if (typeof max === 'number') {\n        constraints.maxFrameRate = max;\n    }\n\n    if (typeof desktopStream !== 'undefined') {\n        constraints.chromeMediaSourceId = desktopStream;\n    }\n\n    return constraints;\n}\n\n/**\n * Generates constraints for screen sharing when using getDisplayMedia.\n * The constraints(MediaTrackConstraints) are applied to the resulting track.\n *\n * @returns {Object} - MediaTrackConstraints constraints.\n */\nfunction getTrackSSConstraints(options = {}) {\n    // we used to set height and width in the constraints, but this can lead\n    // to inconsistencies if the browser is on a lower resolution screen\n    // and we share a screen with bigger resolution, so they are now not set\n    const constraints = {\n        frameRate: SS_DEFAULT_FRAME_RATE\n    };\n    const { desktopSharingFrameRate } = options;\n\n    if (desktopSharingFrameRate && desktopSharingFrameRate.max) {\n        constraints.frameRate = desktopSharingFrameRate.max;\n    }\n\n    return constraints;\n}\n\n/**\n * Updates the granted permissions based on the options we requested and the\n * streams we received.\n * @param um the options we requested to getUserMedia.\n * @param stream the stream we received from calling getUserMedia.\n */\nfunction updateGrantedPermissions(um, stream) {\n    const audioTracksReceived\n        = Boolean(stream) && stream.getAudioTracks().length > 0;\n    const videoTracksReceived\n        = Boolean(stream) && stream.getVideoTracks().length > 0;\n    const grantedPermissions = {};\n\n    if (um.indexOf('video') !== -1) {\n        grantedPermissions.video = videoTracksReceived;\n    }\n    if (um.indexOf('audio') !== -1) {\n        grantedPermissions.audio = audioTracksReceived;\n    }\n\n    eventEmitter.emit(RTCEvents.GRANTED_PERMISSIONS, grantedPermissions);\n}\n\n/**\n * Checks if new list of available media devices differs from previous one.\n * @param {MediaDeviceInfo[]} newDevices - list of new devices.\n * @returns {boolean} - true if list is different, false otherwise.\n */\nfunction compareAvailableMediaDevices(newDevices) {\n    if (newDevices.length !== availableDevices.length) {\n        return true;\n    }\n\n    /* eslint-disable newline-per-chained-call */\n\n    return (\n        newDevices.map(mediaDeviceInfoToJSON).sort().join('')\n            !== availableDevices\n                .map(mediaDeviceInfoToJSON).sort().join(''));\n\n    /* eslint-enable newline-per-chained-call */\n\n    /**\n     *\n     * @param info\n     */\n    function mediaDeviceInfoToJSON(info) {\n        return JSON.stringify({\n            kind: info.kind,\n            deviceId: info.deviceId,\n            groupId: info.groupId,\n            label: info.label,\n            facing: info.facing\n        });\n    }\n}\n\n/**\n * Sends analytics event with the passed device list.\n *\n * @param {Array<MediaDeviceInfo>} deviceList - List with info about the\n * available devices.\n * @returns {void}\n */\nfunction sendDeviceListToAnalytics(deviceList) {\n    const audioInputDeviceCount\n        = deviceList.filter(d => d.kind === 'audioinput').length;\n    const audioOutputDeviceCount\n        = deviceList.filter(d => d.kind === 'audiooutput').length;\n    const videoInputDeviceCount\n        = deviceList.filter(d => d.kind === 'videoinput').length;\n    const videoOutputDeviceCount\n        = deviceList.filter(d => d.kind === 'videooutput').length;\n\n    deviceList.forEach(device => {\n        const attributes = {\n            'audio_input_device_count': audioInputDeviceCount,\n            'audio_output_device_count': audioOutputDeviceCount,\n            'video_input_device_count': videoInputDeviceCount,\n            'video_output_device_count': videoOutputDeviceCount,\n            'device_id': device.deviceId,\n            'device_group_id': device.groupId,\n            'device_kind': device.kind,\n            'device_label': device.label\n        };\n\n        Statistics.sendAnalytics(AVAILABLE_DEVICE, attributes);\n    });\n}\n\n/**\n * Event handler for the 'devicechange' event.\n *\n * @param {MediaDeviceInfo[]} devices - list of media devices.\n * @emits RTCEvents.DEVICE_LIST_CHANGED\n */\nfunction onMediaDevicesListChanged(devicesReceived) {\n    availableDevices = devicesReceived.slice(0);\n    logger.info(\n        'list of media devices has changed:',\n        availableDevices);\n\n    sendDeviceListToAnalytics(availableDevices);\n\n    // Used by tracks to update the real device id before the consumer of lib-jitsi-meet receives the new device list.\n    eventEmitter.emit(RTCEvents.DEVICE_LIST_WILL_CHANGE, devicesReceived);\n\n    eventEmitter.emit(RTCEvents.DEVICE_LIST_CHANGED, devicesReceived);\n}\n\n/**\n * Handles the newly created Media Streams.\n * @param streams the new Media Streams\n * @param resolution the resolution of the video streams\n * @returns {*[]} object that describes the new streams\n */\nfunction handleLocalStream(streams, resolution) {\n    let audioStream, desktopStream, videoStream;\n    const res = [];\n\n    // XXX The function obtainAudioAndVideoPermissions has examined the type of\n    // the browser, its capabilities, etc. and has taken the decision whether to\n    // invoke getUserMedia per device (e.g. Firefox) or once for both audio and\n    // video (e.g. Chrome). In order to not duplicate the logic here, examine\n    // the specified streams and figure out what we've received based on\n    // obtainAudioAndVideoPermissions' decision.\n    if (streams) {\n        // As mentioned above, certian types of browser (e.g. Chrome) support\n        // (with a result which meets our requirements expressed bellow) calling\n        // getUserMedia once for both audio and video.\n        const audioVideo = streams.audioVideo;\n\n        if (audioVideo) {\n            const audioTracks = audioVideo.getAudioTracks();\n\n            if (audioTracks.length) {\n                audioStream = new MediaStream();\n                for (let i = 0; i < audioTracks.length; i++) {\n                    audioStream.addTrack(audioTracks[i]);\n                }\n            }\n\n            const videoTracks = audioVideo.getVideoTracks();\n\n            if (videoTracks.length) {\n                videoStream = new MediaStream();\n                for (let j = 0; j < videoTracks.length; j++) {\n                    videoStream.addTrack(videoTracks[j]);\n                }\n            }\n        } else {\n            // On other types of browser (e.g. Firefox) we choose (namely,\n            // obtainAudioAndVideoPermissions) to call getUserMedia per device\n            // (type).\n            audioStream = streams.audio;\n            videoStream = streams.video;\n        }\n\n        desktopStream = streams.desktop;\n    }\n\n    if (desktopStream) {\n        const { stream, sourceId, sourceType } = desktopStream;\n\n        res.push({\n            stream,\n            sourceId,\n            sourceType,\n            track: stream.getVideoTracks()[0],\n            mediaType: MediaType.VIDEO,\n            videoType: VideoType.DESKTOP\n        });\n    }\n    if (audioStream) {\n        res.push({\n            stream: audioStream,\n            track: audioStream.getAudioTracks()[0],\n            mediaType: MediaType.AUDIO,\n            videoType: null\n        });\n    }\n    if (videoStream) {\n        res.push({\n            stream: videoStream,\n            track: videoStream.getVideoTracks()[0],\n            mediaType: MediaType.VIDEO,\n            videoType: VideoType.CAMERA,\n            resolution\n        });\n    }\n\n    return res;\n}\n\n/**\n * Represents a default implementation of setting a <tt>MediaStream</tt> as the\n * source of a video element that tries to be browser-agnostic through feature\n * checking. Note though that it was not completely clear from the predating\n * browser-specific implementations what &quot;videoSrc&quot; was because one\n * implementation of {@link RTCUtils#getVideoSrc} would return\n * <tt>MediaStream</tt> (e.g. Firefox), another a <tt>string</tt> representation\n * of the <tt>URL</tt> of the <tt>MediaStream</tt> (e.g. Chrome) and the return\n * value was only used by {@link RTCUIHelper#getVideoId} which itself did not\n * appear to be used anywhere. Generally, the implementation will try to follow\n * the related standards i.e. work with the <tt>srcObject</tt> and <tt>src</tt>\n * properties of the specified <tt>element</tt> taking into account vender\n * prefixes.\n *\n * @param element the element whose video source/src is to be set to the\n * specified <tt>stream</tt>\n * @param {MediaStream} stream the <tt>MediaStream</tt> to set as the video\n * source/src of <tt>element</tt>\n */\nfunction defaultSetVideoSrc(element, stream) {\n    // srcObject\n    let srcObjectPropertyName = 'srcObject';\n\n    if (!(srcObjectPropertyName in element)) {\n        srcObjectPropertyName = 'mozSrcObject';\n        if (!(srcObjectPropertyName in element)) {\n            srcObjectPropertyName = null;\n        }\n    }\n    if (srcObjectPropertyName) {\n        element[srcObjectPropertyName] = stream;\n\n        return;\n    }\n\n    // src\n    let src;\n\n    if (stream) {\n        src = stream.jitsiObjectURL;\n\n        // Save the created URL for stream so we can reuse it and not keep\n        // creating URLs.\n        if (!src) {\n            stream.jitsiObjectURL = src = URL.createObjectURL(stream);\n        }\n    }\n    element.src = src || '';\n}\n\n/**\n *\n */\nclass RTCUtils extends Listenable {\n    /**\n     *\n     */\n    constructor() {\n        super(eventEmitter);\n    }\n\n    /**\n     * Depending on the browser, sets difference instance methods for\n     * interacting with user media and adds methods to native WebRTC-related\n     * objects. Also creates an instance variable for peer connection\n     * constraints.\n     *\n     * @param {Object} options\n     * @returns {void}\n     */\n    init(options = {}) {\n        if (typeof options.disableAEC === 'boolean') {\n            disableAEC = options.disableAEC;\n            logger.info(`Disable AEC: ${disableAEC}`);\n        }\n        if (typeof options.disableNS === 'boolean') {\n            disableNS = options.disableNS;\n            logger.info(`Disable NS: ${disableNS}`);\n        }\n        if (typeof options.disableAP === 'boolean') {\n            disableAP = options.disableAP;\n            logger.info(`Disable AP: ${disableAP}`);\n        }\n        if (typeof options.disableAGC === 'boolean') {\n            disableAGC = options.disableAGC;\n            logger.info(`Disable AGC: ${disableAGC}`);\n        }\n        if (typeof options.disableHPF === 'boolean') {\n            disableHPF = options.disableHPF;\n            logger.info(`Disable HPF: ${disableHPF}`);\n        }\n\n        availableDevices = undefined;\n        window.clearInterval(availableDevicesPollTimer);\n        availableDevicesPollTimer = undefined;\n\n        this.enumerateDevices = initEnumerateDevicesWithCallback();\n\n        if (browser.usesNewGumFlow()) {\n            this.RTCPeerConnectionType = RTCPeerConnection;\n\n            this.attachMediaStream\n                = wrapAttachMediaStream((element, stream) => {\n                    if (element) {\n                        element.srcObject = stream;\n                    }\n                });\n\n            this.getStreamID = ({ id }) => id;\n            this.getTrackID = ({ id }) => id;\n        } else if (browser.isChromiumBased() // this is chrome < 61\n                || browser.isReactNative()) {\n\n            this.RTCPeerConnectionType = RTCPeerConnection;\n\n            this.attachMediaStream\n                = wrapAttachMediaStream((element, stream) => {\n                    defaultSetVideoSrc(element, stream);\n\n                    return element;\n                });\n\n            this.getStreamID = function({ id }) {\n                // A. MediaStreams from FF endpoints have the characters '{' and\n                // '}' that make jQuery choke.\n                // B. The react-native-webrtc implementation that we use at the\n                // time of this writing returns a number for the id of\n                // MediaStream. Let's just say that a number contains no special\n                // characters.\n                return (\n                    typeof id === 'number'\n                        ? id\n                        : SDPUtil.filterSpecialChars(id));\n            };\n            this.getTrackID = ({ id }) => id;\n\n            if (!MediaStream.prototype.getVideoTracks) {\n                MediaStream.prototype.getVideoTracks = function() {\n                    return this.videoTracks;\n                };\n            }\n            if (!MediaStream.prototype.getAudioTracks) {\n                MediaStream.prototype.getAudioTracks = function() {\n                    return this.audioTracks;\n                };\n            }\n        } else {\n            const message = 'Endpoint does not appear to be WebRTC-capable';\n\n            logger.error(message);\n            throw new Error(message);\n        }\n\n        this._initPCConstraints(options);\n\n        screenObtainer.init(\n            options,\n            this.getUserMediaWithConstraints.bind(this));\n\n        if (this.isDeviceListAvailable()) {\n            this.enumerateDevices(ds => {\n                availableDevices = ds.splice(0);\n\n                logger.debug('Available devices: ', availableDevices);\n                sendDeviceListToAnalytics(availableDevices);\n\n                eventEmitter.emit(\n                    RTCEvents.DEVICE_LIST_AVAILABLE,\n                    availableDevices);\n\n\n                // Use a shared callback to handle both the devicechange event\n                // and the polling implementations. This prevents duplication\n                // and works around a chrome bug (verified to occur on 68) where\n                // devicechange fires twice in a row, which can cause async post\n                // devicechange processing to collide.\n                const updateKnownDevices = () => this.enumerateDevices(pds => {\n                    if (compareAvailableMediaDevices(pds)) {\n                        onMediaDevicesListChanged(pds);\n                    }\n                });\n\n                if (browser.supportsDeviceChangeEvent()) {\n                    navigator.mediaDevices.addEventListener(\n                        'devicechange',\n                        updateKnownDevices);\n                } else {\n                    // Periodically poll enumerateDevices() method to check if\n                    // list of media devices has changed.\n                    availableDevicesPollTimer = window.setInterval(\n                        updateKnownDevices,\n                        AVAILABLE_DEVICES_POLL_INTERVAL_TIME);\n                }\n            });\n        }\n    }\n\n    /**\n     * Creates instance objects for peer connection constraints both for p2p\n     * and outside of p2p.\n     *\n     * @params {Object} options - Configuration for setting RTCUtil's instance\n     * objects for peer connection constraints.\n     * @params {boolean} options.useIPv6 - Set to true if IPv6 should be used.\n     * @params {Object} options.testing - Additional configuration for work in\n     * development.\n     * @params {Object} options.testing.forceP2PSuspendVideoRatio - True if\n     * video should become suspended if bandwidth estimation becomes low while\n     * in peer to peer connection mode.\n     */\n    _initPCConstraints(options) {\n        if (browser.isFirefox()) {\n            this.pcConstraints = {};\n        } else if (browser.isChromiumBased() || browser.isReactNative()) {\n            this.pcConstraints = { optional: [\n                { googHighStartBitrate: 0 },\n                { googPayloadPadding: true },\n                { googScreencastMinBitrate: 100 },\n                { googCpuOveruseDetection: true },\n                { googCpuOveruseEncodeUsage: true },\n                { googCpuUnderuseThreshold: 55 },\n                { googCpuOveruseThreshold: 85 }\n            ] };\n\n            if (options.useIPv6) {\n                // https://code.google.com/p/webrtc/issues/detail?id=2828\n                this.pcConstraints.optional.push({ googIPv6: true });\n            }\n\n            this.p2pPcConstraints\n                = JSON.parse(JSON.stringify(this.pcConstraints));\n        }\n\n        this.p2pPcConstraints = this.p2pPcConstraints || this.pcConstraints;\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n    * @param {string[]} um required user media types\n    * @param {Object} [options] optional parameters\n    * @param {string} options.resolution\n    * @param {number} options.bandwidth\n    * @param {number} options.fps\n    * @param {string} options.desktopStream\n    * @param {string} options.cameraDeviceId\n    * @param {string} options.micDeviceId\n    * @param {Object} options.frameRate - used only for dekstop sharing.\n    * @param {Object} options.frameRate.min - Minimum fps\n    * @param {Object} options.frameRate.max - Maximum fps\n    * @returns {Promise} Returns a media stream on success or a JitsiTrackError\n    * on failure.\n    **/\n    getUserMediaWithConstraints(um, options = {}) {\n        const constraints = getConstraints(um, options);\n\n        logger.info('Get media constraints', constraints);\n\n        return new Promise((resolve, reject) => {\n            navigator.mediaDevices.getUserMedia(constraints)\n                .then(stream => {\n                    logger.log('onUserMediaSuccess');\n                    updateGrantedPermissions(um, stream);\n                    resolve(stream);\n                })\n                .catch(error => {\n                    logger.warn('Failed to get access to local media. '\n                        + ` ${error} ${constraints} `);\n                    updateGrantedPermissions(um, undefined);\n                    reject(new JitsiTrackError(error, constraints, um));\n                });\n        });\n    }\n\n    /**\n     * Acquires a media stream via getUserMedia that\n     * matches the given constraints\n     *\n     * @param {array} umDevices which devices to acquire (e.g. audio, video)\n     * @param {Object} constraints - Stream specifications to use.\n     * @returns {Promise}\n     */\n    _newGetUserMediaWithConstraints(umDevices, constraints = {}) {\n        return new Promise((resolve, reject) => {\n            navigator.mediaDevices.getUserMedia(constraints)\n                .then(stream => {\n                    logger.log('onUserMediaSuccess');\n                    updateGrantedPermissions(umDevices, stream);\n                    resolve(stream);\n                })\n                .catch(error => {\n                    logger.warn('Failed to get access to local media. '\n                        + ` ${error} ${constraints} `);\n                    updateGrantedPermissions(umDevices, undefined);\n                    reject(new JitsiTrackError(error, constraints, umDevices));\n                });\n        });\n    }\n\n    /**\n     * Acquire a display stream via the screenObtainer. This requires extra\n     * logic compared to use screenObtainer versus normal device capture logic\n     * in RTCUtils#_newGetUserMediaWithConstraints.\n     *\n     * @param {Object} options\n     * @param {Object} options.desktopSharingExtensionExternalInstallation\n     * @param {string[]} options.desktopSharingSources\n     * @param {Object} options.desktopSharingFrameRate\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\n     * @returns {Promise} A promise which will be resolved with an object which\n     * contains the acquired display stream. If desktop sharing is not supported\n     * then a rejected promise will be returned.\n     */\n    _newGetDesktopMedia(options) {\n        if (!screenObtainer.isSupported() || !browser.supportsVideo()) {\n            return Promise.reject(\n                new Error('Desktop sharing is not supported!'));\n        }\n\n        return new Promise((resolve, reject) => {\n            screenObtainer.obtainStream(\n                this._parseDesktopSharingOptions(options),\n                stream => {\n                    resolve(stream);\n                },\n                error => {\n                    reject(error);\n                });\n        });\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Creates the local MediaStreams.\n     * @param {Object} [options] optional parameters\n     * @param {Array} options.devices the devices that will be requested\n     * @param {string} options.resolution resolution constraints\n     * @param {string} options.cameraDeviceId\n     * @param {string} options.micDeviceId\n     * @param {Object} options.desktopSharingFrameRate\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\n     * @returns {*} Promise object that will receive the new JitsiTracks\n     */\n    obtainAudioAndVideoPermissions(options = {}) {\n        options.devices = options.devices || [ ...OLD_GUM_DEFAULT_DEVICES ];\n        options.resolution = options.resolution || OLD_GUM_DEFAULT_RESOLUTION;\n\n        const requestingDesktop = options.devices.includes('desktop');\n\n        if (requestingDesktop && !screenObtainer.isSupported()) {\n            return Promise.reject(\n                new Error('Desktop sharing is not supported!'));\n        }\n\n        return this._getAudioAndVideoStreams(options).then(streams =>\n            handleLocalStream(streams, options.resolution));\n    }\n\n    /**\n     * Performs one call to getUserMedia for audio and/or video and another call\n     * for desktop.\n     *\n     * @param {Object} options - An object describing how the gUM request should\n     * be executed. See {@link obtainAudioAndVideoPermissions} for full options.\n     * @returns {*} Promise object that will receive the new JitsiTracks on\n     * success or a JitsiTrackError on failure.\n     */\n    _getAudioAndVideoStreams(options) {\n        const requestingDesktop = options.devices.includes('desktop');\n\n        options.devices = options.devices.filter(device =>\n            device !== 'desktop');\n\n        const gumPromise = options.devices.length\n            ? this.getUserMediaWithConstraints(options.devices, options)\n            : Promise.resolve(null);\n\n        return gumPromise\n            .then(avStream => {\n                // If any requested devices are missing, call gum again in\n                // an attempt to obtain the actual error. For example, the\n                // requested video device is missing or permission was\n                // denied.\n                const missingTracks\n                    = this._getMissingTracks(options.devices, avStream);\n\n                if (missingTracks.length) {\n                    this.stopMediaStream(avStream);\n\n                    return this.getUserMediaWithConstraints(\n                        missingTracks, options)\n\n                        // GUM has already failed earlier and this success\n                        // handling should not be reached.\n                        .then(() => Promise.reject(new JitsiTrackError(\n                            { name: 'UnknownError' },\n                            getConstraints(options.devices, options),\n                            missingTracks)));\n                }\n\n                return avStream;\n            })\n            .then(audioVideo => {\n                if (!requestingDesktop) {\n                    return { audioVideo };\n                }\n\n                if (options.desktopSharingSourceDevice) {\n                    this.stopMediaStream(audioVideo);\n\n                    throw new Error('Using a camera as screenshare source is'\n                        + 'not supported on this browser.');\n                }\n\n                return new Promise((resolve, reject) => {\n                    screenObtainer.obtainStream(\n                        this._parseDesktopSharingOptions(options),\n                        desktop => resolve({\n                            audioVideo,\n                            desktop\n                        }),\n                        error => {\n                            if (audioVideo) {\n                                this.stopMediaStream(audioVideo);\n                            }\n                            reject(error);\n                        });\n                });\n            });\n    }\n\n    /**\n     * Private utility for determining if the passed in MediaStream contains\n     * tracks of the type(s) specified in the requested devices.\n     *\n     * @param {string[]} requestedDevices - The track types that are expected to\n     * be includes in the stream.\n     * @param {MediaStream} stream - The MediaStream to check if it has the\n     * expected track types.\n     * @returns {string[]} An array of string with the missing track types. The\n     * array will be empty if all requestedDevices are found in the stream.\n     */\n    _getMissingTracks(requestedDevices = [], stream) {\n        const missingDevices = [];\n\n        const audioDeviceRequested = requestedDevices.includes('audio');\n        const audioTracksReceived\n            = stream && stream.getAudioTracks().length > 0;\n\n        if (audioDeviceRequested && !audioTracksReceived) {\n            missingDevices.push('audio');\n        }\n\n        const videoDeviceRequested = requestedDevices.includes('video');\n        const videoTracksReceived\n            = stream && stream.getVideoTracks().length > 0;\n\n        if (videoDeviceRequested && !videoTracksReceived) {\n            missingDevices.push('video');\n        }\n\n        return missingDevices;\n    }\n\n    /**\n     * Returns an object formatted for specifying desktop sharing parameters.\n     *\n     * @param {Object} options - Takes in the same options object as\n     * {@link obtainAudioAndVideoPermissions}.\n     * @returns {Object}\n     */\n    _parseDesktopSharingOptions(options) {\n        return {\n            ...options.desktopSharingExtensionExternalInstallation,\n            desktopSharingSources: options.desktopSharingSources,\n            gumOptions: {\n                frameRate: options.desktopSharingFrameRate\n            },\n            trackOptions: getTrackSSConstraints(options)\n        };\n    }\n\n    /**\n     * Gets streams from specified device types. This function intentionally\n     * ignores errors for upstream to catch and handle instead.\n     *\n     * @param {Object} options - A hash describing what devices to get and\n     * relevant constraints.\n     * @param {string[]} options.devices - The types of media to capture. Valid\n     * values are \"desktop\", \"audio\", and \"video\".\n     * @param {Object} options.desktopSharingFrameRate\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\n     * @param {String} options.desktopSharingSourceDevice - The device id or\n     * label for a video input source that should be used for screensharing.\n     * @returns {Promise} The promise, when successful, will return an array of\n     * meta data for the requested device type, which includes the stream and\n     * track. If an error occurs, it will be deferred to the caller for\n     * handling.\n     */\n    newObtainAudioAndVideoPermissions(options) {\n        logger.info('Using the new gUM flow');\n\n        const mediaStreamsMetaData = [];\n\n        // Declare private functions to be used in the promise chain below.\n        // These functions are declared in the scope of this function because\n        // they are not being used anywhere else, so only this function needs to\n        // know about them.\n\n        /**\n         * Executes a request for desktop media if specified in options.\n         *\n         * @returns {Promise}\n         */\n        const maybeRequestDesktopDevice = function() {\n            const umDevices = options.devices || [];\n            const isDesktopDeviceRequested\n                = umDevices.indexOf('desktop') !== -1;\n\n            if (!isDesktopDeviceRequested) {\n                return Promise.resolve();\n            }\n\n            const {\n                desktopSharingExtensionExternalInstallation,\n                desktopSharingSourceDevice,\n                desktopSharingSources,\n                desktopSharingFrameRate\n            } = options;\n\n            // Attempt to use a video input device as a screenshare source if\n            // the option is defined.\n            if (desktopSharingSourceDevice) {\n                const matchingDevice\n                    = availableDevices && availableDevices.find(device =>\n                        device.kind === 'videoinput'\n                            && (device.deviceId === desktopSharingSourceDevice\n                            || device.label === desktopSharingSourceDevice));\n                const requestedDevices = [ 'video' ];\n\n                // Leverage the helper used by {@link _newGetDesktopMedia} to\n                // get constraints for the desktop stream.\n                const { gumOptions, trackOptions }\n                    = this._parseDesktopSharingOptions(options);\n\n                // Create a custom constraints object to use exact device\n                // matching to make sure there is no fallthrough to another\n                // camera device. If a matching device could not be found, try\n                // anyways and let the caller handle errors.\n                const constraints = {\n                    video: {\n                        ...gumOptions,\n                        deviceId: {\n                            exact: (matchingDevice && matchingDevice.deviceId)\n                                || desktopSharingSourceDevice\n                        }\n                    }\n                };\n\n                return this._newGetUserMediaWithConstraints(\n                    requestedDevices, constraints)\n                    .then(stream => {\n                        const track = stream && stream.getTracks()[0];\n                        const applyConstrainsPromise\n                            = track && track.applyConstraints\n                                ? track.applyConstraints(trackOptions)\n                                : Promise.resolve();\n\n                        return applyConstrainsPromise\n                            .then(() => {\n                                return {\n                                    sourceType: 'device',\n                                    stream\n                                };\n                            });\n                    });\n            }\n\n            return this._newGetDesktopMedia({\n                desktopSharingExtensionExternalInstallation,\n                desktopSharingSources,\n                desktopSharingFrameRate\n            });\n        }.bind(this);\n\n        /**\n         * Creates a meta data object about the passed in desktopStream and\n         * pushes the meta data to the internal array mediaStreamsMetaData to be\n         * returned later.\n         *\n         * @param {MediaStreamTrack} desktopStream - A track for a desktop\n         * capture.\n         * @returns {void}\n         */\n        const maybeCreateAndAddDesktopTrack = function(desktopStream) {\n            if (!desktopStream) {\n                return;\n            }\n\n            const { stream, sourceId, sourceType } = desktopStream;\n\n            mediaStreamsMetaData.push({\n                stream,\n                sourceId,\n                sourceType,\n                track: stream.getVideoTracks()[0],\n                videoType: VideoType.DESKTOP\n            });\n        };\n\n        /**\n         * Executes a request for audio and/or video, as specified in options.\n         * By default both audio and video will be captured if options.devices\n         * is not defined.\n         *\n         * @returns {Promise}\n         */\n        const maybeRequestCaptureDevices = function() {\n            const umDevices = options.devices || [ 'audio', 'video' ];\n            const requestedCaptureDevices = umDevices.filter(device =>\n                device === 'audio'\n                || (device === 'video' && browser.supportsVideo()));\n\n            if (!requestedCaptureDevices.length) {\n                return Promise.resolve();\n            }\n\n            const constraints = newGetConstraints(\n                requestedCaptureDevices, options);\n\n            logger.info('Got media constraints: ', constraints);\n\n            return this._newGetUserMediaWithConstraints(\n                requestedCaptureDevices, constraints);\n        }.bind(this);\n\n        /**\n         * Splits the passed in media stream into separate audio and video\n         * streams and creates meta data objects for each and pushes them to the\n         * internal array mediaStreamsMetaData to be returned later.\n         *\n         * @param {MediaStreamTrack} avStream - A track for with audio and/or\n         * video track.\n         * @returns {void}\n         */\n        const maybeCreateAndAddAVTracks = function(avStream) {\n            if (!avStream) {\n                return;\n            }\n\n            const audioTracks = avStream.getAudioTracks();\n\n            if (audioTracks.length) {\n                const audioStream = new MediaStream(audioTracks);\n\n                mediaStreamsMetaData.push({\n                    stream: audioStream,\n                    track: audioStream.getAudioTracks()[0],\n                    effects: options.effects\n                });\n            }\n\n            const videoTracks = avStream.getVideoTracks();\n\n            if (videoTracks.length) {\n                const videoStream = new MediaStream(videoTracks);\n\n                mediaStreamsMetaData.push({\n                    stream: videoStream,\n                    track: videoStream.getVideoTracks()[0],\n                    videoType: VideoType.CAMERA,\n                    effects: options.effects\n                });\n            }\n        };\n\n        return maybeRequestDesktopDevice()\n            .then(maybeCreateAndAddDesktopTrack)\n            .then(maybeRequestCaptureDevices)\n            .then(maybeCreateAndAddAVTracks)\n            .then(() => mediaStreamsMetaData)\n            .catch(error => {\n                mediaStreamsMetaData.forEach(({ stream }) => {\n                    this.stopMediaStream(stream);\n                });\n\n                return Promise.reject(error);\n            });\n    }\n\n    /**\n     * Checks whether it is possible to enumerate available cameras/microphones.\n     *\n     * @returns {boolean} {@code true} if the device listing is available;\n     * {@code false}, otherwise.\n     */\n    isDeviceListAvailable() {\n        return Boolean(\n            navigator.mediaDevices\n                && navigator.mediaDevices.enumerateDevices);\n    }\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @params {string} [deviceType] - type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     */\n    isDeviceChangeAvailable(deviceType) {\n        return deviceType === 'output' || deviceType === 'audiooutput'\n            ? isAudioOutputDeviceChangeAvailable\n            : browser.isChromiumBased()\n                || browser.isFirefox() || browser.isEdge();\n    }\n\n    /**\n     * A method to handle stopping of the stream.\n     * One point to handle the differences in various implementations.\n     * @param mediaStream MediaStream object to stop.\n     */\n    stopMediaStream(mediaStream) {\n        if (!mediaStream) {\n            return;\n        }\n\n        mediaStream.getTracks().forEach(track => {\n            if (track.stop) {\n                track.stop();\n            }\n        });\n\n        // leave stop for implementation still using it\n        if (mediaStream.stop) {\n            mediaStream.stop();\n        }\n\n        // The MediaStream implementation of the react-native-webrtc project has\n        // an explicit release method that is to be invoked in order to release\n        // used resources such as memory.\n        if (mediaStream.release) {\n            mediaStream.release();\n        }\n\n        // if we have done createObjectURL, lets clean it\n        const url = mediaStream.jitsiObjectURL;\n\n        if (url) {\n            delete mediaStream.jitsiObjectURL;\n            URL.revokeObjectURL(url);\n        }\n    }\n\n    /**\n     * Returns whether the desktop sharing is enabled or not.\n     * @returns {boolean}\n     */\n    isDesktopSharingEnabled() {\n        return screenObtainer.isSupported();\n    }\n\n    /**\n     * Sets current audio output device.\n     * @param {string} deviceId - id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices(), 'default' for default\n     *      device\n     * @returns {Promise} - resolves when audio output is changed, is rejected\n     *      otherwise\n     */\n    setAudioOutputDevice(deviceId) {\n        if (!this.isDeviceChangeAvailable('output')) {\n            return Promise.reject(\n                new Error('Audio output device change is not supported'));\n        }\n\n        return featureDetectionAudioEl.setSinkId(deviceId)\n            .then(() => {\n                audioOutputDeviceId = deviceId;\n                audioOutputChanged = true;\n\n                logger.log(`Audio output device set to ${deviceId}`);\n\n                eventEmitter.emit(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                    deviceId);\n            });\n    }\n\n    /**\n     * Returns currently used audio output device id, '' stands for default\n     * device\n     * @returns {string}\n     */\n    getAudioOutputDevice() {\n        return audioOutputDeviceId;\n    }\n\n    /**\n     * Returns list of available media devices if its obtained, otherwise an\n     * empty array is returned/\n     * @returns {Array} list of available media devices.\n     */\n    getCurrentlyAvailableMediaDevices() {\n        return availableDevices;\n    }\n\n    /**\n     * Returns event data for device to be reported to stats.\n     * @returns {MediaDeviceInfo} device.\n     */\n    getEventDataForActiveDevice(device) {\n        const deviceList = [];\n        const deviceData = {\n            'deviceId': device.deviceId,\n            'kind': device.kind,\n            'label': device.label,\n            'groupId': device.groupId\n        };\n\n        deviceList.push(deviceData);\n\n        return { deviceList };\n    }\n\n    /**\n     * Configures the given PeerConnection constraints to either enable or\n     * disable (according to the value of the 'enable' parameter) the\n     * 'googSuspendBelowMinBitrate' option.\n     * @param constraints the constraints on which to operate.\n     * @param enable {boolean} whether to enable or disable the suspend video\n     * option.\n     */\n    setSuspendVideo(constraints, enable) {\n        if (!constraints.optional) {\n            constraints.optional = [];\n        }\n\n        // Get rid of all \"googSuspendBelowMinBitrate\" constraints (we assume\n        // that the elements of constraints.optional contain a single property).\n        constraints.optional\n            = constraints.optional.filter(\n                c => !c.hasOwnProperty('googSuspendBelowMinBitrate'));\n\n        if (enable) {\n            constraints.optional.push({ googSuspendBelowMinBitrate: 'true' });\n        }\n    }\n}\n\nconst rtcUtils = new RTCUtils();\n\n/**\n * Wraps original attachMediaStream function to set current audio output device\n * if this is supported.\n * @param {Function} origAttachMediaStream\n * @returns {Function}\n */\nfunction wrapAttachMediaStream(origAttachMediaStream) {\n    return function(element, stream) {\n        // eslint-disable-next-line prefer-rest-params\n        const res = origAttachMediaStream.apply(rtcUtils, arguments);\n\n        if (stream\n                && rtcUtils.isDeviceChangeAvailable('output')\n                && stream.getAudioTracks\n                && stream.getAudioTracks().length\n\n                // we skip setting audio output if there was no explicit change\n                && audioOutputChanged) {\n            element.setSinkId(rtcUtils.getAudioOutputDevice())\n                .catch(function(ex) {\n                    const err\n                        = new JitsiTrackError(ex, null, [ 'audiooutput' ]);\n\n                    GlobalOnErrorHandler.callUnhandledRejectionHandler({\n                        promise: this, // eslint-disable-line no-invalid-this\n                        reason: err\n                    });\n\n                    logger.warn(\n                        'Failed to set audio output device for the element.'\n                            + ' Default audio output device will be used'\n                            + ' instead',\n                        element,\n                        err);\n                });\n        }\n\n        return res;\n    };\n}\n\nexport default rtcUtils;\n","/* global chrome, $, alert */\n\nimport JitsiTrackError from '../../JitsiTrackError';\nimport * as JitsiTrackErrors from '../../JitsiTrackErrors';\nimport browser from '../browser';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\n\n/**\n * Indicates whether the Chrome desktop sharing extension is installed.\n * @type {boolean}\n */\nlet chromeExtInstalled = false;\n\n/**\n * Indicates whether an update of the Chrome desktop sharing extension is\n * required.\n * @type {boolean}\n */\nlet chromeExtUpdateRequired = false;\n\nlet gumFunction = null;\n\n/**\n * The error message returned by chrome when the extension is installed.\n */\nconst CHROME_NO_EXTENSION_ERROR_MSG // eslint-disable-line no-unused-vars\n    = 'Could not establish connection. Receiving end does not exist.';\n\n/**\n * Handles obtaining a stream from a screen capture on different browsers.\n */\nconst ScreenObtainer = {\n    /**\n     * If not <tt>null</tt> it means that the initialization process is still in\n     * progress. It is used to make desktop stream request wait and continue\n     * after it's done.\n     * {@type Promise|null}\n     */\n    intChromeExtPromise: null,\n\n    obtainStream: null,\n\n    /**\n     * Initializes the function used to obtain a screen capture\n     * (this.obtainStream).\n     *\n     * @param {object} options\n     * @param {boolean} [options.desktopSharingChromeDisabled]\n     * @param {boolean} [options.desktopSharingChromeExtId]\n     * @param {boolean} [options.desktopSharingFirefoxDisabled]\n     * @param {Function} gum GUM method\n     */\n    init(options = {\n        desktopSharingChromeDisabled: false,\n        desktopSharingChromeExtId: null,\n        desktopSharingFirefoxDisabled: false\n    }, gum) {\n        this.options = options;\n        gumFunction = gum;\n\n        this.obtainStream = this._createObtainStreamMethod(options);\n\n        if (!this.obtainStream) {\n            logger.info('Desktop sharing disabled');\n        }\n    },\n\n    /**\n     * Returns a method which will be used to obtain the screen sharing stream\n     * (based on the browser type).\n     *\n     * @param {object} options passed from {@link init} - check description\n     * there\n     * @returns {Function}\n     * @private\n     */\n    _createObtainStreamMethod(options) {\n        if (browser.isNWJS()) {\n            return (_, onSuccess, onFailure) => {\n                window.JitsiMeetNW.obtainDesktopStream(\n                    onSuccess,\n                    (error, constraints) => {\n                        let jitsiError;\n\n                        // FIXME:\n                        // This is very very dirty fix for recognising that the\n                        // user have clicked the cancel button from the Desktop\n                        // sharing pick window. The proper solution would be to\n                        // detect this in the NWJS application by checking the\n                        // streamId === \"\". Even better solution would be to\n                        // stop calling GUM from the NWJS app and just pass the\n                        // streamId to lib-jitsi-meet. This way the desktop\n                        // sharing implementation for NWJS and chrome extension\n                        // will be the same and lib-jitsi-meet will be able to\n                        // control the constraints, check the streamId, etc.\n                        //\n                        // I cannot find documentation about \"InvalidStateError\"\n                        // but this is what we are receiving from GUM when the\n                        // streamId for the desktop sharing is \"\".\n\n                        if (error && error.name === 'InvalidStateError') {\n                            jitsiError = new JitsiTrackError(\n                                JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED\n                            );\n                        } else {\n                            jitsiError = new JitsiTrackError(\n                                error, constraints, [ 'desktop' ]);\n                        }\n                        (typeof onFailure === 'function')\n                            && onFailure(jitsiError);\n                    });\n            };\n        } else if (browser.isElectron()) {\n            return this.obtainScreenOnElectron;\n        } else if (browser.isChrome() || browser.isOpera()) {\n            if (browser.supportsGetDisplayMedia()\n                    && !options.desktopSharingChromeDisabled) {\n\n                return this.obtainScreenFromGetDisplayMedia;\n            } else if (options.desktopSharingChromeDisabled\n                || !options.desktopSharingChromeExtId) {\n\n                return null;\n            }\n\n            logger.info('Using Chrome extension for desktop sharing');\n            this.intChromeExtPromise\n                = initChromeExtension(options).then(() => {\n                    this.intChromeExtPromise = null;\n                });\n\n            return this.obtainScreenFromExtension;\n        } else if (browser.isFirefox()) {\n            if (options.desktopSharingFirefoxDisabled) {\n                return null;\n            } else if (browser.supportsGetDisplayMedia()) {\n                // Firefox 66 support getDisplayMedia\n                return this.obtainScreenFromGetDisplayMedia;\n            }\n\n            // Legacy Firefox\n            return this.obtainScreenOnFirefox;\n        } else if (browser.isEdge() && browser.supportsGetDisplayMedia()) {\n            return this.obtainScreenFromGetDisplayMedia;\n        }\n\n        logger.log(\n            'Screen sharing not supported by the current browser: ',\n            browser.getName());\n\n        return null;\n    },\n\n    /**\n     * Checks whether obtaining a screen capture is supported in the current\n     * environment.\n     * @returns {boolean}\n     */\n    isSupported() {\n        return this.obtainStream !== null;\n    },\n\n    /**\n     * Obtains a screen capture stream on Firefox.\n     * @param callback\n     * @param errorCallback\n     */\n    obtainScreenOnFirefox(options, callback, errorCallback) {\n        obtainWebRTCScreen(options.gumOptions, callback, errorCallback);\n    },\n\n    /**\n     * Obtains a screen capture stream on Electron.\n     *\n     * @param {Object} [options] - Screen sharing options.\n     * @param {Array<string>} [options.desktopSharingSources] - Array with the\n     * sources that have to be displayed in the desktop picker window ('screen',\n     * 'window', etc.).\n     * @param onSuccess - Success callback.\n     * @param onFailure - Failure callback.\n     */\n    obtainScreenOnElectron(options = {}, onSuccess, onFailure) {\n        if (window.JitsiMeetScreenObtainer\n            && window.JitsiMeetScreenObtainer.openDesktopPicker) {\n            const { desktopSharingSources, gumOptions } = options;\n\n            window.JitsiMeetScreenObtainer.openDesktopPicker(\n                {\n                    desktopSharingSources: desktopSharingSources\n                        || this.options.desktopSharingChromeSources\n                },\n                (streamId, streamType) =>\n                    onGetStreamResponse(\n                        {\n                            response: {\n                                streamId,\n                                streamType\n                            },\n                            gumOptions\n                        },\n                        onSuccess,\n                        onFailure\n                    ),\n                err => onFailure(new JitsiTrackError(\n                    JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR,\n                    err\n                ))\n            );\n        } else {\n            onFailure(new JitsiTrackError(\n                JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND));\n        }\n    },\n\n    /**\n     * Asks Chrome extension to call chooseDesktopMedia and gets chrome\n     * 'desktop' stream for returned stream token.\n     */\n    obtainScreenFromExtension(options, streamCallback, failCallback) {\n        if (this.intChromeExtPromise !== null) {\n            this.intChromeExtPromise.then(() => {\n                this.obtainScreenFromExtension(\n                    options, streamCallback, failCallback);\n            });\n\n            return;\n        }\n\n        const {\n            desktopSharingChromeExtId,\n            desktopSharingChromeSources\n        } = this.options;\n\n        const {\n            gumOptions\n        } = options;\n\n        const doGetStreamFromExtensionOptions = {\n            desktopSharingChromeExtId,\n            desktopSharingChromeSources:\n                options.desktopSharingSources || desktopSharingChromeSources,\n            gumOptions\n        };\n\n        if (chromeExtInstalled) {\n            doGetStreamFromExtension(\n                doGetStreamFromExtensionOptions,\n                streamCallback,\n                failCallback);\n        } else {\n            if (chromeExtUpdateRequired) {\n                /* eslint-disable no-alert */\n                alert(\n                    'Jitsi Desktop Streamer requires update. '\n                    + 'Changes will take effect after next Chrome restart.');\n\n                /* eslint-enable no-alert */\n            }\n\n            this.handleExternalInstall(options, streamCallback,\n                failCallback);\n        }\n    },\n\n    /* eslint-disable max-params */\n\n    handleExternalInstall(options, streamCallback, failCallback, e) {\n        const webStoreInstallUrl = getWebStoreInstallUrl(this.options);\n\n        options.listener('waitingForExtension', webStoreInstallUrl);\n        this.checkForChromeExtensionOnInterval(options, streamCallback,\n            failCallback, e);\n    },\n\n    /* eslint-enable max-params */\n\n    checkForChromeExtensionOnInterval(options, streamCallback, failCallback) {\n        if (options.checkAgain() === false) {\n            failCallback(new JitsiTrackError(\n                JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR));\n\n            return;\n        }\n        waitForExtensionAfterInstall(this.options, options.interval, 1)\n            .then(() => {\n                chromeExtInstalled = true;\n                options.listener('extensionFound');\n                this.obtainScreenFromExtension(options,\n                    streamCallback, failCallback);\n            })\n            .catch(() => {\n                this.checkForChromeExtensionOnInterval(options,\n                    streamCallback, failCallback);\n            });\n    },\n\n    /**\n     * Obtains a screen capture stream using getDisplayMedia.\n     *\n     * @param callback - The success callback.\n     * @param errorCallback - The error callback.\n     */\n    obtainScreenFromGetDisplayMedia(options, callback, errorCallback) {\n        logger.info('Using getDisplayMedia for screen sharing');\n\n        let getDisplayMedia;\n\n        if (navigator.getDisplayMedia) {\n            getDisplayMedia = navigator.getDisplayMedia.bind(navigator);\n        } else {\n            // eslint-disable-next-line max-len\n            getDisplayMedia = navigator.mediaDevices.getDisplayMedia.bind(navigator.mediaDevices);\n        }\n\n        getDisplayMedia({ video: true })\n            .then(stream => {\n                let applyConstraintsPromise;\n\n                if (stream\n                    && stream.getTracks()\n                    && stream.getTracks().length > 0) {\n                    applyConstraintsPromise = stream.getTracks()[0]\n                        .applyConstraints(options.trackOptions);\n                } else {\n                    applyConstraintsPromise = Promise.resolve();\n                }\n\n                applyConstraintsPromise.then(() =>\n                    callback({\n                        stream,\n                        sourceId: stream.id\n                    }));\n            })\n            .catch(() =>\n                errorCallback(new JitsiTrackError(JitsiTrackErrors\n                    .CHROME_EXTENSION_USER_CANCELED)));\n    }\n};\n\n/**\n * Obtains a desktop stream using getUserMedia.\n * For this to work on Chrome, the\n * 'chrome://flags/#enable-usermedia-screen-capture' flag must be enabled.\n *\n * On firefox, the document's domain must be white-listed in the\n * 'media.getusermedia.screensharing.allowed_domains' preference in\n * 'about:config'.\n */\nfunction obtainWebRTCScreen(options, streamCallback, failCallback) {\n    gumFunction([ 'screen' ], options)\n        .then(stream => streamCallback({ stream }), failCallback);\n}\n\n/**\n * Constructs inline install URL for Chrome desktop streaming extension.\n * The 'chromeExtensionId' must be defined in options parameter.\n * @param options supports \"desktopSharingChromeExtId\"\n * @returns {string}\n */\nfunction getWebStoreInstallUrl(options) {\n    return (\n        `https://chrome.google.com/webstore/detail/${\n            options.desktopSharingChromeExtId}`);\n}\n\n/**\n * Checks whether an update of the Chrome extension is required.\n * @param minVersion minimal required version\n * @param extVersion current extension version\n * @returns {boolean}\n */\nfunction isUpdateRequired(minVersion, extVersion) {\n    try {\n        const s1 = minVersion.split('.');\n        const s2 = extVersion.split('.');\n\n        const len = Math.max(s1.length, s2.length);\n\n        for (let i = 0; i < len; i++) {\n            let n1 = 0,\n                n2 = 0;\n\n            if (i < s1.length) {\n                n1 = parseInt(s1[i], 10);\n            }\n            if (i < s2.length) {\n                n2 = parseInt(s2[i], 10);\n            }\n\n            if (isNaN(n1) || isNaN(n2)) {\n                return true;\n            } else if (n1 !== n2) {\n                return n1 > n2;\n            }\n        }\n\n        // will happen if both versions have identical numbers in\n        // their components (even if one of them is longer, has more components)\n        return false;\n    } catch (e) {\n        GlobalOnErrorHandler.callErrorHandler(e);\n        logger.error('Failed to parse extension version', e);\n\n        return true;\n    }\n}\n\n/**\n *\n * @param callback\n * @param options\n */\nfunction checkChromeExtInstalled(callback, options) {\n    if (typeof chrome === 'undefined' || !chrome || !chrome.runtime) {\n        // No API, so no extension for sure\n        callback(false, false);\n\n        return;\n    }\n    chrome.runtime.sendMessage(\n        options.desktopSharingChromeExtId,\n        { getVersion: true },\n        response => {\n            if (!response || !response.version) {\n                // Communication failure - assume that no endpoint exists\n                logger.warn(\n                    'Extension not installed?: ', chrome.runtime.lastError);\n                callback(false, false);\n\n                return;\n            }\n\n            // Check installed extension version\n            const extVersion = response.version;\n\n            logger.log(`Extension version is: ${extVersion}`);\n            const updateRequired\n                = isUpdateRequired(\n                    options.desktopSharingChromeMinExtVersion,\n                    extVersion);\n\n            callback(!updateRequired, updateRequired);\n        }\n    );\n}\n\n/**\n *\n * @param options\n * @param streamCallback\n * @param failCallback\n */\nfunction doGetStreamFromExtension(options, streamCallback, failCallback) {\n    const {\n        desktopSharingChromeSources,\n        desktopSharingChromeExtId,\n        gumOptions\n    } = options;\n\n    // Sends 'getStream' msg to the extension.\n    // Extension id must be defined in the config.\n    chrome.runtime.sendMessage(\n        desktopSharingChromeExtId,\n        {\n            getStream: true,\n            sources: desktopSharingChromeSources\n        },\n        response => {\n            if (!response) {\n                // possibly re-wraping error message to make code consistent\n                const lastError = chrome.runtime.lastError;\n\n                failCallback(lastError instanceof Error\n                    ? lastError\n                    : new JitsiTrackError(\n                        JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR,\n                        lastError));\n\n                return;\n            }\n            logger.log('Response from extension: ', response);\n            onGetStreamResponse(\n                {\n                    response,\n                    gumOptions\n                },\n                streamCallback,\n                failCallback\n            );\n        }\n    );\n}\n\n/**\n * Initializes <link rel=chrome-webstore-item /> with extension id set in\n * config.js to support inline installs. Host site must be selected as main\n * website of published extension.\n * @param options supports \"desktopSharingChromeExtId\"\n */\nfunction initInlineInstalls(options) {\n    if ($('link[rel=chrome-webstore-item]').length === 0) {\n        $('head').append('<link rel=\"chrome-webstore-item\">');\n    }\n    $('link[rel=chrome-webstore-item]').attr('href',\n        getWebStoreInstallUrl(options));\n}\n\n/**\n *\n * @param options\n *\n * @return {Promise} - a Promise resolved once the initialization process is\n * finished.\n */\nfunction initChromeExtension(options) {\n    // Initialize Chrome extension inline installs\n    initInlineInstalls(options);\n\n    return new Promise(resolve => {\n        // Check if extension is installed\n        checkChromeExtInstalled((installed, updateRequired) => {\n            chromeExtInstalled = installed;\n            chromeExtUpdateRequired = updateRequired;\n            logger.info(\n                `Chrome extension installed: ${\n                    chromeExtInstalled} updateRequired: ${\n                    chromeExtUpdateRequired}`);\n            resolve();\n        }, options);\n    });\n}\n\n/**\n * Checks \"retries\" times on every \"waitInterval\"ms whether the ext is alive.\n * @param {Object} options the options passed to ScreanObtainer.obtainStream\n * @param {int} waitInterval the number of ms between retries\n * @param {int} retries the number of retries\n * @returns {Promise} returns promise that will be resolved when the extension\n * is alive and rejected if the extension is not alive even after \"retries\"\n * checks\n */\nfunction waitForExtensionAfterInstall(options, waitInterval, retries) {\n    if (retries === 0) {\n        return Promise.reject();\n    }\n\n    return new Promise((resolve, reject) => {\n        let currentRetries = retries;\n        const interval = window.setInterval(() => {\n            checkChromeExtInstalled(installed => {\n                if (installed) {\n                    window.clearInterval(interval);\n                    resolve();\n                } else {\n                    currentRetries--;\n                    if (currentRetries === 0) {\n                        reject();\n                        window.clearInterval(interval);\n                    }\n                }\n            }, options);\n        }, waitInterval);\n    });\n}\n\n/**\n * Handles response from external application / extension and calls GUM to\n * receive the desktop streams or reports error.\n * @param {object} options\n * @param {object} options.response\n * @param {string} options.response.streamId - the streamId for the desktop\n * stream.\n * @param {string} options.response.error - error to be reported.\n * @param {object} options.gumOptions - options passed to GUM.\n * @param {Function} onSuccess - callback for success.\n * @param {Function} onFailure - callback for failure.\n * @param {object} gumOptions - options passed to GUM.\n */\nfunction onGetStreamResponse(\n        options = {\n            response: {},\n            gumOptions: {}\n        },\n        onSuccess,\n        onFailure) {\n    const { streamId, streamType, error } = options.response || {};\n\n    if (streamId) {\n        const gumOptions = {\n            desktopStream: streamId,\n            ...options.gumOptions\n        };\n\n        gumFunction([ 'desktop' ], gumOptions)\n            .then(stream => onSuccess({\n                stream,\n                sourceId: streamId,\n                sourceType: streamType\n            }), onFailure);\n    } else {\n        // As noted in Chrome Desktop Capture API:\n        // If user didn't select any source (i.e. canceled the prompt)\n        // then the callback is called with an empty streamId.\n        if (streamId === '') {\n            onFailure(new JitsiTrackError(\n                JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED));\n\n            return;\n        }\n\n        onFailure(new JitsiTrackError(\n            JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR,\n            error));\n    }\n}\n\nexport default ScreenObtainer;\n","/* global __filename, RTCSessionDescription */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport transform from 'sdp-transform';\n\nimport * as GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport JitsiRemoteTrack from './JitsiRemoteTrack';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport LocalSdpMunger from './LocalSdpMunger';\nimport RTC from './RTC';\nimport RTCUtils from './RTCUtils';\nimport browser from '../browser';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport RtxModifier from '../xmpp/RtxModifier';\n\n// FIXME SDP tools should end up in some kind of util module\nimport SDP from '../xmpp/SDP';\nimport SdpConsistency from '../xmpp/SdpConsistency';\nimport { SdpTransformWrap } from '../xmpp/SdpTransformUtil';\nimport SDPUtil from '../xmpp/SDPUtil';\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\n\nconst logger = getLogger(__filename);\nconst SIMULCAST_LAYERS = 3;\nconst SIM_LAYER_1_RID = '1';\nconst SIM_LAYER_2_RID = '2';\nconst SIM_LAYER_3_RID = '3';\nconst SIM_LAYER_RIDS = [ SIM_LAYER_1_RID, SIM_LAYER_2_RID, SIM_LAYER_3_RID ];\n\n/* eslint-disable max-params */\n\n/**\n * Creates new instance of 'TraceablePeerConnection'.\n *\n * @param {RTC} rtc the instance of <tt>RTC</tt> service\n * @param {number} id the peer connection id assigned by the parent RTC module.\n * @param {SignalingLayer} signalingLayer the signaling layer instance\n * @param {object} iceConfig WebRTC 'PeerConnection' ICE config\n * @param {object} constraints WebRTC 'PeerConnection' constraints\n * @param {boolean} isP2P indicates whether or not the new instance will be used\n * in a peer to peer connection\n * @param {object} options <tt>TracablePeerConnection</tt> config options.\n * @param {boolean} options.disableSimulcast if set to 'true' will disable\n * the simulcast.\n * @param {boolean} options.disableRtx if set to 'true' will disable the RTX\n * @param {boolean} options.enableFirefoxSimulcast if set to 'true' will enable\n * experimental simulcast support on Firefox.\n * @param {boolean} options.disableH264 If set to 'true' H264 will be\n *      disabled by removing it from the SDP.\n * @param {boolean} options.preferH264 if set to 'true' H264 will be preferred\n * over other video codecs.\n * @param {boolean} options.enableLayerSuspension if set to 'true', we will\n * cap the video send bitrate when we are told we have not been selected by\n * any endpoints (and therefore the non-thumbnail streams are not in use).\n * @param {boolean} options.startSilent If set to 'true' no audio will be sent or received.\n *\n * FIXME: initially the purpose of TraceablePeerConnection was to be able to\n * debug the peer connection. Since many other responsibilities have been added\n * it would make sense to extract a separate class from it and come up with\n * a more suitable name.\n *\n * @constructor\n */\nexport default function TraceablePeerConnection(\n        rtc,\n        id,\n        signalingLayer,\n        iceConfig,\n        constraints,\n        isP2P,\n        options) {\n\n    /**\n     * Indicates whether or not this peer connection instance is actively\n     * sending/receiving audio media. When set to <tt>false</tt> the SDP audio\n     * media direction will be adjusted to 'inactive' in order to suspend\n     * the transmission.\n     * @type {boolean}\n     * @private\n     */\n    this.audioTransferActive = !(options.startSilent === true);\n\n    /**\n     * Indicates whether or not this peer connection instance is actively\n     * sending/receiving video media. When set to <tt>false</tt> the SDP video\n     * media direction will be adjusted to 'inactive' in order to suspend\n     * the transmission.\n     * @type {boolean}\n     * @private\n     */\n    this.videoTransferActive = true;\n\n    /**\n     * The parent instance of RTC service which created this\n     * <tt>TracablePeerConnection</tt>.\n     * @type {RTC}\n     */\n    this.rtc = rtc;\n\n    /**\n     * The peer connection identifier assigned by the RTC module.\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * Indicates whether or not this instance is used in a peer to peer\n     * connection.\n     * @type {boolean}\n     */\n    this.isP2P = isP2P;\n\n    // FIXME: We should support multiple streams per jid.\n    /**\n     * The map holds remote tracks associated with this peer connection.\n     * It maps user's JID to media type and remote track\n     * (one track per media type per user's JID).\n     * @type {Map<string, Map<MediaType, JitsiRemoteTrack>>}\n     */\n    this.remoteTracks = new Map();\n\n    /**\n     * A map which stores local tracks mapped by {@link JitsiLocalTrack.rtcId}\n     * @type {Map<number, JitsiLocalTrack>}\n     */\n    this.localTracks = new Map();\n\n    /**\n     * Keeps tracks of the WebRTC <tt>MediaStream</tt>s that have been added to\n     * the underlying WebRTC PeerConnection.\n     * @type {Array}\n     * @private\n     */\n    this._addedStreams = [];\n\n    /**\n     * @typedef {Object} TPCGroupInfo\n     * @property {string} semantics the SSRC groups semantics\n     * @property {Array<number>} ssrcs group's SSRCs in order where the first\n     * one is group's primary SSRC, the second one is secondary (RTX) and so\n     * on...\n     */\n    /**\n     * @typedef {Object} TPCSSRCInfo\n     * @property {Array<number>} ssrcs an array which holds all track's SSRCs\n     * @property {Array<TPCGroupInfo>} groups an array stores all track's SSRC\n     * groups\n     */\n    /**\n     * Holds the info about local track's SSRCs mapped per their\n     * {@link JitsiLocalTrack.rtcId}\n     * @type {Map<number, TPCSSRCInfo>}\n     */\n    this.localSSRCs = new Map();\n\n    /**\n     * The local ICE username fragment for this session.\n     */\n    this.localUfrag = null;\n\n    /**\n     * The remote ICE username fragment for this session.\n     */\n    this.remoteUfrag = null;\n\n    /**\n     * The signaling layer which operates this peer connection.\n     * @type {SignalingLayer}\n     */\n    this.signalingLayer = signalingLayer;\n\n    // SignalingLayer listeners\n    this._peerVideoTypeChanged = this._peerVideoTypeChanged.bind(this);\n    this.signalingLayer.on(\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\n        this._peerVideoTypeChanged);\n\n    this._peerMutedChanged = this._peerMutedChanged.bind(this);\n    this.signalingLayer.on(\n        SignalingEvents.PEER_MUTED_CHANGED,\n        this._peerMutedChanged);\n    this.options = options;\n\n    this.peerconnection\n        = new RTCUtils.RTCPeerConnectionType(iceConfig, constraints);\n    this.updateLog = [];\n    this.stats = {};\n    this.statsinterval = null;\n\n    /**\n     * @type {number} The max number of stats to keep in this.stats. Limit to\n     * 300 values, i.e. 5 minutes; set to 0 to disable\n     */\n    this.maxstats = options.maxstats;\n    const Interop = require('@jitsi/sdp-interop').Interop;\n\n    this.interop = new Interop();\n    const Simulcast = require('@jitsi/sdp-simulcast');\n\n    this.simulcast = new Simulcast({ numOfLayers: SIMULCAST_LAYERS,\n        explodeRemoteSimulcast: false });\n    this.sdpConsistency = new SdpConsistency(this.toString());\n\n    /**\n     * Munges local SDP provided to the Jingle Session in order to prevent from\n     * sending SSRC updates on attach/detach and mute/unmute (for video).\n     * @type {LocalSdpMunger}\n     */\n    this.localSdpMunger = new LocalSdpMunger(this);\n\n    /**\n     * TracablePeerConnection uses RTC's eventEmitter\n     * @type {EventEmitter}\n     */\n    this.eventEmitter = rtc.eventEmitter;\n    this.rtxModifier = new RtxModifier();\n\n    // override as desired\n    this.trace = (what, info) => {\n        logger.debug(what, info);\n\n        this.updateLog.push({\n            time: new Date(),\n            type: what,\n            value: info || ''\n        });\n    };\n    this.onicecandidate = null;\n    this.peerconnection.onicecandidate = event => {\n        this.trace(\n            'onicecandidate',\n            JSON.stringify(event.candidate, null, ' '));\n\n        if (this.onicecandidate !== null) {\n            this.onicecandidate(event);\n        }\n    };\n    this.peerconnection.onaddstream\n        = event => this._remoteStreamAdded(event.stream);\n    this.peerconnection.onremovestream\n        = event => this._remoteStreamRemoved(event.stream);\n    this.onsignalingstatechange = null;\n    this.peerconnection.onsignalingstatechange = event => {\n        this.trace('onsignalingstatechange', this.signalingState);\n        if (this.onsignalingstatechange !== null) {\n            this.onsignalingstatechange(event);\n        }\n    };\n    this.oniceconnectionstatechange = null;\n    this.peerconnection.oniceconnectionstatechange = event => {\n        this.trace('oniceconnectionstatechange', this.iceConnectionState);\n        if (this.oniceconnectionstatechange !== null) {\n            this.oniceconnectionstatechange(event);\n        }\n    };\n    this.onnegotiationneeded = null;\n    this.peerconnection.onnegotiationneeded = event => {\n        this.trace('onnegotiationneeded');\n        if (this.onnegotiationneeded !== null) {\n            this.onnegotiationneeded(event);\n        }\n    };\n    this.ondatachannel = null;\n    this.peerconnection.ondatachannel = event => {\n        this.trace('ondatachannel');\n        if (this.ondatachannel !== null) {\n            this.ondatachannel(event);\n        }\n    };\n\n    if (this.maxstats) {\n        this.statsinterval = window.setInterval(() => {\n            this.getStats(stats => {\n                if (stats.result\n                    && typeof stats.result === 'function') {\n                    const results = stats.result();\n\n                    for (let i = 0; i < results.length; ++i) {\n                        const res = results[i];\n\n                        res.names().forEach(name => {\n                            this._processStat(res, name, res.stat(name));\n                        });\n                    }\n                } else {\n                    stats.forEach(r => this._processStat(r, '', r));\n                }\n            }, () => {\n\n                // empty error callback\n            });\n        }, 1000);\n    }\n\n    logger.info(`Create new ${this}`);\n}\n\n/* eslint-enable max-params */\n\n/**\n * Process stat and adds it to the array of stats we store.\n * @param report the current stats report.\n * @param name the name of the report, if available\n * @param statValue the value to add.\n * @private\n */\nTraceablePeerConnection.prototype._processStat\n    = function(report, name, statValue) {\n        const id = `${report.id}-${name}`;\n        let s = this.stats[id];\n        const now = new Date();\n\n        if (!s) {\n            this.stats[id] = s = {\n                startTime: now,\n                endTime: now,\n                values: [],\n                times: []\n            };\n        }\n        s.values.push(statValue);\n        s.times.push(now.getTime());\n        if (s.values.length > this.maxstats) {\n            s.values.shift();\n            s.times.shift();\n        }\n        s.endTime = now;\n    };\n\n/**\n * Returns a string representation of a SessionDescription object.\n */\nconst dumpSDP = function(description) {\n    if (typeof description === 'undefined' || description === null) {\n        return '';\n    }\n\n    return `type: ${description.type}\\r\\n${description.sdp}`;\n};\n\n\n/**\n * Forwards the {@link peerconnection.iceConnectionState} state except that it\n * will convert \"completed\" into \"connected\" where both mean that the ICE has\n * succeeded and is up and running. We never see \"completed\" state for\n * the JVB connection, but it started appearing for the P2P one. This method\n * allows to adapt old logic to this new situation.\n * @return {string}\n */\nTraceablePeerConnection.prototype.getConnectionState = function() {\n    const state = this.peerconnection.iceConnectionState;\n\n    if (state === 'completed') {\n        return 'connected';\n    }\n\n    return state;\n};\n\n/**\n * Obtains the media direction for given {@link MediaType}. The method takes\n * into account whether or not there are any local tracks for media and\n * the {@link audioTransferActive} and {@link videoTransferActive} flags.\n * @param {MediaType} mediaType\n * @return {string} one of the SDP direction constants ('sendrecv, 'recvonly'\n * etc.) which should be used when setting local description on the peer\n * connection.\n * @private\n */\nTraceablePeerConnection.prototype._getDesiredMediaDirection = function(\n        mediaType) {\n    let mediaTransferActive = true;\n\n    if (mediaType === MediaType.AUDIO) {\n        mediaTransferActive = this.audioTransferActive;\n    } else if (mediaType === MediaType.VIDEO) {\n        mediaTransferActive = this.videoTransferActive;\n    }\n    if (mediaTransferActive) {\n        return this.hasAnyTracksOfType(mediaType) ? 'sendrecv' : 'recvonly';\n    }\n\n    return 'inactive';\n};\n\n/**\n * Tells whether or not this TPC instance is using Simulcast.\n * @return {boolean} <tt>true</tt> if simulcast is enabled and active or\n * <tt>false</tt> if it's turned off.\n */\nTraceablePeerConnection.prototype.isSimulcastOn = function() {\n    return !this.options.disableSimulcast\n        && browser.supportsSimulcast()\n\n        // Firefox has been added as supporting simulcast, but it is\n        // experimental so we only want to do it for firefox if the config\n        // option is set.  Unfortunately, browser::supportsSimulcast()\n        // doesn't have a reference to the config options, so we have\n        // to do it here\n        && (!browser.isFirefox()\n            || this.options.enableFirefoxSimulcast);\n};\n\n/**\n * Handles {@link SignalingEvents.PEER_VIDEO_TYPE_CHANGED}\n * @param {string} endpointId the video owner's ID (MUC nickname)\n * @param {VideoType} videoType the new value\n * @private\n */\nTraceablePeerConnection.prototype._peerVideoTypeChanged = function(\n        endpointId,\n        videoType) {\n    // Check if endpointId has a value to avoid action on random track\n    if (!endpointId) {\n        logger.error(`No endpointID on peerVideoTypeChanged ${this}`);\n\n        return;\n    }\n    const videoTrack = this.getRemoteTracks(endpointId, MediaType.VIDEO);\n\n    if (videoTrack.length) {\n        // NOTE 1 track per media type is assumed\n        videoTrack[0]._setVideoType(videoType);\n    }\n};\n\n/**\n * Handles remote track mute / unmute events.\n * @param {string} endpointId the track owner's identifier (MUC nickname)\n * @param {MediaType} mediaType \"audio\" or \"video\"\n * @param {boolean} isMuted the new mute state\n * @private\n */\nTraceablePeerConnection.prototype._peerMutedChanged = function(\n        endpointId,\n        mediaType,\n        isMuted) {\n    // Check if endpointId is a value to avoid doing action on all remote tracks\n    if (!endpointId) {\n        logger.error('On peerMuteChanged - no endpoint ID');\n\n        return;\n    }\n    const track = this.getRemoteTracks(endpointId, mediaType);\n\n    if (track.length) {\n        // NOTE 1 track per media type is assumed\n        track[0].setMute(isMuted);\n    }\n};\n\n/**\n * Obtains local tracks for given {@link MediaType}. If the <tt>mediaType</tt>\n * argument is omitted the list of all local tracks will be returned.\n * @param {MediaType} [mediaType]\n * @return {Array<JitsiLocalTrack>}\n */\nTraceablePeerConnection.prototype.getLocalTracks = function(mediaType) {\n    let tracks = Array.from(this.localTracks.values());\n\n    if (mediaType !== undefined) {\n        tracks = tracks.filter(track => track.getType() === mediaType);\n    }\n\n    return tracks;\n};\n\n/**\n * Checks whether or not this {@link TraceablePeerConnection} instance contains\n * any local tracks for given <tt>mediaType</tt>.\n * @param {MediaType} mediaType\n * @return {boolean}\n */\nTraceablePeerConnection.prototype.hasAnyTracksOfType = function(mediaType) {\n    if (!mediaType) {\n        throw new Error('\"mediaType\" is required');\n    }\n\n    return this.getLocalTracks(mediaType).length > 0;\n};\n\n/**\n * Obtains all remote tracks currently known to this PeerConnection instance.\n * @param {string} [endpointId] the track owner's identifier (MUC nickname)\n * @param {MediaType} [mediaType] the remote tracks will be filtered\n * by their media type if this argument is specified.\n * @return {Array<JitsiRemoteTrack>}\n */\nTraceablePeerConnection.prototype.getRemoteTracks = function(\n        endpointId,\n        mediaType) {\n    const remoteTracks = [];\n    const endpoints\n        = endpointId ? [ endpointId ] : this.remoteTracks.keys();\n\n    for (const endpoint of endpoints) {\n        const endpointTrackMap = this.remoteTracks.get(endpoint);\n\n        if (!endpointTrackMap) {\n\n            // Otherwise an empty Map() would have to be allocated above\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        for (const trackMediaType of endpointTrackMap.keys()) {\n            // per media type filtering\n            if (!mediaType || mediaType === trackMediaType) {\n                const mediaTrack = endpointTrackMap.get(trackMediaType);\n\n                if (mediaTrack) {\n                    remoteTracks.push(mediaTrack);\n                }\n            }\n        }\n    }\n\n    return remoteTracks;\n};\n\n/**\n * Tries to find {@link JitsiTrack} for given SSRC number. It will search both\n * local and remote tracks bound to this instance.\n * @param {number} ssrc\n * @return {JitsiTrack|null}\n */\nTraceablePeerConnection.prototype.getTrackBySSRC = function(ssrc) {\n    if (typeof ssrc !== 'number') {\n        throw new Error(`SSRC ${ssrc} is not a number`);\n    }\n    for (const localTrack of this.localTracks.values()) {\n        if (this.getLocalSSRC(localTrack) === ssrc) {\n            return localTrack;\n        }\n    }\n    for (const remoteTrack of this.getRemoteTracks()) {\n        if (remoteTrack.getSSRC() === ssrc) {\n            return remoteTrack;\n        }\n    }\n\n    return null;\n};\n\n/**\n * Tries to find SSRC number for given {@link JitsiTrack} id. It will search\n * both local and remote tracks bound to this instance.\n * @param {string} id\n * @return {number|null}\n */\nTraceablePeerConnection.prototype.getSsrcByTrackId = function(id) {\n\n    const findTrackById = track => track.getTrack().id === id;\n    const localTrack = this.getLocalTracks().find(findTrackById);\n\n    if (localTrack) {\n        return this.getLocalSSRC(localTrack);\n    }\n\n    const remoteTrack = this.getRemoteTracks().find(findTrackById);\n\n    if (remoteTrack) {\n        return remoteTrack.getSSRC();\n    }\n\n    return null;\n};\n\n/**\n * Called when new remote MediaStream is added to the PeerConnection.\n * @param {MediaStream} stream the WebRTC MediaStream for remote participant\n */\nTraceablePeerConnection.prototype._remoteStreamAdded = function(stream) {\n    const streamId = RTC.getStreamID(stream);\n\n    if (!RTC.isUserStreamById(streamId)) {\n        logger.info(\n            `${this} ignored remote 'stream added' event for non-user stream`\n             + `id: ${streamId}`);\n\n        return;\n    }\n\n    // Bind 'addtrack'/'removetrack' event handlers\n    if (browser.isChromiumBased() || browser.isEdge()) {\n        stream.onaddtrack = event => {\n            this._remoteTrackAdded(stream, event.track);\n        };\n        stream.onremovetrack = event => {\n            this._remoteTrackRemoved(stream, event.track);\n        };\n    }\n\n    // Call remoteTrackAdded for each track in the stream\n    const streamAudioTracks = stream.getAudioTracks();\n\n    for (const audioTrack of streamAudioTracks) {\n        this._remoteTrackAdded(stream, audioTrack);\n    }\n    const streamVideoTracks = stream.getVideoTracks();\n\n    for (const videoTrack of streamVideoTracks) {\n        this._remoteTrackAdded(stream, videoTrack);\n    }\n};\n\n\n/**\n * Called on \"track added\" and \"stream added\" PeerConnection events (because we\n * handle streams on per track basis). Finds the owner and the SSRC for\n * the track and passes that to ChatRoom for further processing.\n * @param {MediaStream} stream the WebRTC MediaStream instance which is\n * the parent of the track\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack added for remote\n * participant\n */\nTraceablePeerConnection.prototype._remoteTrackAdded = function(stream, track) {\n    const streamId = RTC.getStreamID(stream);\n    const mediaType = track.kind;\n\n    logger.info(`${this} remote track added:`, streamId, mediaType);\n\n    // look up an associated JID for a stream id\n    if (!mediaType) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `MediaType undefined for remote track, stream id: ${streamId}`\n            ));\n\n        // Abort\n        return;\n    }\n\n    const remoteSDP = new SDP(this.remoteDescription.sdp);\n    const mediaLines\n        = remoteSDP.media.filter(mls => mls.startsWith(`m=${mediaType}`));\n\n    if (!mediaLines.length) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `No media lines for type ${\n                    mediaType} found in remote SDP for remote track: ${\n                    streamId}`));\n\n        // Abort\n        return;\n    }\n\n    let ssrcLines = SDPUtil.findLines(mediaLines[0], 'a=ssrc:');\n\n    ssrcLines\n        = ssrcLines.filter(line => line.indexOf(`msid:${streamId}`) !== -1);\n    if (!ssrcLines.length) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `No SSRC lines for streamId ${\n                    streamId} for remote track, media type: ${mediaType}`));\n\n        // Abort\n        return;\n    }\n\n    // FIXME the length of ssrcLines[0] not verified, but it will fail\n    // with global error handler anyway\n    const ssrcStr = ssrcLines[0].substring(7).split(' ')[0];\n    const trackSsrc = Number(ssrcStr);\n    const ownerEndpointId = this.signalingLayer.getSSRCOwner(trackSsrc);\n\n    if (isNaN(trackSsrc) || trackSsrc < 0) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `Invalid SSRC: ${ssrcStr} for remote track, msid: ${\n                    streamId} media type: ${mediaType}`));\n\n        // Abort\n        return;\n    } else if (!ownerEndpointId) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `No SSRC owner known for: ${\n                    trackSsrc} for remote track, msid: ${\n                    streamId} media type: ${mediaType}`));\n\n        // Abort\n        return;\n    }\n\n    logger.log(`${this} associated ssrc`, ownerEndpointId, trackSsrc);\n\n    const peerMediaInfo\n        = this.signalingLayer.getPeerMediaInfo(ownerEndpointId, mediaType);\n\n    if (!peerMediaInfo) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `${this}: no peer media info available for ${\n                    ownerEndpointId}`));\n\n        return;\n    }\n\n    const muted = peerMediaInfo.muted;\n    const videoType = peerMediaInfo.videoType; // can be undefined\n\n    this._createRemoteTrack(\n        ownerEndpointId, stream, track, mediaType, videoType, trackSsrc, muted);\n};\n\n// FIXME cleanup params\n/* eslint-disable max-params */\n\n/**\n * Initializes a new JitsiRemoteTrack instance with the data provided by\n * the signaling layer and SDP.\n *\n * @param {string} ownerEndpointId the owner's endpoint ID (MUC nickname)\n * @param {MediaStream} stream the WebRTC stream instance\n * @param {MediaStreamTrack} track the WebRTC track instance\n * @param {MediaType} mediaType the track's type of the media\n * @param {VideoType} [videoType] the track's type of the video (if applicable)\n * @param {number} ssrc the track's main SSRC number\n * @param {boolean} muted the initial muted status\n */\nTraceablePeerConnection.prototype._createRemoteTrack = function(\n        ownerEndpointId,\n        stream,\n        track,\n        mediaType,\n        videoType,\n        ssrc,\n        muted) {\n    let remoteTracksMap = this.remoteTracks.get(ownerEndpointId);\n\n    if (!remoteTracksMap) {\n        remoteTracksMap = new Map();\n        this.remoteTracks.set(ownerEndpointId, remoteTracksMap);\n    }\n\n    const existingTrack = remoteTracksMap.get(mediaType);\n\n    if (existingTrack && existingTrack.getTrack() === track) {\n        // Ignore duplicated event which can originate either from\n        // 'onStreamAdded' or 'onTrackAdded'.\n        logger.info(\n            `${this} ignored duplicated remote track added event for: `\n                + `${ownerEndpointId}, ${mediaType}`);\n\n        return;\n    } else if (existingTrack) {\n        logger.error(\n            `${this} overwriting remote track for`\n                + `${ownerEndpointId} ${mediaType}`);\n    }\n\n    const remoteTrack\n        = new JitsiRemoteTrack(\n                this.rtc,\n                this.rtc.conference,\n                ownerEndpointId,\n                stream,\n                track,\n                mediaType,\n                videoType,\n                ssrc,\n                muted,\n                this.isP2P);\n\n    remoteTracksMap.set(mediaType, remoteTrack);\n\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, remoteTrack);\n};\n\n/* eslint-enable max-params */\n\n/**\n * Handles remote stream removal.\n * @param stream the WebRTC MediaStream object which is being removed from the\n * PeerConnection\n */\nTraceablePeerConnection.prototype._remoteStreamRemoved = function(stream) {\n    if (!RTC.isUserStream(stream)) {\n        const id = RTC.getStreamID(stream);\n\n        logger.info(\n            `Ignored remote 'stream removed' event for non-user stream ${id}`);\n\n        return;\n    }\n\n    // Call remoteTrackRemoved for each track in the stream\n    const streamVideoTracks = stream.getVideoTracks();\n\n    for (const videoTrack of streamVideoTracks) {\n        this._remoteTrackRemoved(stream, videoTrack);\n    }\n    const streamAudioTracks = stream.getAudioTracks();\n\n    for (const audioTrack of streamAudioTracks) {\n        this._remoteTrackRemoved(stream, audioTrack);\n    }\n};\n\n/**\n * Handles remote media track removal.\n * @param {MediaStream} stream WebRTC MediaStream instance which is the parent\n * of the track.\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack which has been\n * removed from the PeerConnection.\n */\nTraceablePeerConnection.prototype._remoteTrackRemoved = function(\n        stream,\n        track) {\n    const streamId = RTC.getStreamID(stream);\n    const trackId = track && RTC.getTrackID(track);\n\n    logger.info(`${this} - remote track removed: ${streamId}, ${trackId}`);\n\n    if (!streamId) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(`${this} remote track removal failed - no stream ID`));\n\n        return;\n    }\n\n    if (!trackId) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(`${this} remote track removal failed - no track ID`));\n\n        return;\n    }\n\n    if (!this._removeRemoteTrackById(streamId, trackId)) {\n        // NOTE this warning is always printed when user leaves the room,\n        // because we remove remote tracks manually on MUC member left event,\n        // before the SSRCs are removed by Jicofo. In most cases it is fine to\n        // ignore this warning, but still it's better to keep it printed for\n        // debugging purposes.\n        //\n        // We could change the behaviour to emit track removed only from here,\n        // but the order of the events will change and consuming apps could\n        // behave unexpectedly (the \"user left\" event would come before \"track\n        // removed\" events).\n        logger.warn(\n            `${this} Removed track not found for msid: ${streamId},\n             track id: ${trackId}`);\n    }\n};\n\n/**\n * Finds remote track by it's stream and track ids.\n * @param {string} streamId the media stream id as defined by the WebRTC\n * @param {string} trackId the media track id as defined by the WebRTC\n * @return {JitsiRemoteTrack|undefined} the track's instance or\n * <tt>undefined</tt> if not found.\n * @private\n */\nTraceablePeerConnection.prototype._getRemoteTrackById = function(\n        streamId,\n        trackId) {\n    // .find will break the loop once the first match is found\n    for (const endpointTrackMap of this.remoteTracks.values()) {\n        for (const mediaTrack of endpointTrackMap.values()) {\n            // FIXME verify and try to use ===\n            /* eslint-disable eqeqeq */\n            if (mediaTrack.getStreamId() == streamId\n                && mediaTrack.getTrackId() == trackId) {\n                return mediaTrack;\n            }\n\n            /* eslint-enable eqeqeq */\n        }\n    }\n\n    return undefined;\n};\n\n/**\n * Removes all JitsiRemoteTracks associated with given MUC nickname\n * (resource part of the JID). Returns array of removed tracks.\n *\n * @param {string} owner - The resource part of the MUC JID.\n * @returns {JitsiRemoteTrack[]}\n */\nTraceablePeerConnection.prototype.removeRemoteTracks = function(owner) {\n    const removedTracks = [];\n    const remoteTracksMap = this.remoteTracks.get(owner);\n\n    if (remoteTracksMap) {\n        const removedAudioTrack = remoteTracksMap.get(MediaType.AUDIO);\n        const removedVideoTrack = remoteTracksMap.get(MediaType.VIDEO);\n\n        removedAudioTrack && removedTracks.push(removedAudioTrack);\n        removedVideoTrack && removedTracks.push(removedVideoTrack);\n\n        this.remoteTracks.delete(owner);\n    }\n\n    logger.debug(\n        `${this} removed remote tracks for ${owner} count: ${\n            removedTracks.length}`);\n\n    return removedTracks;\n};\n\n/**\n * Removes and disposes given <tt>JitsiRemoteTrack</tt> instance. Emits\n * {@link RTCEvents.REMOTE_TRACK_REMOVED}.\n * @param {JitsiRemoteTrack} toBeRemoved\n */\nTraceablePeerConnection.prototype._removeRemoteTrack = function(toBeRemoved) {\n    toBeRemoved.dispose();\n    const participantId = toBeRemoved.getParticipantId();\n    const remoteTracksMap = this.remoteTracks.get(participantId);\n\n    if (!remoteTracksMap) {\n        logger.error(\n            `removeRemoteTrack: no remote tracks map for ${participantId}`);\n    } else if (!remoteTracksMap.delete(toBeRemoved.getType())) {\n        logger.error(\n            `Failed to remove ${toBeRemoved} - type mapping messed up ?`);\n    }\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, toBeRemoved);\n};\n\n/**\n * Removes and disposes <tt>JitsiRemoteTrack</tt> identified by given stream and\n * track ids.\n *\n * @param {string} streamId the media stream id as defined by the WebRTC\n * @param {string} trackId the media track id as defined by the WebRTC\n * @returns {JitsiRemoteTrack|undefined} the track which has been removed or\n * <tt>undefined</tt> if no track matching given stream and track ids was\n * found.\n */\nTraceablePeerConnection.prototype._removeRemoteTrackById = function(\n        streamId,\n        trackId) {\n    const toBeRemoved = this._getRemoteTrackById(streamId, trackId);\n\n    if (toBeRemoved) {\n        this._removeRemoteTrack(toBeRemoved);\n    }\n\n    return toBeRemoved;\n};\n\n/**\n * @typedef {Object} SSRCGroupInfo\n * @property {Array<number>} ssrcs group's SSRCs\n * @property {string} semantics\n */\n/**\n * @typedef {Object} TrackSSRCInfo\n * @property {Array<number>} ssrcs track's SSRCs\n * @property {Array<SSRCGroupInfo>} groups track's SSRC groups\n */\n/**\n * Returns map with keys msid and <tt>TrackSSRCInfo</tt> values.\n * @param {Object} desc the WebRTC SDP instance.\n * @return {Map<string,TrackSSRCInfo>}\n */\nfunction extractSSRCMap(desc) {\n    /**\n     * Track SSRC infos mapped by stream ID (msid)\n     * @type {Map<string,TrackSSRCInfo>}\n     */\n    const ssrcMap = new Map();\n\n    /**\n     * Groups mapped by primary SSRC number\n     * @type {Map<number,Array<SSRCGroupInfo>>}\n     */\n    const groupsMap = new Map();\n\n    if (typeof desc !== 'object' || desc === null\n        || typeof desc.sdp !== 'string') {\n        logger.warn('An empty description was passed as an argument.');\n\n        return ssrcMap;\n    }\n\n    const session = transform.parse(desc.sdp);\n\n    if (!Array.isArray(session.media)) {\n        return ssrcMap;\n    }\n\n    for (const mLine of session.media) {\n        if (!Array.isArray(mLine.ssrcs)) {\n            continue; // eslint-disable-line no-continue\n        }\n\n        if (Array.isArray(mLine.ssrcGroups)) {\n            for (const group of mLine.ssrcGroups) {\n                if (typeof group.semantics !== 'undefined'\n                    && typeof group.ssrcs !== 'undefined') {\n                    // Parse SSRCs and store as numbers\n                    const groupSSRCs\n                        = group.ssrcs.split(' ').map(\n                            ssrcStr => parseInt(ssrcStr, 10));\n                    const primarySSRC = groupSSRCs[0];\n\n                    // Note that group.semantics is already present\n\n                    group.ssrcs = groupSSRCs;\n\n                    // eslint-disable-next-line max-depth\n                    if (!groupsMap.has(primarySSRC)) {\n                        groupsMap.set(primarySSRC, []);\n                    }\n                    groupsMap.get(primarySSRC).push(group);\n                }\n            }\n        }\n        for (const ssrc of mLine.ssrcs) {\n            if (ssrc.attribute !== 'msid') {\n                continue; // eslint-disable-line no-continue\n            }\n\n            const msid = ssrc.value;\n            let ssrcInfo = ssrcMap.get(msid);\n\n            if (!ssrcInfo) {\n                ssrcInfo = {\n                    ssrcs: [],\n                    groups: [],\n                    msid\n                };\n                ssrcMap.set(msid, ssrcInfo);\n            }\n\n            const ssrcNumber = ssrc.id;\n\n            ssrcInfo.ssrcs.push(ssrcNumber);\n\n            if (groupsMap.has(ssrcNumber)) {\n                const ssrcGroups = groupsMap.get(ssrcNumber);\n\n                for (const group of ssrcGroups) {\n                    ssrcInfo.groups.push(group);\n                }\n            }\n        }\n    }\n\n    return ssrcMap;\n}\n\n/**\n * Takes a SessionDescription object and returns a \"normalized\" version.\n * Currently it takes care of ordering the a=ssrc lines and denoting receive\n * only SSRCs.\n */\nconst normalizePlanB = function(desc) {\n    if (typeof desc !== 'object' || desc === null\n        || typeof desc.sdp !== 'string') {\n        logger.warn('An empty description was passed as an argument.');\n\n        return desc;\n    }\n\n    // eslint-disable-next-line no-shadow\n    const transform = require('sdp-transform');\n    const session = transform.parse(desc.sdp);\n\n    if (typeof session !== 'undefined'\n            && typeof session.media !== 'undefined'\n            && Array.isArray(session.media)) {\n        session.media.forEach(mLine => {\n\n            // Chrome appears to be picky about the order in which a=ssrc lines\n            // are listed in an m-line when rtx is enabled (and thus there are\n            // a=ssrc-group lines with FID semantics). Specifically if we have\n            // \"a=ssrc-group:FID S1 S2\" and the \"a=ssrc:S2\" lines appear before\n            // the \"a=ssrc:S1\" lines, SRD fails.\n            // So, put SSRC which appear as the first SSRC in an FID ssrc-group\n            // first.\n            const firstSsrcs = [];\n            const newSsrcLines = [];\n\n            if (typeof mLine.ssrcGroups !== 'undefined'\n                && Array.isArray(mLine.ssrcGroups)) {\n                mLine.ssrcGroups.forEach(group => {\n                    if (typeof group.semantics !== 'undefined'\n                        && group.semantics === 'FID') {\n                        if (typeof group.ssrcs !== 'undefined') {\n                            firstSsrcs.push(Number(group.ssrcs.split(' ')[0]));\n                        }\n                    }\n                });\n            }\n\n            if (Array.isArray(mLine.ssrcs)) {\n                let i;\n\n                for (i = 0; i < mLine.ssrcs.length; i++) {\n                    if (typeof mLine.ssrcs[i] === 'object'\n                        && typeof mLine.ssrcs[i].id !== 'undefined'\n                        && firstSsrcs.indexOf(mLine.ssrcs[i].id) >= 0) {\n                        newSsrcLines.push(mLine.ssrcs[i]);\n                        delete mLine.ssrcs[i];\n                    }\n                }\n\n                for (i = 0; i < mLine.ssrcs.length; i++) {\n                    if (typeof mLine.ssrcs[i] !== 'undefined') {\n                        newSsrcLines.push(mLine.ssrcs[i]);\n                    }\n                }\n\n                mLine.ssrcs = replaceDefaultUnifiedPlanMsid(newSsrcLines);\n            }\n        });\n    }\n\n    const resStr = transform.write(session);\n\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: resStr\n    });\n};\n\n/**\n * Unified plan differentiates a remote track not associated with a stream using\n * the msid \"-\", which can incorrectly trigger an onaddstream event in plan-b.\n * For jitsi, these tracks are actually receive-only ssrcs. To prevent\n * onaddstream from firing, remove the ssrcs with msid \"-\" except the cname\n * line. Normally the ssrcs are not used by the client, as the bridge controls\n * media flow, but keep one reference to the ssrc for the p2p case.\n *\n * @param {Array<Object>} ssrcLines - The ssrc lines from a remote description.\n * @private\n * @returns {Array<Object>} ssrcLines with removed lines referencing msid \"-\".\n */\nfunction replaceDefaultUnifiedPlanMsid(ssrcLines = []) {\n    if (!browser.isChrome() || !browser.isVersionGreaterThan(70)) {\n        return ssrcLines;\n    }\n\n    let filteredLines = [ ...ssrcLines ];\n\n    const problematicSsrcIds = ssrcLines.filter(ssrcLine =>\n        ssrcLine.attribute === 'mslabel' && ssrcLine.value === '-')\n        .map(ssrcLine => ssrcLine.id);\n\n    problematicSsrcIds.forEach(ssrcId => {\n        // Find the cname which is to be modified and left in.\n        const cnameLine = filteredLines.find(line =>\n            line.id === ssrcId && line.attribute === 'cname');\n\n        cnameLine.value = `recvonly-${ssrcId}`;\n\n        // Remove all of lines for the ssrc.\n        filteredLines\n            = filteredLines.filter(line => line.id !== ssrcId);\n\n        // But re-add the cname line so there is a reference kept to the ssrc\n        // in the SDP.\n        filteredLines.push(cnameLine);\n    });\n\n    return filteredLines;\n}\n\n/**\n * Makes sure that both audio and video directions are configured as 'sendrecv'.\n * @param {Object} localDescription the SDP object as defined by WebRTC.\n * @param {object} options <tt>TracablePeerConnection</tt> config options.\n */\nconst enforceSendRecv = function(localDescription, options) {\n    if (!localDescription) {\n        throw new Error('No local description passed in.');\n    }\n\n    const transformer = new SdpTransformWrap(localDescription.sdp);\n    const audioMedia = transformer.selectMedia('audio');\n    let changed = false;\n\n    if (audioMedia && audioMedia.direction !== 'sendrecv') {\n        if (options.startSilent) {\n            audioMedia.direction = 'inactive';\n        } else {\n            audioMedia.direction = 'sendrecv';\n        }\n\n        changed = true;\n    }\n\n    const videoMedia = transformer.selectMedia('video');\n\n    if (videoMedia && videoMedia.direction !== 'sendrecv') {\n        videoMedia.direction = 'sendrecv';\n        changed = true;\n    }\n\n    if (changed) {\n        return new RTCSessionDescription({\n            type: localDescription.type,\n            sdp: transformer.toRawSDP()\n        });\n    }\n\n    return localDescription;\n};\n\n/**\n *\n * @param {JitsiLocalTrack} localTrack\n */\nTraceablePeerConnection.prototype.getLocalSSRC = function(localTrack) {\n    const ssrcInfo = this._getSSRC(localTrack.rtcId);\n\n    return ssrcInfo && ssrcInfo.ssrcs[0];\n};\n\n/**\n * When doing unified plan simulcast, we'll have a set of ssrcs with the\n * same msid but no ssrc-group, since unified plan signals the simulcast\n * group via the a=simulcast line.  Unfortunately, Jicofo will complain\n * if it sees ssrcs with matching msids but no ssrc-group, so we'll inject\n * an ssrc-group line to make Jicofo happy.\n * NOTE: unlike plan B simulcast, the ssrcs in this inject ssrc-group will\n * NOT necessarily be in order of quality (low to high) because:\n * a) when translating between unified plan and plan b the order of the ssrcs\n * is not preserved and\n * b) it isn't guaranteed that firefox will give them to us in order to begin\n * with\n * @param desc A session description object (with 'type' and 'sdp' fields)\n * @return A session description object with its sdp field modified to\n * contain an inject ssrc-group for simulcast\n */\nTraceablePeerConnection.prototype._injectSsrcGroupForUnifiedSimulcast\n    = function(desc) {\n        const sdp = transform.parse(desc.sdp);\n        const video = sdp.media.find(mline => mline.type === 'video');\n\n        if (video.simulcast_03) {\n            const ssrcs = [];\n\n            video.ssrcs.forEach(ssrc => {\n                if (ssrc.attribute === 'msid') {\n                    ssrcs.push(ssrc.id);\n                }\n            });\n            video.ssrcGroups = video.ssrcGroups || [];\n            if (video.ssrcGroups.find(group => group.semantics === 'SIM')) {\n                // Group already exists, no need to do anything\n                return desc;\n            }\n            video.ssrcGroups.push({\n                semantics: 'SIM',\n                ssrcs: ssrcs.join(' ')\n            });\n        }\n\n        return new RTCSessionDescription({\n            type: desc.type,\n            sdp: transform.write(sdp)\n        });\n    };\n\n/* eslint-disable-next-line vars-on-top */\nconst getters = {\n    signalingState() {\n        return this.peerconnection.signalingState;\n    },\n    iceConnectionState() {\n        return this.peerconnection.iceConnectionState;\n    },\n    localDescription() {\n        let desc = this.peerconnection.localDescription;\n\n        if (!desc) {\n            logger.debug('getLocalDescription no localDescription found');\n\n            return {};\n        }\n\n        this.trace('getLocalDescription::preTransform', dumpSDP(desc));\n\n        // if we're running on FF, transform to Plan B first.\n        if (browser.usesUnifiedPlan()) {\n            desc = this.interop.toPlanB(desc);\n            this.trace('getLocalDescription::postTransform (Plan B)',\n                dumpSDP(desc));\n\n            desc = this._injectSsrcGroupForUnifiedSimulcast(desc);\n            this.trace('getLocalDescription::postTransform (inject ssrc group)',\n                dumpSDP(desc));\n        }\n\n        if (browser.doesVideoMuteByStreamRemove()) {\n            desc = this.localSdpMunger.maybeAddMutedLocalVideoTracksToSDP(desc);\n            logger.debug(\n                'getLocalDescription::postTransform (munge local SDP)', desc);\n        }\n\n        // What comes out of this getter will be signalled over Jingle to\n        // the other peer, so we need to make sure the media direction is\n        // 'sendrecv' because we won't change the direction later and don't want\n        // the other peer to think we can't send or receive.\n        //\n        // Note that the description we set in chrome does have the accurate\n        // direction (e.g. 'recvonly'), since that is technically what is\n        // happening (check setLocalDescription impl).\n        desc = enforceSendRecv(desc, this.options);\n\n        // See the method's doc for more info about this transformation.\n        desc = this.localSdpMunger.transformStreamIdentifiers(desc);\n\n        return desc;\n    },\n    remoteDescription() {\n        let desc = this.peerconnection.remoteDescription;\n\n        this.trace('getRemoteDescription::preTransform', dumpSDP(desc));\n\n        // if we're running on FF, transform to Plan B first.\n        if (browser.usesUnifiedPlan()) {\n            desc = this.interop.toPlanB(desc);\n            this.trace(\n                'getRemoteDescription::postTransform (Plan B)', dumpSDP(desc));\n        }\n\n        return desc || {};\n    }\n};\n\nObject.keys(getters).forEach(prop => {\n    Object.defineProperty(\n        TraceablePeerConnection.prototype,\n        prop, {\n            get: getters[prop]\n        }\n    );\n});\n\nTraceablePeerConnection.prototype._getSSRC = function(rtcId) {\n    return this.localSSRCs.get(rtcId);\n};\n\n/**\n * Add {@link JitsiLocalTrack} to this TPC.\n * @param {JitsiLocalTrack} track\n */\nTraceablePeerConnection.prototype.addTrack = function(track) {\n    const rtcId = track.rtcId;\n\n    logger.info(`add ${track} to: ${this}`);\n\n    if (this.localTracks.has(rtcId)) {\n        logger.error(`${track} is already in ${this}`);\n\n        return;\n    }\n\n    this.localTracks.set(rtcId, track);\n\n    const webrtcStream = track.getOriginalStream();\n\n    if (webrtcStream) {\n        this._addStream(webrtcStream);\n\n    // It's not ok for a track to not have a WebRTC stream if:\n    } else if (!browser.doesVideoMuteByStreamRemove()\n                || track.isAudioTrack()\n                || (track.isVideoTrack() && !track.isMuted())) {\n        logger.error(`${this} no WebRTC stream for: ${track}`);\n    }\n\n    // Muted video tracks do not have WebRTC stream\n    if (browser.doesVideoMuteByStreamRemove()\n            && track.isVideoTrack() && track.isMuted()) {\n        const ssrcInfo = this.generateNewStreamSSRCInfo(track);\n\n        this.sdpConsistency.setPrimarySsrc(ssrcInfo.ssrcs[0]);\n        const simGroup\n            = ssrcInfo.groups.find(groupInfo => groupInfo.semantics === 'SIM');\n\n        if (simGroup) {\n            this.simulcast.setSsrcCache(simGroup.ssrcs);\n        }\n        const fidGroups\n            = ssrcInfo.groups.filter(\n                groupInfo => groupInfo.semantics === 'FID');\n\n        if (fidGroups) {\n            const rtxSsrcMapping = new Map();\n\n            fidGroups.forEach(fidGroup => {\n                const primarySsrc = fidGroup.ssrcs[0];\n                const rtxSsrc = fidGroup.ssrcs[1];\n\n                rtxSsrcMapping.set(primarySsrc, rtxSsrc);\n            });\n            this.rtxModifier.setSsrcCache(rtxSsrcMapping);\n        }\n    }\n};\n\n/**\n * Adds local track as part of the unmute operation.\n * @param {JitsiLocalTrack} track the track to be added as part of the unmute\n * operation\n * @return {boolean} <tt>true</tt> if the state of underlying PC has changed and\n * the renegotiation is required or <tt>false</tt> otherwise.\n */\nTraceablePeerConnection.prototype.addTrackUnmute = function(track) {\n    if (!this._assertTrackBelongs('addTrackUnmute', track)) {\n        // Abort\n        return false;\n    }\n\n    logger.info(`Adding ${track} as unmute to ${this}`);\n    const webRtcStream = track.getOriginalStream();\n\n    if (!webRtcStream) {\n        logger.error(\n            `Unable to add ${track} as unmute to ${this} - no WebRTC stream`);\n\n        return false;\n    }\n    this._addStream(webRtcStream);\n\n    return true;\n};\n\n/**\n * Adds WebRTC media stream to the underlying PeerConnection\n * @param {MediaStream} mediaStream\n * @private\n */\nTraceablePeerConnection.prototype._addStream = function(mediaStream) {\n    this.peerconnection.addStream(mediaStream);\n    this._addedStreams.push(mediaStream);\n};\n\n/**\n * Removes WebRTC media stream from the underlying PeerConection\n * @param {MediaStream} mediaStream\n */\nTraceablePeerConnection.prototype._removeStream = function(mediaStream) {\n    if (browser.supportsRtpSender()) {\n        this._handleSenderRemoveStream(mediaStream);\n    } else {\n        this.peerconnection.removeStream(mediaStream);\n    }\n    this._addedStreams\n        = this._addedStreams.filter(stream => stream !== mediaStream);\n};\n\n/**\n * This method when called will check if given <tt>localTrack</tt> belongs to\n * this TPC (that it has been previously added using {@link addTrack}). If the\n * track does not belong an error message will be logged.\n * @param {string} methodName the method name that will be logged in an error\n * message\n * @param {JitsiLocalTrack} localTrack\n * @return {boolean} <tt>true</tt> if given local track belongs to this TPC or\n * <tt>false</tt> otherwise.\n * @private\n */\nTraceablePeerConnection.prototype._assertTrackBelongs = function(\n        methodName,\n        localTrack) {\n    const doesBelong = this.localTracks.has(localTrack.rtcId);\n\n    if (!doesBelong) {\n        logger.error(\n            `${methodName}: ${localTrack} does not belong to ${this}`);\n    }\n\n    return doesBelong;\n};\n\n/**\n * Tells if the given WebRTC <tt>MediaStream</tt> has been added to\n * the underlying WebRTC PeerConnection.\n * @param {MediaStream} mediaStream\n * @returns {boolean}\n */\nTraceablePeerConnection.prototype.isMediaStreamInPc = function(mediaStream) {\n    return this._addedStreams.indexOf(mediaStream) > -1;\n};\n\n/**\n * Remove local track from this TPC.\n * @param {JitsiLocalTrack} localTrack the track to be removed from this TPC.\n *\n * FIXME It should probably remove a boolean just like {@link removeTrackMute}\n *       The same applies to addTrack.\n */\nTraceablePeerConnection.prototype.removeTrack = function(localTrack) {\n    const webRtcStream = localTrack.getOriginalStream();\n\n    this.trace(\n        'removeStream',\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : undefined);\n\n    if (!this._assertTrackBelongs('removeStream', localTrack)) {\n        // Abort - nothing to be done here\n        return;\n    }\n    this.localTracks.delete(localTrack.rtcId);\n    this.localSSRCs.delete(localTrack.rtcId);\n\n    if (webRtcStream) {\n        if (browser.supportsRtpSender()) {\n            this._handleSenderRemoveStream(webRtcStream);\n        } else {\n            this.peerconnection.removeStream(webRtcStream);\n        }\n    }\n};\n\n/**\n * Returns the sender corresponding to the given MediaStream.\n *\n * @param {MediaStream} stream - The media stream used for the search.\n * @returns {RTPSender|undefined} - The found sender or undefined if no sender\n * was found.\n */\nTraceablePeerConnection.prototype.findSenderByStream = function(stream) {\n    const track = stream.getTracks()[0];\n\n    if (!track) {\n        logger.error('Cannot find sender: no tracks.');\n\n        return;\n    }\n\n    // Find the right sender (for audio or video)\n    return this.peerconnection.getSenders().find(s => s.track === track);\n};\n\n/**\n * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> from the peer connection.\n * Either <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\n * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\n * <tt>oldTrack</tt>\n *\n * @param {JitsiLocalTrack|null} oldTrack - The current track in use to be\n * replaced\n * @param {JitsiLocalTrack|null} newTrack - The new track to use\n * @returns {Promise<boolean>} - If the promise resolves with true,\n * renegotiation will be needed. Otherwise no renegotiation is needed.\n */\nTraceablePeerConnection.prototype.replaceTrack = function(oldTrack, newTrack) {\n    if (browser.supportsRtpSender() && oldTrack && newTrack) {\n        // Add and than remove stream in FF leads to wrong local SDP. In order\n        // to workaround the issue we need to use sender.replaceTrack().\n        const sender = this.findSenderByStream(oldTrack.getOriginalStream());\n        const stream = newTrack.getOriginalStream();\n\n        if (sender && stream) {\n            const track = stream.getTracks()[0];\n\n            if (track) {\n                return sender.replaceTrack(track, stream).then(() => {\n                    // Since there is no need to do renegotiations we need to\n                    // fix all ssrc-msid mappings here.\n                    // NOTE: after sender.replaceTrack the sdp will remain the\n                    // same but the stream attach to the new JitsiLocalTrack\n                    // will have different msid. Luckily on FF we are not doing\n                    // all the transformations related to video mute.\n\n                    const ssrc = this.localSSRCs.get(oldTrack.rtcId);\n\n                    this.localTracks.delete(oldTrack.rtcId);\n                    this.localSSRCs.delete(oldTrack.rtcId);\n                    this._addedStreams\n                        = this._addedStreams.filter(s => s !== stream);\n\n                    this.localTracks.set(newTrack.rtcId, newTrack);\n\n                    // Override the msid of JitsiLocalTrack in order to be\n                    // consistent with the SDP values.\n                    newTrack.storedMSID = oldTrack.storedMSID;\n                    this._addedStreams.push(stream);\n\n                    this.localSSRCs.set(newTrack.rtcId, ssrc);\n                    this.eventEmitter.emit(\n                        RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\n                        newTrack,\n                        extractPrimarySSRC(ssrc));\n\n                    return false;\n                });\n            }\n        }\n    }\n\n    if (oldTrack) {\n        this.removeTrack(oldTrack);\n    }\n    if (newTrack) {\n        this.addTrack(newTrack);\n    }\n\n    return Promise.resolve(true);\n};\n\n/**\n * Removes local track as part of the mute operation.\n * @param {JitsiLocalTrack} localTrack the local track to be remove as part of\n * the mute operation.\n * @return {boolean} <tt>true</tt> if the underlying PeerConnection's state has\n * changed and the renegotiation is required or <tt>false</tt> otherwise.\n */\nTraceablePeerConnection.prototype.removeTrackMute = function(localTrack) {\n    const webRtcStream = localTrack.getOriginalStream();\n\n    this.trace(\n        'removeStreamMute',\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : null);\n\n    if (!this._assertTrackBelongs('removeStreamMute', localTrack)) {\n        // Abort - nothing to be done here\n        return false;\n    }\n\n    if (webRtcStream) {\n        logger.info(\n            `Removing ${localTrack} as mute from ${this}`);\n        this._removeStream(webRtcStream);\n\n        return true;\n    }\n\n    logger.error(`removeStreamMute - no WebRTC stream for ${localTrack}`);\n\n    return false;\n};\n\n/**\n * Remove stream handling for browsers supporting RTPSender\n * @param stream: webrtc media stream\n */\nTraceablePeerConnection.prototype._handleSenderRemoveStream = function(\n        stream) {\n    if (!stream) {\n        // There is nothing to be changed\n        return;\n    }\n\n    const sender = this.findSenderByStream(stream);\n\n    if (sender) {\n        this.peerconnection.removeTrack(sender);\n    } else {\n        logger.log('Cannot remove tracks: no RTPSender.');\n    }\n};\n\nTraceablePeerConnection.prototype.createDataChannel = function(label, opts) {\n    this.trace('createDataChannel', label, opts);\n\n    return this.peerconnection.createDataChannel(label, opts);\n};\n\n/**\n * Ensures that the simulcast ssrc-group appears after any other ssrc-groups\n * in the SDP so that simulcast is properly activated.\n *\n * @param {Object} localSdp the WebRTC session description instance for\n * the local description.\n * @private\n */\nTraceablePeerConnection.prototype._ensureSimulcastGroupIsLast = function(\n        localSdp) {\n    let sdpStr = localSdp.sdp;\n\n    const videoStartIndex = sdpStr.indexOf('m=video');\n    const simStartIndex = sdpStr.indexOf('a=ssrc-group:SIM', videoStartIndex);\n    let otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\n\n    if (simStartIndex === -1\n        || otherStartIndex === -1\n        || otherStartIndex === simStartIndex) {\n        return localSdp;\n    }\n\n    const simEndIndex = sdpStr.indexOf('\\r\\n', simStartIndex);\n    const simStr = sdpStr.substring(simStartIndex, simEndIndex + 2);\n\n    sdpStr = sdpStr.replace(simStr, '');\n    otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\n    const otherEndIndex = sdpStr.indexOf('\\r\\n', otherStartIndex);\n    const sdpHead = sdpStr.slice(0, otherEndIndex);\n    const simStrTrimmed = simStr.trim();\n    const sdpTail = sdpStr.slice(otherEndIndex);\n\n    sdpStr = `${sdpHead}\\r\\n${simStrTrimmed}${sdpTail}`;\n\n    return new RTCSessionDescription({\n        type: localSdp.type,\n        sdp: sdpStr\n    });\n};\n\n/**\n * Will adjust audio and video media direction in the given SDP object to\n * reflect the current status of the {@link audioTransferActive} and\n * {@link videoTransferActive} flags.\n * @param {Object} localDescription the WebRTC session description instance for\n * the local description.\n * @private\n */\nTraceablePeerConnection.prototype._adjustLocalMediaDirection = function(\n        localDescription) {\n    const transformer = new SdpTransformWrap(localDescription.sdp);\n    let modifiedDirection = false;\n    const audioMedia = transformer.selectMedia('audio');\n\n    if (audioMedia) {\n        const desiredAudioDirection\n            = this._getDesiredMediaDirection(MediaType.AUDIO);\n\n        if (audioMedia.direction !== desiredAudioDirection) {\n            audioMedia.direction = desiredAudioDirection;\n            logger.info(\n                `Adjusted local audio direction to ${desiredAudioDirection}`);\n            modifiedDirection = true;\n        }\n    } else {\n        logger.warn('No \"audio\" media found int the local description');\n    }\n\n    const videoMedia = transformer.selectMedia('video');\n\n    if (videoMedia) {\n        const desiredVideoDirection\n            = this._getDesiredMediaDirection(MediaType.VIDEO);\n\n        if (videoMedia.direction !== desiredVideoDirection) {\n            videoMedia.direction = desiredVideoDirection;\n            logger.info(\n                `Adjusted local video direction to ${desiredVideoDirection}`);\n            modifiedDirection = true;\n        }\n    } else {\n        logger.warn('No \"video\" media found in the local description');\n    }\n\n    if (modifiedDirection) {\n        return new RTCSessionDescription({\n            type: localDescription.type,\n            sdp: transformer.toRawSDP()\n        });\n    }\n\n    return localDescription;\n};\n\nTraceablePeerConnection.prototype.setLocalDescription = function(description) {\n    let localSdp = description;\n\n    this.trace('setLocalDescription::preTransform', dumpSDP(localSdp));\n\n    if (this.options.disableH264 || this.options.preferH264) {\n        const parsedSdp = transform.parse(localSdp.sdp);\n        const videoMLine = parsedSdp.media.find(m => m.type === 'video');\n\n        if (this.options.disableH264) {\n            SDPUtil.stripVideoCodec(videoMLine, 'h264');\n        } else {\n            SDPUtil.preferVideoCodec(videoMLine, 'h264');\n        }\n\n        localSdp = new RTCSessionDescription({\n            type: localSdp.type,\n            sdp: transform.write(parsedSdp)\n        });\n\n        this.trace('setLocalDescription::postTransform (H264)',\n            dumpSDP(localSdp));\n    }\n\n    localSdp = this._adjustLocalMediaDirection(localSdp);\n\n    localSdp = this._ensureSimulcastGroupIsLast(localSdp);\n\n    // if we're using unified plan, transform to it first.\n    if (browser.usesUnifiedPlan()) {\n        localSdp = this.interop.toUnifiedPlan(localSdp);\n        this.trace(\n            'setLocalDescription::postTransform (Unified Plan)',\n            dumpSDP(localSdp));\n    }\n\n    return new Promise((resolve, reject) => {\n        this.peerconnection.setLocalDescription(localSdp)\n            .then(() => {\n                this.trace('setLocalDescriptionOnSuccess');\n                const localUfrag = SDPUtil.getUfrag(localSdp.sdp);\n\n                if (localUfrag !== this.localUfrag) {\n                    this.localUfrag = localUfrag;\n                    this.eventEmitter.emit(\n                        RTCEvents.LOCAL_UFRAG_CHANGED, this, localUfrag);\n                }\n                resolve();\n            }, err => {\n                this.trace('setLocalDescriptionOnFailure', err);\n                this.eventEmitter.emit(\n                    RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\n                    err, this);\n                reject(err);\n            });\n    });\n};\n\n/**\n * Enables/disables audio media transmission on this peer connection. When\n * disabled the SDP audio media direction in the local SDP will be adjusted to\n * 'inactive' which means that no data will be sent nor accepted, but\n * the connection should be kept alive.\n * @param {boolean} active <tt>true</tt> to enable audio media transmission or\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\n * no effect.\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\n * needs to be executed in order for the changes to take effect or\n * <tt>false</tt> if the given value was the same as the previous one.\n * @public\n */\nTraceablePeerConnection.prototype.setAudioTransferActive = function(active) {\n    logger.debug(`${this} audio transfer active: ${active}`);\n    const changed = this.audioTransferActive !== active;\n\n    this.audioTransferActive = active;\n\n    return changed;\n};\n\n/**\n * Takes in a *unified plan* offer and inserts the appropriate\n * parameters for adding simulcast receive support.\n * @param {Object} desc - A session description object\n * @param {String} desc.type - the type (offer/answer)\n * @param {String} desc.sdp - the sdp content\n *\n * @return {Object} A session description (same format as above) object\n * with its sdp field modified to advertise simulcast receive support\n */\nTraceablePeerConnection.prototype._insertUnifiedPlanSimulcastReceive\n    = function(desc) {\n        const sdp = transform.parse(desc.sdp);\n        const video = sdp.media.find(mline => mline.type === 'video');\n\n        // In order of lowest to highest spatial quality\n        video.rids = [\n            {\n                id: SIM_LAYER_1_RID,\n                direction: 'recv'\n            },\n            {\n                id: SIM_LAYER_2_RID,\n                direction: 'recv'\n            },\n            {\n                id: SIM_LAYER_3_RID,\n                direction: 'recv'\n            }\n        ];\n        // eslint-disable-next-line camelcase\n        video.simulcast_03 = {\n            value: `recv rid=${SIM_LAYER_RIDS.join(';')}`\n        };\n\n        return new RTCSessionDescription({\n            type: desc.type,\n            sdp: transform.write(sdp)\n        });\n    };\n\nTraceablePeerConnection.prototype.setRemoteDescription = function(description) {\n    this.trace('setRemoteDescription::preTransform', dumpSDP(description));\n\n    // TODO the focus should squeze or explode the remote simulcast\n    // eslint-disable-next-line no-param-reassign\n    description = this.simulcast.mungeRemoteDescription(description);\n    this.trace(\n        'setRemoteDescription::postTransform (simulcast)',\n        dumpSDP(description));\n\n    if (this.options.preferH264) {\n        const parsedSdp = transform.parse(description.sdp);\n        const videoMLine = parsedSdp.media.find(m => m.type === 'video');\n\n        SDPUtil.preferVideoCodec(videoMLine, 'h264');\n\n        // eslint-disable-next-line no-param-reassign\n        description = new RTCSessionDescription({\n            type: description.type,\n            sdp: transform.write(parsedSdp)\n        });\n    }\n\n    // If the browser uses unified plan, transform to it first\n    if (browser.usesUnifiedPlan()) {\n        // eslint-disable-next-line no-param-reassign\n        description = new RTCSessionDescription({\n            type: description.type,\n            sdp: this.rtxModifier.stripRtx(description.sdp)\n        });\n\n        this.trace(\n            'setRemoteDescription::postTransform (stripRtx)',\n            dumpSDP(description));\n\n        // eslint-disable-next-line no-param-reassign\n        description = this.interop.toUnifiedPlan(description);\n        this.trace(\n            'setRemoteDescription::postTransform (Plan A)',\n            dumpSDP(description));\n\n        if (this.isSimulcastOn()) {\n            // eslint-disable-next-line no-param-reassign\n            description = this._insertUnifiedPlanSimulcastReceive(description);\n            this.trace(\n                'setRemoteDescription::postTransform (sim receive)',\n                dumpSDP(description));\n        }\n    } else {\n        // Plan B\n        // eslint-disable-next-line no-param-reassign\n        description = normalizePlanB(description);\n    }\n\n    // Safari WebRTC errors when no supported video codec is found in the offer.\n    // To prevent the error, inject H264 into the video mLine.\n    if (browser.isSafariWithWebrtc() && !browser.isSafariWithVP8()) {\n        logger.debug('Maybe injecting H264 into the remote description');\n\n        // eslint-disable-next-line no-param-reassign\n        description = this._injectH264IfNotPresent(description);\n    }\n\n    return new Promise((resolve, reject) => {\n        this.peerconnection.setRemoteDescription(description)\n            .then(() => {\n                this.trace('setRemoteDescriptionOnSuccess');\n                const remoteUfrag = SDPUtil.getUfrag(description.sdp);\n\n                if (remoteUfrag !== this.remoteUfrag) {\n                    this.remoteUfrag = remoteUfrag;\n                    this.eventEmitter.emit(\n                        RTCEvents.REMOTE_UFRAG_CHANGED, this, remoteUfrag);\n                }\n                resolve();\n            }, err => {\n                this.trace('setRemoteDescriptionOnFailure', err);\n                this.eventEmitter.emit(\n                    RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\n                    err,\n                    this);\n                reject(err);\n            });\n    });\n};\n\n/**\n * Inserts an H264 payload into the description if not already present. This is\n * need for Safari WebRTC, which errors when no supported video codec is found\n * in the offer. Related bug reports:\n * https://bugs.webkit.org/show_bug.cgi?id=173141\n * https://bugs.chromium.org/p/webrtc/issues/detail?id=4957\n *\n * @param {RTCSessionDescription} description - An RTCSessionDescription\n * to inject with an H264 payload.\n * @private\n * @returns {RTCSessionDescription}\n */\nTraceablePeerConnection.prototype._injectH264IfNotPresent = function(\n        description) {\n    const parsedSdp = transform.parse(description.sdp);\n    const videoMLine = parsedSdp.media.find(m => m.type === 'video');\n\n    if (!videoMLine) {\n        logger.debug('No videoMLine found, no need to inject H264.');\n\n        return description;\n    }\n\n    if (videoMLine.rtp.some(rtp => rtp.codec.toLowerCase() === 'h264')) {\n        logger.debug('H264 codec found in video mLine, no need to inject.');\n\n        return description;\n    }\n\n    const { fmtp, payloads, rtp } = videoMLine;\n    const payloadsArray = payloads.toString().split(' ');\n    let dummyPayloadType;\n\n    for (let i = 127; i >= 96; i--) {\n        if (!payloadsArray.includes(i)) {\n            dummyPayloadType = i;\n            payloadsArray.push(i);\n            videoMLine.payloads = payloadsArray.join(' ');\n            break;\n        }\n    }\n\n    if (typeof dummyPayloadType === 'undefined') {\n        logger.error('Could not find valid payload type to inject.');\n\n        return description;\n    }\n\n    rtp.push({\n        codec: 'H264',\n        payload: dummyPayloadType,\n        rate: 90000\n    });\n\n    fmtp.push({\n        config: 'level-asymmetry-allowed=1;'\n            + 'packetization-mode=1;'\n            + 'profile-level-id=42e01f',\n        payload: dummyPayloadType\n    });\n\n    logger.debug(\n        `Injecting H264 payload type ${dummyPayloadType} into video mLine.`);\n\n    return new RTCSessionDescription({\n        type: description.type,\n        sdp: transform.write(parsedSdp)\n    });\n};\n\n/**\n * Enables/disables video media transmission on this peer connection. When\n * disabled the SDP video media direction in the local SDP will be adjusted to\n * 'inactive' which means that no data will be sent nor accepted, but\n * the connection should be kept alive.\n * @param {boolean} active <tt>true</tt> to enable video media transmission or\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\n * no effect.\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\n * needs to be executed in order for the changes to take effect or\n * <tt>false</tt> if the given value was the same as the previous one.\n * @public\n */\nTraceablePeerConnection.prototype.setVideoTransferActive = function(active) {\n    logger.debug(`${this} video transfer active: ${active}`);\n    const changed = this.videoTransferActive !== active;\n\n    this.videoTransferActive = active;\n\n    return changed;\n};\n\n/**\n * Makes the underlying TraceablePeerConnection generate new SSRC for\n * the recvonly video stream.\n */\nTraceablePeerConnection.prototype.generateRecvonlySsrc = function() {\n    const newSSRC = SDPUtil.generateSsrc();\n\n    logger.info(`${this} generated new recvonly SSRC: ${newSSRC}`);\n    this.sdpConsistency.setPrimarySsrc(newSSRC);\n};\n\n/**\n * Makes the underlying TraceablePeerConnection forget the current primary video\n * SSRC.\n */\nTraceablePeerConnection.prototype.clearRecvonlySsrc = function() {\n    logger.info('Clearing primary video SSRC!');\n    this.sdpConsistency.clearVideoSsrcCache();\n};\n\n/**\n * Closes underlying WebRTC PeerConnection instance and removes all remote\n * tracks by emitting {@link RTCEvents.REMOTE_TRACK_REMOVED} for each one of\n * them.\n */\nTraceablePeerConnection.prototype.close = function() {\n    this.trace('stop');\n\n    // Off SignalingEvents\n    this.signalingLayer.off(\n        SignalingEvents.PEER_MUTED_CHANGED, this._peerMutedChanged);\n    this.signalingLayer.off(\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED, this._peerVideoTypeChanged);\n\n    for (const peerTracks of this.remoteTracks.values()) {\n        for (const remoteTrack of peerTracks.values()) {\n            this._removeRemoteTrack(remoteTrack);\n        }\n    }\n    this.remoteTracks.clear();\n\n    this._addedStreams = [];\n\n    if (!this.rtc._removePeerConnection(this)) {\n        logger.error('RTC._removePeerConnection returned false');\n    }\n    if (this.statsinterval !== null) {\n        window.clearInterval(this.statsinterval);\n        this.statsinterval = null;\n    }\n    logger.info(`Closing ${this}...`);\n    this.peerconnection.close();\n};\n\n/**\n * Modifies the values of the setup attributes (defined by\n * {@link http://tools.ietf.org/html/rfc4145#section-4}) of a specific SDP\n * answer in order to overcome a delay of 1 second in the connection\n * establishment between some devices and Videobridge.\n *\n * @param {SDP} offer - the SDP offer to which the specified SDP answer is\n * being prepared to respond\n * @param {SDP} answer - the SDP to modify\n * @private\n */\nconst _fixAnswerRFC4145Setup = function(offer, answer) {\n    if (!(browser.isChromiumBased() || browser.isReactNative())) {\n        // It looks like Firefox doesn't agree with the fix (at least in its\n        // current implementation) because it effectively remains active even\n        // after we tell it to become passive. Apart from Firefox which I tested\n        // after the fix was deployed, I tested Chrome only. In order to prevent\n        // issues with other browsers, limit the fix to known devices for the\n        // time being.\n        return;\n    }\n\n    // XXX Videobridge is the (SDP) offerer and WebRTC (e.g. Chrome) is the\n    // answerer (as orchestrated by Jicofo). In accord with\n    // http://tools.ietf.org/html/rfc5245#section-5.2 and because both peers\n    // are ICE FULL agents, Videobridge will take on the controlling role and\n    // WebRTC will take on the controlled role. In accord with\n    // https://tools.ietf.org/html/rfc5763#section-5, Videobridge will use the\n    // setup attribute value of setup:actpass and WebRTC will be allowed to\n    // choose either the setup attribute value of setup:active or\n    // setup:passive. Chrome will by default choose setup:active because it is\n    // RECOMMENDED by the respective RFC since setup:passive adds additional\n    // latency. The case of setup:active allows WebRTC to send a DTLS\n    // ClientHello as soon as an ICE connectivity check of its succeeds.\n    // Unfortunately, Videobridge will be unable to respond immediately because\n    // may not have WebRTC's answer or may have not completed the ICE\n    // connectivity establishment. Even more unfortunate is that in the\n    // described scenario Chrome's DTLS implementation will insist on\n    // retransmitting its ClientHello after a second (the time is in accord\n    // with the respective RFC) and will thus cause the whole connection\n    // establishment to exceed at least 1 second. To work around Chrome's\n    // idiosyncracy, don't allow it to send a ClientHello i.e. change its\n    // default choice of setup:active to setup:passive.\n    if (offer && answer\n            && offer.media && answer.media\n            && offer.media.length === answer.media.length) {\n        answer.media.forEach((a, i) => {\n            if (SDPUtil.findLine(\n                    offer.media[i],\n                    'a=setup:actpass',\n                    offer.session)) {\n                answer.media[i]\n                    = a.replace(/a=setup:active/g, 'a=setup:passive');\n            }\n        });\n        answer.raw = answer.session + answer.media.join('');\n    }\n};\n\nTraceablePeerConnection.prototype.createAnswer = function(constraints) {\n    if (browser.isFirefox() && this.isSimulcastOn()) {\n        const videoSender\n            = this.peerconnection.getSenders().find(sender =>\n                sender.track !== null && sender.track.kind === 'video');\n        const simParams = {\n            encodings: [\n                {\n                    rid: SIM_LAYER_1_RID,\n                    scaleResolutionDownBy: 4\n                },\n                {\n                    rid: SIM_LAYER_2_RID,\n                    scaleResolutionDownBy: 2\n                },\n                {\n                    rid: SIM_LAYER_3_RID\n                }\n            ]\n        };\n\n        videoSender.setParameters(simParams);\n    }\n\n    return this._createOfferOrAnswer(false /* answer */, constraints);\n};\n\nTraceablePeerConnection.prototype.createOffer = function(constraints) {\n    return this._createOfferOrAnswer(true /* offer */, constraints);\n};\n\nTraceablePeerConnection.prototype._createOfferOrAnswer = function(\n        isOffer,\n        constraints) {\n    const logName = isOffer ? 'Offer' : 'Answer';\n\n    this.trace(`create${logName}`, JSON.stringify(constraints, null, ' '));\n\n    const handleSuccess = (resultSdp, resolveFn, rejectFn) => {\n        try {\n            this.trace(\n                `create${logName}OnSuccess::preTransform`, dumpSDP(resultSdp));\n\n            // if we're using unified plan, transform to Plan B.\n            if (browser.usesUnifiedPlan()) {\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = this.interop.toPlanB(resultSdp);\n                this.trace(\n                    `create${logName}OnSuccess::postTransform (Plan B)`,\n                    dumpSDP(resultSdp));\n                if (this.isSimulcastOn()) {\n                    // eslint-disable-next-line no-param-reassign\n                    resultSdp\n                        = this._injectSsrcGroupForUnifiedSimulcast(resultSdp);\n                    this.trace(\n                        `create${logName}OnSuccess::postTransform`\n                        + '(inject ssrc group)', dumpSDP(resultSdp));\n                }\n            }\n\n            /**\n             * We don't keep ssrcs consitent for Firefox because rewriting\n             *  the ssrcs between createAnswer and setLocalDescription breaks\n             *  the caching in sdp-interop (sdp-interop must know about all\n             *  ssrcs, and it updates its cache in toPlanB so if we rewrite them\n             *  after that, when we try and go back to unified plan it will\n             *  complain about unmapped ssrcs)\n             */\n            if (!browser.usesUnifiedPlan()) {\n                // If there are no local video tracks, then a \"recvonly\"\n                // SSRC needs to be generated\n                if (!this.hasAnyTracksOfType(MediaType.VIDEO)\n                    && !this.sdpConsistency.hasPrimarySsrcCached()) {\n                    this.generateRecvonlySsrc();\n                }\n\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = new RTCSessionDescription({\n                    type: resultSdp.type,\n                    sdp: this.sdpConsistency.makeVideoPrimarySsrcsConsistent(\n                        resultSdp.sdp)\n                });\n\n                this.trace(\n                    `create${logName}OnSuccess::postTransform `\n                         + '(make primary audio/video ssrcs consistent)',\n                    dumpSDP(resultSdp));\n            }\n\n            // Add simulcast streams if simulcast is enabled\n            if (this.isSimulcastOn()) {\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = this.simulcast.mungeLocalDescription(resultSdp);\n                this.trace(\n                    `create${logName}`\n                        + 'OnSuccess::postTransform (simulcast)',\n                    dumpSDP(resultSdp));\n            }\n\n            if (!this.options.disableRtx && browser.supportsRtx()) {\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = new RTCSessionDescription({\n                    type: resultSdp.type,\n                    sdp: this.rtxModifier.modifyRtxSsrcs(resultSdp.sdp)\n                });\n\n                this.trace(\n                    `create${logName}`\n                         + 'OnSuccess::postTransform (rtx modifier)',\n                    dumpSDP(resultSdp));\n            }\n\n            // Fix the setup attribute (see _fixAnswerRFC4145Setup for\n            //  details)\n            if (!isOffer) {\n                const remoteDescription\n                    = new SDP(this.remoteDescription.sdp);\n                const localDescription = new SDP(resultSdp.sdp);\n\n                _fixAnswerRFC4145Setup(remoteDescription, localDescription);\n\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = new RTCSessionDescription({\n                    type: resultSdp.type,\n                    sdp: localDescription.raw\n                });\n            }\n\n            const ssrcMap = extractSSRCMap(resultSdp);\n\n            logger.debug('Got local SSRCs MAP: ', ssrcMap);\n            this._processLocalSSRCsMap(ssrcMap);\n\n            resolveFn(resultSdp);\n        } catch (e) {\n            this.trace(`create${logName}OnError`, e);\n            this.trace(`create${logName}OnError`, dumpSDP(resultSdp));\n            logger.error(`create${logName}OnError`, e, dumpSDP(resultSdp));\n\n            rejectFn(e);\n        }\n    };\n\n    const handleFailure = (err, rejectFn) => {\n        this.trace(`create${logName}OnFailure`, err);\n        const eventType\n            = isOffer\n                ? RTCEvents.CREATE_OFFER_FAILED\n                : RTCEvents.CREATE_ANSWER_FAILED;\n\n        this.eventEmitter.emit(eventType, err, this);\n\n        rejectFn(err);\n    };\n\n    return new Promise((resolve, reject) => {\n        let oaPromise;\n\n        if (isOffer) {\n            oaPromise = this.peerconnection.createOffer(constraints);\n        } else {\n            oaPromise = this.peerconnection.createAnswer(constraints);\n        }\n\n        oaPromise\n            .then(\n                sdp => handleSuccess(sdp, resolve, reject),\n                error => handleFailure(error, reject));\n    });\n};\n\n/**\n * Extract primary SSRC from given {@link TrackSSRCInfo} object.\n * @param {TrackSSRCInfo} ssrcObj\n * @return {number|null} the primary SSRC or <tt>null</tt>\n */\nfunction extractPrimarySSRC(ssrcObj) {\n    if (ssrcObj && ssrcObj.groups && ssrcObj.groups.length) {\n        return ssrcObj.groups[0].ssrcs[0];\n    } else if (ssrcObj && ssrcObj.ssrcs && ssrcObj.ssrcs.length) {\n        return ssrcObj.ssrcs[0];\n    }\n\n    return null;\n}\n\n/**\n * Goes over the SSRC map extracted from the latest local description and tries\n * to match them with the local tracks (by MSID). Will update the values\n * currently stored in the {@link TraceablePeerConnection.localSSRCs} map.\n * @param {Map<string,TrackSSRCInfo>} ssrcMap\n * @private\n */\nTraceablePeerConnection.prototype._processLocalSSRCsMap = function(ssrcMap) {\n    for (const track of this.localTracks.values()) {\n        const trackMSID = track.storedMSID;\n\n        if (ssrcMap.has(trackMSID)) {\n            const newSSRC = ssrcMap.get(trackMSID);\n\n            if (!newSSRC) {\n                logger.error(`No SSRC found for: ${trackMSID} in ${this}`);\n\n                return;\n            }\n            const oldSSRC = this.localSSRCs.get(track.rtcId);\n            const newSSRCNum = extractPrimarySSRC(newSSRC);\n            const oldSSRCNum = extractPrimarySSRC(oldSSRC);\n\n            // eslint-disable-next-line no-negated-condition\n            if (newSSRCNum !== oldSSRCNum) {\n                if (oldSSRCNum === null) {\n                    logger.info(\n                        `Storing new local SSRC for ${track} in ${this}`,\n                        newSSRC);\n                } else {\n                    logger.error(\n                        `Overwriting SSRC for ${track} ${trackMSID} in ${this\n                        } with: `, newSSRC);\n                }\n                this.localSSRCs.set(track.rtcId, newSSRC);\n\n                this.eventEmitter.emit(\n                    RTCEvents.LOCAL_TRACK_SSRC_UPDATED, track, newSSRCNum);\n            } else {\n                logger.debug(\n                    `The local SSRC(${newSSRCNum}) for ${track} ${trackMSID}`\n                     + `is still up to date in ${this}`);\n            }\n        } else if (!track.isVideoTrack() && !track.isMuted()) {\n            // It is normal to find no SSRCs for a muted video track in\n            // the local SDP as the recv-only SSRC is no longer munged in.\n            // So log the warning only if it's not a muted video track.\n            logger.warn(`No SSRCs found in the local SDP for ${track} MSID: ${trackMSID} in ${this}`);\n        }\n    }\n};\n\nTraceablePeerConnection.prototype.addIceCandidate = function(candidate) {\n    this.trace('addIceCandidate', JSON.stringify({\n        candidate: candidate.candidate,\n        sdpMid: candidate.sdpMid,\n        sdpMLineIndex: candidate.sdpMLineIndex,\n        usernameFragment: candidate.usernameFragment\n    }, null, ' '));\n\n    return this.peerconnection.addIceCandidate(candidate);\n};\n\n/**\n * Obtains call-related stats from the peer connection.\n *\n * @param {Function} callback - The function to invoke after successfully\n * obtaining stats.\n * @param {Function} errback - The function to invoke after failing to obtain\n * stats.\n * @returns {void}\n */\nTraceablePeerConnection.prototype.getStats = function(callback, errback) {\n    // TODO (brian): After moving all browsers to adapter, check if adapter is\n    // accounting for different getStats apis, making the browser-checking-if\n    // unnecessary.\n    if (browser.isSafariWithWebrtc() || browser.isFirefox()\n            || browser.isReactNative()) {\n        // uses the new Promise based getStats\n        this.peerconnection.getStats()\n            .then(callback)\n            .catch(errback || (() => {\n\n                // Making sure that getStats won't fail if error callback is\n                // not passed.\n            }));\n    } else {\n        this.peerconnection.getStats(callback);\n    }\n};\n\n/**\n * Generates and stores new SSRC info object for given local track.\n * The method should be called only for a video track being added to this TPC\n * in the muted state (given that the current browser uses this strategy).\n * @param {JitsiLocalTrack} track\n * @return {TPCSSRCInfo}\n */\nTraceablePeerConnection.prototype.generateNewStreamSSRCInfo = function(track) {\n    const rtcId = track.rtcId;\n    let ssrcInfo = this._getSSRC(rtcId);\n\n    if (ssrcInfo) {\n        logger.error(`Will overwrite local SSRCs for track ID: ${rtcId}`);\n    }\n    if (this.isSimulcastOn()) {\n        ssrcInfo = {\n            ssrcs: [],\n            groups: []\n        };\n        for (let i = 0; i < SIMULCAST_LAYERS; i++) {\n            ssrcInfo.ssrcs.push(SDPUtil.generateSsrc());\n        }\n        ssrcInfo.groups.push({\n            ssrcs: ssrcInfo.ssrcs.slice(),\n            semantics: 'SIM'\n        });\n    } else {\n        ssrcInfo = {\n            ssrcs: [ SDPUtil.generateSsrc() ],\n            groups: []\n        };\n    }\n    if (!this.options.disableRtx && browser.supportsRtx()) {\n        // Specifically use a for loop here because we'll\n        //  be adding to the list we're iterating over, so we\n        //  only want to iterate through the items originally\n        //  on the list\n        const currNumSsrcs = ssrcInfo.ssrcs.length;\n\n        for (let i = 0; i < currNumSsrcs; ++i) {\n            const primarySsrc = ssrcInfo.ssrcs[i];\n            const rtxSsrc = SDPUtil.generateSsrc();\n\n            ssrcInfo.ssrcs.push(rtxSsrc);\n            ssrcInfo.groups.push({\n                ssrcs: [ primarySsrc, rtxSsrc ],\n                semantics: 'FID'\n            });\n        }\n    }\n    ssrcInfo.msid = track.storedMSID;\n    this.localSSRCs.set(rtcId, ssrcInfo);\n\n    return ssrcInfo;\n};\n\nconst handleLayerSuspension = function(peerConnection, isSelected) {\n    if (!peerConnection.getSenders) {\n        logger.debug('Browser doesn\\'t support RTPSender');\n\n        return;\n    }\n\n    const videoSender = peerConnection.getSenders()\n        .find(sender => sender.track.kind === 'video');\n\n    if (!videoSender) {\n        logger.warn('handleLayerSuspension unable to find video sender');\n\n        return;\n    }\n    if (!videoSender.getParameters) {\n        logger.debug('Browser doesn\\'t support RTPSender parameters');\n\n        return;\n    }\n    const parameters = videoSender.getParameters();\n\n    if (isSelected) {\n        logger.debug('Currently selected, enabling all sim layers');\n\n        // Make sure all encodings are enabled\n        parameters.encodings.forEach(e => {\n            e.active = true;\n        });\n    } else {\n        logger.debug('Not currently selected, disabling upper layers');\n\n        // Turn off the upper simulcast layers\n        [ 1, 2 ].forEach(simIndex => {\n            if (parameters.encodings[simIndex]) {\n                parameters.encodings[simIndex].active = false;\n            }\n        });\n    }\n    videoSender.setParameters(parameters);\n};\n\n/**\n * Set whether or not the endpoint is 'selected' by other endpoints, meaning\n * it appears on their main stage\n */\nTraceablePeerConnection.prototype.setIsSelected = function(isSelected) {\n    if (this.options.enableLayerSuspension) {\n        logger.debug('Layer suspension enabled,'\n            + `currently selected? ${isSelected}`);\n        handleLayerSuspension(this.peerconnection, isSelected);\n    }\n};\n\n/**\n * Creates a text representation of this <tt>TraceablePeerConnection</tt>\n * instance.\n * @return {string}\n */\nTraceablePeerConnection.prototype.toString = function() {\n    return `TPC[${this.id},p2p:${this.isP2P}]`;\n};\n","import * as JitsiConferenceEvents from '../JitsiConferenceEvents';\n\n/**\n * The value which we use to say, every sound over this threshold\n * is talking on the mic.\n * @type {number}\n */\nconst SPEECH_DETECT_THRESHOLD = 0.6;\n\n/**\n * Detect user trying to speek while is locally muted and fires an event.\n */\nexport default class TalkMutedDetection {\n    /**\n     * Creates TalkMutedDetection\n     * @param conference the JitsiConference instance that created us.\n     * @param callback the callback to call when detected that the local user is\n     * talking while her microphone is muted.\n     * @constructor\n     */\n    constructor(conference, callback) {\n        /**\n         * The callback to call when detected that the local user is talking\n         * while her microphone is muted.\n         *\n         * @private\n         */\n        this._callback = callback;\n\n        /**\n         * The indicator which determines whether <tt>callback</tt> has been\n         * invoked for the current local audio track of <tt>conference</tt> so\n         * that it is invoked once only.\n         *\n         * @private\n         */\n        this._eventFired = false;\n\n        // XXX I went back and forth on the subject of where to put the access\n        // to statistics. On the one had, (1) statistics is likely intended to\n        // be private to conference and (2) there is a desire to keep the\n        // dependencies of modules to the minimum (i.e. not have\n        // TalkMutedDetection depend on statistics). On the other hand, (1)\n        // statistics is technically not private because\n        // JitsiConferenceEventManager accesses it and (2) TalkMutedDetection\n        // works exactly because it knows that there are no audio levels for\n        // JitsiLocalTrack but there are audio levels for the local participant\n        // through statistics.\n        conference.statistics.addAudioLevelListener(\n            this._audioLevel.bind(this));\n\n        conference.on(\n            JitsiConferenceEvents.TRACK_MUTE_CHANGED,\n            this._trackMuteChanged.bind(this));\n        conference.on(\n            JitsiConferenceEvents.TRACK_ADDED,\n            this._trackAdded.bind(this));\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Receives audio level events for all send and receive streams.\n     *\n     * @param {TraceablePeerConnection} pc - WebRTC PeerConnection object of the\n     * @param {number} ssrc - The synchronization source identifier (SSRC) of\n     * the endpoint/participant/stream being reported.\n     * @param {number} audioLevel - The audio level of <tt>ssrc</tt>.\n     * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> represents a\n     * local/send stream or <tt>false</tt> for a remote/receive stream.\n     */\n    _audioLevel(tpc, ssrc, audioLevel, isLocal) {\n        // We are interested in the local audio stream only and if event is not\n        // sent yet.\n        if (!isLocal || !this.audioTrack || this._eventFired) {\n            return;\n        }\n\n        if (this.audioTrack.isMuted()\n            && audioLevel > SPEECH_DETECT_THRESHOLD) {\n            this._eventFired = true;\n            this._callback();\n        }\n    }\n    /* eslint-enable max-params */\n\n    /**\n     * Determines whether a specific {@link JitsiTrack} represents a local audio\n     * track.\n     *\n     * @param {JitsiTrack} track - The <tt>JitsiTrack</tt> to be checked whether\n     * it represents a local audio track.\n     * @private\n     * @return {boolean} - <tt>true</tt> if the specified <tt>track</tt>\n     * represents a local audio track; otherwise, <tt>false</tt>.\n     */\n    _isLocalAudioTrack(track) {\n        return track.isAudioTrack() && track.isLocal();\n    }\n\n    /**\n     * Notifies this <tt>TalkMutedDetection</tt> that a {@link JitsiTrack} was\n     * added to the associated {@link JitsiConference}. Looks for the local\n     * audio track only.\n     *\n     * @param {JitsiTrack} track - The added <tt>JitsiTrack</tt>.\n     * @private\n     */\n    _trackAdded(track) {\n        if (this._isLocalAudioTrack(track)) {\n            this.audioTrack = track;\n        }\n    }\n\n    /**\n     * Notifies this <tt>TalkMutedDetection</tt> that the mute state of a\n     * {@link JitsiTrack} has changed. Looks for the local audio track only.\n     *\n     * @param {JitsiTrack} track - The <tt>JitsiTrack</tt> whose mute state has\n     * changed.\n     * @private\n     */\n    _trackMuteChanged(track) {\n        if (this._isLocalAudioTrack(track) && track.isMuted()) {\n            this._eventFired = false;\n        }\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\nimport { BrowserDetection } from 'js-utils';\n\nconst logger = getLogger(__filename);\n\n// TODO: Move this code to js-utils.\n\n// NOTE: Now we are extending BrowserDetection in order to preserve\n// RTCBrowserType interface but maybe it worth exporting BrowserCapabilities\n// and BrowserDetection as separate objects in future.\n\n/**\n * Implements browser capabilities for lib-jitsi-meet.\n */\nexport default class BrowserCapabilities extends BrowserDetection {\n    /**\n     * Creates new BrowserCapabilities instance.\n     */\n    constructor() {\n        super();\n        logger.info(\n            `This appears to be ${this.getName()}, ver: ${this.getVersion()}`);\n    }\n\n    /**\n     * Tells whether or not the <tt>MediaStream/tt> is removed from\n     * the <tt>PeerConnection</tt> and disposed on video mute (in order to turn\n     * off the camera device).\n     * @return {boolean} <tt>true</tt> if the current browser supports this\n     * strategy or <tt>false</tt> otherwise.\n     */\n    doesVideoMuteByStreamRemove() {\n        return !(\n            this.isFirefox()\n            || this.isEdge()\n            || this.isReactNative()\n            || this.isSafariWithWebrtc()\n        );\n    }\n\n    /**\n     * Check whether or not the current browser support peer to peer connections\n     * @return {boolean} <tt>true</tt> if p2p is supported or <tt>false</tt>\n     * otherwise.\n     */\n    supportsP2P() {\n        return !this.isEdge() && !this.isFirefox();\n    }\n\n    /**\n     * Checks if the current browser is Chromium based, that is, it's either\n     * Chrome / Chromium or uses it as its engine, but doesn't identify as\n     * Chrome.\n     *\n     * This includes the following browsers:\n     * - Chrome and Chromium\n     * - Other browsers which use the Chrome engine, but are detected as Chrome,\n     *   such as Brave and Vivaldi\n     * - Browsers which are NOT Chrome but use it as their engine, and have\n     *   custom detection code: Opera, Electron and NW.JS\n     */\n    isChromiumBased() {\n        return this.isChrome()\n            || this.isElectron()\n            || this.isNWJS()\n            || this.isOpera();\n    }\n\n    /**\n     * Checks if current browser is a Safari and a version of Safari that\n     * supports native webrtc.\n     *\n     * @returns {boolean}\n     */\n    isSafariWithWebrtc() {\n        return this.isSafari()\n            && !this.isVersionLessThan('11');\n    }\n\n    /**\n     * Checks if current browser is a Safari and a version of Safari that\n     * supports VP8.\n     *\n     * @returns {boolean}\n     */\n    isSafariWithVP8() {\n        return this.isSafari()\n            && !this.isVersionLessThan('12.1');\n    }\n\n    /**\n     * Checks if the current browser is supported.\n     *\n     * @returns {boolean} true if the browser is supported, false otherwise.\n     */\n    isSupported() {\n        return this.isChromiumBased()\n            || this.isFirefox()\n            || this.isReactNative()\n            || this.isSafariWithWebrtc();\n    }\n\n    /**\n     * Returns whether or not the current environment needs a user interaction\n     * with the page before any unmute can occur.\n     *\n     * @returns {boolean}\n     */\n    isUserInteractionRequiredForUnmute() {\n        return this.isFirefox() || this.isSafari();\n    }\n\n    /**\n     * Checks if the current browser triggers 'onmute'/'onunmute' events when\n     * user's connection is interrupted and the video stops playback.\n     * @returns {*|boolean} 'true' if the event is supported or 'false'\n     * otherwise.\n     */\n    supportsVideoMuteOnConnInterrupted() {\n        return this.isChromiumBased() || this.isReactNative()\n            || this.isSafariWithVP8();\n    }\n\n    /**\n     * Checks if the current browser reports upload and download bandwidth\n     * statistics.\n     * @return {boolean}\n     */\n    supportsBandwidthStatistics() {\n        // FIXME bandwidth stats are currently not implemented for FF on our\n        // side, but not sure if not possible ?\n        return !this.isFirefox() && !this.isEdge()\n            && !this.isSafariWithWebrtc();\n    }\n\n    /**\n     * Checks if the current browser supports WebRTC datachannels.\n     * @return {boolean}\n     */\n    supportsDataChannels() {\n        // NOTE: Edge does not yet implement DataChannel.\n        return !this.isEdge();\n    }\n\n    /**\n     * Checks if the current browser support the device change event.\n     * @return {boolean}\n     */\n    supportsDeviceChangeEvent() {\n        return navigator.mediaDevices\n            && typeof navigator.mediaDevices.ondevicechange !== 'undefined'\n            && typeof navigator.mediaDevices.addEventListener !== 'undefined';\n    }\n\n    /**\n     * Checks if the current browser supports RTP statictics collecting.\n     * Required by {@link RTPStatsCollector}.\n     *\n     * @returns {boolean} true if they are supported, false otherwise.\n     */\n    supportsRtpStatistics() {\n        return this.isChromiumBased()\n            || this.isEdge()\n            || this.isFirefox()\n            || this.isReactNative()\n            || this.isSafariWithWebrtc();\n    }\n\n    /**\n     * Checks if the current browser supports RTT statistics for srflx local\n     * candidates through the legacy getStats() API.\n     */\n    supportsLocalCandidateRttStatistics() {\n        return this.isChromiumBased() || this.isReactNative()\n            || this.isSafariWithVP8();\n    }\n\n    /**\n     * Checks if the current browser reports round trip time statistics for\n     * the ICE candidate pair.\n     * @return {boolean}\n     */\n    supportsRTTStatistics() {\n        // Firefox does not seem to report RTT for ICE candidate pair:\n        // eslint-disable-next-line max-len\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcicecandidatepairstats-currentroundtriptime\n        // It does report mozRTT for RTP streams, but at the time of this\n        // writing it's value does not make sense most of the time\n        // (is reported as 1):\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1241066\n        // For Chrome and others we rely on 'googRtt'.\n        return !this.isFirefox() && !this.isEdge();\n    }\n\n    /**\n     * Checks whether the browser supports RTPSender.\n     *\n     * @returns {boolean}\n     */\n    supportsRtpSender() {\n        return this.isFirefox() || this.isSafariWithVP8();\n    }\n\n    /**\n     * Checks whether the browser supports RTX.\n     *\n     * @returns {boolean}\n     */\n    supportsRtx() {\n        return !this.isFirefox() && !this.usesUnifiedPlan();\n    }\n\n    /**\n     * Whether jitsi-meet supports simulcast on the current browser.\n     * @returns {boolean}\n     */\n    supportsSimulcast() {\n        return this.isChromiumBased() || this.isFirefox()\n            || this.isSafariWithVP8() || this.isReactNative();\n    }\n\n    /**\n     * Returns whether or not the current browser can support capturing video,\n     * be it camera or desktop, and displaying received video.\n     *\n     * @returns {boolean}\n     */\n    supportsVideo() {\n        // FIXME: Check if we can use supportsVideoOut and supportsVideoIn. I\n        // leave the old implementation here in order not to brake something.\n\n        // Older versions of Safari using webrtc/adapter do not support video\n        // due in part to Safari only supporting H264 and the bridge sending VP8\n        // Newer Safari support VP8 and other WebRTC features.\n        return !this.isSafariWithWebrtc()\n            || (this.isSafariWithVP8() && this.usesPlanB());\n    }\n\n    /**\n     * Checks if the browser uses plan B.\n     *\n     * @returns {boolean}\n     */\n    usesPlanB() {\n        return !this.usesUnifiedPlan();\n    }\n\n    /**\n     * Checks if the browser uses unified plan.\n     *\n     * @returns {boolean}\n     */\n    usesUnifiedPlan() {\n        if (this.isFirefox()) {\n            return true;\n        }\n\n        if (this.isSafariWithVP8() && typeof window.RTCRtpTransceiver !== 'undefined') {\n            // eslint-disable-next-line max-len\n            // https://trac.webkit.org/changeset/236144/webkit/trunk/LayoutTests/webrtc/video-addLegacyTransceiver.html\n            // eslint-disable-next-line no-undef\n            return Object.keys(RTCRtpTransceiver.prototype)\n                   .indexOf('currentDirection') > -1;\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns whether or not the current browser should be using the new\n     * getUserMedia flow, which utilizes the adapter shim. This method should\n     * be temporary and used while migrating all browsers to use adapter and\n     * the new getUserMedia.\n     *\n     * @returns {boolean}\n     */\n    usesNewGumFlow() {\n        const REQUIRED_CHROME_VERSION = 61;\n\n        if (this.isChrome()) {\n            return !this.isVersionLessThan(REQUIRED_CHROME_VERSION);\n        }\n\n        if (this.isFirefox() || this.isSafariWithWebrtc()) {\n            return true;\n        }\n\n        if (this.isChromiumBased()) {\n            return this._getChromiumBasedVersion() >= REQUIRED_CHROME_VERSION;\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks if the browser uses webrtc-adapter. All browsers using the new\n     * getUserMedia flow and Edge.\n     *\n     * @returns {boolean}\n     */\n    usesAdapter() {\n        return this.usesNewGumFlow() || this.isEdge();\n    }\n\n    /**\n     * Checks if the browser supports getDisplayMedia.\n     * @returns {boolean} {@code true} if the browser supports getDisplayMedia.\n     */\n    supportsGetDisplayMedia() {\n        return typeof navigator.getDisplayMedia !== 'undefined'\n            || (typeof navigator.mediaDevices !== 'undefined'\n                && typeof navigator.mediaDevices.getDisplayMedia\n                    !== 'undefined');\n    }\n\n    /**\n     * Checks if the browser supports the \"sdpSemantics\" configuration option.\n     * https://webrtc.org/web-apis/chrome/unified-plan/\n     *\n     * @returns {boolean}\n     */\n    supportsSdpSemantics() {\n        return this.isChromiumBased() && this._getChromiumBasedVersion() >= 65;\n    }\n\n    /**\n     * Returns the version of a Chromium based browser.\n     *\n     * @returns {Number}\n     */\n    _getChromiumBasedVersion() {\n        if (this.isChromiumBased()) {\n            // NW.JS doesn't expose the Chrome version in the UA string.\n            if (this.isNWJS()) {\n                // eslint-disable-next-line no-undef\n                return Number.parseInt(process.versions.chromium, 10);\n            }\n\n            // Here we process all browsers which use the Chrome engine but\n            // don't necessarily identify as Chrome. We cannot use the version\n            // comparing functions because the Electron, Opera and NW.JS\n            // versions are inconsequential here, as we need to know the actual\n            // Chrome engine version.\n            const ua = navigator.userAgent;\n\n            if (ua.match(/Chrome/)) {\n                const version\n                    = Number.parseInt(ua.match(/Chrome\\/([\\d.]+)/)[1], 10);\n\n                return version;\n            }\n        }\n\n        return -1;\n    }\n}\n","import BrowserCapabilities from './BrowserCapabilities';\n\nexport default new BrowserCapabilities();\n","import * as ConnectionQualityEvents\n    from '../../service/connectivity/ConnectionQualityEvents';\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\nimport { getLogger } from 'jitsi-meet-logger';\n\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\nconst VideoType = require('../../service/RTC/VideoType');\nconst Resolutions = require('../../service/RTC/Resolutions');\n\nconst logger = getLogger(__filename);\n\n/**\n * The value to use for the \"type\" field for messages sent by ConnectionQuality\n * over the data channel.\n */\nconst STATS_MESSAGE_TYPE = 'stats';\n\n/**\n * See media/engine/simulcast.ss from webrtc.org\n */\nconst kSimulcastFormats = [\n    { width: 1920,\n        height: 1080,\n        layers: 3,\n        max: 5000,\n        target: 4000,\n        min: 800 },\n    { width: 1280,\n        height: 720,\n        layers: 3,\n        max: 2500,\n        target: 2500,\n        min: 600 },\n    { width: 960,\n        height: 540,\n        layers: 3,\n        max: 900,\n        target: 900,\n        min: 450 },\n    { width: 640,\n        height: 360,\n        layers: 2,\n        max: 700,\n        target: 500,\n        min: 150 },\n    { width: 480,\n        height: 270,\n        layers: 2,\n        max: 450,\n        target: 350,\n        min: 150 },\n    { width: 320,\n        height: 180,\n        layers: 1,\n        max: 200,\n        target: 150,\n        min: 30 }\n];\n\n/**\n * The maximum bitrate to use as a measurement against the participant's current\n * bitrate. This cap helps in the cases where the participant's bitrate is high\n * but not enough to fulfill high targets, such as with 1080p.\n */\nconst MAX_TARGET_BITRATE = 2500;\n\n/**\n * The initial bitrate for video in kbps.\n */\nlet startBitrate = 800;\n\n\n/**\n * The current cap (in kbps) put on the video stream (or null if there isn't\n * a cap).  If there is a cap, we'll take it into account when calculating\n * the current quality.\n */\nlet videoBitrateCap = null;\n\n/**\n * Gets the expected bitrate (in kbps) in perfect network conditions.\n * @param simulcast {boolean} whether simulcast is enabled or not.\n * @param resolution {Resolution} the resolution.\n * @param millisSinceStart {number} the number of milliseconds since sending\n * video started.\n */\nfunction getTarget(simulcast, resolution, millisSinceStart) {\n    // Completely ignore the bitrate in the first 5 seconds, as the first\n    // event seems to fire very early and the value is suspicious and causes\n    // false positives.\n    if (millisSinceStart < 15000) {\n        return 1;\n    }\n\n    let target = 0;\n    let height = Math.min(resolution.height, resolution.width);\n\n    if (simulcast) {\n        // Find the first format with height no bigger than ours.\n        let simulcastFormat = kSimulcastFormats.find(f => f.height <= height);\n\n        if (simulcastFormat) {\n            // Sum the target fields from all simulcast layers for the given\n            // resolution (e.g. 720p + 360p + 180p).\n            for (height = simulcastFormat.height; height >= 180; height /= 2) {\n                const targetHeight = height;\n\n                simulcastFormat\n                    = kSimulcastFormats.find(f => f.height === targetHeight);\n                if (simulcastFormat) {\n                    target += simulcastFormat.target;\n                } else {\n                    break;\n                }\n            }\n        }\n    } else {\n        // See GetMaxDefaultVideoBitrateKbps in\n        // media/engine/webrtcvideoengine2.cc from webrtc.org\n        const pixels = resolution.width * resolution.height;\n\n        if (pixels <= 320 * 240) {\n            target = 600;\n        } else if (pixels <= 640 * 480) {\n            target = 1700;\n        } else if (pixels <= 960 * 540) {\n            target = 2000;\n        } else {\n            target = 2500;\n        }\n    }\n\n    // Allow for an additional 1 second for ramp up -- delay any initial drop\n    // of connection quality by 1 second.\n    return Math.min(target, rampUp(Math.max(0, millisSinceStart - 1000)));\n}\n\n/**\n * Gets the bitrate to which GCC would have ramped up in perfect network\n * conditions after millisSinceStart milliseconds.\n * @param millisSinceStart {number} the number of milliseconds since sending\n * video was enabled.\n */\nfunction rampUp(millisSinceStart) {\n    if (millisSinceStart > 60000) {\n        return Number.MAX_SAFE_INTEGER;\n    }\n\n    // According to GCC the send side bandwidth estimation grows with at most\n    // 8% per second.\n    // https://tools.ietf.org/html/draft-ietf-rmcat-gcc-02#section-5.5\n    return startBitrate * Math.pow(1.08, millisSinceStart / 1000);\n}\n\n/**\n * A class which monitors the local statistics coming from the RTC modules, and\n * calculates a \"connection quality\" value, in percent, for the media\n * connection. A value of 100% indicates a very good network connection, and a\n * value of 0% indicates a poor connection.\n */\nexport default class ConnectionQuality {\n    /**\n     *\n     * @param conference\n     * @param eventEmitter\n     * @param options\n     */\n    constructor(conference, eventEmitter, options) {\n        this.eventEmitter = eventEmitter;\n\n        /**\n         * The owning JitsiConference.\n         */\n        this._conference = conference;\n\n        /**\n         * Holds statistics about the local connection quality.\n         */\n        this._localStats = {\n            connectionQuality: 100,\n            jvbRTT: undefined\n        };\n\n        /**\n         * The time this._localStats.connectionQuality was last updated.\n         */\n        this._lastConnectionQualityUpdate = -1;\n\n        /**\n         * Maps a participant ID to an object holding connection quality\n         * statistics received from this participant.\n         */\n        this._remoteStats = {};\n\n        /**\n         * The time that the ICE state last changed to CONNECTED. We use this\n         * to calculate how much time we as a sender have had to ramp-up.\n         */\n        this._timeIceConnected = -1;\n\n        /**\n         * The time that local video was unmuted. We use this to calculate how\n         * much time we as a sender have had to ramp-up.\n         */\n        this._timeVideoUnmuted = -1;\n\n        /**\n         * The time at which a video bitrate cap was last removed.  We use\n         * this to calculate how much time we, as a sender, have had to\n         * ramp-up\n         */\n        this._timeLastBwCapRemoved = -1;\n\n        // We assume a global startBitrate value for the sake of simplicity.\n        if (options.config.startBitrate && options.config.startBitrate > 0) {\n            startBitrate = options.config.startBitrate;\n        }\n\n        // TODO: consider ignoring these events and letting the user of\n        // lib-jitsi-meet handle these separately.\n        conference.on(\n            ConferenceEvents.CONNECTION_INTERRUPTED,\n            () => {\n                this._updateLocalConnectionQuality(0);\n                this.eventEmitter.emit(\n                    ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n                    this._localStats);\n                this._broadcastLocalStats();\n            });\n\n        conference.room.addListener(\n            XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\n            (jingleSession, newState) => {\n                if (!jingleSession.isP2P && newState === 'connected') {\n                    this._timeIceConnected = window.performance.now();\n                }\n            });\n\n        // Listen to DataChannel message from other participants in the\n        // conference, and update the _remoteStats field accordingly.\n        conference.on(\n            ConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n            (participant, payload) => {\n                if (payload.type === STATS_MESSAGE_TYPE) {\n                    this._updateRemoteStats(\n                        participant.getId(), payload.values);\n                }\n            });\n\n        // Listen to local statistics events originating from the RTC module\n        // and update the _localStats field.\n        // Oh, and by the way, the resolutions of all remote participants are\n        // also piggy-backed in these \"local\" statistics. It's obvious, really,\n        // if one carefully reads the *code* (but not the docs) in\n        // UI/VideoLayout/VideoLayout.js#updateLocalConnectionStats in\n        // jitsi-meet\n        // TODO: We should keep track of the remote resolution in _remoteStats,\n        // and notify about changes via separate events.\n        conference.statistics.addConnectionStatsListener(\n            this._updateLocalStats.bind(this));\n\n        // Save the last time we were unmuted.\n        conference.on(\n            ConferenceEvents.TRACK_MUTE_CHANGED,\n            track => {\n                if (track.isVideoTrack()) {\n                    if (track.isMuted()) {\n                        this._timeVideoUnmuted = -1;\n                    } else {\n                        this._maybeUpdateUnmuteTime();\n                    }\n                }\n            });\n        conference.on(\n            ConferenceEvents.TRACK_ADDED,\n            track => {\n                if (track.isVideoTrack() && !track.isMuted()) {\n                    this._maybeUpdateUnmuteTime();\n                }\n            });\n\n        conference.on(\n            ConferenceEvents.SERVER_REGION_CHANGED,\n            serverRegion => {\n                this._localStats.serverRegion = serverRegion;\n            });\n\n        conference.on(\n            ConferenceEvents.PROPERTIES_CHANGED,\n            properties => {\n                this._localStats.bridgeCount\n                    = Number((properties || {})['bridge-count']);\n            }\n        );\n    }\n\n    /**\n     * Sets _timeVideoUnmuted if it was previously unset. If it was already set,\n     * doesn't change it.\n     */\n    _maybeUpdateUnmuteTime() {\n        if (this._timeVideoUnmuted < 0) {\n            this._timeVideoUnmuted = window.performance.now();\n        }\n    }\n\n    /**\n     * Calculates a new \"connection quality\" value.\n     * @param videoType {VideoType} the type of the video source (camera or\n     * a screen capture).\n     * @param isMuted {boolean} whether the local video is muted.\n     * @param resolutionName {Resolution} the input resolution used by the\n     * camera.\n     * @returns {*} the newly calculated connection quality.\n     */\n    _calculateConnectionQuality(videoType, isMuted, resolutionName) {\n\n        // resolutionName is an index into Resolutions (where \"720\" is\n        // \"1280x720\" and \"960\" is \"960x720\" ...).\n        const resolution = Resolutions[resolutionName];\n\n        let quality = 100;\n        let packetLoss;\n\n        // TODO: take into account packet loss for received streams\n\n        if (this._localStats.packetLoss) {\n            packetLoss = this._localStats.packetLoss.upload;\n\n            // Ugly Hack Alert (UHA):\n            // The packet loss for the upload direction is calculated based on\n            // incoming RTCP Receiver Reports. Since we don't have RTCP\n            // termination for audio, these reports come from the actual\n            // receivers in the conference and therefore the reported packet\n            // loss includes loss from the bridge to the receiver.\n            // When we are sending video this effect is small, because the\n            // number of video packets is much larger than the number of audio\n            // packets (and our calculation is based on the total number of\n            // received and lost packets).\n            // When video is muted, however, the effect might be significant,\n            // but we don't know what it is. We do know that it is positive, so\n            // as a temporary solution, until RTCP termination is implemented\n            // for the audio streams, we relax the packet loss checks here.\n            if (isMuted) {\n                packetLoss *= 0.5;\n            }\n        }\n\n        if (isMuted || !resolution || videoType === VideoType.DESKTOP\n            || this._timeIceConnected < 0\n            || this._timeVideoUnmuted < 0) {\n\n            // Calculate a value based on packet loss only.\n            if (packetLoss === undefined) {\n                logger.error('Cannot calculate connection quality, unknown '\n                    + 'packet loss.');\n                quality = 100;\n            } else if (packetLoss <= 2) {\n                quality = 100; // Full 5 bars.\n            } else if (packetLoss <= 4) {\n                quality = 70; // 4 bars\n            } else if (packetLoss <= 6) {\n                quality = 50; // 3 bars\n            } else if (packetLoss <= 8) {\n                quality = 30; // 2 bars\n            } else if (packetLoss <= 12) {\n                quality = 10; // 1 bars\n            } else {\n                quality = 0; // Still 1 bar, but slower climb-up.\n            }\n        } else {\n            // Calculate a value based on the sending bitrate.\n\n            // Figure out if simulcast is in use\n            const activeTPC = this._conference.getActivePeerConnection();\n            const isSimulcastOn\n                = Boolean(activeTPC && activeTPC.isSimulcastOn());\n\n            const newVideoBitrateCap\n                = activeTPC && activeTPC.bandwidthLimiter\n                && activeTPC.bandwidthLimiter.getBandwidthLimit('video');\n\n            // If we had a cap set but there isn't one now, then it has\n            // just been 'lifted', so we should treat this like a new\n            // ramp up.\n            if (!newVideoBitrateCap && videoBitrateCap) {\n                this._timeLastBwCapRemoved = window.performance.now();\n\n                // Set the start bitrate to whatever we were just capped to\n                startBitrate = videoBitrateCap;\n            }\n            videoBitrateCap = newVideoBitrateCap;\n\n            // time since sending of video was enabled.\n            const millisSinceStart = window.performance.now()\n                - Math.max(this._timeVideoUnmuted,\n                    this._timeIceConnected,\n                    this._timeLastBwCapRemoved);\n\n            // expected sending bitrate in perfect conditions\n            let target\n                = getTarget(isSimulcastOn, resolution, millisSinceStart);\n\n            target = Math.min(0.9 * target, MAX_TARGET_BITRATE);\n\n            if (videoBitrateCap) {\n                target = Math.min(target, videoBitrateCap);\n            }\n\n            quality = 100 * this._localStats.bitrate.upload / target;\n\n            // Whatever the bitrate, drop early if there is significant loss\n            if (packetLoss && packetLoss >= 10) {\n                quality = Math.min(quality, 30);\n            }\n        }\n\n        // Make sure that the quality doesn't climb quickly\n        if (this._lastConnectionQualityUpdate > 0) {\n            const maxIncreasePerSecond = 2;\n            const prevConnectionQuality = this._localStats.connectionQuality;\n            const diffSeconds\n                = (window.performance.now() - this._lastConnectionQualityUpdate)\n                    / 1000;\n\n            quality\n                = Math.min(\n                    quality,\n                    prevConnectionQuality\n                        + (diffSeconds * maxIncreasePerSecond));\n        }\n\n        return Math.min(100, quality);\n    }\n\n    /**\n     * Updates the localConnectionQuality value\n     * @param values {number} the new value. Should be in [0, 100].\n     */\n    _updateLocalConnectionQuality(value) {\n        this._localStats.connectionQuality = value;\n        this._lastConnectionQualityUpdate = window.performance.now();\n    }\n\n    /**\n     * Broadcasts the local statistics to all other participants in the\n     * conference.\n     */\n    _broadcastLocalStats() {\n        // Send only the data that remote participants care about.\n        const data = {\n            bitrate: this._localStats.bitrate,\n            packetLoss: this._localStats.packetLoss,\n            connectionQuality: this._localStats.connectionQuality,\n            jvbRTT: this._localStats.jvbRTT,\n            serverRegion: this._localStats.serverRegion,\n            avgAudioLevels: this._localStats.localAvgAudioLevels\n        };\n\n        try {\n            this._conference.broadcastEndpointMessage({\n                type: STATS_MESSAGE_TYPE,\n                values: data });\n        } catch (e) {\n            // We often hit this in the beginning of a call, before the data\n            // channel is ready. It is not a big problem, because we will\n            // send the statistics again after a few seconds, and the error is\n            // already logged elsewhere. So just ignore it.\n\n            // let errorMsg = \"Failed to broadcast local stats\";\n            // logger.error(errorMsg, e);\n            // GlobalOnErrorHandler.callErrorHandler(\n            //    new Error(errorMsg + \": \" + e));\n        }\n    }\n\n    /**\n     * Updates the local statistics\n     * @param {TraceablePeerConnection} tpc the peerconnection which emitted\n     * the stats\n     * @param data new statistics\n     */\n    _updateLocalStats(tpc, data) {\n        // Update jvbRTT\n        if (!tpc.isP2P) {\n            const jvbRTT\n                = data.transport\n                    && data.transport.length && data.transport[0].rtt;\n\n            this._localStats.jvbRTT = jvbRTT ? jvbRTT : undefined;\n        }\n\n        // Do not continue with processing of other stats if they do not\n        // originate from the active peerconnection\n        if (tpc !== this._conference.getActivePeerConnection()) {\n            return;\n        }\n\n        let key;\n        const updateLocalConnectionQuality\n            = !this._conference.isConnectionInterrupted();\n        const localVideoTrack\n            = this._conference.getLocalVideoTrack();\n        const videoType\n            = localVideoTrack ? localVideoTrack.videoType : undefined;\n        const isMuted = localVideoTrack ? localVideoTrack.isMuted() : true;\n        const resolution = localVideoTrack ? localVideoTrack.resolution : null;\n\n        if (!isMuted) {\n            this._maybeUpdateUnmuteTime();\n        }\n\n        // Copy the fields already in 'data'.\n        for (key in data) {\n            if (data.hasOwnProperty(key)) {\n                this._localStats[key] = data[key];\n            }\n        }\n\n        // And re-calculate the connectionQuality field.\n        if (updateLocalConnectionQuality) {\n            this._updateLocalConnectionQuality(\n                this._calculateConnectionQuality(\n                    videoType,\n                    isMuted,\n                    resolution));\n        }\n\n        this.eventEmitter.emit(\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n            this._localStats);\n        this._broadcastLocalStats();\n    }\n\n    /**\n     * Updates remote statistics\n     * @param id the id of the remote participant\n     * @param data the statistics received\n     */\n    _updateRemoteStats(id, data) {\n        // Use only the fields we need\n        this._remoteStats[id] = {\n            bitrate: data.bitrate,\n            packetLoss: data.packetLoss,\n            connectionQuality: data.connectionQuality,\n            jvbRTT: data.jvbRTT,\n            serverRegion: data.serverRegion,\n            avgAudioLevels: data.avgAudioLevels\n        };\n\n        this.eventEmitter.emit(\n            ConnectionQualityEvents.REMOTE_STATS_UPDATED,\n            id,\n            this._remoteStats[id]);\n    }\n\n    /**\n     * Returns the local statistics.\n     * Exported only for use in jitsi-meet-torture.\n     */\n    getStats() {\n        return this._localStats;\n    }\n}\n","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\n\nconst logger = getLogger(__filename);\n\n/**\n * A delayed ICE failed notification which is triggered only if the ICE\n * connection does not recover soon after or before the XMPP connection is\n * restored (if it was ever broken). If ICE fails while the XMPP connection is\n * not broken then the notifications will be sent after 2 seconds delay. This\n * extra delay is not intentional just a side effect of the code.\n * NOTE that this delayed task can only be used if PING is supported by the XMPP\n * server.\n */\nexport default class IceFailedNotification {\n    /**\n     * Creates new {@code DelayedIceFailed} task.\n     * @param {JitsiConference} conference\n     */\n    constructor(conference) {\n        this._conference = conference;\n    }\n\n    /**\n     * Starts the task.\n     * @param {JingleSessionPC} session - the JVB Jingle session.\n     */\n    start(session) {\n        // The 65 seconds are greater than the default Prosody's BOSH\n        // timeout of 60. This gives some time for the XMPP connection\n        // to recover.\n        this._conference.xmpp.ping(65000).then(\n            () => {\n                if (this._canceled) {\n                    return;\n                }\n\n                if (this._conference.isJvbConnectionInterrupted) {\n                    this._iceFailedTimeout = window.setTimeout(() => {\n                        logger.info(\n                            'Sending ICE failed'\n                            + ' - the connection has not recovered');\n                        this._iceFailedTimeout = undefined;\n                        session.sendIceFailedNotification();\n                    }, 2000);\n                } else {\n                    logger.info(\n                        'ICE connection restored - not sending ICE failed');\n                }\n            },\n            error => {\n                logger.error(\n                    'PING error/timeout - not sending ICE failed', error);\n            });\n    }\n\n    /**\n     * Cancels the task.\n     */\n    cancel() {\n        this._canceled = true;\n        if (this._iceFailedTimeout) {\n            window.clearTimeout(this._iceFailedTimeout);\n        }\n    }\n}\n","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport browser from '../browser';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport Statistics from '../statistics/statistics';\nimport { createParticipantConnectionStatusEvent } from '../../service/statistics/AnalyticsEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * Default value of 500 milliseconds for\n * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\n *\n * @type {number}\n */\nconst DEFAULT_NOT_IN_LAST_N_TIMEOUT = 500;\n\n/**\n * Default value of 2000 milliseconds for\n * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\n *\n * @type {number}\n */\nconst DEFAULT_RTC_MUTE_TIMEOUT = 10000;\n\n/**\n * The time to wait a track to be restored. Track which was out of lastN\n * should be inactive and when entering lastN it becomes restoring and when\n * data is received from bridge it will become active, but if no data is\n * received for some time we set status of that participant connection to\n * interrupted.\n * @type {number}\n */\nconst DEFAULT_RESTORING_TIMEOUT = 10000;\n\n/**\n * Participant connection statuses.\n *\n * @type {{\n *      ACTIVE: string,\n *      INACTIVE: string,\n *      INTERRUPTED: string,\n *      RESTORING: string\n * }}\n */\nexport const ParticipantConnectionStatus = {\n    /**\n     * Status indicating that connection is currently active.\n     */\n    ACTIVE: 'active',\n\n    /**\n     * Status indicating that connection is currently inactive.\n     * Inactive means the connection was stopped on purpose from the bridge,\n     * like exiting lastN or adaptivity decided to drop video because of not\n     * enough bandwidth.\n     */\n    INACTIVE: 'inactive',\n\n    /**\n     * Status indicating that connection is currently interrupted.\n     */\n    INTERRUPTED: 'interrupted',\n\n    /**\n     * Status indicating that connection is currently restoring.\n     */\n    RESTORING: 'restoring'\n};\n\n/**\n * Class is responsible for emitting\n * JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED events.\n */\nexport default class ParticipantConnectionStatusHandler {\n    /* eslint-disable max-params*/\n    /**\n     * Calculates the new {@link ParticipantConnectionStatus} based on\n     * the values given for some specific remote user. It is assumed that\n     * the conference is currently in the JVB mode (in contrary to the P2P mode)\n     * @param {boolean} isConnectionActiveByJvb true if the JVB did not get any\n     * data from the user for the last 15 seconds.\n     * @param {boolean} isInLastN indicates whether the user is in the last N\n     * set. When set to false it means that JVB is not sending any video for\n     * the user.\n     * @param {boolean} isRestoringTimedout if true it means that the user has\n     * been outside of last N too long to be considered\n     * {@link ParticipantConnectionStatus.RESTORING}.\n     * @param {boolean} isVideoMuted true if the user is video muted and we\n     * should not expect to receive any video.\n     * @param {boolean} isVideoTrackFrozen if the current browser support video\n     * frozen detection then it will be set to true when the video track is\n     * frozen. If the current browser does not support frozen detection the it's\n     * always false.\n     * @return {ParticipantConnectionStatus} the new connection status for\n     * the user for whom the values above were provided.\n     * @private\n     */\n    static _getNewStateForJvbMode(\n            isConnectionActiveByJvb,\n            isInLastN,\n            isRestoringTimedout,\n            isVideoMuted,\n            isVideoTrackFrozen) {\n        if (!isConnectionActiveByJvb) {\n            // when there is a connection problem signaled from jvb\n            // it means no media was flowing for at least 15secs, so both audio\n            // and video are most likely interrupted\n            return ParticipantConnectionStatus.INTERRUPTED;\n        } else if (isVideoMuted) {\n            // If the connection is active according to JVB and the user is\n            // video muted there is no way for the connection to be inactive,\n            // because the detection logic below only makes sense for video.\n            return ParticipantConnectionStatus.ACTIVE;\n        }\n\n        // Logic when isVideoTrackFrozen is supported\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\n            if (!isVideoTrackFrozen) {\n                // If the video is playing we're good\n                return ParticipantConnectionStatus.ACTIVE;\n            } else if (isInLastN) {\n                return isRestoringTimedout\n                    ? ParticipantConnectionStatus.INTERRUPTED\n                    : ParticipantConnectionStatus.RESTORING;\n            }\n\n            return ParticipantConnectionStatus.INACTIVE;\n        }\n\n        // Because this browser is incapable of detecting frozen video we must\n        // rely on the lastN value\n        return isInLastN\n            ? ParticipantConnectionStatus.ACTIVE\n            : ParticipantConnectionStatus.INACTIVE;\n    }\n\n    /* eslint-enable max-params*/\n\n    /**\n     * In P2P mode we don't care about any values coming from the JVB and\n     * the connection status can be only active or interrupted.\n     * @param {boolean} isVideoMuted the user if video muted\n     * @param {boolean} isVideoTrackFrozen true if the video track for\n     * the remote user is currently frozen. If the current browser does not\n     * support video frozen detection then it's always false.\n     * @return {ParticipantConnectionStatus}\n     * @private\n     */\n    static _getNewStateForP2PMode(isVideoMuted, isVideoTrackFrozen) {\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\n            // There's no way to detect problems in P2P when there's no video\n            // track frozen detection...\n            return ParticipantConnectionStatus.ACTIVE;\n        }\n\n        return isVideoMuted || !isVideoTrackFrozen\n            ? ParticipantConnectionStatus.ACTIVE\n            : ParticipantConnectionStatus.INTERRUPTED;\n    }\n\n    /**\n     * Creates new instance of <tt>ParticipantConnectionStatus</tt>.\n     *\n     * @constructor\n     * @param {RTC} rtc the RTC service instance\n     * @param {JitsiConference} conference parent conference instance\n     * @param {Object} options\n     * @param {number} [options.rtcMuteTimeout=2000] custom value for\n     * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\n     * @param {number} [options.outOfLastNTimeout=500] custom value for\n     * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\n     */\n    constructor(rtc, conference, options) {\n        this.rtc = rtc;\n        this.conference = conference;\n\n        /**\n         * A map of the \"endpoint ID\"(which corresponds to the resource part\n         * of MUC JID(nickname)) to the timeout callback IDs scheduled using\n         * window.setTimeout.\n         * @type {Object.<string, number>}\n         */\n        this.trackTimers = {};\n\n        /**\n         * This map holds the endpoint connection status received from the JVB\n         * (as it might be different than the one stored in JitsiParticipant).\n         * Required for getting back in sync when remote video track is removed.\n         * @type {Object.<string, boolean>}\n         */\n        this.connStatusFromJvb = { };\n\n        /**\n         * If video track frozen detection through RTC mute event is supported,\n         * we wait some time until video track is considered frozen. But because\n         * when the user falls out of last N it is expected for the video to\n         * freeze this timeout must be significantly reduced in \"out of last N\"\n         * case.\n         *\n         * Basically this value is used instead of {@link rtcMuteTimeout} when\n         * user is not in last N.\n         * @type {number}\n         */\n        this.outOfLastNTimeout\n            = typeof options.outOfLastNTimeout === 'number'\n                ? options.outOfLastNTimeout : DEFAULT_NOT_IN_LAST_N_TIMEOUT;\n\n        /**\n         * How long we're going to wait after the RTC video track muted event\n         * for the corresponding signalling mute event, before the connection\n         * interrupted is fired. The default value is\n         * {@link DEFAULT_RTC_MUTE_TIMEOUT}.\n         *\n         * @type {number} amount of time in milliseconds\n         */\n        this.rtcMuteTimeout\n            = typeof options.rtcMuteTimeout === 'number'\n                ? options.rtcMuteTimeout : DEFAULT_RTC_MUTE_TIMEOUT;\n\n        /**\n         * This map holds a timestamp indicating  when participant's video track\n         * was RTC muted (it is assumed that each participant can have only 1\n         * video track at a time). The purpose of storing the timestamp is to\n         * avoid the transition to disconnected status in case of legitimate\n         * video mute operation where the signalling video muted event can\n         * arrive shortly after RTC muted event.\n         *\n         * The key is participant's ID which is the same as endpoint id in\n         * the Colibri conference allocated on the JVB.\n         *\n         * The value is a timestamp measured in milliseconds obtained with\n         * <tt>Date.now()</tt>.\n         *\n         * FIXME merge this logic with NO_DATA_FROM_SOURCE event\n         *       implemented in JitsiLocalTrack by extending the event to\n         *       the remote track and allowing to set different timeout for\n         *       local and remote tracks.\n         *\n         * @type {Object.<string, number>}\n         */\n        this.rtcMutedTimestamp = { };\n        logger.info(`RtcMuteTimeout set to: ${this.rtcMuteTimeout}`);\n\n        /**\n         * This map holds the timestamps indicating when participant's video\n         * entered lastN set. Participants entering lastN will have connection\n         * status restoring and when we start receiving video will become\n         * active, but if video is not received for certain time\n         * {@link DEFAULT_RESTORING_TIMEOUT} that participant connection status\n         * will become interrupted.\n         *\n         * @type {Map<string, number>}\n         */\n        this.enteredLastNTimestamp = new Map();\n\n        /**\n         * A map of the \"endpoint ID\"(which corresponds to the resource part\n         * of MUC JID(nickname)) to the restoring timeout callback IDs\n         * scheduled using window.setTimeout.\n         *\n         * @type {Map<string, number>}\n         */\n        this.restoringTimers = new Map();\n\n        /**\n         * A map that holds the current connection status (along with all the internal events that happen\n         * while in that state).\n         *\n         * The goal is to send this information to the analytics backend for post-mortem analysis.\n         */\n        this.connectionStatusMap = new Map();\n    }\n\n    /**\n     * Gets the video frozen timeout for given user.\n     * @param {string} id endpoint/participant ID\n     * @return {number} how long are we going to wait since RTC video muted\n     * even, before a video track is considered frozen.\n     * @private\n     */\n    _getVideoFrozenTimeout(id) {\n        return this.rtc.isInLastN(id)\n            ? this.rtcMuteTimeout : this.outOfLastNTimeout;\n    }\n\n    /**\n     * Initializes <tt>ParticipantConnectionStatus</tt> and bind required event\n     * listeners.\n     */\n    init() {\n\n        this._onEndpointConnStatusChanged\n            = this.onEndpointConnStatusChanged.bind(this);\n\n        this.rtc.addListener(\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\n            this._onEndpointConnStatusChanged);\n\n        // Handles P2P status changes\n        this._onP2PStatus = this.refreshConnectionStatusForAll.bind(this);\n        this.conference.on(JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\n\n        // Used to send analytics events for the participant that left the call.\n        this._onUserLeft = this.onUserLeft.bind(this);\n        this.conference.on(JitsiConferenceEvents.USER_LEFT, this._onUserLeft);\n\n        // On some browsers MediaStreamTrack trigger \"onmute\"/\"onunmute\"\n        // events for video type tracks when they stop receiving data which is\n        // often a sign that remote user is having connectivity issues\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\n\n            this._onTrackRtcMuted = this.onTrackRtcMuted.bind(this);\n            this.rtc.addListener(\n                RTCEvents.REMOTE_TRACK_MUTE, this._onTrackRtcMuted);\n\n            this._onTrackRtcUnmuted = this.onTrackRtcUnmuted.bind(this);\n            this.rtc.addListener(\n                RTCEvents.REMOTE_TRACK_UNMUTE, this._onTrackRtcUnmuted);\n\n            // Track added/removed listeners are used to bind \"mute\"/\"unmute\"\n            // event handlers\n            this._onRemoteTrackAdded = this.onRemoteTrackAdded.bind(this);\n            this.conference.on(\n                JitsiConferenceEvents.TRACK_ADDED,\n                this._onRemoteTrackAdded);\n\n            this._onRemoteTrackRemoved = this.onRemoteTrackRemoved.bind(this);\n            this.conference.on(\n                JitsiConferenceEvents.TRACK_REMOVED,\n                this._onRemoteTrackRemoved);\n\n            // Listened which will be bound to JitsiRemoteTrack to listen for\n            // signalling mute/unmute events.\n            this._onSignallingMuteChanged\n                = this.onSignallingMuteChanged.bind(this);\n\n            // Used to send an analytics event when the video type changes.\n            this._onTrackVideoTypeChanged\n                = this.onTrackVideoTypeChanged.bind(this);\n        }\n\n        this._onLastNChanged = this._onLastNChanged.bind(this);\n        this.conference.on(\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\n            this._onLastNChanged);\n\n        this._onLastNValueChanged\n            = this.refreshConnectionStatusForAll.bind(this);\n        this.rtc.on(\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\n    }\n\n    /**\n     * Removes all event listeners and disposes of all resources held by this\n     * instance.\n     */\n    dispose() {\n\n        this.rtc.removeListener(\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\n            this._onEndpointConnStatusChanged);\n\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\n            this.rtc.removeListener(\n                RTCEvents.REMOTE_TRACK_MUTE,\n                this._onTrackRtcMuted);\n            this.rtc.removeListener(\n                RTCEvents.REMOTE_TRACK_UNMUTE,\n                this._onTrackRtcUnmuted);\n\n            this.conference.off(\n                JitsiConferenceEvents.TRACK_ADDED,\n                this._onRemoteTrackAdded);\n            this.conference.off(\n                JitsiConferenceEvents.TRACK_REMOVED,\n                this._onRemoteTrackRemoved);\n        }\n\n        this.conference.off(\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\n            this._onLastNChanged);\n\n        this.rtc.removeListener(\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\n\n        this.conference.off(\n            JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\n\n        this.conference.off(\n            JitsiConferenceEvents.USER_LEFT, this._onUserLeft);\n\n        const participantIds = Object.keys(this.trackTimers);\n\n        for (const participantId of participantIds) {\n            this.clearTimeout(participantId);\n            this.clearRtcMutedTimestamp(participantId);\n        }\n\n        for (const id in this.connectionStatusMap) {\n            if (this.connectionStatusMap.hasOwnProperty(id)) {\n                this.onUserLeft(id);\n            }\n        }\n\n        // Clear RTC connection status cache\n        this.connStatusFromJvb = {};\n    }\n\n    /**\n     * Handles RTCEvents.ENDPOINT_CONN_STATUS_CHANGED triggered when we receive\n     * notification over the data channel from the bridge about endpoint's\n     * connection status update.\n     * @param {string} endpointId - The endpoint ID(MUC nickname/resource JID).\n     * @param {boolean} isActive - true if the connection is OK or false otherwise.\n     */\n    onEndpointConnStatusChanged(endpointId, isActive) {\n\n        logger.debug(\n            `Detector RTCEvents.ENDPOINT_CONN_STATUS_CHANGED(${Date.now()}): ${\n                endpointId}: ${isActive}`);\n\n        // Filter out events for the local JID for now\n        if (endpointId !== this.conference.myUserId()) {\n            // Store the status received over the data channels\n            this.connStatusFromJvb[endpointId] = isActive;\n            this.figureOutConnectionStatus(endpointId);\n        }\n    }\n\n    /**\n     * Changes connection status.\n     * @param {JitsiParticipant} participant\n     * @param newStatus\n     */\n    _changeConnectionStatus(participant, newStatus) {\n        if (participant.getConnectionStatus() !== newStatus) {\n\n            const endpointId = participant.getId();\n\n            participant._setConnectionStatus(newStatus);\n\n            logger.debug(\n                `Emit endpoint conn status(${Date.now()}) ${endpointId}: ${\n                    newStatus}`);\n\n            // Log the event on CallStats\n            Statistics.sendLog(\n                JSON.stringify({\n                    id: 'peer.conn.status',\n                    participant: endpointId,\n                    status: newStatus\n                }));\n\n\n            this.conference.eventEmitter.emit(\n                JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED,\n                endpointId, newStatus);\n        }\n    }\n\n    /**\n     * Reset the postponed \"connection interrupted\" event which was previously\n     * scheduled as a timeout on RTC 'onmute' event.\n     *\n     * @param {string} participantId - The participant for which the \"connection\n     * interrupted\" timeout was scheduled.\n     */\n    clearTimeout(participantId) {\n        if (this.trackTimers[participantId]) {\n            window.clearTimeout(this.trackTimers[participantId]);\n            this.trackTimers[participantId] = null;\n        }\n    }\n\n    /**\n     * Clears the timestamp of the RTC muted event for participant's video track\n     * @param {string} participantId the id of the conference participant which\n     * is the same as the Colibri endpoint ID of the video channel allocated for\n     * the user on the videobridge.\n     */\n    clearRtcMutedTimestamp(participantId) {\n        this.rtcMutedTimestamp[participantId] = null;\n    }\n\n    /**\n     * Bind signalling mute event listeners for video {JitsiRemoteTrack} when\n     * a new one is added to the conference.\n     *\n     * @param {JitsiTrack} remoteTrack - The {JitsiTrack} which is being added to\n     * the conference.\n     */\n    onRemoteTrackAdded(remoteTrack) {\n        if (!remoteTrack.isLocal()\n                && remoteTrack.getType() === MediaType.VIDEO) {\n\n            logger.debug(\n                `Detector on remote track added for: ${\n                    remoteTrack.getParticipantId()}`);\n\n            remoteTrack.on(\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\n                this._onSignallingMuteChanged);\n            remoteTrack.on(\n                JitsiTrackEvents.TRACK_VIDEOTYPE_CHANGED,\n                videoType => this._onTrackVideoTypeChanged(remoteTrack, videoType));\n        }\n    }\n\n    /**\n     * Removes all event listeners bound to the remote video track and clears\n     * any related timeouts.\n     *\n     * @param {JitsiRemoteTrack} remoteTrack - The remote track which is being\n     * removed from the conference.\n     */\n    onRemoteTrackRemoved(remoteTrack) {\n        if (!remoteTrack.isLocal()\n                && remoteTrack.getType() === MediaType.VIDEO) {\n\n            const endpointId = remoteTrack.getParticipantId();\n\n            logger.debug(`Detector on remote track removed: ${endpointId}`);\n\n            remoteTrack.off(\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\n                this._onSignallingMuteChanged);\n\n            this.clearTimeout(endpointId);\n            this.clearRtcMutedTimestamp(endpointId);\n\n            this.figureOutConnectionStatus(endpointId);\n        }\n    }\n\n    /**\n     * Checks if given participant's video is considered frozen.\n     * @param {JitsiParticipant} participant - The participant.\n     * @return {boolean} <tt>true</tt> if the video has frozen for given\n     * participant or <tt>false</tt> when it's either not considered frozen\n     * (yet) or if freeze detection is not supported by the current browser.\n     *\n     * FIXME merge this logic with NO_DATA_FROM_SOURCE event\n     *       implemented in JitsiLocalTrack by extending the event to\n     *       the remote track and allowing to set different timeout for\n     *       local and remote tracks.\n     *\n     */\n    isVideoTrackFrozen(participant) {\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\n            return false;\n        }\n\n        const id = participant.getId();\n        const hasAnyVideoRTCMuted = participant.hasAnyVideoTrackWebRTCMuted();\n        const rtcMutedTimestamp = this.rtcMutedTimestamp[id];\n        const timeout = this._getVideoFrozenTimeout(id);\n\n        return hasAnyVideoRTCMuted\n            && typeof rtcMutedTimestamp === 'number'\n            && (Date.now() - rtcMutedTimestamp) >= timeout;\n    }\n\n    /**\n     * Goes over every participant and updates connectivity status.\n     * Should be called when a parameter which affects all of the participants\n     * is changed (P2P for example).\n     */\n    refreshConnectionStatusForAll() {\n        const participants = this.conference.getParticipants();\n\n        for (const participant of participants) {\n            this.figureOutConnectionStatus(participant.getId());\n        }\n    }\n\n    /**\n     * Figures out (and updates) the current connectivity status for\n     * the participant identified by the given id.\n     *\n     * @param {string} id - The participant's id (MUC nickname or Colibri endpoint ID).\n     */\n    figureOutConnectionStatus(id) {\n        const participant = this.conference.getParticipantById(id);\n\n        if (!participant) {\n            // Probably the participant is no longer in the conference\n            // (at the time of writing this code, participant is\n            // detached from the conference and TRACK_REMOVED events are\n            // fired),\n            // so we don't care, but let's print a log message for debugging purposes.\n            logger.debug(`figure out conn status - no participant for: ${id}`);\n\n            return;\n        }\n\n        const inP2PMode = this.conference.isP2PActive();\n        const isRestoringTimedOut = this._isRestoringTimedout(id);\n        const audioOnlyMode = this.rtc.getLastN() === 0;\n\n        // NOTE Overriding videoMuted to true for audioOnlyMode should disable\n        // any detection based on video playback or the last N.\n        const isVideoMuted = participant.isVideoMuted() || audioOnlyMode;\n        const isVideoTrackFrozen = this.isVideoTrackFrozen(participant);\n        const isInLastN = this.rtc.isInLastN(id);\n        let isConnActiveByJvb = this.connStatusFromJvb[id];\n\n        if (typeof isConnActiveByJvb !== 'boolean') {\n            // If no status was received from the JVB it means that it's active\n            // (the bridge does not send notification unless there is a problem)\n            logger.debug('Assuming connection active by JVB - no notification');\n            isConnActiveByJvb = true;\n        }\n\n        const newState\n            = inP2PMode\n                ? ParticipantConnectionStatusHandler._getNewStateForP2PMode(\n                    isVideoMuted,\n                    isVideoTrackFrozen)\n                : ParticipantConnectionStatusHandler._getNewStateForJvbMode(\n                    isConnActiveByJvb,\n                    isInLastN,\n                    isRestoringTimedOut,\n                    isVideoMuted,\n                    isVideoTrackFrozen);\n\n        // if the new state is not restoring clear timers and timestamps\n        // that we use to track the restoring state\n        if (newState !== ParticipantConnectionStatus.RESTORING) {\n            this._clearRestoringTimer(id);\n        }\n\n        logger.debug(\n            `Figure out conn status for ${id}, is video muted: ${\n                isVideoMuted} is active(jvb): ${\n                isConnActiveByJvb} video track frozen: ${\n                isVideoTrackFrozen} p2p mode: ${\n                inP2PMode} is in last N: ${\n                isInLastN} currentStatus => newStatus: ${\n                participant.getConnectionStatus()} => ${newState}`);\n\n        const oldConnectionStatus = this.connectionStatusMap[id] || {};\n\n        // Send an analytics event (guard on either the p2p flag or the connection status has changed\n        // since the last time this code block run).\n        if (!('p2p' in oldConnectionStatus)\n            || !('connectionStatus' in oldConnectionStatus)\n            || oldConnectionStatus.p2p !== inP2PMode\n            || oldConnectionStatus.connectionStatus !== newState) {\n\n            const nowMs = Date.now();\n\n            this.maybeSendParticipantConnectionStatusEvent(id, nowMs);\n\n            this.connectionStatusMap[id] = {\n                ...oldConnectionStatus,\n                connectionStatus: newState,\n                p2p: inP2PMode,\n                startedMs: nowMs\n            };\n\n            // sometimes (always?) we're late to hook the TRACK_VIDEOTYPE_CHANGED event and the\n            // video type is not in oldConnectionStatus.\n            if (!('videoType' in this.connectionStatusMap[id])) {\n                const videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\n\n                if (Array.isArray(videoTracks) && videoTracks.length !== 0) {\n                    this.connectionStatusMap[id].videoType = videoTracks[0].videoType;\n                }\n            }\n        }\n        this._changeConnectionStatus(participant, newState);\n    }\n\n    /**\n     * Computes the duration of the current connection status for the participant with the specified id (i.e. 15 seconds\n     * in the INTERRUPTED state) and sends a participant connection status event.\n     * @param {string} id - The jid of the participant.\n     * @param {Number} nowMs - The current time (in millis).\n     * @returns {void}\n     */\n    maybeSendParticipantConnectionStatusEvent(id, nowMs) {\n        const participantConnectionStatus = this.connectionStatusMap[id];\n\n        if (participantConnectionStatus\n            && 'startedMs' in participantConnectionStatus\n            && 'videoType' in participantConnectionStatus\n            && 'connectionStatus' in participantConnectionStatus\n            && 'p2p' in participantConnectionStatus) {\n            participantConnectionStatus.value = nowMs - participantConnectionStatus.startedMs;\n            Statistics.sendAnalytics(\n                createParticipantConnectionStatusEvent(participantConnectionStatus));\n        }\n    }\n\n    /**\n     * On change in Last N set check all leaving and entering participants to\n     * change their corresponding statuses.\n     *\n     * @param {Array<string>} leavingLastN - The array of ids leaving lastN.\n     * @param {Array<string>} enteringLastN - The array of ids entering lastN.\n     * @private\n     */\n    _onLastNChanged(leavingLastN = [], enteringLastN = []) {\n        const now = Date.now();\n\n        logger.debug(\n            'leaving/entering lastN', leavingLastN, enteringLastN, now);\n\n        for (const id of leavingLastN) {\n            this.enteredLastNTimestamp.delete(id);\n            this._clearRestoringTimer(id);\n            this.figureOutConnectionStatus(id);\n        }\n        for (const id of enteringLastN) {\n            // store the timestamp this id is entering lastN\n            this.enteredLastNTimestamp.set(id, now);\n            this.figureOutConnectionStatus(id);\n        }\n    }\n\n    /**\n     * Clears the restoring timer for participant's video track and the\n     * timestamp for entering lastN.\n     *\n     * @param {string} participantId - The id of the conference participant which\n     * is the same as the Colibri endpoint ID of the video channel allocated for\n     * the user on the videobridge.\n     */\n    _clearRestoringTimer(participantId) {\n        const rTimer = this.restoringTimers.get(participantId);\n\n        if (rTimer) {\n            clearTimeout(rTimer);\n            this.restoringTimers.delete(participantId);\n        }\n    }\n\n    /**\n     * Checks whether a track had stayed enough in restoring state, compares\n     * current time and the time the track entered in lastN. If it hasn't\n     * timedout and there is no timer added, add new timer in order to give it\n     * more time to become active or mark it as interrupted on next check.\n     *\n     * @param {string} participantId - The id of the conference participant which\n     * is the same as the Colibri endpoint ID of the video channel allocated for\n     * the user on the videobridge.\n     * @returns {boolean} <tt>true</tt> if the track was in restoring state\n     * more than the timeout ({@link DEFAULT_RESTORING_TIMEOUT}.) in order to\n     * set its status to interrupted.\n     * @private\n     */\n    _isRestoringTimedout(participantId) {\n        const enteredLastNTimestamp\n            = this.enteredLastNTimestamp.get(participantId);\n\n        if (enteredLastNTimestamp\n            && (Date.now() - enteredLastNTimestamp)\n                >= DEFAULT_RESTORING_TIMEOUT) {\n            return true;\n        }\n\n        // still haven't reached timeout, if there is no timer scheduled,\n        // schedule one so we can track the restoring state and change it after\n        // reaching the timeout\n        const rTimer = this.restoringTimers.get(participantId);\n\n        if (!rTimer) {\n            this.restoringTimers.set(participantId, setTimeout(\n                () => this.figureOutConnectionStatus(participantId),\n                DEFAULT_RESTORING_TIMEOUT));\n        }\n\n        return false;\n    }\n\n    /**\n     * Sends a last/final participant connection status event for the participant that left the conference.\n     * @param {string} id - The id of the participant that left the conference.\n     * @returns {void}\n     */\n    onUserLeft(id) {\n        this.maybeSendParticipantConnectionStatusEvent(id, Date.now());\n        delete this.connectionStatusMap[id];\n    }\n\n    /**\n     * Handles RTC 'onmute' event for the video track.\n     *\n     * @param {JitsiRemoteTrack} track - The video track for which 'onmute' event\n     * will be processed.\n     */\n    onTrackRtcMuted(track) {\n        const participantId = track.getParticipantId();\n        const participant = this.conference.getParticipantById(participantId);\n\n        logger.debug(`Detector track RTC muted: ${participantId}`, Date.now());\n        if (!participant) {\n            logger.error(`No participant for id: ${participantId}`);\n\n            return;\n        }\n        this.rtcMutedTimestamp[participantId] = Date.now();\n        if (!participant.isVideoMuted()) {\n            // If the user is not muted according to the signalling we'll give\n            // it some time, before the connection interrupted event is\n            // triggered.\n            this.clearTimeout(participantId);\n\n            // The timeout is reduced when user is not in the last N\n            const timeout = this._getVideoFrozenTimeout(participantId);\n\n            this.trackTimers[participantId] = window.setTimeout(() => {\n                logger.debug(\n                    `Set RTC mute timeout for: ${participantId}\\\n                     of ${timeout} ms`);\n                this.clearTimeout(participantId);\n                this.figureOutConnectionStatus(participantId);\n            }, timeout);\n        }\n    }\n\n    /**\n     * Handles RTC 'onunmute' event for the video track.\n     *\n     * @param {JitsiRemoteTrack} track - The video track for which 'onunmute'\n     * event will be processed.\n     */\n    onTrackRtcUnmuted(track) {\n        const participantId = track.getParticipantId();\n\n        logger.debug(\n            `Detector track RTC unmuted: ${participantId}`, Date.now());\n\n        this.clearTimeout(participantId);\n        this.clearRtcMutedTimestamp(participantId);\n\n        this.figureOutConnectionStatus(participantId);\n    }\n\n    /**\n     * Here the signalling \"mute\"/\"unmute\" events are processed.\n     *\n     * @param {JitsiRemoteTrack} track - The remote video track for which\n     * the signalling mute/unmute event will be processed.\n     */\n    onSignallingMuteChanged(track) {\n        const participantId = track.getParticipantId();\n\n        logger.debug(\n            `Detector on track signalling mute changed: ${participantId}`,\n            track.isMuted());\n\n        this.figureOutConnectionStatus(participantId);\n    }\n\n    /**\n     * Sends a participant connection status event as a result of the video type\n     * changing.\n     * @param {JitsiRemoteTrack} track - The track.\n     * @param {VideoType} type - The video type.\n     * @returns {void}\n     */\n    onTrackVideoTypeChanged(track, type) {\n        const id = track.getParticipantId();\n        const nowMs = Date.now();\n\n        this.maybeSendParticipantConnectionStatusEvent(id, nowMs);\n\n        this.connectionStatusMap[id] = {\n            ...this.connectionStatusMap[id] || {},\n            videoType: type,\n            startedMs: nowMs\n        };\n    }\n}\n","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\nimport { createE2eRttEvent } from '../../service/statistics/AnalyticsEvents';\nimport * as E2ePingEvents\n    from '../../service/e2eping/E2ePingEvents';\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport Statistics from '../statistics/statistics';\n\nconst logger = getLogger(__filename);\n\n/**\n * The 'type' of a message which designates an e2e ping request.\n * @type {string}\n */\nconst E2E_PING_REQUEST = 'e2e-ping-request';\n\n/**\n * The 'type' of a message which designates an e2e ping response.\n * @type {string}\n */\nconst E2E_PING_RESPONSE = 'e2e-ping-response';\n\n/**\n * Saves e2e ping related state for a single JitsiParticipant.\n */\nclass ParticipantWrapper {\n    /**\n     * Creates a ParticipantWrapper\n     * @param {JitsiParticipant} participant - The remote participant that this\n     * object wraps.\n     * @param {E2ePing} e2eping\n     */\n    constructor(participant, e2eping) {\n        // The JitsiParticipant\n        this.participant = participant;\n\n        // The E2ePing\n        this.e2eping = e2eping;\n\n        // Caches the ID\n        this.id = participant.getId();\n\n        // Recently sent requests\n        this.requests = {};\n\n        // The ID of the last sent request. We just increment it for each new\n        // request. Start at 1 so we can consider only thruthy values valid.\n        this.lastRequestId = 1;\n\n        this.clearIntervals = this.clearIntervals.bind(this);\n        this.sendRequest = this.sendRequest.bind(this);\n        this.handleResponse = this.handleResponse.bind(this);\n        this.maybeSendAnalytics = this.maybeSendAnalytics.bind(this);\n        this.sendAnalytics = this.sendAnalytics.bind(this);\n\n        // If the data channel was already open (this is likely a participant\n        // joining an existing conference) send a request immediately.\n        if (e2eping.isDataChannelOpen) {\n            this.sendRequest();\n        }\n\n        this.pingInterval = window.setInterval(\n            this.sendRequest, e2eping.pingIntervalMs);\n        this.analyticsInterval = window.setTimeout(\n            this.maybeSendAnalytics, this.e2eping.analyticsIntervalMs);\n    }\n\n    /**\n     * Clears the interval which sends pings.\n     * @type {*}\n     */\n    clearIntervals() {\n        if (this.pingInterval) {\n            window.clearInterval(this.pingInterval);\n        }\n        if (this.analyticsInterval) {\n            window.clearInterval(this.analyticsInterval);\n        }\n    }\n\n    /**\n     * Sends the next ping request.\n     * @type {*}\n     */\n    sendRequest() {\n        const requestId = this.lastRequestId++;\n        const requestMessage = {\n            type: E2E_PING_REQUEST,\n            id: requestId\n        };\n\n        this.e2eping.sendMessage(requestMessage, this.id);\n        this.requests[requestId] = {\n            id: requestId,\n            timeSent: window.performance.now()\n        };\n    }\n\n    /**\n     * Handles a response from this participant.\n     * @type {*}\n     */\n    handleResponse(response) {\n        const request = this.requests[response.id];\n\n        if (request) {\n            request.rtt = window.performance.now() - request.timeSent;\n            this.e2eping.eventEmitter.emit(\n                E2ePingEvents.E2E_RTT_CHANGED,\n                this.participant,\n                request.rtt);\n        }\n\n        this.maybeSendAnalytics();\n    }\n\n    /**\n     * Goes over the requests, clearing ones which we don't need anymore, and\n     * if it finds at least one request with a valid RTT in the last\n     * 'analyticsIntervalMs' then sends an analytics event.\n     * @type {*}\n     */\n    maybeSendAnalytics() {\n        const now = window.performance.now();\n\n        // The RTT we'll report is the minimum RTT measured in the last\n        // analyticsInterval\n        let rtt = Infinity;\n        let request, requestId;\n\n        // It's time to send analytics. Clean up all requests and find the\n        for (requestId in this.requests) {\n            if (this.requests.hasOwnProperty(requestId)) {\n                request = this.requests[requestId];\n\n                if (request.timeSent < now - this.e2eping.analyticsIntervalMs) {\n                    // An old request. We don't care about it anymore.\n                    delete this.requests[requestId];\n                } else if (request.rtt) {\n                    rtt = Math.min(rtt, request.rtt);\n                }\n            }\n        }\n\n        if (rtt < Infinity) {\n            this.sendAnalytics(rtt);\n        }\n    }\n\n    /**\n     * Sends an analytics event for this participant with the given RTT.\n     * @type {*}\n     */\n    sendAnalytics(rtt) {\n        Statistics.sendAnalytics(createE2eRttEvent(\n            this.id,\n            this.participant.getProperty('region'),\n            rtt));\n    }\n}\n\n/**\n * Implements end-to-end ping (from one conference participant to another) via\n * the jitsi-videobridge channel (either WebRTC data channel or web socket).\n *\n * TODO: use a broadcast message instead of individual pings to each remote\n * participant.\n *\n * This class:\n * 1. Sends periodic ping requests to all other participants in the\n * conference.\n * 2. Responds to ping requests from other participants.\n * 3. Fires events with the end-to-end RTT to each participant whenever a\n * response is received.\n * 4. Fires analytics events with the end-to-end RTT periodically.\n */\nexport default class E2ePing {\n    /**\n     * @param {JitsiConference} conference - The conference.\n     * @param {Function} sendMessage - The function to use to send a message.\n     * @param {Object} options\n     */\n    constructor(conference, options, sendMessage) {\n        this.conference = conference;\n        this.eventEmitter = conference.eventEmitter;\n        this.sendMessage = sendMessage;\n\n        // The interval at which pings will be sent (<= 0 disables sending).\n        this.pingIntervalMs = 10000;\n\n        // The interval at which analytics events will be sent.\n        this.analyticsIntervalMs = 60000;\n\n        // Maps a participant ID to its ParticipantWrapper\n        this.participants = {};\n\n        // Whether the WebRTC channel has been opened or not.\n        this.isDataChannelOpen = false;\n\n        if (options && options.e2eping) {\n            if (typeof options.e2eping.pingInterval === 'number') {\n                this.pingIntervalMs = options.e2eping.pingInterval;\n            }\n            if (typeof options.e2eping.analyticsInterval === 'number') {\n                this.analyticsIntervalMs = options.e2eping.analyticsInterval;\n            }\n\n            // We want to report at most once a ping interval.\n            if (this.analyticsIntervalMs > 0 && this.analyticsIntervalMs\n                < this.pingIntervalMs) {\n                this.analyticsIntervalMs = this.pingIntervalMs;\n            }\n        }\n        logger.info(\n            `Initializing e2e ping; pingInterval=${\n                this.pingIntervalMs}, analyticsInterval=${\n                this.analyticsIntervalMs}.`);\n\n        this.participantJoined = this.participantJoined.bind(this);\n        conference.on(\n            JitsiConferenceEvents.USER_JOINED,\n            this.participantJoined);\n\n        this.participantLeft = this.participantLeft.bind(this);\n        conference.on(\n            JitsiConferenceEvents.USER_LEFT,\n            this.participantLeft);\n\n        this.messageReceived = this.messageReceived.bind(this);\n        conference.on(\n            JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n            this.messageReceived);\n\n        this.dataChannelOpened = this.dataChannelOpened.bind(this);\n        conference.on(\n            JitsiConferenceEvents.DATA_CHANNEL_OPENED,\n            this.dataChannelOpened);\n    }\n\n    /**\n     * Notifies this instance that the communications channel has been opened\n     * and it can now send messages via sendMessage.\n     */\n    dataChannelOpened() {\n        this.isDataChannelOpen = true;\n\n        // We don't want to wait the whole interval before sending the first\n        // request, but we can't send it immediately after the participant joins\n        // either, because our data channel might not have initialized.\n        // So once the data channel initializes, send requests to everyone.\n        // Wait an additional 200ms to give a chance to the remote side (if it\n        // also just connected as is the case for the first 2 participants in a\n        // conference) to open its data channel.\n        for (const id in this.participants) {\n            if (this.participants.hasOwnProperty(id)) {\n                const participantWrapper = this.participants[id];\n\n                window.setTimeout(participantWrapper.sendRequest, 200);\n            }\n        }\n    }\n\n    /**\n     * Handles a message that was received.\n     *\n     * @param participant - The message sender.\n     * @param payload - The payload of the message.\n     */\n    messageReceived(participant, payload) {\n        // Listen to E2E PING requests and responses from other participants\n        // in the conference.\n        if (payload.type === E2E_PING_REQUEST) {\n            this.handleRequest(participant.getId(), payload);\n        } else if (payload.type === E2E_PING_RESPONSE) {\n            this.handleResponse(participant.getId(), payload);\n        }\n    }\n\n    /**\n     * Handles a participant joining the conference. Starts to send ping\n     * requests to the participant.\n     *\n     * @param {String} id - The ID of the participant.\n     * @param {JitsiParticipant} participant - The participant that joined.\n     */\n    participantJoined(id, participant) {\n        if (this.pingIntervalMs <= 0) {\n            return;\n        }\n\n        if (this.participants[id]) {\n            logger.info(\n                `Participant wrapper already exists for ${id}. Clearing.`);\n            this.participants[id].clearIntervals();\n            delete this.participants[id];\n        }\n\n        this.participants[id] = new ParticipantWrapper(participant, this);\n    }\n\n    /**\n     * Handles a participant leaving the conference. Stops sending requests.\n     *\n     * @param {String} id - The ID of the participant.\n     */\n    participantLeft(id) {\n        if (this.pingIntervalMs <= 0) {\n            return;\n        }\n\n        if (this.participants[id]) {\n            this.participants[id].clearIntervals();\n            delete this.participants[id];\n        }\n    }\n\n    /**\n     * Handles a ping request coming from another participant.\n     *\n     * @param {string} participantId - The ID of the participant who sent the\n     * request.\n     * @param {Object} request - The request.\n     */\n    handleRequest(participantId, request) {\n        // If it's a valid request, just send a response.\n        if (request && request.id) {\n            const response = {\n                type: E2E_PING_RESPONSE,\n                id: request.id\n            };\n\n            this.sendMessage(response, participantId);\n        } else {\n            logger.info(\n                `Received an invalid e2e ping request from ${participantId}.`);\n        }\n    }\n\n    /**\n     * Handles a ping response coming from another participant\n     * @param {string} participantId - The ID of the participant who sent the\n     * response.\n     * @param {Object} response - The response.\n     */\n    handleResponse(participantId, response) {\n        const participantWrapper = this.participants[participantId];\n\n        if (participantWrapper) {\n            participantWrapper.handleResponse(response);\n        }\n    }\n\n    /**\n     * Stops this E2ePing (i.e. stop sending requests).\n     */\n    stop() {\n        logger.info('Stopping e2eping');\n\n        this.conference.off(\n            JitsiConferenceEvents.USER_JOINED,\n            this.participantJoined);\n        this.conference.off(\n            JitsiConferenceEvents.USER_LEFT,\n            this.participantLeft);\n        this.conference.off(\n            JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n            this.messageReceived);\n        this.conference.off(\n            JitsiConferenceEvents.DATA_CHANNEL_OPENED,\n            this.dataChannelOpened);\n\n        for (const id in this.participants) {\n            if (this.participants.hasOwnProperty(id)) {\n                this.participants[id].clearIntervals();\n            }\n        }\n\n        this.participants = {};\n    }\n}\n\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * Emits {@link JitsiConferenceEvents.JVB121_STATUS} events based on the current\n * P2P status and the conference participants count. See the event description\n * for more info.\n */\nexport default class Jvb121EventGenerator {\n    /**\n     * Creates new <tt>Jvb121EventGenerator</tt> for the given conference.\n     * @param {JitsiConference} conference\n     */\n    constructor(conference) {\n        this._conference = conference;\n\n        /**\n         * Indicates whether it's a one to one JVB conference (<tt>true</tt>)\n         * or a multiparty (<tt>false</tt>). Will be also <tt>false</tt> if\n         * the conference is currently in the P2P mode.\n         * @type {boolean}\n         * @private\n         */\n        this._jvb121 = true;\n\n        this._conference.addEventListener(\n            JitsiConferenceEvents.USER_JOINED, () => this.evaluateStatus());\n        this._conference.addEventListener(\n            JitsiConferenceEvents.USER_LEFT, () => this.evaluateStatus());\n        this._conference.addEventListener(\n            JitsiConferenceEvents.P2P_STATUS, () => this.evaluateStatus());\n    }\n\n    /**\n     * Checks whether the JVB121 value should be updated and a new event\n     * emitted.\n     */\n    evaluateStatus() {\n        const oldStatus = this._jvb121;\n        const newStatus\n            = !this._conference.isP2PActive()\n                && this._conference.getParticipantCount() <= 2;\n\n        if (oldStatus !== newStatus) {\n            this._jvb121 = newStatus;\n            logger.debug(`JVB121 status ${oldStatus} => ${newStatus}`);\n            this._conference.eventEmitter.emit(\n                JitsiConferenceEvents.JVB121_STATUS, oldStatus, newStatus);\n        }\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport RTC from '../RTC/RTC';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nimport JingleSessionPC from '../xmpp/JingleSessionPC';\nimport { DEFAULT_STUN_SERVERS } from '../xmpp/xmpp';\n\nimport { ACTIONS } from './constants';\n\nconst logger = getLogger(__filename);\n\n/**\n * An adapter around {@code JingleSessionPC} so its logic can be re-used without\n * an XMPP connection. It is being re-used for consistency with the rest of the\n * codebase and to leverage existing peer connection event handling. Also\n * this class provides a facade to hide most of the API for\n * {@code JingleSessionPC}.\n */\nexport default class ProxyConnectionPC {\n    /**\n     * Initializes a new {@code ProxyConnectionPC} instance.\n     *\n     * @param {Object} options - Values to initialize the instance with.\n     * @param {Object} [options.iceConfig] - The {@code RTCConfiguration} to use\n     * for the peer connection.\n     * @param {boolean} [options.isInitiator] - If true, the local client should\n     * send offers. If false, the local client should send answers. Defaults to\n     * false.\n     * @param {Function} options.onRemoteStream - Callback to invoke when a\n     * remote media stream has been received through the peer connection.\n     * @param {string} options.peerJid - The jid of the remote client with which\n     * the peer connection is being establish and which should receive direct\n     * messages regarding peer connection updates.\n     * @param {boolean} [options.receiveVideo] - Whether or not the peer\n     * connection should accept incoming video streams. Defaults to false.\n     * @param {Function} options.onSendMessage - Callback to invoke when a\n     * message has to be sent (signaled) out.\n     */\n    constructor(options = {}) {\n        this._options = {\n            iceConfig: {},\n            isInitiator: false,\n            receiveAudio: false,\n            receiveVideo: false,\n            ...options\n        };\n\n        /**\n         * Instances of {@code JitsiTrack} associated with this instance of\n         * {@code ProxyConnectionPC}.\n         *\n         * @type {Array<JitsiTrack>}\n         */\n        this._tracks = [];\n\n        /**\n         * The active instance of {@code JingleSessionPC}.\n         *\n         * @type {JingleSessionPC|null}\n         */\n        this._peerConnection = null;\n\n        // Bind event handlers so they are only bound once for every instance.\n        this._onError = this._onError.bind(this);\n        this._onRemoteStream = this._onRemoteStream.bind(this);\n        this._onSendMessage = this._onSendMessage.bind(this);\n    }\n\n    /**\n     * Returns the jid of the remote peer with which this peer connection should\n     * be established with.\n     *\n     * @returns {string}\n     */\n    getPeerJid() {\n        return this._options.peerJid;\n    }\n\n    /**\n     * Updates the peer connection based on the passed in jingle.\n     *\n     * @param {Object} $jingle - An XML jingle element, wrapped in query,\n     * describing how the peer connection should be updated.\n     * @returns {void}\n     */\n    processMessage($jingle) {\n        switch ($jingle.attr('action')) {\n        case ACTIONS.ACCEPT:\n            this._onSessionAccept($jingle);\n            break;\n\n        case ACTIONS.INITIATE:\n            this._onSessionInitiate($jingle);\n            break;\n\n        case ACTIONS.TERMINATE:\n            this._onSessionTerminate($jingle);\n            break;\n\n        case ACTIONS.TRANSPORT_INFO:\n            this._onTransportInfo($jingle);\n            break;\n        }\n    }\n\n    /**\n     * Instantiates a peer connection and starts the offer/answer cycle to\n     * establish a connection with a remote peer.\n     *\n     * @param {Array<JitsiLocalTrack>} localTracks - Initial local tracks to add\n     * to add to the peer connection.\n     * @returns {void}\n     */\n    start(localTracks = []) {\n        if (this._peerConnection) {\n            return;\n        }\n\n        this._tracks = this._tracks.concat(localTracks);\n\n        this._peerConnection = this._createPeerConnection();\n\n        this._peerConnection.invite(localTracks);\n    }\n\n    /**\n     * Begins the process of disconnecting from a remote peer and cleaning up\n     * the peer connection.\n     *\n     * @returns {void}\n     */\n    stop() {\n        if (this._peerConnection) {\n            this._peerConnection.terminate();\n        }\n\n        this._onSessionTerminate();\n    }\n\n    /**\n     * Instantiates a new {@code JingleSessionPC} by stubbing out the various\n     * dependencies of {@code JingleSessionPC}.\n     *\n     * @private\n     * @returns {JingleSessionPC}\n     */\n    _createPeerConnection() {\n        /**\n         * {@code JingleSessionPC} takes in the entire jitsi-meet config.js\n         * object, which may not be accessible from the caller.\n         *\n         * @type {Object}\n         */\n        const configStub = {};\n\n        /**\n         * {@code JingleSessionPC} assumes an XMPP/Strophe connection object is\n         * passed through, which also has the jingle plugin initialized on it.\n         * This connection object is used to signal out peer connection updates\n         * via iqs, and those updates need to be piped back out to the remote\n         * peer.\n         *\n         * @type {Object}\n         */\n        const connectionStub = {\n            jingle: {\n                terminate: () => { /** no-op */ }\n            },\n            sendIQ: this._onSendMessage\n        };\n\n        /**\n         * {@code JingleSessionPC} can take in a custom ice configuration,\n         * depending on the peer connection type, peer-to-peer or other.\n         * However, {@code ProxyConnectionPC} always assume a peer-to-peer\n         * connection so the ice configuration is hard-coded with defaults.\n         *\n         * @type {Object}\n         */\n        const iceConfigStub = {\n            iceServers: DEFAULT_STUN_SERVERS,\n            ...this._options.iceConfig\n        };\n\n        /**\n         * {@code JingleSessionPC} expects an instance of\n         * {@code JitsiConference}, which has an event emitter that is used\n         * to signal various connection updates that the local client should\n         * act upon. The conference instance is not a dependency of a proxy\n         * connection, but the emitted events can be relevant to the proxy\n         * connection so the event emitter is stubbed.\n         *\n         * @param {string} event - The constant for the event type.\n         * @type {Function}\n         * @returns {void}\n         */\n        const emitter = event => {\n            switch (event) {\n            case XMPPEvents.CONNECTION_ICE_FAILED:\n            case XMPPEvents.CONNECTION_FAILED:\n                this._onError(ACTIONS.CONNECTION_ERROR, event);\n                break;\n            }\n        };\n\n        /**\n         * {@code JingleSessionPC} expects an instance of\n         * {@code JitsiConference} to be passed in. {@code ProxyConnectionPC}\n         * is instantiated outside of the {@code JitsiConference}, so it must be\n         * stubbed to prevent errors.\n         *\n         * @type {Object}\n         */\n        const roomStub = {\n            addPresenceListener: () => { /** no-op */ },\n            connectionTimes: [],\n            eventEmitter: { emit: emitter },\n            getMediaPresenceInfo: () => {\n                // Errors occur if this function does not return an object\n\n                return {};\n            },\n            removePresenceListener: () => { /** no-op */ }\n        };\n\n        /**\n         * Create an instance of {@code RTC} as it is required for peer\n         * connection creation by {@code JingleSessionPC}. An existing instance\n         * of {@code RTC} from elsewhere should not be re-used because it is\n         * a stateful grouping of utilities.\n         */\n        this._rtc = new RTC(this, {});\n\n        /**\n         * Add the remote track listener here as {@code JingleSessionPC} has\n         * {@code TraceablePeerConnection} which uses {@code RTC}'s event\n         * emitter.\n         */\n        this._rtc.addListener(\n            RTCEvents.REMOTE_TRACK_ADDED,\n            this._onRemoteStream\n        );\n\n        const peerConnection = new JingleSessionPC(\n            undefined, // sid\n            undefined, // localJid\n            this._options.peerJid, // remoteJid\n            connectionStub, // connection\n            {\n                offerToReceiveAudio: this._options.receiveAudio,\n                offerToReceiveVideo: this._options.receiveVideo\n            }, // mediaConstraints\n            iceConfigStub, // iceConfig\n            true, // isP2P\n            this._options.isInitiator // isInitiator\n        );\n\n        /**\n         * An additional initialize call is necessary to properly set instance\n         * variable for calling.\n         */\n        peerConnection.initialize(roomStub, this._rtc, configStub);\n\n        return peerConnection;\n    }\n\n    /**\n     * Invoked when a connection related issue has been encountered.\n     *\n     * @param {string} errorType - The constant indicating the type of the error\n     * that occured.\n     * @param {string} details - Optional additional data about the error.\n     * @private\n     * @returns {void}\n     */\n    _onError(errorType, details = '') {\n        this._options.onError(this._options.peerJid, errorType, details);\n    }\n\n    /**\n     * Callback invoked when the peer connection has received a remote media\n     * stream.\n     *\n     * @param {JitsiRemoteTrack} jitsiRemoteTrack - The remote media stream\n     * wrapped in {@code JitsiRemoteTrack}.\n     * @private\n     * @returns {void}\n     */\n    _onRemoteStream(jitsiRemoteTrack) {\n        this._tracks.push(jitsiRemoteTrack);\n\n        this._options.onRemoteStream(jitsiRemoteTrack);\n    }\n\n    /**\n     * Callback invoked when {@code JingleSessionPC} needs to signal a message\n     * out to the remote peer.\n     *\n     * @param {XML} iq - The message to signal out.\n     * @private\n     * @returns {void}\n     */\n    _onSendMessage(iq) {\n        this._options.onSendMessage(this._options.peerJid, iq);\n    }\n\n    /**\n     * Callback invoked in response to an agreement to start a proxy connection.\n     * The passed in jingle element should contain an SDP answer to a previously\n     * sent SDP offer.\n     *\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\n     * @private\n     * @returns {void}\n     */\n    _onSessionAccept($jingle) {\n        if (!this._peerConnection) {\n            logger.error('Received an answer when no peer connection exists.');\n\n            return;\n        }\n\n        this._peerConnection.setAnswer($jingle);\n    }\n\n    /**\n     * Callback invoked in response to a request to start a proxy connection.\n     * The passed in jingle element should contain an SDP offer.\n     *\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\n     * @private\n     * @returns {void}\n     */\n    _onSessionInitiate($jingle) {\n        if (this._peerConnection) {\n            logger.error('Received an offer when an offer was already sent.');\n\n            return;\n        }\n\n        this._peerConnection = this._createPeerConnection();\n\n        this._peerConnection.acceptOffer(\n            $jingle,\n            () => { /** no-op */ },\n            () => this._onError(\n                this._options.peerJid,\n                ACTIONS.CONNECTION_ERROR,\n                'session initiate error'\n            )\n        );\n    }\n\n    /**\n     * Callback invoked in response to a request to disconnect an active proxy\n     * connection. Cleans up tracks and the peer connection.\n     *\n     * @private\n     * @returns {void}\n     */\n    _onSessionTerminate() {\n        this._tracks.forEach(track => track.dispose());\n        this._tracks = [];\n\n        if (this._peerConnection) {\n            this._peerConnection.onTerminated();\n        }\n\n        if (this._rtc) {\n            this._rtc.removeListener(\n                RTCEvents.REMOTE_TRACK_ADDED,\n                this._onRemoteStream\n            );\n\n            this._rtc.destroy();\n        }\n    }\n\n    /**\n     * Callback invoked in response to ICE candidates from the remote peer.\n     * The passed in jingle element should contain an ICE candidate.\n     *\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\n     * @private\n     * @returns {void}\n     */\n    _onTransportInfo($jingle) {\n        this._peerConnection.addIceCandidates($jingle);\n    }\n}\n","/* globals $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq } from 'strophe.js';\n\nimport * as MediaType from '../../service/RTC/MediaType';\nimport VideoType from '../../service/RTC/VideoType';\nimport RTC from '../RTC/RTC';\n\nimport ProxyConnectionPC from './ProxyConnectionPC';\nimport { ACTIONS } from './constants';\n\nconst logger = getLogger(__filename);\n\n/**\n * Instantiates a new ProxyConnectionPC and ensures only one exists at a given\n * time. Currently it assumes ProxyConnectionPC is used only for screensharing\n * and assumes IQs to be used for communication.\n */\nexport default class ProxyConnectionService {\n    /**\n     * Initializes a new {@code ProxyConnectionService} instance.\n     *\n     * @param {Object} options - Values to initialize the instance with.\n     * @param {boolean} [options.convertVideoToDesktop] - Whether or not proxied\n     * video should be returned as a desktop stream. Defaults to false.\n     * @param {Object} [options.iceConfig] - The {@code RTCConfiguration} to use\n     * for the peer connection.\n     * @param {JitsiConnection} [options.jitsiConnection] - The\n     * {@code JitsiConnection} which will be used to fetch TURN credentials for\n     * the P2P connection.\n     * @param {Function} options.onRemoteStream - Callback to invoke when a\n     * remote video stream has been received and converted to a\n     * {@code JitsiLocakTrack}. The {@code JitsiLocakTrack} will be passed in.\n     * @param {Function} options.onSendMessage - Callback to invoke when a\n     * message has to be sent (signaled) out. The arguments passed in are the\n     * jid to send the message to and the message\n     */\n    constructor(options = {}) {\n        const {\n            jitsiConnection,\n            ...otherOptions\n        } = options;\n\n        /**\n         * Holds a reference to the collection of all callbacks.\n         *\n         * @type {Object}\n         */\n        this._options = {\n            iceConfig: jitsiConnection\n                && jitsiConnection.xmpp.connection.jingle.p2pIceConfig,\n            ...otherOptions\n        };\n\n        /**\n         * The active instance of {@code ProxyConnectionService}.\n         *\n         * @type {ProxyConnectionPC|null}\n         */\n        this._peerConnection = null;\n\n        // Bind event handlers so they are only bound once for every instance.\n        this._onFatalError = this._onFatalError.bind(this);\n        this._onSendMessage = this._onSendMessage.bind(this);\n        this._onRemoteStream = this._onRemoteStream.bind(this);\n    }\n\n    /**\n     * Parses a message object regarding a proxy connection to create a new\n     * proxy connection or update and existing connection.\n     *\n     * @param {Object} message - A message object regarding establishing or\n     * updating a proxy connection.\n     * @param {Object} message.data - An object containing additional message\n     * details.\n     * @param {string} message.data.iq - The stringified iq which explains how\n     * and what to update regarding the proxy connection.\n     * @param {string} message.from - The message sender's full jid. Used for\n     * sending replies.\n     * @returns {void}\n     */\n    processMessage(message) {\n        const peerJid = message.from;\n\n        if (!peerJid) {\n            return;\n        }\n\n        // If a proxy connection has already been established and messages come\n        // from another peer jid then those messages should be replied to with\n        // a rejection.\n        if (this._peerConnection\n            && this._peerConnection.getPeerJid() !== peerJid) {\n            this._onFatalError(\n                peerJid,\n                ACTIONS.CONNECTION_ERROR,\n                'rejected'\n            );\n\n            return;\n        }\n\n        const iq = this._convertStringToXML(message.data.iq);\n        const $jingle = iq && iq.find('jingle');\n        const action = $jingle && $jingle.attr('action');\n\n        if (action === ACTIONS.INITIATE) {\n            this._peerConnection = this._createPeerConnection(peerJid, {\n                isInitiator: false,\n                receiveVideo: true\n            });\n        }\n\n        // Truthy check for peer connection added to protect against possibly\n        // receiving actions before an ACTIONS.INITIATE.\n        if (this._peerConnection) {\n            this._peerConnection.processMessage($jingle);\n        }\n\n        // Take additional steps to ensure the peer connection is cleaned up\n        // if it is to be closed.\n        if (action === ACTIONS.CONNECTION_ERROR\n            || action === ACTIONS.UNAVAILABLE\n            || action === ACTIONS.TERMINATE) {\n            this._selfCloseConnection();\n        }\n\n        return;\n    }\n\n    /**\n     * Instantiates and initiates a proxy peer connection.\n     *\n     * @param {string} peerJid - The jid of the remote client that should\n     * receive messages.\n     * @param {Array<JitsiLocalTrack>} localTracks - Initial media tracks to\n     * send through to the peer.\n     * @returns {void}\n     */\n    start(peerJid, localTracks = []) {\n        this._peerConnection = this._createPeerConnection(peerJid, {\n            isInitiator: true,\n            receiveVideo: false\n        });\n\n        this._peerConnection.start(localTracks);\n    }\n\n    /**\n     * Terminates any active proxy peer connection.\n     *\n     * @returns {void}\n     */\n    stop() {\n        if (this._peerConnection) {\n            this._peerConnection.stop();\n        }\n\n        this._peerConnection = null;\n    }\n\n    /**\n     * Transforms a stringified xML into a XML wrapped in jQuery.\n     *\n     * @param {string} xml - The XML in string form.\n     * @private\n     * @returns {Object|null} A jQuery version of the xml. Null will be returned\n     * if an error is encountered during transformation.\n     */\n    _convertStringToXML(xml) {\n        try {\n            const xmlDom = new DOMParser().parseFromString(xml, 'text/xml');\n\n            return $(xmlDom);\n        } catch (e) {\n            logger.error('Attempted to convert incorrectly formatted xml');\n\n            return null;\n        }\n    }\n\n    /**\n     * Helper for creating an instance of {@code ProxyConnectionPC}.\n     *\n     * @param {string} peerJid - The jid of the remote peer with which the\n     * {@code ProxyConnectionPC} will be established with.\n     * @param {Object} options - Additional defaults to instantiate the\n     * {@code ProxyConnectionPC} with. See the constructor of ProxyConnectionPC\n     * for more details.\n     * @private\n     * @returns {ProxyConnectionPC}\n     */\n    _createPeerConnection(peerJid, options = {}) {\n        if (!peerJid) {\n            throw new Error('Cannot create ProxyConnectionPC without a peer.');\n        }\n\n        const pcOptions = {\n            iceConfig: this._options.iceConfig,\n            onError: this._onFatalError,\n            onRemoteStream: this._onRemoteStream,\n            onSendMessage: this._onSendMessage,\n            peerJid,\n            ...options\n        };\n\n        return new ProxyConnectionPC(pcOptions);\n    }\n\n    /**\n     * Callback invoked when an error occurs that should cause\n     * {@code ProxyConnectionPC} to be closed if the peer is currently\n     * connected. Sends an error message/reply back to the peer.\n     *\n     * @param {string} peerJid - The peer jid with which the connection was\n     * attempted or started, and to which an iq with error details should be\n     * sent.\n     * @param {string} errorType - The constant indicating the type of the error\n     * that occured.\n     * @param {string} details - Optional additional data about the error.\n     * @private\n     * @returns {void}\n     */\n    _onFatalError(peerJid, errorType, details = '') {\n        logger.error(\n            'Received a proxy connection error', peerJid, errorType, details);\n\n        const iq = $iq({\n            to: peerJid,\n            type: 'set'\n        })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: errorType\n            })\n            .c('details')\n            .t(details)\n            .up();\n\n        this._onSendMessage(peerJid, iq);\n\n        if (this._peerConnection\n            && this._peerConnection.getPeerJid() === peerJid) {\n            this._selfCloseConnection();\n        }\n    }\n\n    /**\n     * Callback invoked when the remote peer of the {@code ProxyConnectionPC}\n     * has offered a media stream. The stream is converted into a\n     * {@code JitsiLocalTrack} for local usage if the {@code onRemoteStream}\n     * callback is defined.\n     *\n     * @param {JitsiRemoteTrack} jitsiRemoteTrack - The {@code JitsiRemoteTrack}\n     * for the peer's media stream.\n     * @private\n     * @returns {void}\n     */\n    _onRemoteStream(jitsiRemoteTrack) {\n        if (!this._options.onRemoteStream) {\n            logger.error('Remote track received without callback.');\n            jitsiRemoteTrack.dispose();\n\n            return;\n        }\n\n        const isVideo = jitsiRemoteTrack.isVideoTrack();\n        let videoType;\n\n        if (isVideo) {\n            videoType = this._options.convertVideoToDesktop\n                ? VideoType.DESKTOP : VideoType.CAMERA;\n        }\n\n        // Grab the webrtc media stream and pipe it through the same processing\n        // that would occur for a locally obtained media stream.\n        const mediaStream = jitsiRemoteTrack.getOriginalStream();\n        const jitsiLocalTracks = RTC.newCreateLocalTracks(\n            [\n                {\n                    deviceId:\n                        `proxy:${this._peerConnection.getPeerJid()}`,\n                    mediaType: isVideo ? MediaType.VIDEO : MediaType.AUDIO,\n                    sourceType: 'proxy',\n                    stream: mediaStream,\n                    track: mediaStream.getVideoTracks()[0],\n                    videoType\n                }\n            ]);\n\n        this._options.onRemoteStream(jitsiLocalTracks[0]);\n    }\n\n    /**\n     * Formats and forwards a message an iq to be sent to a peer jid.\n     *\n     * @param {string} peerJid - The jid the iq should be sent to.\n     * @param {Object} iq - The iq which would be sent to the peer jid.\n     * @private\n     * @returns {void}\n     */\n    _onSendMessage(peerJid, iq) {\n        if (!this._options.onSendMessage) {\n            return;\n        }\n\n        try {\n            const stringifiedIq\n                = new XMLSerializer().serializeToString(iq.nodeTree || iq);\n\n            this._options.onSendMessage(peerJid, { iq: stringifiedIq });\n        } catch (e) {\n            logger.error('Attempted to send an incorrectly formatted iq.');\n        }\n    }\n\n    /**\n     * Invoked when preemptively closing the {@code ProxyConnectionPC}.\n     *\n     * @private\n     * @returns {void}\n     */\n    _selfCloseConnection() {\n        this.stop();\n\n        this._options.onConnectionClosed\n            && this._options.onConnectionClosed();\n    }\n}\n","/**\n * The know jingle actions that can be sent and should be acted upon by\n * {@code ProxyConnectionService} and {@code ProxyConnectionPC}.\n */\nexport const ACTIONS = {\n    ACCEPT: 'session-accept',\n    CONNECTION_ERROR: 'connection-error-encountered',\n    INITIATE: 'session-initiate',\n    TERMINATE: 'session-terminate',\n    TRANSPORT_INFO: 'transport-info',\n    UNAVAILABLE: 'unavailable'\n};\n","import { $iq } from 'strophe.js';\n\nimport recordingXMLUtils from './recordingXMLUtils';\n\n/**\n * Represents a recording session.\n */\nexport default class JibriSession {\n    /**\n     * Initializes a new JibriSession instance.\n     *\n     * @constructor\n     */\n    constructor(options = {}) {\n        this._connection = options.connection;\n        this._mode = options.mode;\n\n        this._setSessionID(options.sessionID);\n        this.setStatus(options.status);\n    }\n\n    /**\n     * Returns the error related to the session instance, if any.\n     *\n     * @returns {string|undefined}\n     */\n    getError() {\n        return this._error;\n    }\n\n    /**\n     * Returns the session ID of the session instance.\n     *\n     * @returns {string|undefined}\n     */\n    getID() {\n        return this._sessionID;\n    }\n\n    /**\n     * Returns the streaming URL of the session.\n     *\n     * @returns {string|undefined}\n     */\n    getLiveStreamViewURL() {\n        return this._liveStreamViewURL;\n    }\n\n    /**\n     * Returns the current status of the session.\n     *\n     * @returns {string|undefined}\n     */\n    getStatus() {\n        return this._status;\n    }\n\n    /**\n     * Returns the current recording mode of the session, such as \"file\".\n     *\n     * @returns {string}\n     */\n    getMode() {\n        return this._mode;\n    }\n\n    /**\n     * Sets the last known error message related to the session.\n     *\n     * @param {string} error - The error string explaining why the session\n     * entered an error state.\n     * @returns {void}\n     */\n    setError(error) {\n        this._error = error;\n    }\n\n    /**\n     * Sets the last live stream URL for the session instance. Usually this is\n     * a YouTube URL and usually this is only set for \"stream\" sessions.\n     *\n     * @param {string} url - The live stream URL associated with the session.\n     * @returns {void}\n     */\n    setLiveStreamViewURL(url) {\n        this._liveStreamViewURL = url;\n    }\n\n    /**\n     * Sets the last known status for this recording session.\n     *\n     * @param {string} status - The new status to set.\n     * @returns {void}\n     */\n    setStatus(status) {\n        this._status = status;\n    }\n\n    /**\n     * Sends a message to start the actual recording.\n     *\n     * @param {Object} options - Additional arguments for starting the\n     * recording.\n     * @param {string} [options.appData] - Data specific to the app/service that\n     * the result file will be uploaded.\n     * @param {string} [options.broadcastId] - The broadcast ID of an\n     * associated YouTube stream, used for knowing the URL from which the stream\n     * can be viewed.\n     * @param {string} options.focusMucJid - The JID of the focus participant\n     * that controls recording.\n     * @param {streamId} options.streamId - Necessary for live streaming, this\n     * is the the stream key needed to start a live streaming session with the\n     * streaming service provider.\n     * @returns Promise\n     */\n    start({ appData, broadcastId, focusMucJid, streamId }) {\n        return new Promise((resolve, reject) => {\n            this._connection.sendIQ(\n                this._createIQ({\n                    action: 'start',\n                    appData,\n                    focusMucJid,\n                    broadcastId,\n                    streamId\n                }),\n                result => {\n                    // All users will eventually receive the 'pending' status\n                    // from the backend, but for the user initiating the session\n                    // it's better to give some instant feedback that recording\n                    // is starting so fire 'pending' here manually.\n                    this.setStatus('pending');\n                    this._setSessionID(\n                        recordingXMLUtils.getSessionIdFromIq(result));\n\n                    resolve();\n                },\n                error => {\n                    this._setErrorFromIq(error);\n\n                    reject(error);\n                });\n        });\n    }\n\n    /**\n     * Sends a message to actually stop the recording session.\n     *\n     * @param {Object} options - Additional arguments for stopping the\n     * recording.\n     * @param {Object} options.focusMucJid - The JID of the focus participant\n     * that controls recording.\n     * @returns Promise\n     */\n    stop({ focusMucJid }) {\n        return new Promise((resolve, reject) => {\n            this._connection.sendIQ(\n                this._createIQ({\n                    action: 'stop',\n                    focusMucJid\n                }),\n                resolve,\n                reject);\n        });\n    }\n\n    /**\n     * Generates the message to change the status of the recording session.\n     *\n     * @param {string} status - The new status to which the recording session\n     * should transition.\n     * @param {string} [options.appData] - Data specific to the app/service that\n     * the result file will be uploaded.\n     * @param {string} [options.broadcastId] - The broadcast ID of an\n     * associated YouTube stream, used for knowing the URL from which the stream\n     * can be viewed.\n     * @param {string} options.focusMucJid - The JID of the focus participant\n     * that controls recording.\n     * @param {streamId} options.streamId - Necessary for live streaming, this\n     * is the the stream key needed to start a live streaming session with the\n     * streaming service provider.\n     * @returns Object - The XMPP IQ message.\n     */\n    _createIQ({ action, appData, broadcastId, focusMucJid, streamId }) {\n        return $iq({\n            to: focusMucJid,\n            type: 'set'\n        })\n        .c('jibri', {\n            'xmlns': 'http://jitsi.org/protocol/jibri',\n            'action': action,\n            'app_data': appData,\n            'recording_mode': this._mode,\n            'streamid': streamId,\n            'you_tube_broadcast_id': broadcastId\n        })\n        .up();\n    }\n\n    /**\n     * Handles the error from an iq and stores the error.\n     *\n     * @param {Node} errorIq - The error response from an Iq.\n     * @private\n     * @returns {void}\n     */\n    _setErrorFromIq(errorIq) {\n        const error = errorIq.getElementsByTagName('error')[0];\n\n        this.setError(error.children[0].tagName);\n    }\n\n    /**\n     * Sets the known session ID for this recording session.\n     *\n     * @param {string} sessionID\n     * @private\n     * @returns {void}\n     */\n    _setSessionID(sessionID) {\n        this._sessionID = sessionID;\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nimport JibriSession from './JibriSession';\nimport recordingXMLUtils from './recordingXMLUtils';\n\nconst logger = getLogger(__filename);\n\n/**\n * A class responsible for starting and stopping recording sessions and emitting\n * state updates for them.\n */\nclass RecordingManager {\n    /**\n     * Initialize {@code RecordingManager} with other objects that are necessary\n     * for starting a recording.\n     *\n     * @param {ChatRoom} chatRoom - The chat room to handle.\n     * @returns {void}\n     */\n    constructor(chatRoom) {\n        /**\n         * All known recording sessions from the current conference.\n         */\n        this._sessions = {};\n\n        this._chatRoom = chatRoom;\n\n        this.onPresence = this.onPresence.bind(this);\n\n        this._chatRoom.eventEmitter.addListener(\n            XMPPEvents.PRESENCE_RECEIVED, this.onPresence);\n    }\n\n    /**\n     * Finds an existing recording session by session ID.\n     *\n     * @param {string} sessionID - The session ID associated with the recording.\n     * @returns {JibriSession|undefined}\n     */\n    getSession(sessionID) {\n        return this._sessions[sessionID];\n    }\n\n    /**\n     * Callback to invoke to parse through a presence update to find recording\n     * related updates (from Jibri participant doing the recording and the\n     * focus which controls recording).\n     *\n     * @param {Object} event - The presence data from the pubsub event.\n     * @param {Node} event.presence - An XMPP presence update.\n     * @param {boolean} event.fromHiddenDomain - Whether or not the update comes\n     * from a participant that is trusted but not visible, as would be the case\n     * with the Jibri recorder participant.\n     * @returns {void}\n     */\n    onPresence({ fromHiddenDomain, presence }) {\n        if (recordingXMLUtils.isFromFocus(presence)) {\n            this._handleFocusPresence(presence);\n        } else if (fromHiddenDomain) {\n            this._handleJibriPresence(presence);\n        }\n    }\n\n    /**\n     * Start a recording session.\n     *\n     * @param {Object} options - Configuration for the recording.\n     * @param {string} [options.appData] - Data specific to the app/service that\n     * the result file will be uploaded.\n     * @param {string} [optional] options.broadcastId - The channel on which a\n     * live stream will occur.\n     * @param {string} options.mode - The mode in which recording should be\n     * started. Recognized values are \"file\" and \"stream\".\n     * @param {string} [optional] options.streamId - The stream key to be used\n     * for live stream broadcasting. Required for live streaming.\n     * @returns {Promise} A promise for starting a recording, which will pass\n     * back the session on success. The promise resolves after receiving an\n     * acknowledgment of the start request success or fail.\n     */\n    startRecording(options) {\n        const session = new JibriSession({\n            ...options,\n            connection: this._chatRoom.connection\n        });\n\n        return session.start({\n            appData: options.appData,\n            broadcastId: options.broadcastId,\n            focusMucJid: this._chatRoom.focusMucJid,\n            streamId: options.streamId\n        })\n            .then(() => {\n                // Only store the session and emit if the session has not been\n                // added already. This is a workaround for the session getting\n                // created due to a presence update to announce a \"pending\"\n                // recording being received before JibriSession#start finishes.\n                if (!this.getSession(session.getID())) {\n                    this._addSession(session);\n                    this._emitSessionUpdate(session);\n                }\n\n                return session;\n            })\n            .catch(error => {\n                this._emitSessionUpdate(session);\n\n                return Promise.reject(error);\n            });\n    }\n\n    /**\n     * Stop a recording session.\n     *\n     * @param {string} sessionID - The ID associated with the recording session\n     * to be stopped.\n     * @returns {Promise} The promise resolves after receiving an\n     * acknowledgment of the stop request success or fail.\n     */\n    stopRecording(sessionID) {\n        const session = this.getSession(sessionID);\n\n        if (session) {\n            return session.stop({ focusMucJid: this._chatRoom.focusMucJid });\n        }\n\n        return Promise.reject(new Error('Could not find session'));\n    }\n\n    /**\n     * Stores a reference to the passed in JibriSession.\n     *\n     * @param {string} session - The JibriSession instance to store.\n     * @returns {void}\n     */\n    _addSession(session) {\n        this._sessions[session.getID()] = session;\n    }\n\n    /**\n     * Create a new instance of a recording session and stores a reference to\n     * it.\n     *\n     * @param {string} sessionID - The session ID of the recording in progress.\n     * @param {string} status - The current status of the recording session.\n     * @param {string} mode - The recording mode of the session.\n     * @returns {JibriSession}\n     */\n    _createSession(sessionID, status, mode) {\n        const session = new JibriSession({\n            connection: this._chatRoom.connection,\n            focusMucJid: this._chatRoom.focusMucJid,\n            mode,\n            sessionID,\n            status\n        });\n\n        this._addSession(session);\n\n        return session;\n    }\n\n    /**\n     * Notifies listeners of an update to a recording session.\n     *\n     * @param {JibriSession} session - The session that has been updated.\n     */\n    _emitSessionUpdate(session) {\n        this._chatRoom.eventEmitter.emit(\n            XMPPEvents.RECORDER_STATE_CHANGED, session);\n    }\n\n    /**\n     * Parses presence to update an existing JibriSession or to create a new\n     * JibriSession.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {void}\n     */\n    _handleFocusPresence(presence) {\n        const jibriStatus = recordingXMLUtils.getFocusRecordingUpdate(presence);\n\n        if (!jibriStatus) {\n            return;\n        }\n\n        const { sessionID, status, error, recordingMode } = jibriStatus;\n\n        // We'll look for an existing session or create one (in case we're a\n        // participant joining a call with an existing recording going on).\n        let session = this.getSession(sessionID);\n\n        // Handle the case where a status update is received in presence but\n        // the local participant has joined while the JibriSession has already\n        // ended.\n        if (!session && status === 'off') {\n            logger.warn(\n                'Ignoring recording presence update',\n                'Received a new session with status off.');\n\n            return;\n        }\n\n        // Jicofo sends updates via presence, and any extension in presence\n        // is sent until it is explicitly removed.  It's difficult for\n        // Jicofo to know when a presence has been sent once, so it won't\n        // remove jibri status extension.  This means we may receive the same\n        // status update more than once, so check for that here\n        if (session\n            && session.getStatus() === status\n            && session.getError() === error) {\n            logger.warn('Ignoring duplicate presence update: ',\n                JSON.stringify(jibriStatus));\n\n            return;\n        }\n\n        if (!session) {\n            session = this._createSession(sessionID, status, recordingMode);\n        }\n\n        session.setStatus(status);\n\n        if (error) {\n            session.setError(error);\n        }\n\n        this._emitSessionUpdate(session);\n    }\n\n    /**\n     * Handles updates from the Jibri which can broadcast a YouTube URL that\n     * needs to be updated in a JibriSession.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {void}\n     */\n    _handleJibriPresence(presence) {\n        const { liveStreamViewURL, mode, sessionID }\n            = recordingXMLUtils.getHiddenDomainUpdate(presence);\n\n        if (!sessionID) {\n            logger.warn(\n                'Ignoring potential jibri presence due to no session id.');\n\n            return;\n        }\n\n        let session = this.getSession(sessionID);\n\n        if (!session) {\n            session = this._createSession(sessionID, '', mode);\n        }\n\n        session.setLiveStreamViewURL(liveStreamViewURL);\n\n        this._emitSessionUpdate(session);\n    }\n}\n\nexport default RecordingManager;\n","export default {\n    error: {\n        BUSY: 'busy',\n        ERROR: 'error',\n        RESOURCE_CONSTRAINT: 'resource-constraint',\n        SERVICE_UNAVAILABLE: 'service-unavailable'\n    },\n    mode: {\n        FILE: 'file',\n        STREAM: 'stream'\n    },\n    status: {\n        OFF: 'off',\n        ON: 'on',\n        PENDING: 'pending'\n    }\n};\n","/**\n * A collection of utility functions for taking in XML and parsing it to return\n * certain values.\n */\nexport default {\n    /**\n     * Parses the presence update of the focus and returns an object with the\n     * statuses related to recording.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {Object} The current presence values related to recording.\n     */\n    getFocusRecordingUpdate(presence) {\n        const jibriStatus = presence\n            && presence.getElementsByTagName('jibri-recording-status')[0];\n\n        if (!jibriStatus) {\n            return;\n        }\n\n        return {\n            error: jibriStatus.getAttribute('failure_reason'),\n            recordingMode: jibriStatus.getAttribute('recording_mode'),\n            sessionID: jibriStatus.getAttribute('session_id'),\n            status: jibriStatus.getAttribute('status')\n        };\n    },\n\n    /**\n     * Parses the presence update from a hidden domain participant and returns\n     * an object with the statuses related to recording.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {Object} The current presence values related to recording.\n     */\n    getHiddenDomainUpdate(presence) {\n        const liveStreamViewURLContainer\n            = presence.getElementsByTagName('live-stream-view-url')[0];\n        const liveStreamViewURL = liveStreamViewURLContainer\n            && liveStreamViewURLContainer.textContent;\n        const modeContainer\n            = presence.getElementsByTagName('mode')[0];\n        const mode = modeContainer\n            && modeContainer.textContent\n            && modeContainer.textContent.toLowerCase();\n        const sessionIDContainer\n            = presence.getElementsByTagName('session_id')[0];\n        const sessionID\n            = sessionIDContainer && sessionIDContainer.textContent;\n\n        return {\n            liveStreamViewURL,\n            mode,\n            sessionID\n        };\n    },\n\n    /**\n     * Returns the recording session ID from a successful IQ.\n     *\n     * @param {Node} response - The response from the IQ.\n     * @returns {string} The session ID of the recording session.\n     */\n    getSessionIdFromIq(response) {\n        const jibri = response && response.getElementsByTagName('jibri')[0];\n\n        return jibri && jibri.getAttribute('session_id');\n    },\n\n    /**\n     * Returns the recording session ID from a presence, if it exists.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {string|undefined} The session ID of the recording session.\n     */\n    getSessionId(presence) {\n        const sessionIdContainer\n            = presence.getElementsByTagName('session_id')[0];\n        const sessionId = sessionIdContainer && sessionIdContainer.textContent;\n\n        return sessionId;\n    },\n\n    /**\n     * Returns whether or not a presence is from the focus.\n     *\n     * @param {Node} presence - An XMPP presence update.\n     * @returns {boolean} True if the presence is from the focus.\n     */\n    isFromFocus(presence) {\n        return presence.getAttribute('from').includes('focus');\n    }\n};\n","import browser from '../browser';\nimport { createRttByRegionEvent }\n    from '../../service/statistics/AnalyticsEvents';\nimport { getLogger } from 'jitsi-meet-logger';\nimport RTCUtils from '../RTC/RTCUtils';\nimport Statistics from '../statistics/statistics';\n\nconst logger = getLogger(__filename);\n\n/**\n * The options to pass to createOffer (we need to offer to receive *something*\n * for the PC to gather candidates.\n */\nconst offerOptions = {\n    offerToReceiveAudio: 1,\n    offerToReceiveVideo: 0\n};\n\n\n/**\n * The interval at which the webrtc engine sends STUN keep alive requests.\n * @type {number}\n */\nconst stunKeepAliveIntervalMs = 10000;\n\n/**\n * Wraps a PeerConnection with one specific STUN server and measures the RTT\n * to the STUN server.\n */\nclass PCMonitor {\n    /* eslint-disable max-params */\n    /**\n     *\n     * @param {String} region - The region of the STUN server.\n     * @param {String} address - The address of the STUN server.\n     * @param {number} getStatsIntervalMs how often to call getStats.\n     * @param {number} delay the delay after which the PeerConnection will be\n     * started (that is, createOffer and setLocalDescription will be invoked).\n     *\n     */\n    constructor(region, address, getStatsIntervalMs, delay) {\n        /* eslint-disable max-params */\n        this.region = region;\n        this.getStatsIntervalMs = getStatsIntervalMs;\n        this.getStatsInterval = null;\n\n        // What we consider the current RTT. It is Math.min(this.rtts).\n        this.rtt = Infinity;\n\n        // The RTT measurements we've made from the latest getStats() calls.\n        this.rtts = [];\n\n        const iceServers = [ { 'url': `stun:${address}` } ];\n\n        this.pc = new RTCUtils.RTCPeerConnectionType(\n            {\n                'iceServers': iceServers\n            });\n\n        // Maps a key consisting of the IP address, port and priority of a\n        // candidate to some state related to it. If we have more than one\n        // network interface we will might multiple srflx candidates and this\n        // helps to distinguish between then.\n        this.candidates = {};\n\n        this.stopped = false;\n\n        this.start = this.start.bind(this);\n        this.stop = this.stop.bind(this);\n        this.startStatsInterval = this.startStatsInterval.bind(this);\n        this.handleCandidateRtt = this.handleCandidateRtt.bind(this);\n\n        window.setTimeout(this.start, delay);\n    }\n\n    /**\n     * Starts this PCMonitor. That is, invokes createOffer and\n     * setLocalDescription on the PeerConnection and starts an interval which\n     * calls getStats.\n     */\n    start() {\n        if (this.stopped) {\n            return;\n        }\n\n        this.pc.createOffer(offerOptions).then(offer => {\n            this.pc.setLocalDescription(\n                offer,\n                () => {\n                    logger.info(\n                        `setLocalDescription success for ${this.region}`);\n                    this.startStatsInterval();\n                },\n                error => {\n                    logger.warn(\n                        `setLocalDescription failed for ${this.region}: ${\n                            error}`);\n                }\n            );\n        });\n    }\n\n    /**\n     * Starts an interval which invokes getStats on the PeerConnection and\n     * measures the RTTs for the different candidates.\n     */\n    startStatsInterval() {\n        this.getStatsInterval = window.setInterval(\n            () => {\n                // Note that the data that we use to measure the RTT is only\n                // available in the legacy (callback based) getStats API.\n                this.pc.getStats(stats => {\n                    const results = stats.result();\n\n                    for (let i = 0; i < results.length; ++i) {\n                        const res = results[i];\n                        const rttTotal\n                            = Number(res.stat('stunKeepaliveRttTotal'));\n\n                        // We recognize the results that we care for (local\n                        // candidates of type srflx) by the existance of the\n                        // stunKeepaliveRttTotal stat.\n                        if (rttTotal > 0) {\n                            const candidateKey\n                                = `${res.stat('ipAddress')}_${\n                                    res.stat('portNumber')}_${\n                                    res.stat('priority')}`;\n\n                            this.handleCandidateRtt(\n                                candidateKey,\n                                rttTotal,\n                                Number(\n                                    res.stat('stunKeepaliveResponsesReceived')),\n                                Number(\n                                    res.stat('stunKeepaliveRequestsSent')));\n                        }\n                    }\n\n                    // After we've measured the RTT for all candidates we,\n                    // update the state of the PC with the shortest one.\n                    let rtt = Infinity;\n\n                    for (const key in this.candidates) {\n                        if (this.candidates.hasOwnProperty(key)\n                            && this.candidates[key].rtt > 0) {\n                            rtt = Math.min(rtt, this.candidates[key].rtt);\n                        }\n                    }\n\n                    // We keep the last 6 measured RTTs and choose the shortest\n                    // one to export to analytics. This is because we often see\n                    // failures get a real measurement which end up as Infinity.\n                    this.rtts.push(rtt);\n                    if (this.rtts.length > 6) {\n                        this.rtts = this.rtts.splice(1, 7);\n                    }\n                    this.rtt = Math.min(...this.rtts);\n                });\n            },\n            this.getStatsIntervalMs\n        );\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Updates the RTT for a candidate identified by \"key\" based on the values\n     * from getStats() and the previously saved state (i.e. old values).\n     *\n     * @param {String} key the ID for the candidate\n     * @param {number} rttTotal the value of the 'stunKeepaliveRttTotal' just\n     * measured.\n     * @param {number} responsesReceived the value of the\n     * 'stunKeepaliveResponsesReceived' stat just measured.\n     * @param {number} requestsSent the value of the 'stunKeepaliveRequestsSent'\n     * stat just measured.\n     */\n    handleCandidateRtt(key, rttTotal, responsesReceived, requestsSent) {\n        /* eslist-enable max-params */\n        if (!this.candidates[key]) {\n            this.candidates[key] = {\n                rttTotal: 0,\n                responsesReceived: 0,\n                requestsSent: 0,\n                rtt: NaN\n            };\n        }\n\n        const rttTotalDiff = rttTotal - this.candidates[key].rttTotal;\n        const responsesReceivedDiff\n            = responsesReceived - this.candidates[key].responsesReceived;\n\n        // We observe that when the difference between the number of requests\n        // and responses has grown (i.q. when the value below is positive), the\n        // the RTT measurements are incorrect (too low). For this reason we\n        // ignore these measurement (setting rtt=NaN), but update our state.\n        const requestsResponsesDiff\n            = (requestsSent - responsesReceived)\n            - (this.candidates[key].requestsSent\n                - this.candidates[key].responsesReceived);\n        let rtt = NaN;\n\n        if (responsesReceivedDiff > 0 && requestsResponsesDiff === 0) {\n            rtt = rttTotalDiff / responsesReceivedDiff;\n        }\n\n        this.candidates[key].rttTotal = rttTotal;\n        this.candidates[key].responsesReceived = responsesReceived;\n        this.candidates[key].requestsSent = requestsSent;\n        this.candidates[key].rtt = rtt;\n    }\n\n\n    /**\n     * Stops this PCMonitor, clearing its intervals and stopping the\n     * PeerConnection.\n     */\n    stop() {\n        if (this.getStatsInterval) {\n            window.clearInterval(this.getStatsInterval);\n        }\n\n        this.pc.close();\n\n        this.stopped = true;\n    }\n}\n\n/**\n * A class which monitors the round-trip time (RTT) to a set of STUN servers.\n * The measured RTTs are sent as analytics events. It uses a separate\n * PeerConnection (represented as a PCMonitor) for each STUN server.\n */\nexport default class RttMonitor {\n    /**\n     * Initializes a new RttMonitor.\n     * @param {Object} config the object holding the configuration.\n     */\n    constructor(config) {\n        if (!config || !config.enabled\n            || !browser.supportsLocalCandidateRttStatistics()) {\n            return;\n        }\n\n        // Maps a region to the PCMonitor instance for that region.\n        this.pcMonitors = {};\n\n        this.startPCMonitors = this.startPCMonitors.bind(this);\n        this.sendAnalytics = this.sendAnalytics.bind(this);\n        this.stop = this.stop.bind(this);\n\n        this.analyticsInterval = null;\n        this.stopped = false;\n\n        const initialDelay = config.initialDelay || 60000;\n\n\n        logger.info(\n            `Starting RTT monitor with an initial delay of ${initialDelay}`);\n\n\n        window.setTimeout(\n            () => this.startPCMonitors(config),\n            initialDelay);\n    }\n\n    /**\n     * Starts the PCMonitors according to the configuration.\n     */\n    startPCMonitors(config) {\n        if (!config.stunServers) {\n            logger.warn('No stun servers configured.');\n\n            return;\n        }\n\n        if (this.stopped) {\n            return;\n        }\n\n        const getStatsIntervalMs\n            = config.getStatsInterval || stunKeepAliveIntervalMs;\n        const analyticsIntervalMs\n            = config.analyticsInterval || getStatsIntervalMs;\n        const count = Object.keys(config.stunServers).length;\n        const offset = getStatsIntervalMs / count;\n\n        // We delay the initialization of each PC so that they are uniformly\n        // distributed across the getStatsIntervalMs.\n        let i = 0;\n\n        for (const region in config.stunServers) {\n            if (config.stunServers.hasOwnProperty(region)) {\n                const address = config.stunServers[region];\n\n                this.pcMonitors[region]\n                    = new PCMonitor(\n                        region,\n                        address,\n                        getStatsIntervalMs,\n                        offset * i);\n                i++;\n            }\n        }\n\n        window.setTimeout(\n            () => {\n                if (!this.stopped) {\n                    this.analyticsInterval\n                        = window.setInterval(\n                        this.sendAnalytics, analyticsIntervalMs);\n                }\n            },\n            1000);\n    }\n\n    /**\n     * Sends an analytics event with the measured RTT to each region/STUN\n     * server.\n     */\n    sendAnalytics() {\n        const rtts = {};\n\n        for (const region in this.pcMonitors) {\n            if (this.pcMonitors.hasOwnProperty(region)) {\n                const rtt = this.pcMonitors[region].rtt;\n\n                if (!isNaN(rtt) && rtt !== Infinity) {\n                    rtts[region.replace('-', '_')] = rtt;\n                }\n            }\n        }\n\n        if (rtts) {\n            Statistics.sendAnalytics(createRttByRegionEvent(rtts));\n        }\n    }\n\n    /**\n     * Stops this RttMonitor, clearing all intervals and closing all\n     * PeerConnections.\n     */\n    stop() {\n        logger.info('Stopping RttMonitor.');\n        this.stopped = true;\n        for (const region in this.pcMonitors) {\n            if (this.pcMonitors.hasOwnProperty(region)) {\n                this.pcMonitors[region].stop();\n            }\n        }\n        this.pcMonitors = {};\n\n        if (this.analyticsInterval) {\n            window.clearInterval(this.analyticsInterval);\n        }\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\nconst logger = getLogger(__filename);\n\nimport UsernameGenerator from '../util/UsernameGenerator';\n\nlet _callStatsUserName;\n\nlet _machineId;\n\n/**\n *\n */\nexport default {\n    /**\n     * Returns fake username for callstats\n     * @returns {string} fake username for callstats\n     */\n    get callStatsUserName() {\n        if (!_callStatsUserName) {\n            const localStorage = getLocalStorage();\n\n            if (localStorage) {\n                _callStatsUserName = localStorage.getItem('callStatsUserName');\n            }\n            if (!_callStatsUserName) {\n                _callStatsUserName = generateCallStatsUserName();\n                if (localStorage) {\n                    localStorage.setItem(\n                        'callStatsUserName',\n                        _callStatsUserName);\n                }\n            }\n        }\n\n        return _callStatsUserName;\n    },\n\n    /**\n     * Returns current machine id.\n     * @returns {string} machine id\n     */\n    get machineId() {\n        if (!_machineId) {\n            const localStorage = getLocalStorage();\n\n            if (localStorage) {\n                _machineId = localStorage.getItem('jitsiMeetId');\n            }\n            if (!_machineId) {\n                _machineId = generateJitsiMeetId();\n                if (localStorage) {\n                    localStorage.setItem('jitsiMeetId', _machineId);\n                }\n            }\n        }\n\n        return _machineId;\n    },\n\n    /**\n     * Returns current session id.\n     * @returns {string} current session id\n     */\n    get sessionId() {\n        // We may update sessionId in localStorage from another JitsiConference\n        // instance and that's why we should always re-read it.\n        const localStorage = getLocalStorage();\n\n        return localStorage ? localStorage.getItem('sessionId') : undefined;\n    },\n\n    /**\n     * Save current session id.\n     * @param {string} sessionId session id\n     */\n    set sessionId(sessionId) {\n        const localStorage = getLocalStorage();\n\n        if (localStorage) {\n            if (sessionId) {\n                localStorage.setItem('sessionId', sessionId);\n            } else {\n                localStorage.removeItem('sessionId');\n            }\n        }\n    }\n};\n\n/**\n * Generate fake username for callstats.\n * @returns {string} fake random username\n */\nfunction generateCallStatsUserName() {\n    const username = UsernameGenerator.generateUsername();\n\n    logger.log('generated callstats uid', username);\n\n    return username;\n}\n\n/**\n * Generate unique id.\n * @returns {string} random unique id\n */\nfunction generateJitsiMeetId() {\n    const jitsiMeetId = generateUniqueId();\n\n    logger.log('generated id', jitsiMeetId);\n\n    return jitsiMeetId;\n}\n\n/**\n * Gets the localStorage of the browser. (Technically, gets the localStorage of\n * the global object because there may be no browser but React Native for\n * example).\n * @returns {Storage} the local Storage object (if any)\n */\nfunction getLocalStorage() {\n    let storage;\n\n    try {\n        // eslint-disable-next-line no-invalid-this\n        storage = (window || this).localStorage;\n    } catch (error) {\n        logger.error(error);\n    }\n\n    return storage;\n}\n\n/**\n *\n */\nfunction generateUniqueId() {\n    return _p8() + _p8() + _p8() + _p8();\n}\n\n/**\n *\n */\nfunction _p8() {\n    return `${Math.random().toString(16)}000000000`.substr(2, 8);\n}\n","import {\n    TYPE_OPERATIONAL,\n    TYPE_PAGE,\n    TYPE_TRACK,\n    TYPE_UI\n} from '../../service/statistics/AnalyticsEvents';\nimport { getLogger } from 'jitsi-meet-logger';\nimport browser from '../browser';\nimport Settings from '../settings/Settings';\n\nconst MAX_CACHE_SIZE = 100;\n\n// eslist-disable-line no-undef\nconst logger = getLogger(__filename);\n\n/**\n * This class provides an API to lib-jitsi-meet and its users for sending\n * analytics events. It serves as a bridge to different backend implementations\n * (\"analytics handlers\") and a cache for events attempted to be sent before\n * the analytics handlers were enabled.\n *\n * The API is designed to be an easy replacement for the previous version of\n * this adapter, and is meant to be extended with more convenience methods.\n *\n *\n * The API calls are translated to objects with the following structure, which\n * are then passed to the sendEvent(event) function of the underlying handlers:\n *\n * {\n *    type,\n *\n *    action,\n *    actionSubject,\n *    actionSubjectId,\n *    attributes,\n *    categories,\n *    containerId,\n *    containerType,\n *    name,\n *    objectId,\n *    objectType,\n *    source,\n *    tags\n * }\n *\n * The 'type' is one of 'operational', 'page', 'track' or 'ui', and some of the\n * other properties are considered required according to the type.\n *\n * For events with type 'page', the required properties are: name.\n *\n * For events with type 'operational' and 'ui', the required properties are:\n * action, actionSubject, source\n *\n * For events with type 'page', the required properties are:\n * action, actionSubject, source, containerType, containerId, objectType,\n * objectId\n */\nclass AnalyticsAdapter {\n    /**\n     * Creates new AnalyticsAdapter instance.\n     */\n    constructor() {\n        this.reset();\n    }\n\n    /**\n     * Reset the state to the initial one.\n     *\n     * @returns {void}\n     */\n    reset() {\n        /**\n         * Whether this AnalyticsAdapter has been disposed of or not. Once this\n         * is set to true, the AnalyticsAdapter is disabled and does not accept\n         * any more events, and it can not be re-enabled.\n         * @type {boolean}\n         */\n        this.disposed = false;\n\n        /**\n         * The set of handlers to which events will be sent.\n         * @type {Set<any>}\n         */\n        this.analyticsHandlers = new Set();\n\n        /**\n         * The cache of events which are not sent yet. The cache is enabled\n         * while this field is truthy, and disabled otherwise.\n         * @type {Array}\n         */\n        this.cache = [];\n\n        /**\n         * Map of properties that will be added to every event. Note that the\n         * keys will be prefixed with \"permanent.\".\n         */\n        this.permanentProperties = {};\n\n        /**\n         * The name of the conference that this AnalyticsAdapter is associated\n         * with.\n         * @type {null}\n         */\n        this.conferenceName = '';\n\n        this.addPermanentProperties({\n            'callstats_name': Settings.callStatsUserName,\n            'user_agent': navigator.userAgent,\n            'browser_name': browser.getName()\n        });\n    }\n\n    /**\n     * Dispose analytics. Clears all handlers.\n     */\n    dispose() {\n        logger.warn('Disposing of analytics adapter.');\n\n        if (this.analyticsHandlers && this.analyticsHandlers.size > 0) {\n            this.analyticsHandlers.forEach(handler => {\n                if (typeof handler.dispose === 'function') {\n                    handler.dispose();\n                }\n            });\n        }\n\n        this.setAnalyticsHandlers([]);\n        this.disposed = true;\n    }\n\n    /**\n     * Sets the handlers that are going to be used to send analytics. Sends any\n     * cached events.\n     * @param {Array} handlers the handlers\n     */\n    setAnalyticsHandlers(handlers) {\n        if (this.disposed) {\n            return;\n        }\n\n        this.analyticsHandlers = new Set(handlers);\n\n        this._setUserProperties();\n\n        // Note that we disable the cache even if the set of handlers is empty.\n        const cache = this.cache;\n\n        this.cache = null;\n        if (cache) {\n            cache.forEach(event => this._sendEvent(event));\n        }\n    }\n\n    /**\n     * Set the user properties to the analytics handlers.\n     *\n     * @returns {void}\n     */\n    _setUserProperties() {\n        this.analyticsHandlers.forEach(handler => {\n            try {\n                handler.setUserProperties(this.permanentProperties);\n            } catch (error) {\n                logger.warn('Error in setUserProperties method of one of the '\n                    + `analytics handlers: ${error}`);\n            }\n        });\n    }\n\n    /**\n     * Adds a set of permanent properties to this this AnalyticsAdapter.\n     * Permanent properties will be added as \"attributes\" to events sent to\n     * the underlying \"analytics handlers\", and their keys will be prefixed\n     * by \"permanent_\", i.e. adding a permanent property {key: \"value\"} will\n     * result in {\"permanent_key\": \"value\"} object to be added to the\n     * \"attributes\" field of events.\n     *\n     * @param {Object} properties the properties to add\n     */\n    addPermanentProperties(properties) {\n        this.permanentProperties = {\n            ...this.permanentProperties,\n            ...properties\n        };\n\n        this._setUserProperties();\n    }\n\n    /**\n     * Sets the name of the conference that this AnalyticsAdapter is associated\n     * with.\n     * @param name the name to set.\n     */\n    setConferenceName(name) {\n        this.conferenceName = name;\n        this.addPermanentProperties({ 'conference_name': name });\n    }\n\n    /**\n     * Sends an event with a given name and given properties. The first\n     * parameter is either a string or an object. If it is a string, it is used\n     * as the event name and the second parameter is used at the attributes to\n     * attach to the event. If it is an object, it represents the whole event,\n     * including any desired attributes, and the second parameter is ignored.\n     *\n     * @param {String|Object} eventName either a string to be used as the name\n     * of the event, or an event object. If an event object is passed, the\n     * properties parameters is ignored.\n     * @param {Object} properties the properties/attributes to attach to the\n     * event, if eventName is a string.\n     */\n    sendEvent(eventName, properties = {}) {\n        if (this.disposed) {\n            return;\n        }\n\n        let event = null;\n\n        if (typeof eventName === 'string') {\n            event = {\n                type: TYPE_OPERATIONAL,\n                action: eventName,\n                actionSubject: eventName,\n                source: eventName,\n                attributes: properties\n            };\n        } else if (typeof eventName === 'object') {\n            event = eventName;\n        }\n\n        if (!this._verifyRequiredFields(event)) {\n            logger.error(\n                `Dropping a mis-formatted event: ${JSON.stringify(event)}`);\n\n            return;\n        }\n\n        this._sendEvent(event);\n    }\n\n    /**\n     * Checks whether an event has all of the required fields set, and tries\n     * to fill in some of the missing fields with reasonable default values.\n     * Returns true if after this operation the event has all of the required\n     * fields set, and false otherwise (if some of the required fields were not\n     * set and the attempt to fill them in with a default failed).\n     *\n     * @param event the event object.\n     * @return {boolean} true if the event (after the call to this function)\n     * contains all of the required fields, and false otherwise.\n     * @private\n     */\n    _verifyRequiredFields(event) {\n        if (!event) {\n            return false;\n        }\n\n        if (!event.type) {\n            event.type = TYPE_OPERATIONAL;\n        }\n\n        const type = event.type;\n\n        if (type !== TYPE_OPERATIONAL && type !== TYPE_PAGE\n            && type !== TYPE_UI && type !== TYPE_TRACK) {\n            logger.error(`Unknown event type: ${type}`);\n\n            return false;\n        }\n\n        if (type === TYPE_PAGE) {\n            return Boolean(event.name);\n        }\n\n        // Try to set some reasonable default values in case some of the\n        // parameters required by the handler API are missing.\n        event.action = event.action || event.name || event.actionSubject;\n        event.actionSubject = event.actionSubject || event.name || event.action;\n        event.source = event.source || event.name || event.action\n            || event.actionSubject;\n\n        if (!event.action || !event.actionSubject || !event.source) {\n            logger.error(\n                'Required field missing (action, actionSubject or source)');\n\n            return false;\n        }\n\n        // Track events have additional required fields.\n        if (type === TYPE_TRACK) {\n            event.objectType = event.objectType || 'generic-object-type';\n            event.containerType = event.containerType || 'conference';\n            if (event.containerType === 'conference' && !event.containerId) {\n                event.containerId = this.conferenceName;\n            }\n\n\n            if (!event.objectType || !event.objectId\n                || !event.containerType || !event.containerId) {\n                logger.error(\n                    'Required field missing (containerId, containerType, '\n                        + 'objectId or objectType)');\n\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Saves an event to the cache, if the cache is enabled.\n     * @param event the event to save.\n     * @returns {boolean} true if the event was saved, and false otherwise (i.e.\n     * if the cache was disabled).\n     * @private\n     */\n    _maybeCacheEvent(event) {\n        if (this.cache) {\n            this.cache.push(event);\n\n            // We limit the size of the cache, in case the user fails to ever\n            // set the analytics handlers.\n            if (this.cache.length > MAX_CACHE_SIZE) {\n                this.cache.splice(0, 1);\n            }\n\n            return true;\n        }\n\n        return false;\n\n    }\n\n    /**\n     *\n     * @param event\n     * @private\n     */\n    _sendEvent(event) {\n        if (this._maybeCacheEvent(event)) {\n            // The event was consumed by the cache.\n        } else {\n            this.analyticsHandlers.forEach(handler => {\n                try {\n                    handler.sendEvent(event);\n                } catch (e) {\n                    logger.warn(`Error sending analytics event: ${e}`);\n                }\n            });\n        }\n    }\n}\n\nexport default new AnalyticsAdapter();\n","import { getLogger } from 'jitsi-meet-logger';\n\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\nimport * as ConnectionQualityEvents from '../../service/connectivity/ConnectionQualityEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport { createAudioOutputProblemEvent } from '../../service/statistics/AnalyticsEvents';\n\nimport Statistics from './statistics';\n\nconst logger = getLogger(__filename);\n\n/**\n * Number of local samples that will be used for comparison before and after the remote sample is received.\n */\nconst NUMBER_OF_LOCAL_SAMPLES = 2;\n\n/**\n * Collects the average audio levels per participant from the local stats and the stats received by every remote\n * participant and compares them to detect potential audio problem for a participant.\n */\nexport default class AudioOutputProblemDetector {\n\n    /**\n     * Creates new <tt>AudioOutputProblemDetector</tt> instance.\n     *\n     * @param {JitsiCofnerence} conference - The conference instance to be monitored.\n     */\n    constructor(conference) {\n        this._conference = conference;\n        this._localAudioLevelCache = {};\n        this._reportedParticipants = [];\n        this._audioProblemCandidates = {};\n        this._numberOfRemoteAudioLevelsReceived = {};\n        this._onLocalAudioLevelsReport = this._onLocalAudioLevelsReport.bind(this);\n        this._onRemoteAudioLevelReceived = this._onRemoteAudioLevelReceived.bind(this);\n        this._clearUserData = this._clearUserData.bind(this);\n        this._conference.on(ConnectionQualityEvents.REMOTE_STATS_UPDATED, this._onRemoteAudioLevelReceived);\n        this._conference.statistics.addConnectionStatsListener(this._onLocalAudioLevelsReport);\n        this._conference.on(ConferenceEvents.USER_LEFT, this._clearUserData);\n    }\n\n    /**\n     * A listener for audio level data received by a remote participant.\n     *\n     * @param {string} userID - The user id of the participant that sent the data.\n     * @param {number} audioLevel - The average audio level value.\n     * @returns {void}\n     */\n    _onRemoteAudioLevelReceived(userID, { avgAudioLevels }) {\n        const numberOfReports = (this._numberOfRemoteAudioLevelsReceived[userID] + 1) || 0;\n\n        this._numberOfRemoteAudioLevelsReceived[userID] = numberOfReports;\n\n        if (this._reportedParticipants.indexOf(userID) !== -1 || (userID in this._audioProblemCandidates)\n                || avgAudioLevels <= 0 || numberOfReports < 3) {\n            return;\n        }\n\n        const participant = this._conference.getParticipantById(userID);\n\n        if (participant) {\n            const tracks = participant.getTracksByMediaType(MediaType.AUDIO);\n\n            if (tracks.length > 0 && participant.isAudioMuted()) {\n                // We don't need to report an error if everything seems fine with the participant and its tracks but\n                // the participant is audio muted. Since those are average audio levels we potentially can receive non\n                // zero values for muted track.\n                return;\n            }\n        }\n\n        const localAudioLevels = this._localAudioLevelCache[userID];\n\n        if (!Array.isArray(localAudioLevels) || localAudioLevels.every(audioLevel => audioLevel === 0)) {\n            this._audioProblemCandidates[userID] = {\n                remoteAudioLevels: avgAudioLevels,\n                localAudioLevels: []\n            };\n        }\n    }\n\n    /**\n     * A listener for audio level data retrieved by the local stats.\n     *\n     * @param {TraceablePeerConnection} tpc - The <tt>TraceablePeerConnection</tt> instance used to gather the data.\n     * @param {Object} avgAudioLevels - The average audio levels per participant.\n     * @returns {void}\n     */\n    _onLocalAudioLevelsReport(tpc, { avgAudioLevels }) {\n        if (tpc !== this._conference.getActivePeerConnection()) {\n            return;\n        }\n\n        Object.keys(avgAudioLevels).forEach(userID => {\n            if (this._reportedParticipants.indexOf(userID) !== -1) {\n                return;\n            }\n\n            const localAudioLevels = this._localAudioLevelCache[userID];\n\n            if (!Array.isArray(localAudioLevels)) {\n                this._localAudioLevelCache[userID] = [ ];\n            } else if (localAudioLevels.length >= NUMBER_OF_LOCAL_SAMPLES) {\n                localAudioLevels.shift();\n            }\n\n            this._localAudioLevelCache[userID].push(avgAudioLevels[userID]);\n        });\n\n\n        Object.keys(this._audioProblemCandidates).forEach(userID => {\n            const { localAudioLevels, remoteAudioLevels } = this._audioProblemCandidates[userID];\n\n            localAudioLevels.push(avgAudioLevels[userID]);\n\n            if (localAudioLevels.length === NUMBER_OF_LOCAL_SAMPLES) {\n                if (localAudioLevels.every(audioLevel => typeof audioLevel === 'undefined' || audioLevel === 0)) {\n                    const localAudioLevelsString = JSON.stringify(localAudioLevels);\n\n                    Statistics.sendAnalytics(\n                        createAudioOutputProblemEvent(userID, localAudioLevelsString, remoteAudioLevels));\n                    logger.warn(`A potential problem is detected with the audio output for participant ${\n                        userID}, local audio levels: ${localAudioLevelsString}, remote audio levels: ${\n                        remoteAudioLevels}`);\n                    this._reportedParticipants.push(userID);\n                    this._clearUserData(userID);\n                }\n\n                delete this._audioProblemCandidates[userID];\n            }\n        });\n    }\n\n    /**\n     * Clears the data stored for a participant.\n     *\n     * @param {string} userID - The id of the participant.\n     * @returns {void}\n     */\n    _clearUserData(userID) {\n        delete this._localAudioLevelCache[userID];\n    }\n\n    /**\n     * Disposes the allocated resources.\n     *\n     * @returns {void}\n     */\n    dispose() {\n        this._conference.off(ConnectionQualityEvents.REMOTE_STATS_UPDATED, this._onRemoteAudioLevelReceived);\n        this._conference.off(ConferenceEvents.USER_LEFT, this._clearUserData);\n        this._conference.statistics.removeConnectionStatsListener(this._onLocalAudioLevelsReport);\n        this._localAudioLevelCache = undefined;\n        this._audioProblemCandidates = undefined;\n        this._reportedParticipants = undefined;\n        this._numberOfRemoteAudioLevelsReceived = undefined;\n        this._conference = undefined;\n    }\n}\n","/* global __filename */\n\nimport { createRtpStatsEvent } from '../../service/statistics/AnalyticsEvents';\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as ConnectionQualityEvents\n    from '../../service/connectivity/ConnectionQualityEvents';\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport browser from '../browser';\nimport Statistics from './statistics';\nimport * as VideoType from '../../service/RTC/VideoType';\n\nconst logger = getLogger(__filename);\n\n/**\n * This will calculate an average for one, named stat and submit it to\n * the analytics module when requested. It automatically counts the samples.\n */\nclass AverageStatReport {\n    /**\n     * Creates new <tt>AverageStatReport</tt> for given name.\n     * @param {string} name that's the name of the event that will be reported\n     * to the analytics module.\n     */\n    constructor(name) {\n        this.name = name;\n        this.count = 0;\n        this.sum = 0;\n        this.samples = [];\n    }\n\n    /**\n     * Adds the next value that will be included in the average when\n     * {@link calculate} is called.\n     * @param {number} nextValue\n     */\n    addNext(nextValue) {\n        if (typeof nextValue !== 'number') {\n            logger.error(\n                `${this.name} - invalid value for idx: ${this.count}`,\n                nextValue);\n        } else if (!isNaN(nextValue)) {\n            this.sum += nextValue;\n            this.samples.push(nextValue);\n            this.count += 1;\n        }\n    }\n\n    /**\n     * Calculates an average for the samples collected using {@link addNext}.\n     * @return {number|NaN} an average of all collected samples or <tt>NaN</tt>\n     * if no samples were collected.\n     */\n    calculate() {\n        return this.sum / this.count;\n    }\n\n    /**\n     * Appends the report to the analytics \"data\" object. The object will be\n     * set under <tt>prefix</tt> + {@link this.name} key.\n     * @param {Object} report the analytics \"data\" object\n     */\n    appendReport(report) {\n        report[`${this.name}_avg`] = this.calculate();\n        report[`${this.name}_samples`] = JSON.stringify(this.samples);\n    }\n\n    /**\n     * Clears all memory of any samples collected, so that new average can be\n     * calculated using this instance.\n     */\n    reset() {\n        this.samples = [];\n        this.sum = 0;\n        this.count = 0;\n    }\n}\n\n/**\n * Class gathers the stats that are calculated and reported for a\n * {@link TraceablePeerConnection} even if it's not currently active. For\n * example we want to monitor RTT for the JVB connection while in P2P mode.\n */\nclass ConnectionAvgStats {\n    /**\n     * Creates new <tt>ConnectionAvgStats</tt>\n     * @param {AvgRTPStatsReporter} avgRtpStatsReporter\n     * @param {boolean} isP2P\n     * @param {number} n the number of samples, before arithmetic mean is to be\n     * calculated and values submitted to the analytics module.\n     */\n    constructor(avgRtpStatsReporter, isP2P, n) {\n        /**\n         * Is this instance for JVB or P2P connection ?\n         * @type {boolean}\n         */\n        this.isP2P = isP2P;\n\n        /**\n         * How many samples are to be included in arithmetic mean calculation.\n         * @type {number}\n         * @private\n         */\n        this._n = n;\n\n        /**\n         * The current sample index. Starts from 0 and goes up to {@link _n})\n         * when analytics report will be submitted.\n         * @type {number}\n         * @private\n         */\n        this._sampleIdx = 0;\n\n        /**\n         * Average round trip time reported by the ICE candidate pair.\n         * @type {AverageStatReport}\n         */\n        this._avgRTT = new AverageStatReport('rtt');\n\n        /**\n         * Map stores average RTT to the JVB reported by remote participants.\n         * Mapped per participant id {@link JitsiParticipant.getId}.\n         *\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\n         * <tt>false</tt>.\n         *\n         * @type {Map<string,AverageStatReport>}\n         * @private\n         */\n        this._avgRemoteRTTMap = new Map();\n\n        /**\n         * The conference for which stats will be collected and reported.\n         * @type {JitsiConference}\n         * @private\n         */\n        this._avgRtpStatsReporter = avgRtpStatsReporter;\n\n        /**\n         * The latest average E2E RTT for the JVB connection only.\n         *\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\n         * <tt>false</tt>.\n         *\n         * @type {number}\n         */\n        this._avgEnd2EndRTT = undefined;\n\n        this._onConnectionStats = (tpc, stats) => {\n            if (this.isP2P === tpc.isP2P) {\n                this._calculateAvgStats(stats);\n            }\n        };\n\n        const conference = avgRtpStatsReporter._conference;\n\n        conference.statistics.addConnectionStatsListener(\n            this._onConnectionStats);\n\n        if (!this.isP2P) {\n            this._onUserLeft = id => this._avgRemoteRTTMap.delete(id);\n            conference.on(ConferenceEvents.USER_LEFT, this._onUserLeft);\n\n            this._onRemoteStatsUpdated\n                = (id, data) => this._processRemoteStats(id, data);\n            conference.on(\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\n                this._onRemoteStatsUpdated);\n        }\n    }\n\n    /**\n     * Processes next batch of stats.\n     * @param {go figure} data\n     * @private\n     */\n    _calculateAvgStats(data) {\n        if (!data) {\n            logger.error('No stats');\n\n            return;\n        }\n\n        if (browser.supportsRTTStatistics()) {\n            if (data.transport && data.transport.length) {\n                this._avgRTT.addNext(data.transport[0].rtt);\n            }\n        }\n\n        this._sampleIdx += 1;\n\n        if (this._sampleIdx >= this._n) {\n            if (browser.supportsRTTStatistics()) {\n                const conference = this._avgRtpStatsReporter._conference;\n\n                const batchReport = {\n                    p2p: this.isP2P,\n                    'conference_size': conference.getParticipantCount()\n                };\n\n                if (data.transport && data.transport.length) {\n                    Object.assign(batchReport, {\n                        'local_candidate_type':\n                            data.transport[0].localCandidateType,\n                        'remote_candidate_type':\n                            data.transport[0].remoteCandidateType,\n                        'transport_type': data.transport[0].type\n                    });\n                }\n\n                this._avgRTT.appendReport(batchReport);\n\n                if (this.isP2P) {\n                    // Report RTT diff only for P2P.\n                    const jvbEnd2EndRTT = this\n                        ._avgRtpStatsReporter.jvbStatsMonitor._avgEnd2EndRTT;\n\n                    if (!isNaN(jvbEnd2EndRTT)) {\n                        // eslint-disable-next-line dot-notation\n                        batchReport['rtt_diff']\n                            = this._avgRTT.calculate() - jvbEnd2EndRTT;\n                    }\n                } else {\n                    // Report end to end RTT only for JVB.\n                    const avgRemoteRTT = this._calculateAvgRemoteRTT();\n                    const avgLocalRTT = this._avgRTT.calculate();\n\n                    this._avgEnd2EndRTT = avgLocalRTT + avgRemoteRTT;\n\n                    if (!isNaN(avgLocalRTT) && !isNaN(avgRemoteRTT)) {\n                        // eslint-disable-next-line dot-notation\n                        batchReport['end2end_rtt_avg'] = this._avgEnd2EndRTT;\n                    }\n                }\n\n                Statistics.sendAnalytics(createRtpStatsEvent(batchReport));\n            }\n\n            this._resetAvgStats();\n        }\n    }\n\n    /**\n     * Calculates arithmetic mean of all RTTs towards the JVB reported by\n     * participants.\n     * @return {number|NaN} NaN if not available (not enough data)\n     * @private\n     */\n    _calculateAvgRemoteRTT() {\n        let count = 0, sum = 0;\n\n        // FIXME should we ignore RTT for participant\n        // who \"is having connectivity issues\" ?\n        for (const remoteAvg of this._avgRemoteRTTMap.values()) {\n            const avg = remoteAvg.calculate();\n\n            if (!isNaN(avg)) {\n                sum += avg;\n                count += 1;\n                remoteAvg.reset();\n            }\n        }\n\n        return sum / count;\n    }\n\n    /**\n     * Processes {@link ConnectionQualityEvents.REMOTE_STATS_UPDATED} to analyse\n     * RTT towards the JVB reported by each participant.\n     * @param {string} id {@link JitsiParticipant.getId}\n     * @param {go figure in ConnectionQuality.js} data\n     * @private\n     */\n    _processRemoteStats(id, data) {\n        const validData = typeof data.jvbRTT === 'number';\n        let rttAvg = this._avgRemoteRTTMap.get(id);\n\n        if (!rttAvg && validData) {\n            rttAvg = new AverageStatReport(`${id}_stat_rtt`);\n            this._avgRemoteRTTMap.set(id, rttAvg);\n        }\n\n        if (validData) {\n            rttAvg.addNext(data.jvbRTT);\n        } else if (rttAvg) {\n            this._avgRemoteRTTMap.delete(id);\n        }\n    }\n\n    /**\n     * Reset cache of all averages and {@link _sampleIdx}.\n     * @private\n     */\n    _resetAvgStats() {\n        this._avgRTT.reset();\n        if (this._avgRemoteRTTMap) {\n            this._avgRemoteRTTMap.clear();\n        }\n        this._sampleIdx = 0;\n    }\n\n    /**\n     *\n     */\n    dispose() {\n\n        const conference = this._avgRtpStatsReporter._conference;\n\n        conference.statistics.removeConnectionStatsListener(\n            this._onConnectionStats);\n        if (!this.isP2P) {\n            conference.off(\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\n                this._onRemoteStatsUpdated);\n            conference.off(\n                ConferenceEvents.USER_LEFT,\n                this._onUserLeft);\n        }\n    }\n}\n\n/**\n * Reports average RTP statistics values (arithmetic mean) to the analytics\n * module for things like bit rate, bandwidth, packet loss etc. It keeps track\n * of the P2P vs JVB conference modes and submits the values under different\n * namespaces (the events for P2P mode have 'p2p.' prefix). Every switch between\n * P2P mode resets the data collected so far and averages are calculated from\n * scratch.\n */\nexport default class AvgRTPStatsReporter {\n    /**\n     * Creates new instance of <tt>AvgRTPStatsReporter</tt>\n     * @param {JitsiConference} conference\n     * @param {number} n the number of samples, before arithmetic mean is to be\n     * calculated and values submitted to the analytics module.\n     */\n    constructor(conference, n) {\n        /**\n         * How many {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED} samples\n         * are to be included in arithmetic mean calculation.\n         * @type {number}\n         * @private\n         */\n        this._n = n;\n\n        if (n > 0) {\n            logger.info(`Avg RTP stats will be calculated every ${n} samples`);\n        } else {\n            logger.info('Avg RTP stats reports are disabled.');\n\n            // Do not initialize\n            return;\n        }\n\n        /**\n         * The current sample index. Starts from 0 and goes up to {@link _n})\n         * when analytics report will be submitted.\n         * @type {number}\n         * @private\n         */\n        this._sampleIdx = 0;\n\n        /**\n         * The conference for which stats will be collected and reported.\n         * @type {JitsiConference}\n         * @private\n         */\n        this._conference = conference;\n\n        /**\n         * Average audio upload bitrate\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgAudioBitrateUp\n            = new AverageStatReport('bitrate_audio_upload');\n\n        /**\n         * Average audio download bitrate\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgAudioBitrateDown\n            = new AverageStatReport('bitrate_audio_download');\n\n        /**\n         * Average video upload bitrate\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgVideoBitrateUp\n            = new AverageStatReport('bitrate_video_upload');\n\n        /**\n         * Average video download bitrate\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgVideoBitrateDown\n            = new AverageStatReport('bitrate_video_download');\n\n        /**\n         * Average upload bandwidth\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgBandwidthUp\n            = new AverageStatReport('bandwidth_upload');\n\n        /**\n         * Average download bandwidth\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgBandwidthDown\n            = new AverageStatReport('bandwidth_download');\n\n        /**\n         * Average total packet loss\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgPacketLossTotal\n            = new AverageStatReport('packet_loss_total');\n\n        /**\n         * Average upload packet loss\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgPacketLossUp\n            = new AverageStatReport('packet_loss_upload');\n\n        /**\n         * Average download packet loss\n         * XXX What are the units?\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgPacketLossDown\n            = new AverageStatReport('packet_loss_download');\n\n        /**\n         * Average FPS for remote videos\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteFPS = new AverageStatReport('framerate_remote');\n\n        /**\n         * Average FPS for remote screen streaming videos (reported only if not\n         * a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteScreenFPS\n            = new AverageStatReport('framerate_screen_remote');\n\n        /**\n         * Average FPS for local video (camera)\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalFPS = new AverageStatReport('framerate_local');\n\n        /**\n         * Average FPS for local screen streaming video (reported only if not\n         * a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalScreenFPS\n            = new AverageStatReport('framerate_screen_local');\n\n        /**\n         * Average pixels for remote screen streaming videos (reported only if\n         * not a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteCameraPixels\n            = new AverageStatReport('pixels_remote');\n\n        /**\n         * Average pixels for remote screen streaming videos (reported only if\n         * not a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteScreenPixels\n            = new AverageStatReport('pixels_screen_remote');\n\n        /**\n         * Average pixels for local video (camera)\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalCameraPixels\n            = new AverageStatReport('pixels_local');\n\n        /**\n         * Average pixels for local screen streaming video (reported only if not\n         * a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalScreenPixels\n            = new AverageStatReport('pixels_screen_local');\n\n        /**\n         * Average connection quality as defined by\n         * the {@link ConnectionQuality} module.\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgCQ = new AverageStatReport('connection_quality');\n\n        this._onLocalStatsUpdated = data => this._calculateAvgStats(data);\n        conference.on(\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n            this._onLocalStatsUpdated);\n\n        this._onP2PStatusChanged = () => {\n            logger.debug('Resetting average stats calculation');\n            this._resetAvgStats();\n            this.jvbStatsMonitor._resetAvgStats();\n            this.p2pStatsMonitor._resetAvgStats();\n        };\n        conference.on(\n            ConferenceEvents.P2P_STATUS,\n            this._onP2PStatusChanged);\n\n        this._onJvb121StatusChanged = (oldStatus, newStatus) => {\n            // We want to reset only on the transition from false => true,\n            // because otherwise those stats are resetted on JVB <=> P2P\n            // transition.\n            if (newStatus === true) {\n                logger.info('Resetting JVB avg RTP stats');\n                this._resetAvgJvbStats();\n            }\n        };\n        conference.on(\n            ConferenceEvents.JVB121_STATUS,\n            this._onJvb121StatusChanged);\n\n        this.jvbStatsMonitor\n            = new ConnectionAvgStats(this, false /* JVB */, n);\n\n        this.p2pStatsMonitor\n            = new ConnectionAvgStats(this, true /* P2P */, n);\n    }\n\n    /**\n     * Processes next batch of stats reported on\n     * {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED}.\n     * @param {go figure} data\n     * @private\n     */\n    _calculateAvgStats(data) {\n\n        if (!data) {\n            logger.error('No stats');\n\n            return;\n        }\n\n        const isP2P = this._conference.isP2PActive();\n        const confSize = this._conference.getParticipantCount();\n\n        if (!isP2P && confSize < 2) {\n\n            // There's no point in collecting stats for a JVB conference of 1.\n            // That happens for short period of time after everyone leaves\n            // the room, until Jicofo terminates the session.\n            return;\n        }\n\n        /* Uncomment to figure out stats structure\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                logger.info(`local stat ${key}: `, data[key]);\n            }\n        } */\n\n        const bitrate = data.bitrate;\n        const bandwidth = data.bandwidth;\n        const packetLoss = data.packetLoss;\n        const frameRate = data.framerate;\n        const resolution = data.resolution;\n\n        if (!bitrate) {\n            logger.error('No \"bitrate\"');\n\n            return;\n        } else if (!bandwidth) {\n            logger.error('No \"bandwidth\"');\n\n            return;\n        } else if (!packetLoss) {\n            logger.error('No \"packetloss\"');\n\n            return;\n        } else if (!frameRate) {\n            logger.error('No \"framerate\"');\n\n            return;\n        } else if (!resolution) {\n            logger.error('No resolution');\n\n            return;\n        }\n\n        this._avgAudioBitrateUp.addNext(bitrate.audio.upload);\n        this._avgAudioBitrateDown.addNext(bitrate.audio.download);\n\n        this._avgVideoBitrateUp.addNext(bitrate.video.upload);\n        this._avgVideoBitrateDown.addNext(bitrate.video.download);\n\n        if (browser.supportsBandwidthStatistics()) {\n            this._avgBandwidthUp.addNext(bandwidth.upload);\n            this._avgBandwidthDown.addNext(bandwidth.download);\n        }\n\n        this._avgPacketLossUp.addNext(packetLoss.upload);\n        this._avgPacketLossDown.addNext(packetLoss.download);\n        this._avgPacketLossTotal.addNext(packetLoss.total);\n\n        this._avgCQ.addNext(data.connectionQuality);\n\n        if (frameRate) {\n            this._avgRemoteFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, false /* remote */, VideoType.CAMERA));\n            this._avgRemoteScreenFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, false /* remote */, VideoType.DESKTOP));\n\n            this._avgLocalFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, true /* local */, VideoType.CAMERA));\n            this._avgLocalScreenFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, true /* local */, VideoType.DESKTOP));\n        }\n\n        if (resolution) {\n            this._avgRemoteCameraPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, false /* remote */, VideoType.CAMERA));\n\n            this._avgRemoteScreenPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, false /* remote */, VideoType.DESKTOP));\n\n            this._avgLocalCameraPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, true /* local */, VideoType.CAMERA));\n\n            this._avgLocalScreenPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, true /* local */, VideoType.DESKTOP));\n        }\n\n        this._sampleIdx += 1;\n\n        if (this._sampleIdx >= this._n) {\n\n            const batchReport = {\n                p2p: isP2P,\n                'conference_size': confSize\n            };\n\n            if (data.transport && data.transport.length) {\n                Object.assign(batchReport, {\n                    'local_candidate_type':\n                        data.transport[0].localCandidateType,\n                    'remote_candidate_type':\n                        data.transport[0].remoteCandidateType,\n                    'transport_type': data.transport[0].type\n                });\n            }\n\n            this._avgAudioBitrateUp.appendReport(batchReport);\n            this._avgAudioBitrateDown.appendReport(batchReport);\n\n            this._avgVideoBitrateUp.appendReport(batchReport);\n            this._avgVideoBitrateDown.appendReport(batchReport);\n\n            if (browser.supportsBandwidthStatistics()) {\n                this._avgBandwidthUp.appendReport(batchReport);\n                this._avgBandwidthDown.appendReport(batchReport);\n            }\n            this._avgPacketLossUp.appendReport(batchReport);\n            this._avgPacketLossDown.appendReport(batchReport);\n            this._avgPacketLossTotal.appendReport(batchReport);\n\n            this._avgRemoteFPS.appendReport(batchReport);\n            if (!isNaN(this._avgRemoteScreenFPS.calculate())) {\n                this._avgRemoteScreenFPS.appendReport(batchReport);\n            }\n            this._avgLocalFPS.appendReport(batchReport);\n            if (!isNaN(this._avgLocalScreenFPS.calculate())) {\n                this._avgLocalScreenFPS.appendReport(batchReport);\n            }\n\n            this._avgRemoteCameraPixels.appendReport(batchReport);\n            if (!isNaN(this._avgRemoteScreenPixels.calculate())) {\n                this._avgRemoteScreenPixels.appendReport(batchReport);\n            }\n            this._avgLocalCameraPixels.appendReport(batchReport);\n            if (!isNaN(this._avgLocalScreenPixels.calculate())) {\n                this._avgLocalScreenPixels.appendReport(batchReport);\n            }\n\n            this._avgCQ.appendReport(batchReport);\n\n            Statistics.sendAnalytics(createRtpStatsEvent(batchReport));\n\n            this._resetAvgStats();\n        }\n    }\n\n    /**\n     * Calculates average number of pixels for the report\n     *\n     * @param {map} peerResolutions a map of peer resolutions\n     * @param {boolean} isLocal if the average is to be calculated for the local\n     * video or <tt>false</tt> if for remote videos.\n     * @param {VideoType} videoType\n     * @return {number|NaN} average number of pixels or <tt>NaN</tt> if there\n     * are no samples.\n     * @private\n     */\n    _calculateAvgVideoPixels(peerResolutions, isLocal, videoType) {\n        let peerPixelsSum = 0;\n        let peerCount = 0;\n        const myID = this._conference.myUserId();\n\n        for (const peerID of Object.keys(peerResolutions)) {\n            if (isLocal ? peerID === myID : peerID !== myID) {\n                const participant\n                    = isLocal\n                        ? null\n                        : this._conference.getParticipantById(peerID);\n                const videosResolution = peerResolutions[peerID];\n\n                // Do not continue without participant for non local peerID\n                if ((isLocal || participant) && videosResolution) {\n                    const peerAvgPixels = this._calculatePeerAvgVideoPixels(\n                        videosResolution, participant, videoType);\n\n                    if (!isNaN(peerAvgPixels)) {\n                        peerPixelsSum += peerAvgPixels;\n                        peerCount += 1;\n                    }\n                }\n            }\n        }\n\n        return peerPixelsSum / peerCount;\n    }\n\n    /**\n     * Calculate average pixels for either remote or local participant\n     * @param {object} videos maps resolution per video SSRC\n     * @param {JitsiParticipant|null} participant remote participant or\n     * <tt>null</tt> for local video pixels calculation.\n     * @param {VideoType} videoType the type of the video for which an average\n     * will be calculated.\n     * @return {number|NaN} average video pixels of all participant's videos or\n     * <tt>NaN</tt> if currently not available\n     * @private\n     */\n    _calculatePeerAvgVideoPixels(videos, participant, videoType) {\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\n        let videoTracks = null;\n\n        // NOTE that this method is supposed to be called for the stats\n        // received from the current peerconnection.\n        const tpc = this._conference.getActivePeerConnection();\n\n        if (participant) {\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\n            if (videoTracks) {\n                ssrcs\n                    = ssrcs.filter(\n                        ssrc => videoTracks.find(\n                            track =>\n                                !track.isMuted()\n                                    && track.getSSRC() === ssrc\n                                    && track.videoType === videoType));\n            }\n        } else {\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\n            ssrcs\n                = ssrcs.filter(\n                    ssrc => videoTracks.find(\n                        track =>\n                            !track.isMuted()\n                                && tpc.getLocalSSRC(track) === ssrc\n                                && track.videoType === videoType));\n        }\n\n        let peerPixelsSum = 0;\n        let peerSsrcCount = 0;\n\n        for (const ssrc of ssrcs) {\n            const peerSsrcPixels\n                = Number(videos[ssrc].height) * Number(videos[ssrc].width);\n\n            // FPS is reported as 0 for users with no video\n            if (!isNaN(peerSsrcPixels) && peerSsrcPixels > 0) {\n                peerPixelsSum += peerSsrcPixels;\n                peerSsrcCount += 1;\n            }\n        }\n\n        return peerPixelsSum / peerSsrcCount;\n    }\n\n\n    /**\n     * Calculates average FPS for the report\n     * @param {go figure} frameRate\n     * @param {boolean} isLocal if the average is to be calculated for the local\n     * video or <tt>false</tt> if for remote videos.\n     * @param {VideoType} videoType\n     * @return {number|NaN} average FPS or <tt>NaN</tt> if there are no samples.\n     * @private\n     */\n    _calculateAvgVideoFps(frameRate, isLocal, videoType) {\n        let peerFpsSum = 0;\n        let peerCount = 0;\n        const myID = this._conference.myUserId();\n\n        for (const peerID of Object.keys(frameRate)) {\n            if (isLocal ? peerID === myID : peerID !== myID) {\n                const participant\n                    = isLocal\n                        ? null : this._conference.getParticipantById(peerID);\n                const videosFps = frameRate[peerID];\n\n                // Do not continue without participant for non local peerID\n                if ((isLocal || participant) && videosFps) {\n                    const peerAvgFPS\n                        = this._calculatePeerAvgVideoFps(\n                            videosFps, participant, videoType);\n\n                    if (!isNaN(peerAvgFPS)) {\n                        peerFpsSum += peerAvgFPS;\n                        peerCount += 1;\n                    }\n                }\n            }\n        }\n\n        return peerFpsSum / peerCount;\n    }\n\n    /**\n     * Calculate average FPS for either remote or local participant\n     * @param {object} videos maps FPS per video SSRC\n     * @param {JitsiParticipant|null} participant remote participant or\n     * <tt>null</tt> for local FPS calculation.\n     * @param {VideoType} videoType the type of the video for which an average\n     * will be calculated.\n     * @return {number|NaN} average FPS of all participant's videos or\n     * <tt>NaN</tt> if currently not available\n     * @private\n     */\n    _calculatePeerAvgVideoFps(videos, participant, videoType) {\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\n        let videoTracks = null;\n\n        // NOTE that this method is supposed to be called for the stats\n        // received from the current peerconnection.\n        const tpc = this._conference.getActivePeerConnection();\n\n        if (participant) {\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\n            if (videoTracks) {\n                ssrcs\n                    = ssrcs.filter(\n                        ssrc => videoTracks.find(\n                            track => !track.isMuted()\n                                && track.getSSRC() === ssrc\n                                && track.videoType === videoType));\n            }\n        } else {\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\n            ssrcs\n                = ssrcs.filter(\n                    ssrc => videoTracks.find(\n                        track => !track.isMuted()\n                            && tpc.getLocalSSRC(track) === ssrc\n                            && track.videoType === videoType));\n        }\n\n        let peerFpsSum = 0;\n        let peerSsrcCount = 0;\n\n        for (const ssrc of ssrcs) {\n            const peerSsrcFps = Number(videos[ssrc]);\n\n            // FPS is reported as 0 for users with no video\n            if (!isNaN(peerSsrcFps) && peerSsrcFps > 0) {\n                peerFpsSum += peerSsrcFps;\n                peerSsrcCount += 1;\n            }\n        }\n\n        return peerFpsSum / peerSsrcCount;\n    }\n\n    /**\n     * Resets the stats related to JVB connection. Must not be called when in\n     * P2P mode, because then the {@link AverageStatReport} instances are\n     * tracking P2P stats. Note that this should never happen unless something\n     * is wrong with the P2P and JVB121 events.\n     * @private\n     */\n    _resetAvgJvbStats() {\n        this._resetAvgStats();\n        this.jvbStatsMonitor._resetAvgStats();\n    }\n\n    /**\n     * Reset cache of all averages and {@link _sampleIdx}.\n     * @private\n     */\n    _resetAvgStats() {\n        this._avgAudioBitrateUp.reset();\n        this._avgAudioBitrateDown.reset();\n\n        this._avgVideoBitrateUp.reset();\n        this._avgVideoBitrateDown.reset();\n\n        this._avgBandwidthUp.reset();\n        this._avgBandwidthDown.reset();\n\n        this._avgPacketLossUp.reset();\n        this._avgPacketLossDown.reset();\n        this._avgPacketLossTotal.reset();\n\n        this._avgRemoteFPS.reset();\n        this._avgRemoteScreenFPS.reset();\n        this._avgLocalFPS.reset();\n        this._avgLocalScreenFPS.reset();\n\n        this._avgRemoteCameraPixels.reset();\n        this._avgRemoteScreenPixels.reset();\n        this._avgLocalCameraPixels.reset();\n        this._avgLocalScreenPixels.reset();\n\n        this._avgCQ.reset();\n\n        this._sampleIdx = 0;\n    }\n\n    /**\n     * Unregisters all event listeners and stops working.\n     */\n    dispose() {\n        this._conference.off(\n            ConferenceEvents.P2P_STATUS,\n            this._onP2PStatusChanged);\n        this._conference.off(\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n            this._onLocalStatsUpdated);\n        this._conference.off(\n            ConferenceEvents.JVB121_STATUS,\n            this._onJvb121StatusChanged);\n        this.jvbStatsMonitor.dispose();\n        this.p2pStatsMonitor.dispose();\n    }\n}\n","/* global callstats */\n\nimport browser from '../browser';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * We define enumeration of wrtcFuncNames as we need them before\n * callstats is initialized to queue events.\n * @const\n * @see http://www.callstats.io/api/#enumeration-of-wrtcfuncnames\n */\nconst wrtcFuncNames = {\n    createOffer: 'createOffer',\n    createAnswer: 'createAnswer',\n    setLocalDescription: 'setLocalDescription',\n    setRemoteDescription: 'setRemoteDescription',\n    addIceCandidate: 'addIceCandidate',\n    getUserMedia: 'getUserMedia',\n    iceConnectionFailure: 'iceConnectionFailure',\n    signalingError: 'signalingError',\n    applicationLog: 'applicationLog'\n};\n\n/**\n * We define enumeration of fabricEvent as we need them before\n * callstats is initialized to queue events.\n * @const\n * @see http://www.callstats.io/api/#enumeration-of-fabricevent\n */\nconst fabricEvent = {\n    fabricHold: 'fabricHold',\n    fabricResume: 'fabricResume',\n    audioMute: 'audioMute',\n    audioUnmute: 'audioUnmute',\n    videoPause: 'videoPause',\n    videoResume: 'videoResume',\n    fabricUsageEvent: 'fabricUsageEvent',\n    fabricStats: 'fabricStats',\n    fabricTerminated: 'fabricTerminated',\n    screenShareStart: 'screenShareStart',\n    screenShareStop: 'screenShareStop',\n    dominantSpeaker: 'dominantSpeaker',\n    activeDeviceList: 'activeDeviceList'\n};\n\n/**\n * The user id to report to callstats as destination.\n * @type {string}\n */\nconst DEFAULT_REMOTE_USER = 'jitsi';\n\n/**\n * Type of pending reports, can be event or an error.\n * @type {{ERROR: string, EVENT: string}}\n */\nconst reportType = {\n    ERROR: 'error',\n    EVENT: 'event',\n    MST_WITH_USERID: 'mstWithUserID'\n};\n\n/**\n * Set of currently existing {@link CallStats} instances.\n * @type {Set<CallStats>}\n */\nlet _fabrics;\n\n/**\n * An instance of this class is a wrapper for the CallStats API fabric. A fabric\n * reports one peer connection the the CallStats backend and is allocated with\n * {@link callstats.addNewFabric}. It has a bunch of instance methods for\n * reporting various events. A fabric is considered disposed when\n * {@link CallStats.sendTerminateEvent} is executed.\n *\n * Currently only one backend instance can be created ever and it's done using\n * {@link CallStats.initBackend}. At the time of this writing there is no way to\n * explicitly shutdown the backend, but it's supposed to close it's connection\n * automatically, after all fabrics have been terminated.\n */\nexport default class CallStats {\n    /**\n     * A callback passed to {@link callstats.addNewFabric}.\n     * @param {string} error 'success' means ok\n     * @param {string} msg some more details\n     * @private\n     */\n    static _addNewFabricCallback(error, msg) {\n        if (CallStats.backend && error !== 'success') {\n            logger.error(`Monitoring status: ${error} msg: ${msg}`);\n        }\n    }\n\n    /**\n     * Callback passed to {@link callstats.initialize} (backend initialization)\n     * @param {string} error 'success' means ok\n     * @param {String} msg\n     * @private\n     */\n    static _initCallback(error, msg) {\n        logger.log(`CallStats Status: err=${error} msg=${msg}`);\n\n        // there is no lib, nothing to report to\n        if (error !== 'success') {\n            return;\n        }\n\n        CallStats.backendInitialized = true;\n\n        // I hate that\n        let atLeastOneFabric = false;\n        let defaultInstance = null;\n\n        for (const callStatsInstance of CallStats.fabrics.values()) {\n            if (!callStatsInstance.hasFabric) {\n                logger.debug('addNewFabric - initCallback');\n                if (callStatsInstance._addNewFabric()) {\n                    atLeastOneFabric = true;\n                    if (!defaultInstance) {\n                        defaultInstance = callStatsInstance;\n                    }\n                }\n            }\n        }\n\n        if (!atLeastOneFabric) {\n            return;\n        }\n\n        CallStats._emptyReportQueue(defaultInstance);\n    }\n\n    /**\n     * Empties report queue.\n     *\n     * @param {CallStats} csInstance - The callstats instance.\n     * @private\n     */\n    static _emptyReportQueue(csInstance) {\n        // There is no conference ID nor a PeerConnection available when some of\n        // the events are scheduled on the reportsQueue, so those will be\n        // reported on the first initialized fabric.\n        const defaultConfID = csInstance.confID;\n        const defaultPC = csInstance.peerconnection;\n\n        // notify callstats about failures if there were any\n        for (const report of CallStats.reportsQueue) {\n            if (report.type === reportType.ERROR) {\n                const errorData = report.data;\n\n                CallStats._reportError(\n                    csInstance,\n                    errorData.type,\n                    errorData.error,\n                    errorData.pc || defaultPC);\n            } else if (report.type === reportType.EVENT) {\n                // if we have and event to report and we failed to add\n                // fabric this event will not be reported anyway, returning\n                // an error\n                const eventData = report.data;\n\n                CallStats.backend.sendFabricEvent(\n                    report.pc || defaultPC,\n                    eventData.event,\n                    defaultConfID,\n                    eventData.eventData);\n            } else if (report.type === reportType.MST_WITH_USERID) {\n                const data = report.data;\n\n                CallStats.backend.associateMstWithUserID(\n                    report.pc || defaultPC,\n                    data.callStatsId,\n                    defaultConfID,\n                    data.ssrc,\n                    data.usageLabel,\n                    data.containerId\n                );\n            }\n        }\n        CallStats.reportsQueue.length = 0;\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Reports an error to callstats.\n     *\n     * @param {CallStats} [cs]\n     * @param type the type of the error, which will be one of the wrtcFuncNames\n     * @param error the error\n     * @param pc the peerconnection\n     * @private\n     */\n    static _reportError(cs, type, error, pc) {\n        let _error = error;\n\n        if (!_error) {\n            logger.warn('No error is passed!');\n            _error = new Error('Unknown error');\n        }\n        if (CallStats.backendInitialized && cs) {\n            CallStats.backend.reportError(pc, cs.confID, type, _error);\n        } else {\n            CallStats.reportsQueue.push({\n                type: reportType.ERROR,\n                data: {\n                    error: _error,\n                    pc,\n                    type\n                }\n            });\n        }\n\n        // else just ignore it\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Reports an error to callstats.\n     *\n     * @param {CallStats} cs\n     * @param event the type of the event, which will be one of the fabricEvent\n     * @param eventData additional data to pass to event\n     * @private\n     */\n    static _reportEvent(cs, event, eventData) {\n        const pc = cs && cs.peerconnection;\n        const confID = cs && cs.confID;\n\n        if (CallStats.backendInitialized && cs) {\n            CallStats.backend.sendFabricEvent(pc, event, confID, eventData);\n        } else {\n            CallStats.reportsQueue.push({\n                confID,\n                pc,\n                type: reportType.EVENT,\n                data: { event,\n                    eventData }\n            });\n        }\n    }\n\n    /**\n     * Wraps some of the CallStats API method and logs their calls with\n     * arguments on the debug logging level. Also wraps some of the backend\n     * methods execution into try catch blocks to not crash the app in case\n     * there is a problem with the backend itself.\n     * @param {callstats} theBackend\n     * @private\n     */\n    static _traceAndCatchBackendCalls(theBackend) {\n        const tryCatchMethods = [\n            'associateMstWithUserID',\n            'sendFabricEvent',\n            'sendUserFeedback'\n\n            // 'reportError', - this one needs special handling - see code below\n        ];\n\n        for (const methodName of tryCatchMethods) {\n            const originalMethod = theBackend[methodName];\n\n            theBackend[methodName] = function(...theArguments) {\n                try {\n                    return originalMethod.apply(theBackend, theArguments);\n                } catch (e) {\n                    GlobalOnErrorHandler.callErrorHandler(e);\n                }\n            };\n        }\n        const debugMethods = [\n            'associateMstWithUserID',\n            'sendFabricEvent',\n            'sendUserFeedback'\n\n            // 'reportError', - this one needs special handling - see code below\n        ];\n\n        for (const methodName of debugMethods) {\n            const originalMethod = theBackend[methodName];\n\n            theBackend[methodName] = function(...theArguments) {\n                logger.debug(methodName, theArguments);\n                originalMethod.apply(theBackend, theArguments);\n            };\n        }\n        const originalReportError = theBackend.reportError;\n\n        /* eslint-disable max-params */\n        theBackend.reportError = function(pc, cs, type, ...args) {\n            // Logs from the logger are submitted on the applicationLog event\n            // \"type\". Logging the arguments on the logger will create endless\n            // loop, because it will put all the logs to the logger queue again.\n            if (type === wrtcFuncNames.applicationLog) {\n                // NOTE otherArguments are not logged to the console on purpose\n                // to not log the whole log batch\n                // FIXME check the current logging level (currently not exposed\n                // by the logger implementation)\n                // NOTE it is not safe to log whole objects on react-native as\n                // those contain too many circular references and may crash\n                // the app.\n                if (!browser.isReactNative()) {\n                    console && console.debug('reportError', pc, cs, type);\n                }\n            } else {\n                logger.debug('reportError', pc, cs, type, ...args);\n            }\n            try {\n                originalReportError.call(theBackend, pc, cs, type, ...args);\n            } catch (exception) {\n                if (type === wrtcFuncNames.applicationLog) {\n                    console && console.error('reportError', exception);\n                } else {\n                    GlobalOnErrorHandler.callErrorHandler(exception);\n                }\n            }\n        };\n\n        /* eslint-enable max-params */\n    }\n\n    /**\n     * Returns the Set with the currently existing {@link CallStats} instances.\n     * Lazily initializes the Set to allow any Set polyfills to be applied.\n     * @type {Set<CallStats>}\n     */\n    static get fabrics() {\n        if (!_fabrics) {\n            _fabrics = new Set();\n        }\n\n        return _fabrics;\n    }\n\n    /**\n     * Initializes the CallStats backend. Should be called only if\n     * {@link CallStats.isBackendInitialized} returns <tt>false</tt>.\n     * @param {object} options\n     * @param {String} options.callStatsID CallStats credentials - ID\n     * @param {String} options.callStatsSecret CallStats credentials - secret\n     * @param {string} options.aliasName the <tt>aliasName</tt> part of\n     * the <tt>userID</tt> aka endpoint ID, see CallStats docs for more info.\n     * @param {string} options.userName the <tt>userName</tt> part of\n     * the <tt>userID</tt> aka display name, see CallStats docs for more info.\n     *\n     */\n    static initBackend(options) {\n        if (CallStats.backend) {\n            throw new Error('CallStats backend has been initialized already!');\n        }\n        try {\n            const CallStatsBackend = callstats;\n\n            CallStats.backend = new CallStatsBackend();\n            CallStats._traceAndCatchBackendCalls(CallStats.backend);\n            CallStats.userID = {\n                aliasName: options.aliasName,\n                userName: options.userName\n            };\n            CallStats.callStatsID = options.callStatsID;\n            CallStats.callStatsSecret = options.callStatsSecret;\n\n            let configParams;\n\n            if (options.applicationName) {\n                configParams = {\n                    applicationVersion:\n                        `${options.applicationName} (${\n                            browser.getName()})`\n                };\n            }\n\n            if (options.confID) {\n                // we first check is there a tenant in the confID\n                const match = options.confID.match(/.*\\/(.*)\\/.*/);\n\n                // if there is no tenant, we will just set '/'\n                configParams.siteID = (match && match[1]) || '/';\n            }\n\n            // userID is generated or given by the origin server\n            CallStats.backend.initialize(\n                CallStats.callStatsID,\n                CallStats.callStatsSecret,\n                CallStats.userID,\n                CallStats._initCallback,\n                undefined,\n                configParams);\n\n            const getWiFiStatsMethod = options.getWiFiStatsMethod;\n\n            if (getWiFiStatsMethod) {\n                CallStats.backend.attachWifiStatsHandler(getWiFiStatsMethod);\n\n                getWiFiStatsMethod().then(result => {\n                    if (result) {\n                        logger.info('Reported wifi addresses:'\n                            , JSON.parse(result).addresses);\n                    }\n                })\n                .catch(() => {});// eslint-disable-line no-empty-function\n            }\n\n            return true;\n        } catch (e) {\n            // The callstats.io API failed to initialize (e.g. because its\n            // download did not succeed in general or on time). Further attempts\n            // to utilize it cannot possibly succeed.\n            GlobalOnErrorHandler.callErrorHandler(e);\n            CallStats.backend = null;\n            logger.error(e);\n\n            return false;\n        }\n    }\n\n    /**\n     * Checks if the CallStats backend has been created. It does not mean that\n     * it has been initialized, but only that the API instance has been\n     * allocated successfully.\n     * @return {boolean} <tt>true</tt> if backend exists or <tt>false</tt>\n     * otherwise\n     */\n    static isBackendInitialized() {\n        return Boolean(CallStats.backend);\n    }\n\n    /**\n     * Notifies CallStats about active device.\n     * @param {{deviceList: {String:String}}} devicesData list of devices with\n     * their data\n     * @param {CallStats} cs callstats instance related to the event\n     */\n    static sendActiveDeviceListEvent(devicesData, cs) {\n        CallStats._reportEvent(cs, fabricEvent.activeDeviceList, devicesData);\n    }\n\n    /**\n     * Notifies CallStats that there is a log we want to report.\n     *\n     * @param {Error} e error to send or {String} message\n     * @param {CallStats} cs callstats instance related to the error (optional)\n     */\n    static sendApplicationLog(e, cs) {\n        try {\n            CallStats._reportError(\n                cs,\n                wrtcFuncNames.applicationLog,\n                e,\n                cs && cs.peerconnection);\n        } catch (error) {\n            // If sendApplicationLog fails it should not be printed to\n            // the logger, because it will try to push the logs again\n            // (through sendApplicationLog) and an endless loop is created.\n            if (console && (typeof console.error === 'function')) {\n                // FIXME send analytics event as well\n                console.error('sendApplicationLog failed', error);\n            }\n        }\n    }\n\n    /**\n     * Sends the given feedback through CallStats.\n     *\n     * @param {string} conferenceID the conference ID for which the feedback\n     * will be reported.\n     * @param overall an integer between 1 and 5 indicating the\n     * user feedback\n     * @param comment detailed feedback from the user.\n     */\n    static sendFeedback(conferenceID, overall, comment) {\n        return new Promise((resolve, reject) => {\n            if (CallStats.backend) {\n                CallStats.backend.sendUserFeedback(\n                    conferenceID,\n                    {\n                        userID: CallStats.userID,\n                        overall,\n                        comment\n                    },\n                    (status, message) => {\n                        if (status === 'success') {\n                            resolve(message);\n                        } else {\n                            reject(message);\n                        }\n                    });\n            } else {\n                const reason = 'Failed to submit feedback to CallStats - no backend';\n\n                logger.error(reason);\n                reject(reason);\n            }\n        });\n    }\n\n    /**\n     * Notifies CallStats that getUserMedia failed.\n     *\n     * @param {Error} e error to send\n     * @param {CallStats} cs callstats instance related to the error (optional)\n     */\n    static sendGetUserMediaFailed(e, cs) {\n        CallStats._reportError(cs, wrtcFuncNames.getUserMedia, e, null);\n    }\n\n    /**\n     * Notifies CallStats for mute events\n     * @param mute {boolean} true for muted and false for not muted\n     * @param type {String} \"audio\"/\"video\"\n     * @param {CallStats} cs callstats instance related to the event\n     */\n    static sendMuteEvent(mute, type, cs) {\n        let event;\n\n        if (type === 'video') {\n            event = mute ? fabricEvent.videoPause : fabricEvent.videoResume;\n        } else {\n            event = mute ? fabricEvent.audioMute : fabricEvent.audioUnmute;\n        }\n\n        CallStats._reportEvent(cs, event);\n    }\n\n    /**\n     * Creates new CallStats instance that handles all callstats API calls for\n     * given {@link TraceablePeerConnection}. Each instance is meant to handle\n     * one CallStats fabric added with 'addFabric' API method for the\n     * {@link TraceablePeerConnection} instance passed in the constructor.\n     * @param {TraceablePeerConnection} tpc\n     * @param {Object} options\n     * @param {string} options.confID the conference ID that wil be used to\n     * report the session.\n     * @param {string} [options.remoteUserID='jitsi'] the remote user ID to\n     * which given <tt>tpc</tt> is connected.\n     */\n    constructor(tpc, options) {\n        this.confID = options.confID;\n        this.tpc = tpc;\n        this.peerconnection = tpc.peerconnection;\n        this.remoteUserID = options.remoteUserID || DEFAULT_REMOTE_USER;\n        this.hasFabric = false;\n\n        CallStats.fabrics.add(this);\n\n        if (CallStats.backendInitialized) {\n            this._addNewFabric();\n\n            // if this is the first fabric let's try to empty the\n            // report queue. Reports all events that we recorded between\n            // backend initialization and receiving the first fabric\n            if (CallStats.fabrics.size === 1) {\n                CallStats._emptyReportQueue(this);\n            }\n        }\n    }\n\n    /**\n     * Initializes CallStats fabric by calling \"addNewFabric\" for\n     * the peer connection associated with this instance.\n     * @return {boolean} true if the call was successful or false otherwise.\n     */\n    _addNewFabric() {\n        logger.info('addNewFabric', this.remoteUserID);\n        try {\n            const fabricAttributes = {\n                remoteEndpointType:\n                    this.tpc.isP2P\n                        ? CallStats.backend.endpointType.peer\n                        : CallStats.backend.endpointType.server\n            };\n            const ret\n                = CallStats.backend.addNewFabric(\n                    this.peerconnection,\n                    this.remoteUserID,\n                    CallStats.backend.fabricUsage.multiplex,\n                    this.confID,\n                    fabricAttributes,\n                    CallStats._addNewFabricCallback);\n\n            this.hasFabric = true;\n\n            const success = ret.status === 'success';\n\n            if (!success) {\n                logger.error('callstats fabric not initilized', ret.message);\n            }\n\n            return success;\n\n        } catch (error) {\n            GlobalOnErrorHandler.callErrorHandler(error);\n\n            return false;\n        }\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Lets CallStats module know where is given SSRC rendered by providing\n     * renderer tag ID.\n     * If the lib is not initialized yet queue the call for later, when it's\n     * ready.\n     * @param {number} ssrc the SSRC of the stream\n     * @param {boolean} isLocal indicates whether this the stream is local\n     * @param {string|null} streamEndpointId if the stream is not local the it\n     * needs to contain the stream owner's ID\n     * @param {string} usageLabel meaningful usage label of this stream like\n     *        'microphone', 'camera' or 'screen'.\n     * @param {string} containerId  the id of media 'audio' or 'video' tag which\n     *        renders the stream.\n     */\n    associateStreamWithVideoTag(\n            ssrc,\n            isLocal,\n            streamEndpointId,\n            usageLabel,\n            containerId) {\n        if (!CallStats.backend) {\n            return;\n        }\n\n        const callStatsId = isLocal ? CallStats.userID : streamEndpointId;\n\n        if (CallStats.backendInitialized) {\n            CallStats.backend.associateMstWithUserID(\n                this.peerconnection,\n                callStatsId,\n                this.confID,\n                ssrc,\n                usageLabel,\n                containerId);\n        } else {\n            CallStats.reportsQueue.push({\n                type: reportType.MST_WITH_USERID,\n                pc: this.peerconnection,\n                data: {\n                    callStatsId,\n                    containerId,\n                    ssrc,\n                    usageLabel\n                }\n            });\n        }\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Notifies CallStats that we are the new dominant speaker in the\n     * conference.\n     */\n    sendDominantSpeakerEvent() {\n        CallStats._reportEvent(this, fabricEvent.dominantSpeaker);\n    }\n\n    /**\n     * Notifies CallStats that the fabric for the underlying peerconnection was\n     * closed and no evens should be reported, after this call.\n     */\n    sendTerminateEvent() {\n        if (CallStats.backendInitialized) {\n            CallStats.backend.sendFabricEvent(\n                this.peerconnection,\n                CallStats.backend.fabricEvent.fabricTerminated,\n                this.confID);\n        }\n        CallStats.fabrics.delete(this);\n    }\n\n    /**\n     * Notifies CallStats for ice connection failed\n     */\n    sendIceConnectionFailedEvent() {\n        CallStats._reportError(\n            this,\n            wrtcFuncNames.iceConnectionFailure,\n            null,\n            this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to create offer.\n     *\n     * @param {Error} e error to send\n     */\n    sendCreateOfferFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.createOffer, e, this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to create answer.\n     *\n     * @param {Error} e error to send\n     */\n    sendCreateAnswerFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.createAnswer, e, this.peerconnection);\n    }\n\n    /**\n     * Sends either resume or hold event for the fabric associated with\n     * the underlying peerconnection.\n     * @param {boolean} isResume true to resume or false to hold\n     */\n    sendResumeOrHoldEvent(isResume) {\n        CallStats._reportEvent(\n            this,\n            isResume ? fabricEvent.fabricResume : fabricEvent.fabricHold);\n    }\n\n    /**\n     * Notifies CallStats for screen sharing events\n     * @param {boolean} start true for starting screen sharing and\n     * false for not stopping\n     * @param {string|null} ssrc - optional ssrc value, used only when\n     * starting screen sharing.\n     */\n    sendScreenSharingEvent(start, ssrc) {\n        let eventData;\n\n        if (ssrc) {\n            eventData = { ssrc };\n        }\n\n        CallStats._reportEvent(\n            this,\n            start ? fabricEvent.screenShareStart : fabricEvent.screenShareStop,\n            eventData);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to set local description.\n     *\n     * @param {Error} e error to send\n     */\n    sendSetLocalDescFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.setLocalDescription, e, this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to set remote description.\n     *\n     * @param {Error} e error to send\n     */\n    sendSetRemoteDescFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.setRemoteDescription, e, this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to add ICE candidate.\n     *\n     * @param {Error} e error to send\n     */\n    sendAddIceCandidateFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.addIceCandidate, e, this.peerconnection);\n    }\n}\n\n/**\n * The CallStats API backend instance\n * @type {callstats}\n */\nCallStats.backend = null;\n\n// some errors/events may happen before CallStats init\n// in this case we accumulate them in this array\n// and send them to callstats on init\nCallStats.reportsQueue = [];\n\n/**\n * Whether the library was successfully initialized(the backend) using its\n * initialize method.\n * @type {boolean}\n */\nCallStats.backendInitialized = false;\n\n/**\n * Part of the CallStats credentials - application ID\n * @type {string}\n */\nCallStats.callStatsID = null;\n\n/**\n * Part of the CallStats credentials - application secret\n * @type {string}\n */\nCallStats.callStatsSecret = null;\n\n/**\n * Local CallStats user ID structure. Can be set only once when\n * {@link backend} is initialized, so it's static for the time being.\n * See CallStats API for more info:\n * https://www.callstats.io/api/#userid\n * @type {object}\n */\nCallStats.userID = null;\n","/**\n * Provides statistics for the local stream.\n */\n\n/**\n * Size of the webaudio analyzer buffer.\n * @type {number}\n */\nconst WEBAUDIO_ANALYZER_FFT_SIZE = 2048;\n\n/**\n * Value of the webaudio analyzer smoothing time parameter.\n * @type {number}\n */\nconst WEBAUDIO_ANALYZER_SMOOTING_TIME = 0.8;\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\n\nlet context = null;\n\nif (window.AudioContext) {\n    context = new AudioContext();\n\n    // XXX Not all browsers define a suspend method on AudioContext. As the\n    // invocation is at the (ES6 module) global execution level, it breaks the\n    // loading of the lib-jitsi-meet library in such browsers and, consequently,\n    // the loading of the very Web app that uses the lib-jitsi-meet library. For\n    // example, Google Chrome 40 on Android does not define the method but we\n    // still want to be able to load the lib-jitsi-meet library there and\n    // display a page which notifies the user that the Web app is not supported\n    // there.\n    context.suspend && context.suspend();\n}\n\n/**\n * Converts time domain data array to audio level.\n * @param samples the time domain data array.\n * @returns {number} the audio level\n */\nfunction timeDomainDataToAudioLevel(samples) {\n\n    let maxVolume = 0;\n\n    const length = samples.length;\n\n    for (let i = 0; i < length; i++) {\n        if (maxVolume < samples[i]) {\n            maxVolume = samples[i];\n        }\n    }\n\n    return parseFloat(((maxVolume - 127) / 128).toFixed(3));\n}\n\n/**\n * Animates audio level change\n * @param newLevel the new audio level\n * @param lastLevel the last audio level\n * @returns {Number} the audio level to be set\n */\nfunction animateLevel(newLevel, lastLevel) {\n    let value = 0;\n    const diff = lastLevel - newLevel;\n\n    if (diff > 0.2) {\n        value = lastLevel - 0.2;\n    } else if (diff < -0.4) {\n        value = lastLevel + 0.4;\n    } else {\n        value = newLevel;\n    }\n\n    return parseFloat(value.toFixed(3));\n}\n\n\n/**\n * <tt>LocalStatsCollector</tt> calculates statistics for the local stream.\n *\n * @param stream the local stream\n * @param interval stats refresh interval given in ms.\n * @param callback function that receives the audio levels.\n * @constructor\n */\nexport default function LocalStatsCollector(stream, interval, callback) {\n    this.stream = stream;\n    this.intervalId = null;\n    this.intervalMilis = interval;\n    this.audioLevel = 0;\n    this.callback = callback;\n}\n\n/**\n * Starts the collecting the statistics.\n */\nLocalStatsCollector.prototype.start = function() {\n    if (!LocalStatsCollector.isLocalStatsSupported()) {\n        return;\n    }\n    context.resume();\n    const analyser = context.createAnalyser();\n\n    analyser.smoothingTimeConstant = WEBAUDIO_ANALYZER_SMOOTING_TIME;\n    analyser.fftSize = WEBAUDIO_ANALYZER_FFT_SIZE;\n\n    const source = context.createMediaStreamSource(this.stream);\n\n    source.connect(analyser);\n\n\n    const self = this;\n\n    this.intervalId = setInterval(\n        () => {\n            const array = new Uint8Array(analyser.frequencyBinCount);\n\n            analyser.getByteTimeDomainData(array);\n            const audioLevel = timeDomainDataToAudioLevel(array);\n\n            if (audioLevel !== self.audioLevel) {\n                self.audioLevel = animateLevel(audioLevel, self.audioLevel);\n                self.callback(self.audioLevel);\n            }\n        },\n        this.intervalMilis\n    );\n};\n\n/**\n * Stops collecting the statistics.\n */\nLocalStatsCollector.prototype.stop = function() {\n    if (this.intervalId) {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n    }\n};\n\n/**\n * Checks if the environment has the necessary conditions to support\n * collecting stats from local streams.\n *\n * @returns {boolean}\n */\nLocalStatsCollector.isLocalStatsSupported = function() {\n    return Boolean(context);\n};\n","import browser from '../browser';\nimport { browsers } from 'js-utils';\n\nimport * as StatisticsEvents from '../../service/statistics/Events';\nimport * as MediaType from '../../service/RTC/MediaType';\n\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * The lib-jitsi-meet browser-agnostic names of the browser-specific keys\n * reported by RTCPeerConnection#getStats mapped by browser.\n */\nconst KEYS_BY_BROWSER_TYPE = {};\n\nKEYS_BY_BROWSER_TYPE[browsers.FIREFOX] = {\n    'ssrc': 'ssrc',\n    'packetsReceived': 'packetsReceived',\n    'packetsLost': 'packetsLost',\n    'packetsSent': 'packetsSent',\n    'bytesReceived': 'bytesReceived',\n    'bytesSent': 'bytesSent',\n    'framerateMean': 'framerateMean',\n    'ip': 'ipAddress',\n    'port': 'portNumber',\n    'protocol': 'transport'\n};\nKEYS_BY_BROWSER_TYPE[browsers.CHROME] = {\n    'receiveBandwidth': 'googAvailableReceiveBandwidth',\n    'sendBandwidth': 'googAvailableSendBandwidth',\n    'remoteAddress': 'googRemoteAddress',\n    'transportType': 'googTransportType',\n    'localAddress': 'googLocalAddress',\n    'activeConnection': 'googActiveConnection',\n    'ssrc': 'ssrc',\n    'packetsReceived': 'packetsReceived',\n    'packetsSent': 'packetsSent',\n    'packetsLost': 'packetsLost',\n    'bytesReceived': 'bytesReceived',\n    'bytesSent': 'bytesSent',\n    'googFrameHeightReceived': 'googFrameHeightReceived',\n    'googFrameWidthReceived': 'googFrameWidthReceived',\n    'googFrameHeightSent': 'googFrameHeightSent',\n    'googFrameWidthSent': 'googFrameWidthSent',\n    'googFrameRateReceived': 'googFrameRateReceived',\n    'googFrameRateSent': 'googFrameRateSent',\n    'audioInputLevel': 'audioInputLevel',\n    'audioOutputLevel': 'audioOutputLevel',\n    'currentRoundTripTime': 'googRtt',\n    'remoteCandidateType': 'googRemoteCandidateType',\n    'localCandidateType': 'googLocalCandidateType',\n    'ip': 'ip',\n    'port': 'port',\n    'protocol': 'protocol'\n};\nKEYS_BY_BROWSER_TYPE[browsers.EDGE] = {\n    'sendBandwidth': 'googAvailableSendBandwidth',\n    'remoteAddress': 'remoteAddress',\n    'transportType': 'protocol',\n    'localAddress': 'localAddress',\n    'activeConnection': 'activeConnection',\n    'ssrc': 'ssrc',\n    'packetsReceived': 'packetsReceived',\n    'packetsSent': 'packetsSent',\n    'packetsLost': 'packetsLost',\n    'bytesReceived': 'bytesReceived',\n    'bytesSent': 'bytesSent',\n    'googFrameHeightReceived': 'frameHeight',\n    'googFrameWidthReceived': 'frameWidth',\n    'googFrameHeightSent': 'frameHeight',\n    'googFrameWidthSent': 'frameWidth',\n    'googFrameRateReceived': 'framesPerSecond',\n    'googFrameRateSent': 'framesPerSecond',\n    'audioInputLevel': 'audioLevel',\n    'audioOutputLevel': 'audioLevel',\n    'currentRoundTripTime': 'roundTripTime'\n};\nKEYS_BY_BROWSER_TYPE[browsers.OPERA]\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\nKEYS_BY_BROWSER_TYPE[browsers.NWJS]\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\nKEYS_BY_BROWSER_TYPE[browsers.ELECTRON]\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\nKEYS_BY_BROWSER_TYPE[browsers.SAFARI]\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\nKEYS_BY_BROWSER_TYPE[browsers.REACT_NATIVE]\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\n\n/**\n * Calculates packet lost percent using the number of lost packets and the\n * number of all packet.\n * @param lostPackets the number of lost packets\n * @param totalPackets the number of all packets.\n * @returns {number} packet loss percent\n */\nfunction calculatePacketLoss(lostPackets, totalPackets) {\n    if (!totalPackets || totalPackets <= 0\n            || !lostPackets || lostPackets <= 0) {\n        return 0;\n    }\n\n    return Math.round((lostPackets / totalPackets) * 100);\n}\n\n/**\n * Holds \"statistics\" for a single SSRC.\n * @constructor\n */\nfunction SsrcStats() {\n    this.loss = {};\n    this.bitrate = {\n        download: 0,\n        upload: 0\n    };\n    this.resolution = {};\n    this.framerate = 0;\n}\n\n/**\n * Sets the \"loss\" object.\n * @param loss the value to set.\n */\nSsrcStats.prototype.setLoss = function(loss) {\n    this.loss = loss || {};\n};\n\n/**\n * Sets resolution that belong to the ssrc represented by this instance.\n * @param resolution new resolution value to be set.\n */\nSsrcStats.prototype.setResolution = function(resolution) {\n    this.resolution = resolution || {};\n};\n\n/**\n * Adds the \"download\" and \"upload\" fields from the \"bitrate\" parameter to\n * the respective fields of the \"bitrate\" field of this object.\n * @param bitrate an object holding the values to add.\n */\nSsrcStats.prototype.addBitrate = function(bitrate) {\n    this.bitrate.download += bitrate.download;\n    this.bitrate.upload += bitrate.upload;\n};\n\n/**\n * Resets the bit rate for given <tt>ssrc</tt> that belong to the peer\n * represented by this instance.\n */\nSsrcStats.prototype.resetBitrate = function() {\n    this.bitrate.download = 0;\n    this.bitrate.upload = 0;\n};\n\n/**\n * Sets the \"framerate\".\n * @param framerate the value to set.\n */\nSsrcStats.prototype.setFramerate = function(framerate) {\n    this.framerate = framerate || 0;\n};\n\n/**\n *\n */\nfunction ConferenceStats() {\n\n    /**\n     * The bandwidth\n     * @type {{}}\n     */\n    this.bandwidth = {};\n\n    /**\n     * The bit rate\n     * @type {{}}\n     */\n    this.bitrate = {};\n\n    /**\n     * The packet loss rate\n     * @type {{}}\n     */\n    this.packetLoss = null;\n\n    /**\n     * Array with the transport information.\n     * @type {Array}\n     */\n    this.transport = [];\n}\n\n/* eslint-disable max-params */\n\n/**\n * <tt>StatsCollector</tt> registers for stats updates of given\n * <tt>peerconnection</tt> in given <tt>interval</tt>. On each update particular\n * stats are extracted and put in {@link SsrcStats} objects. Once the processing\n * is done <tt>audioLevelsUpdateCallback</tt> is called with <tt>this</tt>\n * instance as an event source.\n *\n * @param peerconnection WebRTC PeerConnection object.\n * @param audioLevelsInterval\n * @param statsInterval stats refresh interval given in ms.\n * @param eventEmitter\n * @constructor\n */\nexport default function StatsCollector(\n        peerconnection,\n        audioLevelsInterval,\n        statsInterval,\n        eventEmitter) {\n    // StatsCollector depends entirely on the format of the reports returned by\n    // RTCPeerConnection#getStats. Given that the value of\n    // browser#getName() is very unlikely to change at runtime, it\n    // makes sense to discover whether StatsCollector supports the executing\n    // browser as soon as possible. Otherwise, (1) getStatValue would have to\n    // needlessly check a \"static\" condition multiple times very very often and\n    // (2) the lack of support for the executing browser would be discovered and\n    // reported multiple times very very often too late in the execution in some\n    // totally unrelated callback.\n    /**\n     * The browser type supported by this StatsCollector. In other words, the\n     * type of the browser which initialized this StatsCollector\n     * instance.\n     * @private\n     */\n    this._browserType = browser.getName();\n    const keys = KEYS_BY_BROWSER_TYPE[this._browserType];\n\n    if (!keys) {\n        // eslint-disable-next-line no-throw-literal\n        throw `The browser type '${this._browserType}' isn't supported!`;\n    }\n\n    /**\n     * Whether to use the Promise-based getStats API or not.\n     * @type {boolean}\n     */\n    this._usesPromiseGetStats\n        = browser.isSafariWithWebrtc() || browser.isFirefox();\n\n    /**\n     * The function which is to be used to retrieve the value associated in a\n     * report returned by RTCPeerConnection#getStats with a lib-jitsi-meet\n     * browser-agnostic name/key.\n     *\n     * @function\n     * @private\n     */\n    this._getStatValue\n        = this._usesPromiseGetStats\n            ? this._defineNewGetStatValueMethod(keys)\n            : this._defineGetStatValueMethod(keys);\n\n    this.peerconnection = peerconnection;\n    this.baselineAudioLevelsReport = null;\n    this.currentAudioLevelsReport = null;\n    this.currentStatsReport = null;\n    this.previousStatsReport = null;\n    this.audioLevelReportHistory = {};\n    this.audioLevelsIntervalId = null;\n    this.eventEmitter = eventEmitter;\n    this.conferenceStats = new ConferenceStats();\n\n    // Updates stats interval\n    this.audioLevelsIntervalMilis = audioLevelsInterval;\n\n    this.statsIntervalId = null;\n    this.statsIntervalMilis = statsInterval;\n\n    /**\n     * Maps SSRC numbers to {@link SsrcStats}.\n     * @type {Map<number,SsrcStats}\n     */\n    this.ssrc2stats = new Map();\n}\n\n/* eslint-enable max-params */\n\n/**\n * Stops stats updates.\n */\nStatsCollector.prototype.stop = function() {\n    if (this.audioLevelsIntervalId) {\n        clearInterval(this.audioLevelsIntervalId);\n        this.audioLevelsIntervalId = null;\n    }\n\n    if (this.statsIntervalId) {\n        clearInterval(this.statsIntervalId);\n        this.statsIntervalId = null;\n    }\n};\n\n/**\n * Callback passed to <tt>getStats</tt> method.\n * @param error an error that occurred on <tt>getStats</tt> call.\n */\nStatsCollector.prototype.errorCallback = function(error) {\n    GlobalOnErrorHandler.callErrorHandler(error);\n    logger.error('Get stats error', error);\n    this.stop();\n};\n\n/**\n * Starts stats updates.\n */\nStatsCollector.prototype.start = function(startAudioLevelStats) {\n    const self = this;\n\n    if (startAudioLevelStats) {\n        this.audioLevelsIntervalId = setInterval(\n            () => {\n                // Interval updates\n                self.peerconnection.getStats(\n                    report => {\n                        let results = null;\n\n                        if (!report || !report.result\n                            || typeof report.result !== 'function') {\n                            results = report;\n                        } else {\n                            results = report.result();\n                        }\n                        self.currentAudioLevelsReport = results;\n                        if (this._usesPromiseGetStats) {\n                            self.processNewAudioLevelReport();\n                        } else {\n                            self.processAudioLevelReport();\n                        }\n\n                        self.baselineAudioLevelsReport\n                            = self.currentAudioLevelsReport;\n                    },\n                    error => self.errorCallback(error)\n                );\n            },\n            self.audioLevelsIntervalMilis\n        );\n    }\n\n    if (browser.supportsRtpStatistics()) {\n        this.statsIntervalId = setInterval(\n            () => {\n                // Interval updates\n                self.peerconnection.getStats(\n                    report => {\n                        let results = null;\n\n                        if (!report || !report.result\n                            || typeof report.result !== 'function') {\n                            // firefox\n                            results = report;\n                        } else {\n                            // chrome\n                            results = report.result();\n                        }\n\n                        self.currentStatsReport = results;\n                        try {\n                            if (this._usesPromiseGetStats) {\n                                self.processNewStatsReport();\n                            } else {\n                                self.processStatsReport();\n                            }\n                        } catch (e) {\n                            GlobalOnErrorHandler.callErrorHandler(e);\n                            logger.error(`Unsupported key:${e}`, e);\n                        }\n\n                        self.previousStatsReport = self.currentStatsReport;\n                    },\n                    error => self.errorCallback(error)\n                );\n            },\n            self.statsIntervalMilis\n        );\n    }\n};\n\n/**\n * Defines a function which (1) is to be used as a StatsCollector method and (2)\n * gets the value from a specific report returned by RTCPeerConnection#getStats\n * associated with a lib-jitsi-meet browser-agnostic name.\n *\n * @param {Object.<string,string>} keys the map of LibJitsi browser-agnostic\n * names to RTCPeerConnection#getStats browser-specific keys\n */\nStatsCollector.prototype._defineGetStatValueMethod = function(keys) {\n    // Define the function which converts a lib-jitsi-meet browser-asnostic name\n    // to a browser-specific key of a report returned by\n    // RTCPeerConnection#getStats.\n    const keyFromName = function(name) {\n        const key = keys[name];\n\n        if (key) {\n            return key;\n        }\n\n        // eslint-disable-next-line no-throw-literal\n        throw `The property '${name}' isn't supported!`;\n    };\n\n    // Define the function which retrieves the value from a specific report\n    // returned by RTCPeerConnection#getStats associated with a given\n    // browser-specific key.\n    let itemStatByKey;\n\n    switch (this._browserType) {\n    case browsers.CHROME:\n    case browsers.OPERA:\n    case browsers.NWJS:\n    case browsers.ELECTRON:\n        // TODO What about other types of browser which are based on Chrome such\n        // as NW.js? Every time we want to support a new type browser we have to\n        // go and add more conditions (here and in multiple other places).\n        // Cannot we do a feature detection instead of a browser type check? For\n        // example, if item has a stat property of type function, then it's very\n        // likely that whoever defined it wanted you to call it in order to\n        // retrieve the value associated with a specific key.\n        itemStatByKey = (item, key) => item.stat(key);\n        break;\n    case browsers.REACT_NATIVE:\n        // The implementation provided by react-native-webrtc follows the\n        // Objective-C WebRTC API: RTCStatsReport has a values property of type\n        // Array in which each element is a key-value pair.\n        itemStatByKey = function(item, key) {\n            let value;\n\n            item.values.some(pair => {\n                if (pair.hasOwnProperty(key)) {\n                    value = pair[key];\n\n                    return true;\n                }\n\n                return false;\n\n            });\n\n            return value;\n        };\n        break;\n    case browsers.EDGE:\n        itemStatByKey = (item, key) => item[key];\n        break;\n    default:\n        itemStatByKey = (item, key) => item[key];\n    }\n\n    // Compose the 2 functions defined above to get a function which retrieves\n    // the value from a specific report returned by RTCPeerConnection#getStats\n    // associated with a specific lib-jitsi-meet browser-agnostic name.\n    return (item, name) => itemStatByKey(item, keyFromName(name));\n};\n\n/**\n * Obtains a stat value from given stat and converts it to a non-negative\n * number. If the value is either invalid or negative then 0 will be returned.\n * @param report\n * @param {string} name\n * @return {number}\n * @private\n */\nStatsCollector.prototype.getNonNegativeStat = function(report, name) {\n    let value = this._getStatValue(report, name);\n\n    if (typeof value !== 'number') {\n        value = Number(value);\n    }\n\n    if (isNaN(value)) {\n        return 0;\n    }\n\n    return Math.max(0, value);\n};\n\n/* eslint-disable no-continue */\n\n/**\n * Stats processing logic.\n */\nStatsCollector.prototype.processStatsReport = function() {\n    if (!this.previousStatsReport) {\n        return;\n    }\n\n    const getStatValue = this._getStatValue;\n    const byteSentStats = {};\n\n    for (const idx in this.currentStatsReport) {\n        if (!this.currentStatsReport.hasOwnProperty(idx)) {\n            continue;\n        }\n        const now = this.currentStatsReport[idx];\n\n        // The browser API may return \"undefined\" values in the array\n        if (!now) {\n            continue;\n        }\n\n        try {\n            const receiveBandwidth = getStatValue(now, 'receiveBandwidth');\n            const sendBandwidth = getStatValue(now, 'sendBandwidth');\n\n            if (receiveBandwidth || sendBandwidth) {\n                this.conferenceStats.bandwidth = {\n                    'download': Math.round(receiveBandwidth / 1000),\n                    'upload': Math.round(sendBandwidth / 1000)\n                };\n            }\n        } catch (e) { /* not supported*/ }\n\n        if (now.type === 'googCandidatePair') {\n            let active, ip, localCandidateType, localip,\n                remoteCandidateType, rtt, type;\n\n            try {\n                active = getStatValue(now, 'activeConnection');\n                if (!active) {\n                    continue;\n                }\n\n                ip = getStatValue(now, 'remoteAddress');\n                type = getStatValue(now, 'transportType');\n                localip = getStatValue(now, 'localAddress');\n                localCandidateType = getStatValue(now, 'localCandidateType');\n                remoteCandidateType = getStatValue(now, 'remoteCandidateType');\n                rtt = this.getNonNegativeStat(now, 'currentRoundTripTime');\n            } catch (e) { /* not supported*/ }\n            if (!ip || !type || !localip || active !== 'true') {\n                continue;\n            }\n\n            // Save the address unless it has been saved already.\n            const conferenceStatsTransport = this.conferenceStats.transport;\n\n            if (!conferenceStatsTransport.some(\n                    t =>\n                        t.ip === ip\n                            && t.type === type\n                            && t.localip === localip)) {\n                conferenceStatsTransport.push({\n                    ip,\n                    type,\n                    localip,\n                    p2p: this.peerconnection.isP2P,\n                    localCandidateType,\n                    remoteCandidateType,\n                    rtt\n                });\n            }\n            continue;\n        }\n\n        if (now.type === 'candidatepair') {\n            // we need succeeded and selected pairs only\n            if (now.state !== 'succeeded' || !now.selected) {\n                continue;\n            }\n\n            const local = this.currentStatsReport[now.localCandidateId];\n            const remote = this.currentStatsReport[now.remoteCandidateId];\n\n            this.conferenceStats.transport.push({\n                ip: `${remote.ipAddress}:${remote.portNumber}`,\n                type: local.transport,\n                localip: `${local.ipAddress}:${local.portNumber}`,\n                p2p: this.peerconnection.isP2P,\n                localCandidateType: local.candidateType,\n                remoteCandidateType: remote.candidateType\n            });\n        }\n\n        // NOTE: Edge's proprietary stats via RTCIceTransport.msGetStats().\n        if (now.msType === 'transportdiagnostics') {\n            this.conferenceStats.transport.push({\n                ip: now.remoteAddress,\n                type: now.protocol,\n                localip: now.localAddress,\n                p2p: this.peerconnection.isP2P\n            });\n        }\n\n        if (now.type !== 'ssrc' && now.type !== 'outboundrtp'\n            && now.type !== 'inboundrtp' && now.type !== 'track') {\n            continue;\n        }\n\n        // NOTE: In Edge, stats with type \"inboundrtp\" and \"outboundrtp\" are\n        // completely useless, so ignore them.\n        if (browser.isEdge()\n            && (now.type === 'inboundrtp' || now.type === 'outboundrtp')) {\n            continue;\n        }\n\n        const before = this.previousStatsReport[idx];\n        let ssrc = this.getNonNegativeStat(now, 'ssrc');\n\n        // If type=\"track\", take the first SSRC from ssrcIds.\n        if (now.type === 'track' && Array.isArray(now.ssrcIds)) {\n            ssrc = Number(now.ssrcIds[0]);\n        }\n\n        if (!before || !ssrc) {\n            continue;\n        }\n\n        // isRemote is available only in FF and is ignored in case of chrome\n        // according to the spec\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcrtpstreamstats-isremote\n        // when isRemote is true indicates that the measurements were done at\n        // the remote endpoint and reported in an RTCP RR/XR.\n        // Fixes a problem where we are calculating local stats wrong adding\n        // the sent bytes to the local download bitrate.\n        // In new W3 stats spec, type=\"track\" has a remoteSource boolean\n        // property.\n        // Edge uses the new format, so skip this check.\n        if (!browser.isEdge()\n                && (now.isRemote === true || now.remoteSource === true)) {\n            continue;\n        }\n\n        let ssrcStats = this.ssrc2stats.get(ssrc);\n\n        if (!ssrcStats) {\n            ssrcStats = new SsrcStats();\n            this.ssrc2stats.set(ssrc, ssrcStats);\n        }\n\n        let isDownloadStream = true;\n        let key = 'packetsReceived';\n        let packetsNow = getStatValue(now, key);\n\n        if (typeof packetsNow === 'undefined'\n            || packetsNow === null || packetsNow === '') {\n            isDownloadStream = false;\n            key = 'packetsSent';\n            packetsNow = getStatValue(now, key);\n            if (typeof packetsNow === 'undefined' || packetsNow === null) {\n                logger.warn('No packetsReceived nor packetsSent stat found');\n            }\n        }\n        if (!packetsNow || packetsNow < 0) {\n            packetsNow = 0;\n        }\n\n        const packetsBefore = this.getNonNegativeStat(before, key);\n        const packetsDiff = Math.max(0, packetsNow - packetsBefore);\n\n        const packetsLostNow\n            = this.getNonNegativeStat(now, 'packetsLost');\n        const packetsLostBefore\n            = this.getNonNegativeStat(before, 'packetsLost');\n        const packetsLostDiff = Math.max(0, packetsLostNow - packetsLostBefore);\n\n        ssrcStats.setLoss({\n            packetsTotal: packetsDiff + packetsLostDiff,\n            packetsLost: packetsLostDiff,\n            isDownloadStream\n        });\n\n        const bytesReceivedNow\n            = this.getNonNegativeStat(now, 'bytesReceived');\n        const bytesReceivedBefore\n            = this.getNonNegativeStat(before, 'bytesReceived');\n        const bytesReceived\n            = Math.max(0, bytesReceivedNow - bytesReceivedBefore);\n\n        let bytesSent = 0;\n\n        // TODO: clean this mess up!\n        let nowBytesTransmitted = getStatValue(now, 'bytesSent');\n\n        if (typeof nowBytesTransmitted === 'number'\n            || typeof nowBytesTransmitted === 'string') {\n            nowBytesTransmitted = Number(nowBytesTransmitted);\n            if (!isNaN(nowBytesTransmitted)) {\n                byteSentStats[ssrc] = nowBytesTransmitted;\n                if (nowBytesTransmitted > 0) {\n                    bytesSent = nowBytesTransmitted\n                        - getStatValue(before, 'bytesSent');\n                }\n            }\n        }\n        bytesSent = Math.max(0, bytesSent);\n\n        const timeMs = now.timestamp - before.timestamp;\n        let bitrateReceivedKbps = 0, bitrateSentKbps = 0;\n\n        if (timeMs > 0) {\n            // TODO is there any reason to round here?\n            bitrateReceivedKbps = Math.round((bytesReceived * 8) / timeMs);\n            bitrateSentKbps = Math.round((bytesSent * 8) / timeMs);\n        }\n\n        ssrcStats.addBitrate({\n            'download': bitrateReceivedKbps,\n            'upload': bitrateSentKbps\n        });\n\n        const resolution = {\n            height: null,\n            width: null\n        };\n\n        try {\n            let height, width;\n\n            if ((height = getStatValue(now, 'googFrameHeightReceived'))\n                && (width = getStatValue(now, 'googFrameWidthReceived'))) {\n                resolution.height = height;\n                resolution.width = width;\n            } else if ((height = getStatValue(now, 'googFrameHeightSent'))\n                && (width = getStatValue(now, 'googFrameWidthSent'))) {\n                resolution.height = height;\n                resolution.width = width;\n            }\n        } catch (e) { /* not supported*/ }\n\n        // Tries to get frame rate\n        let frameRate;\n\n        try {\n            frameRate = getStatValue(now, 'googFrameRateReceived')\n                || getStatValue(now, 'googFrameRateSent') || 0;\n        } catch (e) {\n            // if it fails with previous properties(chrome),\n            // let's try with another one (FF)\n            try {\n                frameRate = this.getNonNegativeStat(now, 'framerateMean');\n            } catch (err) { /* not supported*/ }\n        }\n        ssrcStats.setFramerate(Math.round(frameRate || 0));\n\n        if (resolution.height && resolution.width) {\n            ssrcStats.setResolution(resolution);\n        } else {\n            ssrcStats.setResolution(null);\n        }\n    }\n\n    this.eventEmitter.emit(\n        StatisticsEvents.BYTE_SENT_STATS, this.peerconnection, byteSentStats);\n\n    this._processAndEmitReport();\n};\n\n/**\n *\n */\nStatsCollector.prototype._processAndEmitReport = function() {\n    // process stats\n    const totalPackets = {\n        download: 0,\n        upload: 0\n    };\n    const lostPackets = {\n        download: 0,\n        upload: 0\n    };\n    let bitrateDownload = 0;\n    let bitrateUpload = 0;\n    const resolutions = {};\n    const framerates = {};\n    let audioBitrateDownload = 0;\n    let audioBitrateUpload = 0;\n    let videoBitrateDownload = 0;\n    let videoBitrateUpload = 0;\n\n    for (const [ ssrc, ssrcStats ] of this.ssrc2stats) {\n        // process packet loss stats\n        const loss = ssrcStats.loss;\n        const type = loss.isDownloadStream ? 'download' : 'upload';\n\n        totalPackets[type] += loss.packetsTotal;\n        lostPackets[type] += loss.packetsLost;\n\n        // process bitrate stats\n        bitrateDownload += ssrcStats.bitrate.download;\n        bitrateUpload += ssrcStats.bitrate.upload;\n\n        // collect resolutions and framerates\n        const track = this.peerconnection.getTrackBySSRC(ssrc);\n\n        if (track) {\n            if (track.isAudioTrack()) {\n                audioBitrateDownload += ssrcStats.bitrate.download;\n                audioBitrateUpload += ssrcStats.bitrate.upload;\n            } else {\n                videoBitrateDownload += ssrcStats.bitrate.download;\n                videoBitrateUpload += ssrcStats.bitrate.upload;\n            }\n\n            const participantId = track.getParticipantId();\n\n            if (participantId) {\n                const resolution = ssrcStats.resolution;\n\n                if (resolution.width\n                        && resolution.height\n                        && resolution.width !== -1\n                        && resolution.height !== -1) {\n                    const userResolutions = resolutions[participantId] || {};\n\n                    userResolutions[ssrc] = resolution;\n                    resolutions[participantId] = userResolutions;\n                }\n                if (ssrcStats.framerate !== 0) {\n                    const userFramerates = framerates[participantId] || {};\n\n                    userFramerates[ssrc] = ssrcStats.framerate;\n                    framerates[participantId] = userFramerates;\n                }\n            } else {\n                logger.error(`No participant ID returned by ${track}`);\n            }\n        }\n\n        ssrcStats.resetBitrate();\n    }\n\n    this.conferenceStats.bitrate = {\n        'upload': bitrateUpload,\n        'download': bitrateDownload\n    };\n\n    this.conferenceStats.bitrate.audio = {\n        'upload': audioBitrateUpload,\n        'download': audioBitrateDownload\n    };\n\n    this.conferenceStats.bitrate.video = {\n        'upload': videoBitrateUpload,\n        'download': videoBitrateDownload\n    };\n\n    this.conferenceStats.packetLoss = {\n        total:\n            calculatePacketLoss(\n                lostPackets.download + lostPackets.upload,\n                totalPackets.download + totalPackets.upload),\n        download:\n            calculatePacketLoss(lostPackets.download, totalPackets.download),\n        upload:\n            calculatePacketLoss(lostPackets.upload, totalPackets.upload)\n    };\n\n    const avgAudioLevels = {};\n    let localAvgAudioLevels;\n\n    Object.keys(this.audioLevelReportHistory).forEach(ssrc => {\n        const { data, isLocal } = this.audioLevelReportHistory[ssrc];\n        const avgAudioLevel = data.reduce((sum, currentValue) => sum + currentValue) / data.length;\n\n        if (isLocal) {\n            localAvgAudioLevels = avgAudioLevel;\n        } else {\n            const track = this.peerconnection.getTrackBySSRC(Number(ssrc));\n\n            if (track) {\n                const participantId = track.getParticipantId();\n\n                if (participantId) {\n                    avgAudioLevels[participantId] = avgAudioLevel;\n                }\n            }\n        }\n    });\n    this.audioLevelReportHistory = {};\n\n    this.eventEmitter.emit(\n        StatisticsEvents.CONNECTION_STATS,\n        this.peerconnection,\n        {\n            'bandwidth': this.conferenceStats.bandwidth,\n            'bitrate': this.conferenceStats.bitrate,\n            'packetLoss': this.conferenceStats.packetLoss,\n            'resolution': resolutions,\n            'framerate': framerates,\n            'transport': this.conferenceStats.transport,\n            localAvgAudioLevels,\n            avgAudioLevels\n        });\n    this.conferenceStats.transport = [];\n};\n\n/**\n * Stats processing logic.\n */\nStatsCollector.prototype.processAudioLevelReport = function() {\n    if (!this.baselineAudioLevelsReport) {\n        return;\n    }\n\n    const getStatValue = this._getStatValue;\n\n    for (const idx in this.currentAudioLevelsReport) {\n        if (!this.currentAudioLevelsReport.hasOwnProperty(idx)) {\n            continue;\n        }\n\n        const now = this.currentAudioLevelsReport[idx];\n\n        if (now.type !== 'ssrc' && now.type !== 'track') {\n            continue;\n        }\n\n        const before = this.baselineAudioLevelsReport[idx];\n        let ssrc = this.getNonNegativeStat(now, 'ssrc');\n\n        if (!ssrc && Array.isArray(now.ssrcIds)) {\n            ssrc = Number(now.ssrcIds[0]);\n        }\n\n        if (!before) {\n            logger.warn(`${ssrc} not enough data`);\n            continue;\n        }\n\n        if (!ssrc) {\n            if ((Date.now() - now.timestamp) < 3000) {\n                logger.warn('No ssrc: ');\n            }\n            continue;\n        }\n\n        // Audio level\n        let audioLevel;\n\n        try {\n            audioLevel\n                = getStatValue(now, 'audioInputLevel')\n                    || getStatValue(now, 'audioOutputLevel');\n        } catch (e) { /* not supported*/\n            logger.warn('Audio Levels are not available in the statistics.');\n            clearInterval(this.audioLevelsIntervalId);\n\n            return;\n        }\n\n        if (audioLevel) {\n            let isLocal;\n\n            // If type=\"ssrc\" (legacy) check whether they are received packets.\n            if (now.type === 'ssrc') {\n                isLocal = !getStatValue(now, 'packetsReceived');\n\n            // If type=\"track\", check remoteSource boolean property.\n            } else {\n                isLocal = !now.remoteSource;\n            }\n\n            // According to the W3C WebRTC Stats spec, audioLevel should be in\n            // 0..1 range (0 == silence). However browsers don't behave that\n            // way so we must convert it to 0..1.\n            //\n            // In Edge the range is -100..0 (-100 == silence) measured in dB,\n            // so convert to linear. The levels are set to 0 for remote tracks,\n            // so don't convert those, since 0 means \"the maximum\" in Edge.\n            if (browser.isEdge()) {\n                audioLevel = audioLevel < 0 ? Math.pow(10, audioLevel / 20) : 0;\n\n            // TODO: Can't find specs about what this value really is, but it\n            // seems to vary between 0 and around 32k.\n            } else {\n                audioLevel = audioLevel / 32767;\n            }\n\n            if (!(ssrc in this.audioLevelReportHistory)) {\n                this.audioLevelReportHistory[ssrc] = {\n                    isLocal,\n                    data: []\n                };\n            }\n            this.audioLevelReportHistory[ssrc].data.push(audioLevel);\n\n            this.eventEmitter.emit(\n                StatisticsEvents.AUDIO_LEVEL,\n                this.peerconnection,\n                ssrc,\n                audioLevel,\n                isLocal);\n        }\n    }\n};\n\n/* eslint-enable no-continue */\n\n/**\n * New promised based getStats report processing.\n * Tested with chrome, firefox and safari. Not switching it on for chrome as\n * frameRate stat is missing and calculating it using framesSent,\n * gives values double the values seen in webrtc-internals.\n * https://w3c.github.io/webrtc-stats/\n */\n\n/**\n * Defines a function which (1) is to be used as a StatsCollector method and (2)\n * gets the value from a specific report returned by RTCPeerConnection#getStats\n * associated with a lib-jitsi-meet browser-agnostic name in case of using\n * Promised based getStats.\n *\n * @param {Object.<string,string>} keys the map of LibJitsi browser-agnostic\n * names to RTCPeerConnection#getStats browser-specific keys\n */\nStatsCollector.prototype._defineNewGetStatValueMethod = function(keys) {\n    // Define the function which converts a lib-jitsi-meet browser-asnostic name\n    // to a browser-specific key of a report returned by\n    // RTCPeerConnection#getStats.\n    const keyFromName = function(name) {\n        const key = keys[name];\n\n        if (key) {\n            return key;\n        }\n\n        // eslint-disable-next-line no-throw-literal\n        throw `The property '${name}' isn't supported!`;\n    };\n\n    // Compose the 2 functions defined above to get a function which retrieves\n    // the value from a specific report returned by RTCPeerConnection#getStats\n    // associated with a specific lib-jitsi-meet browser-agnostic name.\n    return (item, name) => item[keyFromName(name)];\n};\n\n/**\n * Converts the value to a non-negative number.\n * If the value is either invalid or negative then 0 will be returned.\n * @param {*} v\n * @return {number}\n * @private\n */\nStatsCollector.prototype.getNonNegativeValue = function(v) {\n    let value = v;\n\n    if (typeof value !== 'number') {\n        value = Number(value);\n    }\n\n    if (isNaN(value)) {\n        return 0;\n    }\n\n    return Math.max(0, value);\n};\n\n/**\n * Calculates bitrate between before and now using a supplied field name and its\n * value in the stats.\n * @param {RTCInboundRtpStreamStats|RTCSentRtpStreamStats} now the current stats\n * @param {RTCInboundRtpStreamStats|RTCSentRtpStreamStats} before the\n * previous stats.\n * @param fieldName the field to use for calculations.\n * @return {number} the calculated bitrate between now and before.\n * @private\n */\nStatsCollector.prototype._calculateBitrate = function(now, before, fieldName) {\n    const bytesNow = this.getNonNegativeValue(now[fieldName]);\n    const bytesBefore = this.getNonNegativeValue(before[fieldName]);\n    const bytesProcessed = Math.max(0, bytesNow - bytesBefore);\n\n    const timeMs = now.timestamp - before.timestamp;\n    let bitrateKbps = 0;\n\n    if (timeMs > 0) {\n        // TODO is there any reason to round here?\n        bitrateKbps = Math.round((bytesProcessed * 8) / timeMs);\n    }\n\n    return bitrateKbps;\n};\n\n/**\n * Stats processing new getStats logic.\n */\nStatsCollector.prototype.processNewStatsReport = function() {\n    if (!this.previousStatsReport) {\n        return;\n    }\n\n    const getStatValue = this._getStatValue;\n    const byteSentStats = {};\n\n    this.currentStatsReport.forEach(now => {\n\n        // RTCIceCandidatePairStats\n        // https://w3c.github.io/webrtc-stats/#candidatepair-dict*\n        if (now.type === 'candidate-pair'\n            && now.nominated\n            && now.state === 'succeeded') {\n\n            const availableIncomingBitrate = now.availableIncomingBitrate;\n            const availableOutgoingBitrate = now.availableOutgoingBitrate;\n\n            if (availableIncomingBitrate || availableOutgoingBitrate) {\n                this.conferenceStats.bandwidth = {\n                    'download': Math.round(availableIncomingBitrate / 1000),\n                    'upload': Math.round(availableOutgoingBitrate / 1000)\n                };\n            }\n\n            const remoteUsedCandidate\n                = this.currentStatsReport.get(now.remoteCandidateId);\n            const localUsedCandidate\n                = this.currentStatsReport.get(now.localCandidateId);\n\n            // RTCIceCandidateStats\n            // https://w3c.github.io/webrtc-stats/#icecandidate-dict*\n            // safari currently does not provide ice candidates in stats\n            if (remoteUsedCandidate && localUsedCandidate) {\n                // FF uses non-standard ipAddress, portNumber, transport\n                // instead of ip, port, protocol\n                const remoteIpAddress = getStatValue(remoteUsedCandidate, 'ip');\n                const remotePort = getStatValue(remoteUsedCandidate, 'port');\n                const ip = `${remoteIpAddress}:${remotePort}`;\n\n                const localIpAddress = getStatValue(localUsedCandidate, 'ip');\n                const localPort = getStatValue(localUsedCandidate, 'port');\n\n                const localIp = `${localIpAddress}:${localPort}`;\n                const type = getStatValue(remoteUsedCandidate, 'protocol');\n\n                // Save the address unless it has been saved already.\n                const conferenceStatsTransport = this.conferenceStats.transport;\n\n                if (!conferenceStatsTransport.some(\n                        t =>\n                            t.ip === ip\n                            && t.type === type\n                            && t.localip === localIp)) {\n                    conferenceStatsTransport.push({\n                        ip,\n                        type,\n                        localIp,\n                        p2p: this.peerconnection.isP2P,\n                        localCandidateType: localUsedCandidate.candidateType,\n                        remoteCandidateType: remoteUsedCandidate.candidateType,\n                        networkType: localUsedCandidate.networkType,\n                        rtt: now.currentRoundTripTime * 1000\n                    });\n                }\n            }\n\n        // RTCReceivedRtpStreamStats\n        // https://w3c.github.io/webrtc-stats/#receivedrtpstats-dict*\n        // RTCSentRtpStreamStats\n        // https://w3c.github.io/webrtc-stats/#sentrtpstats-dict*\n        } else if (now.type === 'inbound-rtp' || now.type === 'outbound-rtp') {\n            const before = this.previousStatsReport.get(now.id);\n            const ssrc = this.getNonNegativeValue(now.ssrc);\n\n            if (!before || !ssrc) {\n                return;\n            }\n\n            let ssrcStats = this.ssrc2stats.get(ssrc);\n\n            if (!ssrcStats) {\n                ssrcStats = new SsrcStats();\n                this.ssrc2stats.set(ssrc, ssrcStats);\n            }\n\n            let isDownloadStream = true;\n            let key = 'packetsReceived';\n\n            if (now.type === 'outbound-rtp') {\n                isDownloadStream = false;\n                key = 'packetsSent';\n            }\n\n            let packetsNow = now[key];\n\n            if (!packetsNow || packetsNow < 0) {\n                packetsNow = 0;\n            }\n\n            const packetsBefore = this.getNonNegativeValue(before[key]);\n            const packetsDiff = Math.max(0, packetsNow - packetsBefore);\n\n            const packetsLostNow\n                = this.getNonNegativeValue(now.packetsLost);\n            const packetsLostBefore\n                = this.getNonNegativeValue(before.packetsLost);\n            const packetsLostDiff\n                = Math.max(0, packetsLostNow - packetsLostBefore);\n\n            ssrcStats.setLoss({\n                packetsTotal: packetsDiff + packetsLostDiff,\n                packetsLost: packetsLostDiff,\n                isDownloadStream\n            });\n\n            if (now.type === 'inbound-rtp') {\n\n                ssrcStats.addBitrate({\n                    'download': this._calculateBitrate(\n                                    now, before, 'bytesReceived'),\n                    'upload': 0\n                });\n\n                // RTCInboundRtpStreamStats\n                // https://w3c.github.io/webrtc-stats/#inboundrtpstats-dict*\n                // TODO: can we use framesDecoded for frame rate, available\n                // in chrome\n            } else {\n                byteSentStats[ssrc] = this.getNonNegativeValue(now.bytesSent);\n                ssrcStats.addBitrate({\n                    'download': 0,\n                    'upload': this._calculateBitrate(\n                                now, before, 'bytesSent')\n                });\n\n                // RTCOutboundRtpStreamStats\n                // https://w3c.github.io/webrtc-stats/#outboundrtpstats-dict*\n                // TODO: can we use framesEncoded for frame rate, available\n                // in chrome\n            }\n\n            // FF has framerateMean out of spec\n            const framerateMean = now.framerateMean;\n\n            if (framerateMean) {\n                ssrcStats.setFramerate(Math.round(framerateMean || 0));\n            }\n\n        // track for resolution\n        // RTCVideoHandlerStats\n        // https://w3c.github.io/webrtc-stats/#vststats-dict*\n        // RTCMediaHandlerStats\n        // https://w3c.github.io/webrtc-stats/#mststats-dict*\n        } else if (now.type === 'track') {\n\n            const resolution = {\n                height: now.frameHeight,\n                width: now.frameWidth\n            };\n\n            // Tries to get frame rate\n            let frameRate = now.framesPerSecond;\n\n            if (!frameRate) {\n                // we need to calculate it\n                const before = this.previousStatsReport.get(now.id);\n\n                if (before) {\n                    const timeMs = now.timestamp - before.timestamp;\n\n                    if (timeMs > 0 && now.framesSent) {\n                        const numberOfFramesSinceBefore\n                            = now.framesSent - before.framesSent;\n\n                        frameRate = (numberOfFramesSinceBefore / timeMs) * 1000;\n                    }\n                }\n\n                if (!frameRate) {\n                    return;\n                }\n            }\n\n            const trackIdentifier = now.trackIdentifier;\n            const ssrc = this.peerconnection.getSsrcByTrackId(trackIdentifier);\n            let ssrcStats = this.ssrc2stats.get(ssrc);\n\n            if (!ssrcStats) {\n                ssrcStats = new SsrcStats();\n                this.ssrc2stats.set(ssrc, ssrcStats);\n            }\n            ssrcStats.setFramerate(Math.round(frameRate || 0));\n\n            if (resolution.height && resolution.width) {\n                ssrcStats.setResolution(resolution);\n            } else {\n                ssrcStats.setResolution(null);\n            }\n        }\n    });\n\n    this.eventEmitter.emit(\n        StatisticsEvents.BYTE_SENT_STATS, this.peerconnection, byteSentStats);\n\n    this._processAndEmitReport();\n};\n\n/**\n * Stats processing logic.\n */\nStatsCollector.prototype.processNewAudioLevelReport = function() {\n    if (!this.baselineAudioLevelsReport) {\n        return;\n    }\n\n    this.currentAudioLevelsReport.forEach(now => {\n        if (now.type !== 'track') {\n            return;\n        }\n\n        // Audio level\n        const audioLevel = now.audioLevel;\n\n        if (!audioLevel) {\n            return;\n        }\n\n        const trackIdentifier = now.trackIdentifier;\n        const ssrc = this.peerconnection.getSsrcByTrackId(trackIdentifier);\n\n        if (ssrc) {\n            const isLocal\n                = ssrc === this.peerconnection.getLocalSSRC(\n                this.peerconnection.getLocalTracks(MediaType.AUDIO));\n\n            this.eventEmitter.emit(\n                StatisticsEvents.AUDIO_LEVEL,\n                this.peerconnection,\n                ssrc,\n                audioLevel,\n                isLocal);\n        }\n    });\n};\n\n/**\n * End new promised based getStats processing methods.\n */\n","/**\n * A model for keeping track of each user's total\n * time as a dominant speaker. The model also\n * keeps track of the user's last known name\n * in case the user has left the meeting,\n * which is also tracked.\n */\nclass SpeakerStats {\n    /**\n     * Initializes a new SpeakerStats instance.\n     *\n     * @constructor\n     * @param {string} userId - The id of the user being tracked.\n     * @param {string} displayName - The name of the user being tracked.\n     * @param {boolean} isLocalStats - True if the stats model tracks\n     * the local user.\n     * @returns {void}\n     */\n    constructor(userId, displayName, isLocalStats) {\n        this._userId = userId;\n        this.setDisplayName(displayName);\n        this._isLocalStats = isLocalStats || false;\n        this.setDominantSpeaker(false);\n        this.totalDominantSpeakerTime = 0;\n        this._dominantSpeakerStart = 0;\n        this._hasLeft = false;\n    }\n\n    /**\n     * Get the user id being tracked.\n     *\n     * @returns {string} The user id.\n     */\n    getUserId() {\n        return this._userId;\n    }\n\n    /**\n     * Get the name of the user being tracked.\n     *\n     * @returns {string} The user name.\n     */\n    getDisplayName() {\n        return this.displayName;\n    }\n\n    /**\n     * Updates the last known name of the user being tracked.\n     *\n     * @param {string} - The user name.\n     * @returns {void}\n     */\n    setDisplayName(newName) {\n        this.displayName = newName;\n    }\n\n    /**\n     * Returns true if the stats are tracking the local user.\n     *\n     * @returns {boolean}\n     */\n    isLocalStats() {\n        return this._isLocalStats;\n    }\n\n    /**\n     * Returns true if the tracked user is currently a dominant speaker.\n     *\n     * @returns {boolean}\n     */\n    isDominantSpeaker() {\n        return this._dominantSpeakerStart > 0;\n    }\n\n    /**\n     * Returns true if the tracked user is currently a dominant speaker.\n     *\n     * @param {boolean} - If true, the user will being accumulating time\n     * as dominant speaker. If false, the user will not accumulate time\n     * and will record any time accumulated since starting as dominant speaker.\n     * @returns {void}\n     */\n    setDominantSpeaker(isNowDominantSpeaker) {\n        if (!this.isDominantSpeaker() && isNowDominantSpeaker) {\n            this._dominantSpeakerStart = Date.now();\n        } else if (this.isDominantSpeaker() && !isNowDominantSpeaker) {\n            const now = Date.now();\n            const timeElapsed = now - this._dominantSpeakerStart;\n\n            this.totalDominantSpeakerTime += timeElapsed;\n            this._dominantSpeakerStart = 0;\n        }\n    }\n\n    /**\n     * Get how long the tracked user has been dominant speaker.\n     *\n     * @returns {number} - The speaker time in milliseconds.\n     */\n    getTotalDominantSpeakerTime() {\n        let total = this.totalDominantSpeakerTime;\n\n        if (this.isDominantSpeaker()) {\n            total += Date.now() - this._dominantSpeakerStart;\n        }\n\n        return total;\n    }\n\n    /**\n     * Get whether or not the user is still in the meeting.\n     *\n     * @returns {boolean} True if the user is no longer in the meeting.\n     */\n    hasLeft() {\n        return this._hasLeft;\n    }\n\n    /**\n     * Set the user as having left the meeting.\n     *\n     * @returns {void}\n     */\n    markAsHasLeft() {\n        this._hasLeft = true;\n        this.setDominantSpeaker(false);\n    }\n}\n\nmodule.exports = SpeakerStats;\n","import * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport SpeakerStats from './SpeakerStats';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\n/**\n * A collection for tracking speaker stats. Attaches listeners\n * to the conference to automatically update on tracked events.\n */\nexport default class SpeakerStatsCollector {\n    /**\n     * Initializes a new SpeakerStatsCollector instance.\n     *\n     * @constructor\n     * @param {JitsiConference} conference - The conference to track.\n     * @returns {void}\n     */\n    constructor(conference) {\n        this.stats = {\n            users: {\n\n                // userId: SpeakerStats\n            },\n            dominantSpeakerId: null\n        };\n\n        const userId = conference.myUserId();\n\n        this.stats.users[userId] = new SpeakerStats(userId, null, true);\n\n        conference.addEventListener(\n            JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED,\n            this._onDominantSpeaker.bind(this));\n        conference.addEventListener(\n            JitsiConferenceEvents.USER_JOINED,\n            this._onUserJoin.bind(this));\n        conference.addEventListener(\n            JitsiConferenceEvents.USER_LEFT,\n            this._onUserLeave.bind(this));\n        conference.addEventListener(\n            JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\n            this._onDisplayNameChange.bind(this));\n        if (conference.xmpp) {\n            conference.xmpp.addListener(\n                XMPPEvents.SPEAKER_STATS_RECEIVED,\n                this._updateStats.bind(this));\n        }\n    }\n\n    /**\n     * Reacts to dominant speaker change events by changing its speaker stats\n     * models to reflect the current dominant speaker.\n     *\n     * @param {string} dominantSpeakerId - The user id of the new\n     * dominant speaker.\n     * @returns {void}\n     * @private\n     */\n    _onDominantSpeaker(dominantSpeakerId) {\n        const oldDominantSpeaker\n            = this.stats.users[this.stats.dominantSpeakerId];\n        const newDominantSpeaker = this.stats.users[dominantSpeakerId];\n\n        oldDominantSpeaker && oldDominantSpeaker.setDominantSpeaker(false);\n        newDominantSpeaker && newDominantSpeaker.setDominantSpeaker(true);\n        this.stats.dominantSpeakerId = dominantSpeakerId;\n    }\n\n    /**\n     * Reacts to user join events by creating a new SpeakerStats model.\n     *\n     * @param {string} userId - The user id of the new user.\n     * @param {JitsiParticipant} - The JitsiParticipant model for the new user.\n     * @returns {void}\n     * @private\n     */\n    _onUserJoin(userId, participant) {\n        let savedUser = this.stats.users[userId];\n\n        if (!savedUser) {\n            savedUser = this.stats.users[userId]\n                = new SpeakerStats(userId, participant.getDisplayName());\n        }\n    }\n\n    /**\n     * Reacts to user leave events by updating the associated user's\n     * SpeakerStats model.\n     *\n     * @param {string} userId - The user id of the user that left.\n     * @returns {void}\n     * @private\n     */\n    _onUserLeave(userId) {\n        const savedUser = this.stats.users[userId];\n\n        if (savedUser) {\n            savedUser.markAsHasLeft();\n        }\n    }\n\n    /**\n     * Reacts to user name change events by updating the last known name\n     * tracked in the associated SpeakerStats model.\n     *\n     * @param {string} userId - The user id of the user that left.\n     * @returns {void}\n     * @private\n     */\n    _onDisplayNameChange(userId, newName) {\n        const savedUser = this.stats.users[userId];\n\n        if (savedUser) {\n            savedUser.setDisplayName(newName);\n        }\n    }\n\n    /**\n     * Return a copy of the tracked SpeakerStats models.\n     *\n     * @returns {Object} The keys are the user ids and the values are the\n     * associated user's SpeakerStats model.\n     * @private\n     */\n    getStats() {\n        return this.stats.users;\n    }\n\n    /**\n     * Updates of the current stats is requested, passing the new values.\n     *\n     * @param {Object} newStats - The new values used to update current one.\n     * @private\n     */\n    _updateStats(newStats) {\n        for (const userId in newStats) { // eslint-disable-line guard-for-in\n            let speakerStatsToUpdate;\n\n            if (this.stats.users[userId]) {\n                speakerStatsToUpdate = this.stats.users[userId];\n\n                if (!speakerStatsToUpdate.getDisplayName()) {\n                    speakerStatsToUpdate\n                        .setDisplayName(newStats[userId].displayName);\n                }\n            } else {\n                speakerStatsToUpdate = new SpeakerStats(\n                    userId, newStats[userId].displayName);\n                this.stats.users[userId] = speakerStatsToUpdate;\n                speakerStatsToUpdate.markAsHasLeft();\n            }\n\n            speakerStatsToUpdate.totalDominantSpeakerTime\n                = newStats[userId].totalDominantSpeakerTime;\n        }\n    }\n}\n","import EventEmitter from 'events';\n\nimport { FEEDBACK } from '../../service/statistics/AnalyticsEvents';\nimport analytics from './AnalyticsAdapter';\nimport CallStats from './CallStats';\nimport LocalStats from './LocalStatsCollector';\nimport RTPStats from './RTPStatsCollector';\n\nimport browser from '../browser';\nimport Settings from '../settings/Settings';\nimport ScriptUtil from '../util/ScriptUtil';\nimport JitsiTrackError from '../../JitsiTrackError';\nimport * as StatisticsEvents from '../../service/statistics/Events';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * Stores all active {@link Statistics} instances.\n * @type {Set<Statistics>}\n */\nlet _instances;\n\n/**\n * True if callstats API is loaded\n */\nlet isCallstatsLoaded = false;\n\n/**\n * Since callstats.io is a third party, we cannot guarantee the quality of their\n * service. More specifically, their server may take noticeably long time to\n * respond. Consequently, it is in our best interest (in the sense that the\n * intergration of callstats.io is pretty important to us but not enough to\n * allow it to prevent people from joining a conference) to (1) start\n * downloading their API as soon as possible and (2) do the downloading\n * asynchronously.\n *\n * @param {StatisticsOptions} options - Options to use for downloading and\n * initializing callstats backend.\n */\nfunction loadCallStatsAPI(options) {\n    if (!isCallstatsLoaded) {\n        ScriptUtil.loadScript(\n            options.customScriptUrl\n                || 'https://api.callstats.io/static/callstats-ws.min.js',\n            /* async */ true,\n            /* prepend */ true,\n            /* relativeURL */ undefined,\n            /* loadCallback */ () => _initCallStatsBackend(options)\n        );\n        isCallstatsLoaded = true;\n    }\n}\n\n/**\n * Initializes Callstats backend.\n *\n * @param {StatisticsOptions} options - The options to use for initializing\n * callstats backend.\n * @private\n */\nfunction _initCallStatsBackend(options) {\n    if (CallStats.isBackendInitialized()) {\n        return;\n    }\n\n    const userName = Settings.callStatsUserName;\n\n    if (!CallStats.initBackend({\n        callStatsID: options.callStatsID,\n        callStatsSecret: options.callStatsSecret,\n        userName: options.swapUserNameAndAlias\n            ? options.callStatsAliasName : userName,\n        aliasName: options.swapUserNameAndAlias\n            ? userName : options.callStatsAliasName,\n        applicationName: options.applicationName,\n        getWiFiStatsMethod: options.getWiFiStatsMethod,\n        confID: options.confID\n    })) {\n        logger.error('CallStats Backend initialization failed bad');\n    }\n}\n\n/**\n * callstats strips any additional fields from Error except for \"name\", \"stack\",\n * \"message\" and \"constraintName\". So we need to bundle additional information\n * from JitsiTrackError into error passed to callstats to preserve valuable\n * information about error.\n * @param {JitsiTrackError} error\n */\nfunction formatJitsiTrackErrorForCallStats(error) {\n    const err = new Error();\n\n    // Just copy original stack from error\n    err.stack = error.stack;\n\n    // Combine name from error's name plus (possibly) name of original GUM error\n    err.name = (error.name || 'Unknown error') + (error.gum && error.gum.error\n        && error.gum.error.name ? ` - ${error.gum.error.name}` : '');\n\n    // Put all constraints into this field. For constraint failed errors we will\n    // still know which exactly constraint failed as it will be a part of\n    // message.\n    err.constraintName = error.gum && error.gum.constraints\n        ? JSON.stringify(error.gum.constraints) : '';\n\n    // Just copy error's message.\n    err.message = error.message;\n\n    return err;\n}\n\n/**\n * Init statistic options\n * @param options\n */\nStatistics.init = function(options) {\n    Statistics.audioLevelsEnabled = !options.disableAudioLevels;\n\n    if (typeof options.audioLevelsInterval === 'number') {\n        Statistics.audioLevelsInterval = options.audioLevelsInterval;\n    }\n\n    Statistics.disableThirdPartyRequests = options.disableThirdPartyRequests;\n};\n\n/**\n * The options to configure Statistics.\n * @typedef {Object} StatisticsOptions\n * @property {string} applicationName - The application name to pass to\n * callstats.\n * @property {string} callStatsAliasName - The alias name to use when\n * initializing callstats.\n * @property {string} callStatsConfIDNamespace - A namespace to prepend the\n * callstats conference ID with.\n * @property {string} confID - The callstats conference ID to use.\n * @property {string} callStatsID - Callstats credentials - the id.\n * @property {string} callStatsSecret - Callstats credentials - the secret.\n * @property {string} customScriptUrl - A custom lib url to use when downloading\n * callstats library.\n * @property {string} roomName - The room name we are currently in.\n * @property {boolean} swapUserNameAndAlias - Whether to swap the places of\n * username and alias when initiating callstats.\n */\n/**\n *\n * @param xmpp\n * @param {StatisticsOptions} options - The options to use creating the\n * Statistics.\n */\nexport default function Statistics(xmpp, options) {\n    /**\n     * {@link RTPStats} mapped by {@link TraceablePeerConnection.id} which\n     * collect RTP statistics for each peerconnection.\n     * @type {Map<string, RTPStats}\n     */\n    this.rtpStatsMap = new Map();\n    this.eventEmitter = new EventEmitter();\n    this.xmpp = xmpp;\n    this.options = options || {};\n\n    this.callStatsIntegrationEnabled\n        = this.options.callStatsID && this.options.callStatsSecret\n\n            // Even though AppID and AppSecret may be specified, the integration\n            // of callstats.io may be disabled because of globally-disallowed\n            // requests to any third parties.\n            && (Statistics.disableThirdPartyRequests !== true);\n    if (this.callStatsIntegrationEnabled) {\n        if (browser.isReactNative()) {\n            _initCallStatsBackend(this.options);\n        } else {\n            loadCallStatsAPI(this.options);\n        }\n\n        if (!this.options.confID) {\n            logger.warn('\"confID\" is not defined');\n        }\n\n        if (!this.options.callStatsConfIDNamespace) {\n            logger.warn('\"callStatsConfIDNamespace\" is not defined');\n        }\n    }\n\n    /**\n     * Stores {@link CallStats} instances for each\n     * {@link TraceablePeerConnection} (one {@link CallStats} instance serves\n     * one TPC). The instances are mapped by {@link TraceablePeerConnection.id}.\n     * @type {Map<number, CallStats>}\n     */\n    this.callsStatsInstances = new Map();\n\n    Statistics.instances.add(this);\n}\nStatistics.audioLevelsEnabled = false;\nStatistics.audioLevelsInterval = 200;\nStatistics.disableThirdPartyRequests = false;\nStatistics.analytics = analytics;\n\nObject.defineProperty(Statistics, 'instances', {\n    /**\n     * Returns the Set holding all active {@link Statistics} instances. Lazily\n     * initializes the Set to allow any Set polyfills to be applied.\n     * @type {Set<Statistics>}\n     */\n    get() {\n        if (!_instances) {\n            _instances = new Set();\n        }\n\n        return _instances;\n    }\n});\n\n/**\n * Starts collecting RTP stats for given peerconnection.\n * @param {TraceablePeerConnection} peerconnection\n */\nStatistics.prototype.startRemoteStats = function(peerconnection) {\n    this.stopRemoteStats(peerconnection);\n\n    try {\n        const rtpStats\n            = new RTPStats(\n                peerconnection,\n                Statistics.audioLevelsInterval,\n                2000,\n                this.eventEmitter);\n\n        rtpStats.start(Statistics.audioLevelsEnabled);\n        this.rtpStatsMap.set(peerconnection.id, rtpStats);\n    } catch (e) {\n        logger.error(`Failed to start collecting remote statistics: ${e}`);\n    }\n};\n\nStatistics.localStats = [];\n\nStatistics.startLocalStats = function(stream, callback) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n    const localStats = new LocalStats(stream, Statistics.audioLevelsInterval,\n        callback);\n\n    this.localStats.push(localStats);\n    localStats.start();\n};\n\nStatistics.prototype.addAudioLevelListener = function(listener) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n    this.eventEmitter.on(StatisticsEvents.AUDIO_LEVEL, listener);\n};\n\nStatistics.prototype.removeAudioLevelListener = function(listener) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n    this.eventEmitter.removeListener(StatisticsEvents.AUDIO_LEVEL, listener);\n};\n\nStatistics.prototype.addBeforeDisposedListener = function(listener) {\n    this.eventEmitter.on(StatisticsEvents.BEFORE_DISPOSED, listener);\n};\n\nStatistics.prototype.removeBeforeDisposedListener = function(listener) {\n    this.eventEmitter.removeListener(\n        StatisticsEvents.BEFORE_DISPOSED, listener);\n};\n\nStatistics.prototype.addConnectionStatsListener = function(listener) {\n    this.eventEmitter.on(StatisticsEvents.CONNECTION_STATS, listener);\n};\n\nStatistics.prototype.removeConnectionStatsListener = function(listener) {\n    this.eventEmitter.removeListener(\n        StatisticsEvents.CONNECTION_STATS,\n        listener);\n};\n\nStatistics.prototype.addByteSentStatsListener = function(listener) {\n    this.eventEmitter.on(StatisticsEvents.BYTE_SENT_STATS, listener);\n};\n\nStatistics.prototype.removeByteSentStatsListener = function(listener) {\n    this.eventEmitter.removeListener(StatisticsEvents.BYTE_SENT_STATS,\n        listener);\n};\n\nStatistics.prototype.dispose = function() {\n    try {\n        // NOTE Before reading this please see the comment in stopCallStats...\n        //\n        // Here we prevent from emitting the event twice in case it will be\n        // triggered from stopCallStats.\n        // If the event is triggered from here it means that the logs will not\n        // be submitted anyway (because there is no CallStats instance), but\n        // we're doing that for the sake of some kind of consistency.\n        if (!this.callsStatsInstances.size) {\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\n        }\n        for (const callStats of this.callsStatsInstances.values()) {\n            this.stopCallStats(callStats.tpc);\n        }\n        for (const tpcId of this.rtpStatsMap.keys()) {\n            this._stopRemoteStats(tpcId);\n        }\n        if (this.eventEmitter) {\n            this.eventEmitter.removeAllListeners();\n        }\n    } finally {\n        Statistics.instances.delete(this);\n    }\n};\n\nStatistics.stopLocalStats = function(stream) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n\n    for (let i = 0; i < Statistics.localStats.length; i++) {\n        if (Statistics.localStats[i].stream === stream) {\n            const localStats = Statistics.localStats.splice(i, 1);\n\n            localStats[0].stop();\n            break;\n        }\n    }\n};\n\n/**\n * Stops remote RTP stats for given peerconnection ID.\n * @param {string} tpcId {@link TraceablePeerConnection.id}\n * @private\n */\nStatistics.prototype._stopRemoteStats = function(tpcId) {\n    const rtpStats = this.rtpStatsMap.get(tpcId);\n\n    if (rtpStats) {\n        rtpStats.stop();\n        this.rtpStatsMap.delete(tpcId);\n    }\n};\n\n/**\n * Stops collecting RTP stats for given peerconnection\n * @param {TraceablePeerConnection} tpc\n */\nStatistics.prototype.stopRemoteStats = function(tpc) {\n    this._stopRemoteStats(tpc.id);\n};\n\n// CALSTATS METHODS\n\n/**\n * Initializes the callstats.io API.\n * @param {TraceablePeerConnection} tpc the {@link TraceablePeerConnection}\n * instance for which CalStats will be started.\n * @param {string} remoteUserID\n */\nStatistics.prototype.startCallStats = function(tpc, remoteUserID) {\n    if (!this.callStatsIntegrationEnabled) {\n        return;\n    } else if (this.callsStatsInstances.has(tpc.id)) {\n        logger.error('CallStats instance for ${tpc} exists already');\n\n        return;\n    }\n\n    logger.info(`Starting CallStats for ${tpc}...`);\n\n    const newInstance\n        = new CallStats(\n            tpc,\n            {\n                confID: this._getCallStatsConfID(),\n                remoteUserID\n            });\n\n    this.callsStatsInstances.set(tpc.id, newInstance);\n};\n\n/**\n * Obtains the list of *all* {@link CallStats} instances collected from every\n * valid {@link Statistics} instance.\n * @return {Set<CallStats>}\n * @private\n */\nStatistics._getAllCallStatsInstances = function() {\n    const csInstances = new Set();\n\n    for (const statistics of Statistics.instances) {\n        for (const cs of statistics.callsStatsInstances.values()) {\n            csInstances.add(cs);\n        }\n    }\n\n    return csInstances;\n};\n\n/**\n * Constructs the CallStats conference ID based on the options currently\n * configured in this instance.\n * @return {string}\n * @private\n */\nStatistics.prototype._getCallStatsConfID = function() {\n    // The conference ID is case sensitive!!!\n    return this.options.callStatsConfIDNamespace\n        ? `${this.options.callStatsConfIDNamespace}/${this.options.roomName}`\n        : this.options.roomName;\n};\n\n/**\n * Removes the callstats.io instances.\n */\nStatistics.prototype.stopCallStats = function(tpc) {\n    const callStatsInstance = this.callsStatsInstances.get(tpc.id);\n\n    if (callStatsInstance) {\n        // FIXME the original purpose of adding BEFORE_DISPOSED event was to be\n        // able to submit the last log batch from jitsi-meet to CallStats. After\n        // recent changes we dispose the CallStats earlier\n        // (before Statistics.dispose), so we need to emit this event here to\n        // give this last chance for final log batch submission.\n        //\n        // Eventually there should be a separate module called \"log storage\"\n        // which should emit proper events when it's underlying\n        // CallStats instance is going away.\n        if (this.callsStatsInstances.size === 1) {\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\n        }\n        this.callsStatsInstances.delete(tpc.id);\n\n        // The fabric needs to be terminated when being stopped\n        callStatsInstance.sendTerminateEvent();\n    }\n};\n\n/**\n * Returns true if the callstats integration is enabled, otherwise returns\n * false.\n *\n * @returns true if the callstats integration is enabled, otherwise returns\n * false.\n */\nStatistics.prototype.isCallstatsEnabled = function() {\n    return this.callStatsIntegrationEnabled;\n};\n\n/**\n * Logs either resume or hold event for the given peer connection.\n * @param {TraceablePeerConnection} tpc the connection for which event will be\n * reported\n * @param {boolean} isResume true for resume or false for hold\n */\nStatistics.prototype.sendConnectionResumeOrHoldEvent = function(tpc, isResume) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendResumeOrHoldEvent(isResume);\n    }\n};\n\n/**\n * Notifies CallStats and analytics (if present) for ice connection failed\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendIceConnectionFailedEvent = function(tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendIceConnectionFailedEvent();\n    }\n};\n\n/**\n * Notifies CallStats for mute events\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n * @param {boolean} muted true for muted and false for not muted\n * @param {String} type \"audio\"/\"video\"\n */\nStatistics.prototype.sendMuteEvent = function(tpc, muted, type) {\n    const instance = tpc && this.callsStatsInstances.get(tpc.id);\n\n    CallStats.sendMuteEvent(muted, type, instance);\n};\n\n/**\n * Notifies CallStats for screen sharing events\n * @param start {boolean} true for starting screen sharing and\n * false for not stopping\n * @param {string|null} ssrc - optional ssrc value, used only when\n * starting screen sharing.\n */\nStatistics.prototype.sendScreenSharingEvent\n    = function(start, ssrc) {\n        for (const cs of this.callsStatsInstances.values()) {\n            cs.sendScreenSharingEvent(start, ssrc);\n        }\n    };\n\n/**\n * Notifies the statistics module that we are now the dominant speaker of the\n * conference.\n * @param {String} roomJid - The room jid where the speaker event occurred.\n */\nStatistics.prototype.sendDominantSpeakerEvent = function(roomJid) {\n    for (const cs of this.callsStatsInstances.values()) {\n        cs.sendDominantSpeakerEvent();\n    }\n\n    // xmpp send dominant speaker event\n    this.xmpp.sendDominantSpeakerEvent(roomJid);\n};\n\n/**\n * Notifies about active device.\n * @param {{deviceList: {String:String}}} devicesData - list of devices with\n *      their data\n */\nStatistics.sendActiveDeviceListEvent = function(devicesData) {\n    const globalSet = Statistics._getAllCallStatsInstances();\n\n    if (globalSet.size) {\n        for (const cs of globalSet) {\n            CallStats.sendActiveDeviceListEvent(devicesData, cs);\n        }\n    } else {\n        CallStats.sendActiveDeviceListEvent(devicesData, null);\n    }\n};\n\n/* eslint-disable max-params */\n\n/**\n * Lets the underlying statistics module know where is given SSRC rendered by\n * providing renderer tag ID.\n * @param {TraceablePeerConnection} tpc the connection to which the stream\n * belongs to\n * @param {number} ssrc the SSRC of the stream\n * @param {boolean} isLocal\n * @param {string} userId\n * @param {string} usageLabel  meaningful usage label of this stream like\n *        'microphone', 'camera' or 'screen'.\n * @param {string} containerId the id of media 'audio' or 'video' tag which\n *        renders the stream.\n */\nStatistics.prototype.associateStreamWithVideoTag = function(\n        tpc,\n        ssrc,\n        isLocal,\n        userId,\n        usageLabel,\n        containerId) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.associateStreamWithVideoTag(\n            ssrc,\n            isLocal,\n            userId,\n            usageLabel,\n            containerId);\n    }\n};\n\n/* eslint-enable max-params */\n\n/**\n * Notifies CallStats that getUserMedia failed.\n *\n * @param {Error} e error to send\n */\nStatistics.sendGetUserMediaFailed = function(e) {\n    const error\n        = e instanceof JitsiTrackError\n            ? formatJitsiTrackErrorForCallStats(e) : e;\n    const globalSet = Statistics._getAllCallStatsInstances();\n\n    if (globalSet.size) {\n        for (const cs of globalSet) {\n            CallStats.sendGetUserMediaFailed(error, cs);\n        }\n    } else {\n        CallStats.sendGetUserMediaFailed(error, null);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to create offer.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendCreateOfferFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendCreateOfferFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to create answer.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occured.\n */\nStatistics.prototype.sendCreateAnswerFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendCreateAnswerFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to set local description.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendSetLocalDescFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendSetLocalDescFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to set remote description.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendSetRemoteDescFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendSetRemoteDescFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to add ICE candidate.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendAddIceCandidateFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendAddIceCandidateFailed(e);\n    }\n};\n\n/**\n * Adds to CallStats an application log.\n *\n * @param {String} m a log message to send or an {Error} object to be reported\n */\nStatistics.sendLog = function(m) {\n    const globalSubSet = new Set();\n\n    // FIXME we don't want to duplicate logs over P2P instance, but\n    // here we should go over instances and call this method for each\n    // unique conference ID rather than selecting the first one.\n    // We don't have such use case though, so leaving as is for now.\n    for (const stats of Statistics.instances) {\n        if (stats.callsStatsInstances.size) {\n            globalSubSet.add(stats.callsStatsInstances.values().next().value);\n        }\n    }\n\n    if (globalSubSet.size) {\n        for (const csPerStats of globalSubSet) {\n            CallStats.sendApplicationLog(m, csPerStats);\n        }\n    } else {\n        CallStats.sendApplicationLog(m, null);\n    }\n};\n\n/**\n * Sends the given feedback through CallStats.\n *\n * @param overall an integer between 1 and 5 indicating the user's rating.\n * @param comment the comment from the user.\n * @returns {Promise} Resolves when callstats feedback has been submitted\n * successfully.\n */\nStatistics.prototype.sendFeedback = function(overall, comment) {\n    // Statistics.analytics.sendEvent is currently fire and forget, without\n    // confirmation of successful send.\n    Statistics.analytics.sendEvent(\n        FEEDBACK,\n        {\n            rating: overall,\n            comment\n        });\n\n    return CallStats.sendFeedback(this._getCallStatsConfID(), overall, comment);\n};\n\nStatistics.LOCAL_JID = require('../../service/statistics/constants').LOCAL_JID;\n\n/**\n * Reports global error to CallStats.\n *\n * @param {Error} error\n */\nStatistics.reportGlobalError = function(error) {\n    if (error instanceof JitsiTrackError && error.gum) {\n        Statistics.sendGetUserMediaFailed(error);\n    } else {\n        Statistics.sendLog(error);\n    }\n};\n\n/**\n * Sends event to analytics and logs a message to the logger/console. Console\n * messages might also be logged to callstats automatically.\n *\n * @param {string | Object} event the event name, or an object which\n * represents the entire event.\n * @param {Object} properties properties to attach to the event (if an event\n * name as opposed to an event object is provided).\n */\nStatistics.sendAnalyticsAndLog = function(event, properties = {}) {\n    if (!event) {\n        logger.warn('No event or event name given.');\n\n        return;\n    }\n\n    let eventToLog;\n\n    // Also support an API with a single object as an event.\n    if (typeof event === 'object') {\n        eventToLog = event;\n    } else {\n        eventToLog = {\n            name: event,\n            properties\n        };\n    }\n\n    logger.log(JSON.stringify(eventToLog));\n\n    // We do this last, because it may modify the object which is passed.\n    this.analytics.sendEvent(event, properties);\n};\n\n/**\n * Sends event to analytics.\n *\n * @param {string | Object} eventName the event name, or an object which\n * represents the entire event.\n * @param {Object} properties properties to attach to the event\n */\nStatistics.sendAnalytics = function(eventName, properties = {}) {\n    this.analytics.sendEvent(eventName, properties);\n};\n","/* global MediaRecorder, MediaStream */\n\nconst RecordingResult = require('./recordingResult');\n\n/**\n * Possible audio formats MIME types\n */\nconst AUDIO_WEBM = 'audio/webm'; // Supported in chrome\nconst AUDIO_OGG = 'audio/ogg'; // Supported in firefox\n\n/**\n * A TrackRecorder object holds all the information needed for recording a\n * single JitsiTrack (either remote or local)\n * @param track The JitsiTrack the object is going to hold\n */\nconst TrackRecorder = function(track) {\n    // The JitsiTrack holding the stream\n    this.track = track;\n\n    // The MediaRecorder recording the stream\n    this.recorder = null;\n\n    // The array of data chunks recorded from the stream\n    // acts as a buffer until the data is stored on disk\n    this.data = null;\n\n    // the name of the person of the JitsiTrack. This can be undefined and/or\n    // not unique\n    this.name = null;\n\n    // the time of the start of the recording\n    this.startTime = null;\n};\n\n/**\n * Starts the recording of a JitsiTrack in a TrackRecorder object.\n * This will also define the timestamp and try to update the name\n * @param trackRecorder the TrackRecorder to start\n */\nfunction startRecorder(trackRecorder) {\n    if (trackRecorder.recorder === undefined) {\n        throw new Error('Passed an object to startRecorder which is not a '\n            + 'TrackRecorder object');\n    }\n    trackRecorder.recorder.start();\n    trackRecorder.startTime = new Date();\n}\n\n/**\n * Stops the recording of a JitsiTrack in a TrackRecorder object.\n * This will also try to update the name\n * @param trackRecorder the TrackRecorder to stop\n */\nfunction stopRecorder(trackRecorder) {\n    if (trackRecorder.recorder === undefined) {\n        throw new Error('Passed an object to stopRecorder which is not a '\n            + 'TrackRecorder object');\n    }\n    trackRecorder.recorder.stop();\n}\n\n/**\n * Determines which kind of audio recording the browser supports\n * chrome supports \"audio/webm\" and firefox supports \"audio/ogg\"\n */\nfunction determineCorrectFileType() {\n    if (MediaRecorder.isTypeSupported(AUDIO_WEBM)) {\n        return AUDIO_WEBM;\n    } else if (MediaRecorder.isTypeSupported(AUDIO_OGG)) {\n        return AUDIO_OGG;\n    }\n    throw new Error(\n        'unable to create a MediaRecorder with the right mimetype!');\n}\n\n/**\n * main exported object of the file, holding all\n * relevant functions and variables for the outside world\n * @param jitsiConference the jitsiConference which this object\n * is going to record\n */\nfunction AudioRecorder(jitsiConference) {\n    // array of TrackRecorders, where each trackRecorder\n    // holds the JitsiTrack, MediaRecorder and recorder data\n    this.recorders = [];\n\n    // get which file type is supported by the current browser\n    this.fileType = determineCorrectFileType();\n\n    // boolean flag for active recording\n    this.isRecording = false;\n\n    // the jitsiconference the object is recording\n    this.jitsiConference = jitsiConference;\n}\n\n/**\n * Add the the exported module so that it can be accessed by other files\n */\nAudioRecorder.determineCorrectFileType = determineCorrectFileType;\n\n/**\n * Adds a new TrackRecorder object to the array.\n *\n * @param track the track potentially holding an audio stream\n */\nAudioRecorder.prototype.addTrack = function(track) {\n    if (track.isAudioTrack()) {\n        // create the track recorder\n        const trackRecorder = this.instantiateTrackRecorder(track);\n\n        // push it to the local array of all recorders\n\n        this.recorders.push(trackRecorder);\n\n        // update the name of the trackRecorders\n        this.updateNames();\n\n        // If we're already recording, immediately start recording this new\n        // track.\n        if (this.isRecording) {\n            startRecorder(trackRecorder);\n        }\n    }\n};\n\n/**\n * Creates a TrackRecorder object. Also creates the MediaRecorder and\n * data array for the trackRecorder.\n * @param track the JitsiTrack holding the audio MediaStream(s)\n */\nAudioRecorder.prototype.instantiateTrackRecorder = function(track) {\n    const trackRecorder = new TrackRecorder(track);\n\n    // Create a new stream which only holds the audio track\n    const originalStream = trackRecorder.track.getOriginalStream();\n    const stream = createEmptyStream();\n\n    originalStream.getAudioTracks().forEach(t => stream.addTrack(t));\n\n    // Create the MediaRecorder\n    trackRecorder.recorder = new MediaRecorder(stream,\n        { mimeType: this.fileType });\n\n    // array for holding the recorder data. Resets it when\n    // audio already has been recorder once\n    trackRecorder.data = [];\n\n    // function handling a dataEvent, e.g the stream gets new data\n    trackRecorder.recorder.ondataavailable = function(dataEvent) {\n        if (dataEvent.data.size > 0) {\n            trackRecorder.data.push(dataEvent.data);\n        }\n    };\n\n    return trackRecorder;\n};\n\n/**\n * Notifies the module that a specific track has stopped, e.g participant left\n * the conference.\n * if the recording has not started yet, the TrackRecorder will be removed from\n * the array. If the recording has started, the recorder will stop recording\n * but not removed from the array so that the recorded stream can still be\n * accessed\n *\n * @param {JitsiTrack} track the JitsiTrack to remove from the recording session\n */\nAudioRecorder.prototype.removeTrack = function(track) {\n    if (track.isVideoTrack()) {\n        return;\n    }\n\n    const array = this.recorders;\n    let i;\n\n    for (i = 0; i < array.length; i++) {\n        if (array[i].track.getParticipantId() === track.getParticipantId()) {\n            const recorderToRemove = array[i];\n\n            if (this.isRecording) {\n                stopRecorder(recorderToRemove);\n            } else {\n                // remove the TrackRecorder from the array\n                array.splice(i, 1);\n            }\n        }\n    }\n\n    // make sure the names are up to date\n    this.updateNames();\n};\n\n/**\n * Tries to update the name value of all TrackRecorder in the array.\n * If it hasn't changed,it will keep the exiting name. If it changes to a\n * undefined value, the old value will also be kept.\n */\nAudioRecorder.prototype.updateNames = function() {\n    const conference = this.jitsiConference;\n\n    this.recorders.forEach(trackRecorder => {\n        if (trackRecorder.track.isLocal()) {\n            trackRecorder.name = 'the transcriber';\n        } else {\n            const id = trackRecorder.track.getParticipantId();\n            const participant = conference.getParticipantById(id);\n            const newName = participant.getDisplayName();\n\n            if (newName !== 'undefined') {\n                trackRecorder.name = newName;\n            }\n        }\n    });\n};\n\n/**\n * Starts the audio recording of every local and remote track\n */\nAudioRecorder.prototype.start = function() {\n    if (this.isRecording) {\n        throw new Error('audiorecorder is already recording');\n    }\n\n    // set boolean isRecording flag to true so if new participants join the\n    // conference, that track can instantly start recording as well\n    this.isRecording = true;\n\n    // start all the mediaRecorders\n    this.recorders.forEach(trackRecorder => startRecorder(trackRecorder));\n\n    // log that recording has started\n    console.log(\n        `Started the recording of the audio. There are currently ${\n            this.recorders.length} recorders active.`);\n};\n\n/**\n * Stops the audio recording of every local and remote track\n */\nAudioRecorder.prototype.stop = function() {\n    // set the boolean flag to false\n    this.isRecording = false;\n\n    // stop all recorders\n    this.recorders.forEach(trackRecorder => stopRecorder(trackRecorder));\n    console.log('stopped recording');\n};\n\n/**\n * link hacking to download all recorded audio streams\n */\nAudioRecorder.prototype.download = function() {\n    this.recorders.forEach(trackRecorder => {\n        const blob = new Blob(trackRecorder.data, { type: this.fileType });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n\n        document.body.appendChild(a);\n        a.style = 'display: none';\n        a.href = url;\n        a.download = `test.${this.fileType.split('/')[1]}`;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    });\n};\n\n/**\n * returns the audio files of all recorders as an array of objects,\n * which include the name of the owner of the track and the starting time stamp\n * @returns {Array} an array of RecordingResult objects\n */\nAudioRecorder.prototype.getRecordingResults = function() {\n    if (this.isRecording) {\n        throw new Error(\n            'cannot get blobs because the AudioRecorder is still recording!');\n    }\n\n    // make sure the names are up to date before sending them off\n    this.updateNames();\n\n    const array = [];\n\n    this.recorders.forEach(\n        recorder =>\n            array.push(\n                new RecordingResult(\n                    new Blob(recorder.data, { type: this.fileType }),\n                    recorder.name,\n                    recorder.startTime)));\n\n    return array;\n};\n\n/**\n * Gets the mime type of the recorder audio\n * @returns {String} the mime type of the recorder audio\n */\nAudioRecorder.prototype.getFileType = function() {\n    return this.fileType;\n};\n\n/**\n * Creates a empty MediaStream object which can be used\n * to add MediaStreamTracks to\n * @returns MediaStream\n */\nfunction createEmptyStream() {\n    if (typeof MediaStream !== 'undefined') {\n        return new MediaStream();\n    }\n    throw new Error('cannot create a clean mediaStream');\n}\n\n/**\n * export the main object AudioRecorder\n */\nmodule.exports = AudioRecorder;\n","/* eslint-disable max-params */\n\n/**\n * This object stores variables needed around the recording of an audio stream\n * and passing this recording along with additional information along to\n * different processes\n * @param blob the recording audio stream as a single blob\n * @param name the name of the person of the audio stream\n * @param startTime the time in UTC when recording of the audiostream started\n * @param wordArray the recorder audio stream transcribed as an array of Word\n *                  objects\n */\nconst RecordingResult = function(blob, name, startTime, wordArray) {\n    this.blob = blob;\n    this.name = name;\n    this.startTime = startTime;\n    this.wordArray = wordArray;\n};\n\n/* eslint-enable max-params */\n\nmodule.exports = RecordingResult;\n","const AudioRecorder = require('./audioRecorder');\nconst SphinxService = require(\n    './transcriptionServices/SphinxTranscriptionService');\n\nconst BEFORE_STATE = 'before';\nconst RECORDING_STATE = 'recording';\nconst TRANSCRIBING_STATE = 'transcribing';\nconst FINISHED_STATE = 'finished';\n\n// the amount of characters each line in the transcription will have\nconst MAXIMUM_SENTENCE_LENGTH = 80;\n\n/**\n * This is the main object for handing the Transcription. It interacts with\n * the audioRecorder to record every person in a conference and sends the\n * recorder audio to a transcriptionService. The returned speech-to-text result\n * will be merged to create a transcript\n * @param {AudioRecorder} audioRecorder An audioRecorder recording a conference\n */\nfunction Transcriber() {\n    // the object which can record all audio in the conference\n    this.audioRecorder = new AudioRecorder();\n\n    // this object can send the recorder audio to a speech-to-text service\n    this.transcriptionService = new SphinxService();\n\n    // holds a counter to keep track if merging can start\n    this.counter = null;\n\n    // holds the date when transcription started which makes it possible\n    // to calculate the offset between recordings\n    this.startTime = null;\n\n    // will hold the transcription once it is completed\n    this.transcription = null;\n\n    // this will be a method which will be called once the transcription is done\n    // with the transcription as parameter\n    this.callback = null;\n\n    // stores all the retrieved speech-to-text results to merge together\n    // this value will store an Array<Word> object\n    this.results = [];\n\n    // Stores the current state of the transcription process\n    this.state = BEFORE_STATE;\n\n    // Used in the updateTranscription method to add a new line when the\n    // sentence becomes to long\n    this.lineLength = 0;\n}\n\n/**\n * Method to start the transcription process. It will tell the audioRecorder\n * to start storing all audio streams and record the start time for merging\n * purposes\n */\nTranscriber.prototype.start = function start() {\n    if (this.state !== BEFORE_STATE) {\n        throw new Error(\n            `The transcription can only start when it's in the \"${\n                BEFORE_STATE}\" state. It's currently in the \"${\n                this.state}\" state`);\n    }\n    this.state = RECORDING_STATE;\n    this.audioRecorder.start();\n    this.startTime = new Date();\n};\n\n/**\n * Method to stop the transcription process. It will tell the audioRecorder to\n * stop, and get all the recorded audio to send it to the transcription service\n\n * @param callback a callback which will receive the transcription\n */\nTranscriber.prototype.stop = function stop(callback) {\n    if (this.state !== RECORDING_STATE) {\n        throw new Error(\n            `The transcription can only stop when it's in the \"${\n                RECORDING_STATE}\" state. It's currently in the \"${\n                this.state}\" state`);\n    }\n\n    // stop the recording\n    console.log('stopping recording and sending audio files');\n    this.audioRecorder.stop();\n\n    // and send all recorded audio the the transcription service\n    const callBack = blobCallBack.bind(null, this);\n\n    this.audioRecorder.getRecordingResults().forEach(recordingResult => {\n        this.transcriptionService.send(recordingResult, callBack);\n        this.counter++;\n    });\n\n    // set the state to \"transcribing\" so that maybeMerge() functions correctly\n    this.state = TRANSCRIBING_STATE;\n\n    // and store the callback for later\n    this.callback = callback;\n};\n\n/**\n * This method gets the answer from the transcription service, calculates the\n * offset and adds is to every Word object. It will also start the merging\n * when every send request has been received\n *\n * note: Make sure to bind this as a Transcription object\n * @param {Transcriber} transcriber the transcriber instance\n * @param {RecordingResult} answer a RecordingResult object with a defined\n * WordArray\n */\nfunction blobCallBack(transcriber, answer) {\n    console.log(\n        'retrieved an answer from the transcription service. The answer has an'\n            + ` array of length: ${answer.wordArray.length}`);\n\n    // first add the offset between the start of the transcription and\n    // the start of the recording to all start and end times\n    if (answer.wordArray.length > 0) {\n        let offset = answer.startTime.getUTCMilliseconds()\n            - transcriber.startTime.getUTCMilliseconds();\n\n        // transcriber time will always be earlier\n\n        if (offset < 0) {\n            offset = 0; // presume 0 if it somehow not earlier\n        }\n\n        let array = '[';\n\n        answer.wordArray.forEach(wordObject => {\n            wordObject.begin += offset;\n            wordObject.end += offset;\n            array += `${wordObject.word},`;\n        });\n        array += ']';\n        console.log(array);\n\n        // give a name value to the Array object so that the merging can access\n        // the name value without having to use the whole recordingResult object\n        // in the algorithm\n        answer.wordArray.name = answer.name;\n    }\n\n    // then store the array and decrease the counter\n    transcriber.results.push(answer.wordArray);\n    transcriber.counter--;\n    console.log(`current counter: ${transcriber.counter}`);\n\n    // and check if all results have been received.\n    transcriber.maybeMerge();\n}\n\n/**\n * this method will check if the counter is zero. If it is, it will call\n * the merging method\n */\nTranscriber.prototype.maybeMerge = function() {\n    if (this.state === TRANSCRIBING_STATE && this.counter === 0) {\n        // make sure to include the events in the result arrays before\n        // merging starts\n        this.merge();\n    }\n};\n\n/**\n * This method will merge all speech-to-text arrays together in one\n * readable transcription string\n */\nTranscriber.prototype.merge = function() {\n    console.log(\n        `starting merge process!\\n The length of the array: ${\n            this.results.length}`);\n    this.transcription = '';\n\n    // the merging algorithm will look over all Word objects who are at pos 0 in\n    // every array. It will then select the one closest in time to the\n    // previously placed word, while removing the selected word from its array\n    // note: words can be skipped the skipped word's begin and end time somehow\n    // end up between the closest word start and end time\n    const arrays = this.results;\n\n    // arrays of Word objects\n    const potentialWords = []; // array of the first Word objects\n    // check if any arrays are already empty and remove them\n\n    hasPopulatedArrays(arrays);\n\n    // populate all the potential Words for a first time\n    arrays.forEach(array => pushWordToSortedArray(potentialWords, array));\n\n    // keep adding words to transcription until all arrays are exhausted\n    while (hasPopulatedArrays(arrays)) {\n        // first select the lowest array;\n        let lowestWordArray = arrays[0];\n\n        arrays.forEach(wordArray => {\n            if (wordArray[0].begin < lowestWordArray[0].begin) {\n                lowestWordArray = wordArray;\n            }\n        });\n\n        // put the word in the transcription\n        let wordToAdd = lowestWordArray.shift();\n\n        this.updateTranscription(wordToAdd, lowestWordArray.name);\n\n        // keep going until a word in another array has a smaller time\n        // or the array is empty\n        while (lowestWordArray.length > 0) {\n            let foundSmaller = false;\n            const wordToCompare = lowestWordArray[0].begin;\n\n            arrays.forEach(wordArray => {\n                if (wordArray[0].begin < wordToCompare) {\n                    foundSmaller = true;\n                }\n            });\n\n            // add next word if no smaller time has been found\n            if (foundSmaller) {\n                break;\n            }\n\n            wordToAdd = lowestWordArray.shift();\n            this.updateTranscription(wordToAdd, null);\n        }\n\n    }\n\n    // set the state to finished and do the necessary left-over tasks\n    this.state = FINISHED_STATE;\n    if (this.callback) {\n        this.callback(this.transcription);\n    }\n};\n\n/**\n * Appends a word object to the transcription. It will make a new line with a\n * name if a name is specified\n * @param {Word} word the Word object holding the word to append\n * @param {String|null} name the name of a new speaker. Null if not applicable\n */\nTranscriber.prototype.updateTranscription = function(word, name) {\n    if (name !== undefined && name !== null) {\n        this.transcription += `\\n${name}:`;\n        this.lineLength = name.length + 1; // +1 for the semi-colon\n    }\n    if (this.lineLength + word.word.length > MAXIMUM_SENTENCE_LENGTH) {\n        this.transcription += '\\n    ';\n        this.lineLength = 4; // because of the 4 spaces after the new line\n    }\n    this.transcription += ` ${word.word}`;\n    this.lineLength += word.word.length + 1; // +1 for the space\n};\n\n/**\n * Check if the given 2 dimensional array has any non-zero Word-arrays in them.\n * All zero-element arrays inside will be removed\n * If any non-zero-element arrays are found, the method will return true.\n * otherwise it will return false\n * @param {Array<Array>} twoDimensionalArray the array to check\n * @returns {boolean} true if any non-zero arrays inside, otherwise false\n */\nfunction hasPopulatedArrays(twoDimensionalArray) {\n    for (let i = 0; i < twoDimensionalArray.length; i++) {\n        if (twoDimensionalArray[i].length === 0) {\n            twoDimensionalArray.splice(i, 1);\n        }\n    }\n\n    return twoDimensionalArray.length > 0;\n}\n\n/**\n * Push a word to the right location in a sorted array. The array is sorted\n * from lowest to highest start time. Every word is stored in an object which\n * includes the name of the person saying the word.\n *\n * @param {Array<Word>} array the sorted array to push to\n * @param {Word} word the word to push into the array\n */\nfunction pushWordToSortedArray(array, word) {\n    if (array.length === 0) {\n        array.push(word);\n    } else {\n        if (array[array.length - 1].begin <= word.begin) {\n            array.push(word);\n\n            return;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n            if (word.begin < array[i].begin) {\n                array.splice(i, 0, word);\n\n                return;\n            }\n        }\n        array.push(word); // fail safe\n    }\n}\n\n/**\n * Gives the transcriber a JitsiTrack holding an audioStream to transcribe.\n * The JitsiTrack is given to the audioRecorder. If it doesn't hold an\n * audiostream, it will not be added by the audioRecorder\n * @param {JitsiTrack} track the track to give to the audioRecorder\n */\nTranscriber.prototype.addTrack = function(track) {\n    this.audioRecorder.addTrack(track);\n};\n\n/**\n * Remove the given track from the auioRecorder\n * @param track\n */\nTranscriber.prototype.removeTrack = function(track) {\n    this.audioRecorder.removeTrack(track);\n};\n\n/**\n * Will return the created transcription if it's avialable or throw an error\n * when it's not done yet\n * @returns {String} the transcription as a String\n */\nTranscriber.prototype.getTranscription = function() {\n    if (this.state !== FINISHED_STATE) {\n        throw new Error(\n            `The transcription can only be retrieved when it's in the \"${\n                FINISHED_STATE}\" state. It's currently in the \"${\n                this.state}\" state`);\n    }\n\n    return this.transcription;\n};\n\n/**\n * Returns the current state of the transcription process\n */\nTranscriber.prototype.getState = function() {\n    return this.state;\n};\n\n/**\n * Resets the state to the \"before\" state, such that it's again possible to\n * call the start method\n */\nTranscriber.prototype.reset = function() {\n    this.state = BEFORE_STATE;\n    this.counter = null;\n    this.transcription = null;\n    this.startTime = null;\n    this.callback = null;\n    this.results = [];\n    this.lineLength = 0;\n};\n\nmodule.exports = Transcriber;\n","/**\n * Abstract class representing an interface to implement a speech-to-text\n * service on.\n */\nconst TranscriptionService = function() {\n    throw new Error('TranscriptionService is abstract and cannot be'\n        + 'created');\n};\n\n/**\n * This method can be used to send the recorder audio stream and\n * retrieve the answer from the transcription service from the callback\n *\n * @param {RecordingResult} recordingResult a recordingResult object which\n * includes the recorded audio stream as a blob\n * @param {Function} callback  which will retrieve the a RecordingResult with\n *        the answer as a WordArray\n */\nTranscriptionService.prototype.send = function send(recordingResult, callback) {\n    this.sendRequest(recordingResult.blob, response => {\n        if (this.verify(response)) {\n            recordingResult.wordArray = this.formatResponse(response);\n        } else {\n            console.log('the retrieved response from the server is not valid!');\n            recordingResult.wordArray = [];\n        }\n        callback(recordingResult);\n    });\n};\n\n/**\n * Abstract method which will rend the recorder audio stream to the implemented\n * transcription service and will retrieve an answer, which will be\n * called on the given callback method\n *\n * @param {Blob} audioBlob the recorded audio stream as a single Blob\n * @param {function} callback function which will retrieve the answer\n *                            from the service\n */\n// eslint-disable-next-line no-unused-vars\nTranscriptionService.prototype.sendRequest = function(audioBlob, callback) {\n    throw new Error('TranscriptionService.sendRequest is abstract');\n};\n\n/**\n * Abstract method which will parse the output from the implemented\n * transcription service to the expected format\n *\n * The transcriber class expect an array of word objects, where each word\n * object is one transcribed word by the service.\n *\n * The expected output of this method is an array of word objects, in\n * the correct order. That is, the first object in the array is the first word\n * being said, and the last word in the array is the last word being said\n *\n * @param response the answer from the speech-to-text server which needs to be\n *                 formatted\n * @return {Array<Word>} an array of Word objects\n */\n// eslint-disable-next-line no-unused-vars\nTranscriptionService.prototype.formatResponse = function(response) {\n    throw new Error('TranscriptionService.format is abstract');\n};\n\n/**\n * Abstract method which will verify that the response from the server is valid\n *\n * @param response the response from the server\n * @return {boolean} true if response is valid, false otherwise\n */\n// eslint-disable-next-line no-unused-vars\nTranscriptionService.prototype.verify = function(response) {\n    throw new Error('TranscriptionService.verify is abstract');\n};\n\nmodule.exports = TranscriptionService;\n","/* global config */\n\nconst TranscriptionService = require('./AbstractTranscriptionService');\nconst Word = require('../word');\nconst audioRecorder = require('./../audioRecorder');\n\n/**\n * Implements a TranscriptionService for a Sphinx4 http server\n */\nconst SphinxService = function() {\n    // set the correct url\n    this.url = getURL();\n};\n\n/**\n * Subclass of AbstractTranscriptionService\n */\nSphinxService.prototype = Object.create(TranscriptionService.prototype);\n\n/**\n * Set the right constructor\n */\nSphinxService.constructor = SphinxService;\n\n/**\n * Overrides the sendRequest method from AbstractTranscriptionService\n * it will send the audio stream the a Sphinx4 server to get the transcription\n *\n * @param audioFileBlob the recorder audio stream an a single Blob\n * @param callback the callback function retrieving the server response\n */\nSphinxService.prototype.sendRequest = function(audioFileBlob, callback) {\n    console.log(`sending an audio file  to ${this.url}`);\n    console.log(`the audio file being sent: ${audioFileBlob}`);\n    const request = new XMLHttpRequest();\n\n    request.onreadystatechange = function() {\n        if (request.readyState === XMLHttpRequest.DONE\n            && request.status === 200) {\n            callback(request.responseText);\n        } else if (request.readyState === XMLHttpRequest.DONE) {\n            throw new Error(\n                `unable to accept response from sphinx server. status: ${\n                    request.status}`);\n        }\n\n        // if not ready no point to throw an error\n    };\n    request.open('POST', this.url);\n    request.setRequestHeader('Content-Type',\n        audioRecorder.determineCorrectFileType());\n    request.send(audioFileBlob);\n    console.log(`send ${audioFileBlob}`);\n};\n\n/**\n * Overrides the formatResponse method from AbstractTranscriptionService\n * It will parse the answer from the server in the expected format\n *\n * @param response the JSON body retrieved from the Sphinx4 server\n */\nSphinxService.prototype.formatResponse = function(response) {\n    const result = JSON.parse(response).objects;\n\n    // make sure to delete the session id object, which is always\n    // the first value in the JSON array\n\n    result.shift();\n    const array = [];\n\n    result.forEach(\n        word =>\n            word.filler\n                || array.push(new Word(word.word, word.start, word.end)));\n\n    return array;\n};\n\n/**\n * checks wether the reply is empty, or doesn't contain a correct JSON object\n * @param response the server response\n * @return {boolean} whether the response is valid\n */\nSphinxService.prototype.verify = function(response) {\n    console.log(`response from server:${response.toString()}`);\n\n    // test if server responded with a string object\n    if (typeof response !== 'string') {\n        return false;\n    }\n\n    // test if the string can be parsed into valid JSON\n    let json;\n\n    try {\n        json = JSON.parse(response);\n    } catch (error) {\n        console.log(error);\n\n        return false;\n    }\n\n    // check if the JSON has a \"objects\" value\n    if (json.objects === undefined) {\n        return false;\n    }\n\n    // get the \"objects\" value and check for a session ID\n    const array = json.objects;\n\n    if (!(array[0] && array[0]['session-id'])) {\n        return false;\n    }\n\n    // everything seems to be in order\n    return true;\n};\n\n/**\n * Gets the URL to the Sphinx4 server from the config file. If it's not there,\n * it will throw an error\n *\n * @returns {string} the URL to the sphinx4 server\n */\nfunction getURL() {\n    const message = 'config does not contain an url to a Sphinx4 https server';\n\n    if (config.sphinxURL === undefined) {\n        console.log(message);\n    } else {\n        const toReturn = config.sphinxURL;\n\n        if (toReturn.includes !== undefined && toReturn.includes('https://')) {\n            return toReturn;\n        }\n        console.log(message);\n\n    }\n}\n\nmodule.exports = SphinxService;\n","/**\n * An object representing a transcribed word, with some additional information\n * @param word the word\n * @param begin the time the word was started being uttered\n * @param end the time the word stopped being uttered\n */\nconst Word = function(word, begin, end) {\n    this.word = word;\n    this.begin = begin;\n    this.end = end;\n};\n\n/**\n * Get the string representation of the word\n * @returns {*} the word as a string\n */\nWord.prototype.getWord = function() {\n    return this.word;\n};\n\n/**\n * Get the time the word started being uttered\n * @returns {*} the start time as an integer\n */\nWord.prototype.getBeginTime = function() {\n    return this.begin;\n};\n\n/**\n * Get the time the word stopped being uttered\n * @returns {*} the end time as an integer\n */\nWord.prototype.getEndTime = function() {\n    return this.end;\n};\n\nmodule.exports = Word;\n","import async from 'async';\n\n/**\n * A queue for async task execution.\n */\nexport default class AsyncQueue {\n    /**\n     * Creates new instance.\n     */\n    constructor() {\n        this._queue = async.queue(this._processQueueTasks.bind(this), 1);\n        this._stopped = false;\n    }\n\n    /**\n     * Removes any pending tasks from the queue.\n     */\n    clear() {\n        this._queue.kill();\n    }\n\n    /**\n     * Internal task processing implementation which makes things work.\n     */\n    _processQueueTasks(task, finishedCallback) {\n        task(finishedCallback);\n    }\n\n    /**\n     * The 'task' function will be given a callback it MUST call with either:\n     *  1) No arguments if it was successful or\n     *  2) An error argument if there was an error\n     * If the task wants to process the success or failure of the task, it\n     * should pass the {@code callback} to the push function, e.g.:\n     * queue.push(task, (err) => {\n     *     if (err) {\n     *         // error handling\n     *     } else {\n     *         // success handling\n     *     }\n     * });\n     *\n     * @param {function} task - The task to be executed. See the description above.\n     * @param {function} [callback] - Optional callback to be called after the task has been executed.\n     */\n    push(task, callback) {\n        if (this._stopped) {\n            callback && callback(new Error('The queue has been stopped'));\n\n            return;\n        }\n        this._queue.push(task, callback);\n    }\n\n    /**\n     * Shutdowns the queue. All already queued tasks will execute, but no future tasks can be added. If a task is added\n     * after the queue has been shutdown then the callback will be called with an error.\n     */\n    shutdown() {\n        this._stopped = true;\n    }\n}\n","const AuthUtil = {\n    /**\n     * Creates the URL pointing to JWT token authentication service. It is\n     * formatted from the 'urlPattern' argument which can contain the following\n     * constants:\n     * '{room}' - name of the conference room passed as <tt>roomName</tt>\n     * argument to this method.\n     * '{roleUpgrade}' - will contain 'true' if the URL will be used for\n     * the role upgrade scenario, where user connects from anonymous domain and\n     * then gets upgraded to the moderator by logging-in from the popup window.\n     *\n     * @param urlPattern a URL pattern pointing to the login service\n     * @param roomName the name of the conference room for which the user will\n     * be authenticated\n     * @param {bool} roleUpgrade <tt>true</tt> if the URL will be used for role\n     * upgrade scenario, where the user logs-in from the popup window in order\n     * to have the moderator rights granted\n     *\n     * @returns {string|null} the URL pointing to JWT login service or\n     * <tt>null</tt> if 'urlPattern' is not a string and the URL can not be\n     * constructed.\n     */\n    getTokenAuthUrl(urlPattern, roomName, roleUpgrade) {\n        const url = urlPattern;\n\n        if (typeof url !== 'string') {\n            return null;\n        }\n\n        return url.replace('{room}', roomName)\n            .replace('{roleUpgrade}', roleUpgrade === true);\n    }\n};\n\nmodule.exports = AuthUtil;\n","/**\n * Implements utility to forward events from one eventEmitter to another.\n * @param src {object} instance of EventEmitter or another class that implements\n * addListener method which will register listener to EventEmitter instance.\n * @param dest {object} instance of EventEmitter or another class that\n * implements emit method which will emit an event.\n */\nfunction EventEmitterForwarder(src, dest) {\n    if (!src || !dest || typeof src.addListener !== 'function'\n        || typeof dest.emit !== 'function') {\n        throw new Error('Invalid arguments passed to EventEmitterForwarder');\n    }\n    this.src = src;\n    this.dest = dest;\n}\n\n/**\n * Adds event to be forwarded from src to dest.\n * @param srcEvent {string} the event that EventEmitterForwarder is listening\n * for.\n * @param dstEvent {string} the event that will be fired from dest.\n * @param arguments all other passed arguments are going to be fired with\n * dstEvent.\n */\nEventEmitterForwarder.prototype.forward = function(...args) {\n    const srcEvent = args[0];\n\n    // This will be the \"this\" value for emit function.\n\n    args[0] = this.dest;\n\n    // Using bind.apply to pass the arguments as Array-like object (\"arguments\")\n    this.src.addListener(\n        srcEvent,\n        Function.prototype.bind.apply(this.dest.emit, args));\n};\n\nmodule.exports = EventEmitterForwarder;\n","/**\n * This utility class defines custom onerror and onunhandledrejection functions.\n * The custom error handlers respect the previously-defined error handlers.\n * GlobalOnErrorHandler class provides utilities to add many custom error\n * handlers and to execute the error handlers directly.\n */\n\n\n/**\n * List with global error handlers that will be executed.\n */\nconst handlers = [];\n\n// If an old handler exists, also fire its events.\nconst oldOnErrorHandler = window.onerror;\n\n/**\n * Custom error handler that calls the old global error handler and executes\n * all handlers that were previously added.\n */\nfunction JitsiGlobalErrorHandler(...args) {\n    handlers.forEach(handler => handler(...args));\n    oldOnErrorHandler && oldOnErrorHandler(...args);\n}\n\n// If an old handler exists, also fire its events.\nconst oldOnUnhandledRejection = window.onunhandledrejection;\n\n/**\n * Custom handler that calls the old global handler and executes all handlers\n * that were previously added. This handler handles rejected Promises.\n */\nfunction JitsiGlobalUnhandledRejection(event) {\n    handlers.forEach(handler => handler(null, null, null, null, event.reason));\n    oldOnUnhandledRejection && oldOnUnhandledRejection(event);\n}\n\n// Setting the custom error handlers.\nwindow.onerror = JitsiGlobalErrorHandler;\nwindow.onunhandledrejection = JitsiGlobalUnhandledRejection;\n\nconst GlobalOnErrorHandler = {\n    /**\n     * Adds new error handlers.\n     * @param handler the new handler.\n     */\n    addHandler(handler) {\n        handlers.push(handler);\n    },\n\n    /**\n     * Calls the global error handler if there is one.\n     * @param error the error to pass to the error handler\n     */\n    callErrorHandler(error) {\n        const errHandler = window.onerror;\n\n        if (!errHandler) {\n            return;\n        }\n        errHandler(null, null, null, null, error);\n    },\n\n    /**\n     * Calls the global rejection handler if there is one.\n     * @param error the error to pass to the rejection handler.\n     */\n    callUnhandledRejectionHandler(error) {\n        const errHandler = window.onunhandledrejection;\n\n        if (!errHandler) {\n            return;\n        }\n        errHandler(error);\n    }\n};\n\n\nmodule.exports = GlobalOnErrorHandler;\n","import EventEmitter from 'events';\n\n/**\n * The class implements basic event operations - add/remove listener.\n * NOTE: The purpose of the class is to be extended in order to add\n * this functionality to other classes.\n */\nexport default class Listenable {\n    /**\n     * Creates new instance.\n     * @param {EventEmitter} eventEmitter\n     * @constructor\n     */\n    constructor(eventEmitter = new EventEmitter()) {\n        this.eventEmitter = eventEmitter;\n\n        // aliases for addListener/removeListener\n        this.addEventListener = this.on = this.addListener;\n        this.removeEventListener = this.off = this.removeListener;\n    }\n\n    /**\n     * Adds new listener.\n     * @param {String} eventName the name of the event\n     * @param {Function} listener the listener.\n     */\n    addListener(eventName, listener) {\n        this.eventEmitter.addListener(eventName, listener);\n    }\n\n    /**\n     * Removes listener.\n     * @param {String} eventName the name of the event that triggers the\n     * listener\n     * @param {Function} listener the listener.\n     */\n    removeListener(eventName, listener) {\n        this.eventEmitter.removeListener(eventName, listener);\n    }\n}\n","\n\n/**\n * The method will increase the given number by 1. If the given counter is equal\n * or greater to {@link Number.MAX_SAFE_INTEGER} then it will be rolled back to\n * 1.\n * @param {number} number - An integer counter value to be incremented.\n * @return {number} the next counter value increased by 1 (see the description\n * above for exception).\n */\nexport function safeCounterIncrement(number) {\n    let nextValue = number;\n\n    if (number >= Number.MAX_SAFE_INTEGER) {\n        nextValue = 0;\n    }\n\n    return nextValue + 1;\n}\n","/**\n * @const\n */\nconst ALPHANUM\n    = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n/**\n * Hexadecimal digits.\n * @const\n */\nconst HEX_DIGITS = '0123456789abcdef';\n\n/**\n * Generates random int within the range [min, max]\n * @param min the minimum value for the generated number\n * @param max the maximum value for the generated number\n * @returns random int number\n */\nfunction randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Get random element from array or string.\n * @param {Array|string} arr source\n * @returns array element or string character\n */\nfunction randomElement(arr) {\n    return arr[randomInt(0, arr.length - 1)];\n}\n\n/**\n * Generate random alphanumeric string.\n * @param {number} length expected string length\n * @returns {string} random string of specified length\n */\nfunction randomAlphanumStr(length) {\n    let result = '';\n\n    for (let i = 0; i < length; i += 1) {\n        result += randomElement(ALPHANUM);\n    }\n\n    return result;\n}\n\n/**\n * Exported interface.\n */\nconst RandomUtil = {\n    /**\n     * Returns a random hex digit.\n     * @returns {*}\n     */\n    randomHexDigit() {\n        return randomElement(HEX_DIGITS);\n    },\n\n    /**\n     * Returns a random string of hex digits with length 'len'.\n     * @param len the length.\n     */\n    randomHexString(len) {\n        let ret = '';\n\n        while (len--) { // eslint-disable-line no-param-reassign\n            ret += this.randomHexDigit();\n        }\n\n        return ret;\n    },\n    randomElement,\n    randomAlphanumStr,\n    randomInt\n};\n\nmodule.exports = RandomUtil;\n","const currentExecutingScript = require('current-executing-script');\n\n/* eslint-disable max-params */\n\n/**\n * Implements utility functions which facilitate the dealing with scripts such\n * as the download and execution of a JavaScript file.\n */\nconst ScriptUtil = {\n    /**\n     * Loads a script from a specific source.\n     *\n     * @param src the source from the which the script is to be (down)loaded\n     * @param async true to asynchronously load the script or false to\n     * synchronously load the script\n     * @param prepend true to schedule the loading of the script as soon as\n     * possible or false to schedule the loading of the script at the end of the\n     * scripts known at the time\n     * @param relativeURL whether we need load the library from url relative\n     * to the url that lib-jitsi-meet was loaded. Useful when sourcing the\n     * library from different location than the app that is using it\n     * @param loadCallback on load callback function\n     * @param errorCallback callback to be called on error loading the script\n     */\n    loadScript(\n            src,\n            async,\n            prepend,\n            relativeURL,\n            loadCallback,\n            errorCallback) {\n        const d = document;\n        const tagName = 'script';\n        const script = d.createElement(tagName);\n        const referenceNode = d.getElementsByTagName(tagName)[0];\n\n        script.async = async;\n\n        if (relativeURL) {\n            // finds the src url of the current loaded script\n            // and use it as base of the src supplied argument\n            const scriptEl = currentExecutingScript();\n\n            if (scriptEl) {\n                const scriptSrc = scriptEl.src;\n                const baseScriptSrc\n                    = scriptSrc.substring(0, scriptSrc.lastIndexOf('/') + 1);\n\n                if (scriptSrc && baseScriptSrc) {\n                    // eslint-disable-next-line no-param-reassign\n                    src = baseScriptSrc + src;\n                }\n            }\n        }\n\n        if (loadCallback) {\n            script.onload = loadCallback;\n        }\n        if (errorCallback) {\n            script.onerror = errorCallback;\n        }\n\n        script.src = src;\n        if (prepend) {\n            referenceNode.parentNode.insertBefore(script, referenceNode);\n        } else {\n            referenceNode.parentNode.appendChild(script);\n        }\n    }\n};\n\n/* eslint-enable max-params */\n\nmodule.exports = ScriptUtil;\n","/**\n * Implements a simple hash code for a string (see\n * https://en.wikipedia.org/wiki/Java_hashCode()).\n *\n * @param {string} The string to return a hash of.\n * @return {Number} the integer hash code of the string.\n */\nfunction integerHash(string) {\n    if (!string) {\n        return 0;\n    }\n\n    let char, hash = 0, i;\n\n    for (i = 0; i < string.length; i++) {\n        char = string.charCodeAt(i);\n        hash += char * Math.pow(31, string.length - 1 - i);\n        hash = Math.abs(hash | 0); // eslint-disable-line no-bitwise\n    }\n\n    return hash;\n}\n\nmodule.exports = { integerHash };\n","const RandomUtil = require('./RandomUtil');\n\n/**\n * from faker.js - Copyright (c) 2014-2015 Matthew Bergman & Marak Squires\n * MIT License\n * http://github.com/marak/faker.js/\n *\n * @const\n */\nconst names = [\n    'Aaliyah', 'Aaron', 'Abagail', 'Abbey', 'Abbie', 'Abbigail', 'Abby',\n    'Abdiel', 'Abdul', 'Abdullah', 'Abe', 'Abel', 'Abelardo', 'Abigail',\n    'Abigale', 'Abigayle', 'Abner', 'Abraham', 'Ada', 'Adah', 'Adalberto',\n    'Adaline', 'Adam', 'Adan', 'Addie', 'Addison', 'Adela', 'Adelbert', 'Adele',\n    'Adelia', 'Adeline', 'Adell', 'Adella', 'Adelle', 'Aditya', 'Adolf',\n    'Adolfo', 'Adolph', 'Adolphus', 'Adonis', 'Adrain', 'Adrian', 'Adriana',\n    'Adrianna', 'Adriel', 'Adrien', 'Adrienne', 'Afton', 'Aglae', 'Agnes',\n    'Agustin', 'Agustina', 'Ahmad', 'Ahmed', 'Aida', 'Aidan', 'Aiden', 'Aileen',\n    'Aisha', 'Aiyana', 'Akeem', 'Al', 'Alaina', 'Alan', 'Alana', 'Alanis',\n    'Alanna', 'Alayna', 'Alba', 'Albert', 'Alberta', 'Albertha', 'Alberto',\n    'Albin', 'Albina', 'Alda', 'Alden', 'Alec', 'Aleen', 'Alejandra',\n    'Alejandrin', 'Alek', 'Alena', 'Alene', 'Alessandra', 'Alessandro',\n    'Alessia', 'Aletha', 'Alex', 'Alexa', 'Alexander', 'Alexandra', 'Alexandre',\n    'Alexandrea', 'Alexandria', 'Alexandrine', 'Alexandro', 'Alexane',\n    'Alexanne', 'Alexie', 'Alexis', 'Alexys', 'Alexzander', 'Alf', 'Alfonso',\n    'Alfonzo', 'Alford', 'Alfred', 'Alfreda', 'Alfredo', 'Ali', 'Alia', 'Alice',\n    'Alicia', 'Alisa', 'Alisha', 'Alison', 'Alivia', 'Aliya', 'Aliyah', 'Aliza',\n    'Alize', 'Allan', 'Allen', 'Allene', 'Allie', 'Allison', 'Ally', 'Alphonso',\n    'Alta', 'Althea', 'Alva', 'Alvah', 'Alvena', 'Alvera', 'Alverta', 'Alvina',\n    'Alvis', 'Alyce', 'Alycia', 'Alysa', 'Alysha', 'Alyson', 'Alysson',\n    'Amalia', 'Amanda', 'Amani', 'Amara', 'Amari', 'Amaya', 'Amber', 'Ambrose',\n    'Amelia', 'Amelie', 'Amely', 'America', 'Americo', 'Amie', 'Amina', 'Amir',\n    'Amira', 'Amiya', 'Amos', 'Amparo', 'Amy', 'Amya', 'Ana', 'Anabel',\n    'Anabelle', 'Anahi', 'Anais', 'Anastacio', 'Anastasia', 'Anderson', 'Andre',\n    'Andreane', 'Andreanne', 'Andres', 'Andrew', 'Andy', 'Angel', 'Angela',\n    'Angelica', 'Angelina', 'Angeline', 'Angelita', 'Angelo', 'Angie', 'Angus',\n    'Anibal', 'Anika', 'Anissa', 'Anita', 'Aniya', 'Aniyah', 'Anjali', 'Anna',\n    'Annabel', 'Annabell', 'Annabelle', 'Annalise', 'Annamae', 'Annamarie',\n    'Anne', 'Annetta', 'Annette', 'Annie', 'Ansel', 'Ansley', 'Anthony',\n    'Antoinette', 'Antone', 'Antonetta', 'Antonette', 'Antonia', 'Antonietta',\n    'Antonina', 'Antonio', 'Antwan', 'Antwon', 'Anya', 'April', 'Ara',\n    'Araceli', 'Aracely', 'Arch', 'Archibald', 'Ardella', 'Arden', 'Ardith',\n    'Arely', 'Ari', 'Ariane', 'Arianna', 'Aric', 'Ariel', 'Arielle', 'Arjun',\n    'Arlene', 'Arlie', 'Arlo', 'Armand', 'Armando', 'Armani', 'Arnaldo', 'Arne',\n    'Arno', 'Arnold', 'Arnoldo', 'Arnulfo', 'Aron', 'Art', 'Arthur', 'Arturo',\n    'Arvel', 'Arvid', 'Arvilla', 'Aryanna', 'Asa', 'Asha', 'Ashlee', 'Ashleigh',\n    'Ashley', 'Ashly', 'Ashlynn', 'Ashton', 'Ashtyn', 'Asia', 'Assunta',\n    'Astrid', 'Athena', 'Aubree', 'Aubrey', 'Audie', 'Audra', 'Audreanne',\n    'Audrey', 'August', 'Augusta', 'Augustine', 'Augustus', 'Aurelia',\n    'Aurelie', 'Aurelio', 'Aurore', 'Austen', 'Austin', 'Austyn', 'Autumn',\n    'Ava', 'Avery', 'Avis', 'Axel', 'Ayana', 'Ayden', 'Ayla', 'Aylin', 'Baby',\n    'Bailee', 'Bailey', 'Barbara', 'Barney', 'Baron', 'Barrett', 'Barry',\n    'Bart', 'Bartholome', 'Barton', 'Baylee', 'Beatrice', 'Beau', 'Beaulah',\n    'Bell', 'Bella', 'Belle', 'Ben', 'Benedict', 'Benjamin', 'Bennett',\n    'Bennie', 'Benny', 'Benton', 'Berenice', 'Bernadette', 'Bernadine',\n    'Bernard', 'Bernardo', 'Berneice', 'Bernhard', 'Bernice', 'Bernie',\n    'Berniece', 'Bernita', 'Berry', 'Bert', 'Berta', 'Bertha', 'Bertram',\n    'Bertrand', 'Beryl', 'Bessie', 'Beth', 'Bethany', 'Bethel', 'Betsy',\n    'Bette', 'Bettie', 'Betty', 'Bettye', 'Beulah', 'Beverly', 'Bianka', 'Bill',\n    'Billie', 'Billy', 'Birdie', 'Blair', 'Blaise', 'Blake', 'Blanca',\n    'Blanche', 'Blaze', 'Bo', 'Bobbie', 'Bobby', 'Bonita', 'Bonnie', 'Boris',\n    'Boyd', 'Brad', 'Braden', 'Bradford', 'Bradley', 'Bradly', 'Brady',\n    'Braeden', 'Brain', 'Brandi', 'Brando', 'Brandon', 'Brandt', 'Brandy',\n    'Brandyn', 'Brannon', 'Branson', 'Brant', 'Braulio', 'Braxton', 'Brayan',\n    'Breana', 'Breanna', 'Breanne', 'Brenda', 'Brendan', 'Brenden', 'Brendon',\n    'Brenna', 'Brennan', 'Brennon', 'Brent', 'Bret', 'Brett', 'Bria', 'Brian',\n    'Briana', 'Brianne', 'Brice', 'Bridget', 'Bridgette', 'Bridie', 'Brielle',\n    'Brigitte', 'Brionna', 'Brisa', 'Britney', 'Brittany', 'Brock', 'Broderick',\n    'Brody', 'Brook', 'Brooke', 'Brooklyn', 'Brooks', 'Brown', 'Bruce',\n    'Bryana', 'Bryce', 'Brycen', 'Bryon', 'Buck', 'Bud', 'Buddy', 'Buford',\n    'Bulah', 'Burdette', 'Burley', 'Burnice', 'Buster', 'Cade', 'Caden',\n    'Caesar', 'Caitlyn', 'Cale', 'Caleb', 'Caleigh', 'Cali', 'Calista',\n    'Callie', 'Camden', 'Cameron', 'Camila', 'Camilla', 'Camille', 'Camren',\n    'Camron', 'Camryn', 'Camylle', 'Candace', 'Candelario', 'Candice',\n    'Candida', 'Candido', 'Cara', 'Carey', 'Carissa', 'Carlee', 'Carleton',\n    'Carley', 'Carli', 'Carlie', 'Carlo', 'Carlos', 'Carlotta', 'Carmel',\n    'Carmela', 'Carmella', 'Carmelo', 'Carmen', 'Carmine', 'Carol', 'Carolanne',\n    'Carole', 'Carolina', 'Caroline', 'Carolyn', 'Carolyne', 'Carrie',\n    'Carroll', 'Carson', 'Carter', 'Cary', 'Casandra', 'Casey', 'Casimer',\n    'Casimir', 'Casper', 'Cassandra', 'Cassandre', 'Cassidy', 'Cassie',\n    'Catalina', 'Caterina', 'Catharine', 'Catherine', 'Cathrine', 'Cathryn',\n    'Cathy', 'Cayla', 'Ceasar', 'Cecelia', 'Cecil', 'Cecile', 'Cecilia',\n    'Cedrick', 'Celestine', 'Celestino', 'Celia', 'Celine', 'Cesar', 'Chad',\n    'Chadd', 'Chadrick', 'Chaim', 'Chance', 'Chandler', 'Chanel', 'Chanelle',\n    'Charity', 'Charlene', 'Charles', 'Charley', 'Charlie', 'Charlotte',\n    'Chase', 'Chasity', 'Chauncey', 'Chaya', 'Chaz', 'Chelsea', 'Chelsey',\n    'Chelsie', 'Chesley', 'Chester', 'Chet', 'Cheyanne', 'Cheyenne', 'Chloe',\n    'Chris', 'Christ', 'Christa', 'Christelle', 'Christian', 'Christiana',\n    'Christina', 'Christine', 'Christop', 'Christophe', 'Christopher',\n    'Christy', 'Chyna', 'Ciara', 'Cicero', 'Cielo', 'Cierra', 'Cindy',\n    'Citlalli', 'Clair', 'Claire', 'Clara', 'Clarabelle', 'Clare', 'Clarissa',\n    'Clark', 'Claud', 'Claude', 'Claudia', 'Claudie', 'Claudine', 'Clay',\n    'Clemens', 'Clement', 'Clementina', 'Clementine', 'Clemmie', 'Cleo',\n    'Cleora', 'Cleta', 'Cletus', 'Cleve', 'Cleveland', 'Clifford', 'Clifton',\n    'Clint', 'Clinton', 'Clotilde', 'Clovis', 'Cloyd', 'Clyde', 'Coby', 'Cody',\n    'Colby', 'Cole', 'Coleman', 'Colin', 'Colleen', 'Collin', 'Colt', 'Colten',\n    'Colton', 'Columbus', 'Concepcion', 'Conner', 'Connie', 'Connor', 'Conor',\n    'Conrad', 'Constance', 'Constantin', 'Consuelo', 'Cooper', 'Cora',\n    'Coralie', 'Corbin', 'Cordelia', 'Cordell', 'Cordia', 'Cordie', 'Corene',\n    'Corine', 'Cornelius', 'Cornell', 'Corrine', 'Cortez', 'Cortney', 'Cory',\n    'Coty', 'Courtney', 'Coy', 'Craig', 'Crawford', 'Creola', 'Cristal',\n    'Cristian', 'Cristina', 'Cristobal', 'Cristopher', 'Cruz', 'Crystal',\n    'Crystel', 'Cullen', 'Curt', 'Curtis', 'Cydney', 'Cynthia', 'Cyril',\n    'Cyrus', 'Dagmar', 'Dahlia', 'Daija', 'Daisha', 'Daisy', 'Dakota', 'Dale',\n    'Dallas', 'Dallin', 'Dalton', 'Damaris', 'Dameon', 'Damian', 'Damien',\n    'Damion', 'Damon', 'Dan', 'Dana', 'Dandre', 'Dane', 'D\\'angelo', 'Dangelo',\n    'Danial', 'Daniela', 'Daniella', 'Danielle', 'Danika', 'Dannie', 'Danny',\n    'Dante', 'Danyka', 'Daphne', 'Daphnee', 'Daphney', 'Darby', 'Daren',\n    'Darian', 'Dariana', 'Darien', 'Dario', 'Darion', 'Darius', 'Darlene',\n    'Daron', 'Darrel', 'Darrell', 'Darren', 'Darrick', 'Darrin', 'Darrion',\n    'Darron', 'Darryl', 'Darwin', 'Daryl', 'Dashawn', 'Dasia', 'Dave', 'David',\n    'Davin', 'Davion', 'Davon', 'Davonte', 'Dawn', 'Dawson', 'Dax', 'Dayana',\n    'Dayna', 'Dayne', 'Dayton', 'Dean', 'Deangelo', 'Deanna', 'Deborah',\n    'Declan', 'Dedric', 'Dedrick', 'Dee', 'Deion', 'Deja', 'Dejah', 'Dejon',\n    'Dejuan', 'Delaney', 'Delbert', 'Delfina', 'Delia', 'Delilah', 'Dell',\n    'Della', 'Delmer', 'Delores', 'Delpha', 'Delphia', 'Delphine', 'Delta',\n    'Demarco', 'Demarcus', 'Demario', 'Demetris', 'Demetrius', 'Demond', 'Dena',\n    'Denis', 'Dennis', 'Deon', 'Deondre', 'Deontae', 'Deonte', 'Dereck',\n    'Derek', 'Derick', 'Deron', 'Derrick', 'Deshaun', 'Deshawn', 'Desiree',\n    'Desmond', 'Dessie', 'Destany', 'Destin', 'Destinee', 'Destiney', 'Destini',\n    'Destiny', 'Devan', 'Devante', 'Deven', 'Devin', 'Devon', 'Devonte',\n    'Devyn', 'Dewayne', 'Dewitt', 'Dexter', 'Diamond', 'Diana', 'Dianna',\n    'Diego', 'Dillan', 'Dillon', 'Dimitri', 'Dina', 'Dino', 'Dion', 'Dixie',\n    'Dock', 'Dolly', 'Dolores', 'Domenic', 'Domenica', 'Domenick', 'Domenico',\n    'Domingo', 'Dominic', 'Dominique', 'Don', 'Donald', 'Donato', 'Donavon',\n    'Donna', 'Donnell', 'Donnie', 'Donny', 'Dora', 'Dorcas', 'Dorian', 'Doris',\n    'Dorothea', 'Dorothy', 'Dorris', 'Dortha', 'Dorthy', 'Doug', 'Douglas',\n    'Dovie', 'Doyle', 'Drake', 'Drew', 'Duane', 'Dudley', 'Dulce', 'Duncan',\n    'Durward', 'Dustin', 'Dusty', 'Dwight', 'Dylan', 'Earl', 'Earlene',\n    'Earline', 'Earnest', 'Earnestine', 'Easter', 'Easton', 'Ebba', 'Ebony',\n    'Ed', 'Eda', 'Edd', 'Eddie', 'Eden', 'Edgar', 'Edgardo', 'Edison', 'Edmond',\n    'Edmund', 'Edna', 'Eduardo', 'Edward', 'Edwardo', 'Edwin', 'Edwina',\n    'Edyth', 'Edythe', 'Effie', 'Efrain', 'Efren', 'Eileen', 'Einar', 'Eino',\n    'Eladio', 'Elaina', 'Elbert', 'Elda', 'Eldon', 'Eldora', 'Eldred',\n    'Eldridge', 'Eleanora', 'Eleanore', 'Eleazar', 'Electa', 'Elena', 'Elenor',\n    'Elenora', 'Eleonore', 'Elfrieda', 'Eli', 'Elian', 'Eliane', 'Elias',\n    'Eliezer', 'Elijah', 'Elinor', 'Elinore', 'Elisa', 'Elisabeth', 'Elise',\n    'Eliseo', 'Elisha', 'Elissa', 'Eliza', 'Elizabeth', 'Ella', 'Ellen',\n    'Ellie', 'Elliot', 'Elliott', 'Ellis', 'Ellsworth', 'Elmer', 'Elmira',\n    'Elmo', 'Elmore', 'Elna', 'Elnora', 'Elody', 'Eloisa', 'Eloise', 'Elouise',\n    'Eloy', 'Elroy', 'Elsa', 'Else', 'Elsie', 'Elta', 'Elton', 'Elva', 'Elvera',\n    'Elvie', 'Elvis', 'Elwin', 'Elwyn', 'Elyse', 'Elyssa', 'Elza', 'Emanuel',\n    'Emelia', 'Emelie', 'Emely', 'Emerald', 'Emerson', 'Emery', 'Emie', 'Emil',\n    'Emile', 'Emilia', 'Emiliano', 'Emilie', 'Emilio', 'Emily', 'Emma',\n    'Emmalee', 'Emmanuel', 'Emmanuelle', 'Emmet', 'Emmett', 'Emmie', 'Emmitt',\n    'Emmy', 'Emory', 'Ena', 'Enid', 'Enoch', 'Enola', 'Enos', 'Enrico',\n    'Enrique', 'Ephraim', 'Era', 'Eriberto', 'Eric', 'Erica', 'Erich', 'Erick',\n    'Ericka', 'Erik', 'Erika', 'Erin', 'Erling', 'Erna', 'Ernest', 'Ernestina',\n    'Ernestine', 'Ernesto', 'Ernie', 'Ervin', 'Erwin', 'Eryn', 'Esmeralda',\n    'Esperanza', 'Esta', 'Esteban', 'Estefania', 'Estel', 'Estell', 'Estella',\n    'Estelle', 'Estevan', 'Esther', 'Estrella', 'Etha', 'Ethan', 'Ethel',\n    'Ethelyn', 'Ethyl', 'Ettie', 'Eudora', 'Eugene', 'Eugenia', 'Eula', 'Eulah',\n    'Eulalia', 'Euna', 'Eunice', 'Eusebio', 'Eva', 'Evalyn', 'Evan',\n    'Evangeline', 'Evans', 'Eve', 'Eveline', 'Evelyn', 'Everardo', 'Everett',\n    'Everette', 'Evert', 'Evie', 'Ewald', 'Ewell', 'Ezekiel', 'Ezequiel',\n    'Ezra', 'Fabian', 'Fabiola', 'Fae', 'Fannie', 'Fanny', 'Fatima', 'Faustino',\n    'Fausto', 'Favian', 'Fay', 'Faye', 'Federico', 'Felicia', 'Felicita',\n    'Felicity', 'Felipa', 'Felipe', 'Felix', 'Felton', 'Fermin', 'Fern',\n    'Fernando', 'Ferne', 'Fidel', 'Filiberto', 'Filomena', 'Finn', 'Fiona',\n    'Flavie', 'Flavio', 'Fleta', 'Fletcher', 'Flo', 'Florence', 'Florencio',\n    'Florian', 'Florida', 'Florine', 'Flossie', 'Floy', 'Floyd', 'Ford',\n    'Forest', 'Forrest', 'Foster', 'Frances', 'Francesca', 'Francesco',\n    'Francis', 'Francisca', 'Francisco', 'Franco', 'Frank', 'Frankie', 'Franz',\n    'Fred', 'Freda', 'Freddie', 'Freddy', 'Frederic', 'Frederick', 'Frederik',\n    'Frederique', 'Fredrick', 'Fredy', 'Freeda', 'Freeman', 'Freida', 'Frida',\n    'Frieda', 'Friedrich', 'Fritz', 'Furman', 'Gabe', 'Gabriel', 'Gabriella',\n    'Gabrielle', 'Gaetano', 'Gage', 'Gail', 'Gardner', 'Garett', 'Garfield',\n    'Garland', 'Garnet', 'Garnett', 'Garret', 'Garrett', 'Garrick', 'Garrison',\n    'Garry', 'Garth', 'Gaston', 'Gavin', 'Gay', 'Gayle', 'Gaylord', 'Gene',\n    'General', 'Genesis', 'Genevieve', 'Gennaro', 'Genoveva', 'Geo', 'Geoffrey',\n    'George', 'Georgette', 'Georgiana', 'Georgianna', 'Geovanni', 'Geovanny',\n    'Geovany', 'Gerald', 'Geraldine', 'Gerard', 'Gerardo', 'Gerda', 'Gerhard',\n    'Germaine', 'German', 'Gerry', 'Gerson', 'Gertrude', 'Gia', 'Gianni',\n    'Gideon', 'Gilbert', 'Gilberto', 'Gilda', 'Giles', 'Gillian', 'Gina',\n    'Gino', 'Giovani', 'Giovanna', 'Giovanni', 'Giovanny', 'Gisselle',\n    'Giuseppe', 'Gladyce', 'Gladys', 'Glen', 'Glenda', 'Glenna', 'Glennie',\n    'Gloria', 'Godfrey', 'Golda', 'Golden', 'Gonzalo', 'Gordon', 'Grace',\n    'Gracie', 'Graciela', 'Grady', 'Graham', 'Grant', 'Granville', 'Grayce',\n    'Grayson', 'Green', 'Greg', 'Gregg', 'Gregoria', 'Gregorio', 'Gregory',\n    'Greta', 'Gretchen', 'Greyson', 'Griffin', 'Grover', 'Guadalupe', 'Gudrun',\n    'Guido', 'Guillermo', 'Guiseppe', 'Gunnar', 'Gunner', 'Gus', 'Gussie',\n    'Gust', 'Gustave', 'Guy', 'Gwen', 'Gwendolyn', 'Hadley', 'Hailee', 'Hailey',\n    'Hailie', 'Hal', 'Haleigh', 'Haley', 'Halie', 'Halle', 'Hallie', 'Hank',\n    'Hanna', 'Hannah', 'Hans', 'Hardy', 'Harley', 'Harmon', 'Harmony', 'Harold',\n    'Harrison', 'Harry', 'Harvey', 'Haskell', 'Hassan', 'Hassie', 'Hattie',\n    'Haven', 'Hayden', 'Haylee', 'Hayley', 'Haylie', 'Hazel', 'Hazle', 'Heath',\n    'Heather', 'Heaven', 'Heber', 'Hector', 'Heidi', 'Helen', 'Helena',\n    'Helene', 'Helga', 'Hellen', 'Helmer', 'Heloise', 'Henderson', 'Henri',\n    'Henriette', 'Henry', 'Herbert', 'Herman', 'Hermann', 'Hermina', 'Herminia',\n    'Herminio', 'Hershel', 'Herta', 'Hertha', 'Hester', 'Hettie', 'Hilario',\n    'Hilbert', 'Hilda', 'Hildegard', 'Hillard', 'Hillary', 'Hilma', 'Hilton',\n    'Hipolito', 'Hiram', 'Hobart', 'Holden', 'Hollie', 'Hollis', 'Holly',\n    'Hope', 'Horace', 'Horacio', 'Hortense', 'Hosea', 'Houston', 'Howard',\n    'Howell', 'Hoyt', 'Hubert', 'Hudson', 'Hugh', 'Hulda', 'Humberto', 'Hunter',\n    'Hyman', 'Ian', 'Ibrahim', 'Icie', 'Ida', 'Idell', 'Idella', 'Ignacio',\n    'Ignatius', 'Ike', 'Ila', 'Ilene', 'Iliana', 'Ima', 'Imani', 'Imelda',\n    'Immanuel', 'Imogene', 'Ines', 'Irma', 'Irving', 'Irwin', 'Isaac', 'Isabel',\n    'Isabell', 'Isabella', 'Isabelle', 'Isac', 'Isadore', 'Isai', 'Isaiah',\n    'Isaias', 'Isidro', 'Ismael', 'Isobel', 'Isom', 'Israel', 'Issac', 'Itzel',\n    'Iva', 'Ivah', 'Ivory', 'Ivy', 'Izabella', 'Izaiah', 'Jabari', 'Jace',\n    'Jacey', 'Jacinthe', 'Jacinto', 'Jack', 'Jackeline', 'Jackie', 'Jacklyn',\n    'Jackson', 'Jacky', 'Jaclyn', 'Jacquelyn', 'Jacques', 'Jacynthe', 'Jada',\n    'Jade', 'Jaden', 'Jadon', 'Jadyn', 'Jaeden', 'Jaida', 'Jaiden', 'Jailyn',\n    'Jaime', 'Jairo', 'Jakayla', 'Jake', 'Jakob', 'Jaleel', 'Jalen', 'Jalon',\n    'Jalyn', 'Jamaal', 'Jamal', 'Jamar', 'Jamarcus', 'Jamel', 'Jameson',\n    'Jamey', 'Jamie', 'Jamil', 'Jamir', 'Jamison', 'Jammie', 'Jan', 'Jana',\n    'Janae', 'Jane', 'Janelle', 'Janessa', 'Janet', 'Janice', 'Janick', 'Janie',\n    'Janis', 'Janiya', 'Jannie', 'Jany', 'Jaquan', 'Jaquelin', 'Jaqueline',\n    'Jared', 'Jaren', 'Jarod', 'Jaron', 'Jarred', 'Jarrell', 'Jarret',\n    'Jarrett', 'Jarrod', 'Jarvis', 'Jasen', 'Jasmin', 'Jason', 'Jasper',\n    'Jaunita', 'Javier', 'Javon', 'Javonte', 'Jay', 'Jayce', 'Jaycee', 'Jayda',\n    'Jayde', 'Jayden', 'Jaydon', 'Jaylan', 'Jaylen', 'Jaylin', 'Jaylon',\n    'Jayme', 'Jayne', 'Jayson', 'Jazlyn', 'Jazmin', 'Jazmyn', 'Jazmyne', 'Jean',\n    'Jeanette', 'Jeanie', 'Jeanne', 'Jed', 'Jedediah', 'Jedidiah', 'Jeff',\n    'Jefferey', 'Jeffery', 'Jeffrey', 'Jeffry', 'Jena', 'Jenifer', 'Jennie',\n    'Jennifer', 'Jennings', 'Jennyfer', 'Jensen', 'Jerad', 'Jerald', 'Jeramie',\n    'Jeramy', 'Jerel', 'Jeremie', 'Jeremy', 'Jermain', 'Jermaine', 'Jermey',\n    'Jerod', 'Jerome', 'Jeromy', 'Jerrell', 'Jerrod', 'Jerrold', 'Jerry',\n    'Jess', 'Jesse', 'Jessica', 'Jessie', 'Jessika', 'Jessy', 'Jessyca',\n    'Jesus', 'Jett', 'Jettie', 'Jevon', 'Jewel', 'Jewell', 'Jillian', 'Jimmie',\n    'Jimmy', 'Jo', 'Joan', 'Joana', 'Joanie', 'Joanne', 'Joannie', 'Joanny',\n    'Joany', 'Joaquin', 'Jocelyn', 'Jodie', 'Jody', 'Joe', 'Joel', 'Joelle',\n    'Joesph', 'Joey', 'Johan', 'Johann', 'Johanna', 'Johathan', 'John',\n    'Johnathan', 'Johnathon', 'Johnnie', 'Johnny', 'Johnpaul', 'Johnson',\n    'Jolie', 'Jon', 'Jonas', 'Jonatan', 'Jonathan', 'Jonathon', 'Jordan',\n    'Jordane', 'Jordi', 'Jordon', 'Jordy', 'Jordyn', 'Jorge', 'Jose', 'Josefa',\n    'Josefina', 'Joseph', 'Josephine', 'Josh', 'Joshua', 'Joshuah', 'Josiah',\n    'Josiane', 'Josianne', 'Josie', 'Josue', 'Jovan', 'Jovani', 'Jovanny',\n    'Jovany', 'Joy', 'Joyce', 'Juana', 'Juanita', 'Judah', 'Judd', 'Jude',\n    'Judge', 'Judson', 'Judy', 'Jules', 'Julia', 'Julian', 'Juliana',\n    'Julianne', 'Julie', 'Julien', 'Juliet', 'Julio', 'Julius', 'June',\n    'Junior', 'Junius', 'Justen', 'Justice', 'Justina', 'Justine', 'Juston',\n    'Justus', 'Justyn', 'Juvenal', 'Juwan', 'Kacey', 'Kaci', 'Kacie', 'Kade',\n    'Kaden', 'Kadin', 'Kaela', 'Kaelyn', 'Kaia', 'Kailee', 'Kailey', 'Kailyn',\n    'Kaitlin', 'Kaitlyn', 'Kale', 'Kaleb', 'Kaleigh', 'Kaley', 'Kali', 'Kallie',\n    'Kameron', 'Kamille', 'Kamren', 'Kamron', 'Kamryn', 'Kane', 'Kara',\n    'Kareem', 'Karelle', 'Karen', 'Kari', 'Kariane', 'Karianne', 'Karina',\n    'Karine', 'Karl', 'Karlee', 'Karley', 'Karli', 'Karlie', 'Karolann',\n    'Karson', 'Kasandra', 'Kasey', 'Kassandra', 'Katarina', 'Katelin',\n    'Katelyn', 'Katelynn', 'Katharina', 'Katherine', 'Katheryn', 'Kathleen',\n    'Kathlyn', 'Kathryn', 'Kathryne', 'Katlyn', 'Katlynn', 'Katrina', 'Katrine',\n    'Kattie', 'Kavon', 'Kay', 'Kaya', 'Kaycee', 'Kayden', 'Kayla', 'Kaylah',\n    'Kaylee', 'Kayleigh', 'Kayley', 'Kayli', 'Kaylie', 'Kaylin', 'Keagan',\n    'Keanu', 'Keara', 'Keaton', 'Keegan', 'Keeley', 'Keely', 'Keenan', 'Keira',\n    'Keith', 'Kellen', 'Kelley', 'Kelli', 'Kellie', 'Kelly', 'Kelsi', 'Kelsie',\n    'Kelton', 'Kelvin', 'Ken', 'Kendall', 'Kendra', 'Kendrick', 'Kenna',\n    'Kennedi', 'Kennedy', 'Kenneth', 'Kennith', 'Kenny', 'Kenton', 'Kenya',\n    'Kenyatta', 'Kenyon', 'Keon', 'Keshaun', 'Keshawn', 'Keven', 'Kevin',\n    'Kevon', 'Keyon', 'Keyshawn', 'Khalid', 'Khalil', 'Kian', 'Kiana', 'Kianna',\n    'Kiara', 'Kiarra', 'Kiel', 'Kiera', 'Kieran', 'Kiley', 'Kim', 'Kimberly',\n    'King', 'Kip', 'Kira', 'Kirk', 'Kirsten', 'Kirstin', 'Kitty', 'Kobe',\n    'Koby', 'Kody', 'Kolby', 'Kole', 'Korbin', 'Korey', 'Kory', 'Kraig', 'Kris',\n    'Krista', 'Kristian', 'Kristin', 'Kristina', 'Kristofer', 'Kristoffer',\n    'Kristopher', 'Kristy', 'Krystal', 'Krystel', 'Krystina', 'Kurt', 'Kurtis',\n    'Kyla', 'Kyle', 'Kylee', 'Kyleigh', 'Kyler', 'Kylie', 'Kyra', 'Lacey',\n    'Lacy', 'Ladarius', 'Lafayette', 'Laila', 'Laisha', 'Lamar', 'Lambert',\n    'Lamont', 'Lance', 'Landen', 'Lane', 'Laney', 'Larissa', 'Laron', 'Larry',\n    'Larue', 'Laura', 'Laurel', 'Lauren', 'Laurence', 'Lauretta', 'Lauriane',\n    'Laurianne', 'Laurie', 'Laurine', 'Laury', 'Lauryn', 'Lavada', 'Lavern',\n    'Laverna', 'Laverne', 'Lavina', 'Lavinia', 'Lavon', 'Lavonne', 'Lawrence',\n    'Lawson', 'Layla', 'Layne', 'Lazaro', 'Lea', 'Leann', 'Leanna', 'Leanne',\n    'Leatha', 'Leda', 'Lee', 'Leif', 'Leila', 'Leilani', 'Lela', 'Lelah',\n    'Leland', 'Lelia', 'Lempi', 'Lemuel', 'Lenna', 'Lennie', 'Lenny', 'Lenora',\n    'Lenore', 'Leo', 'Leola', 'Leon', 'Leonard', 'Leonardo', 'Leone', 'Leonel',\n    'Leonie', 'Leonor', 'Leonora', 'Leopold', 'Leopoldo', 'Leora', 'Lera',\n    'Lesley', 'Leslie', 'Lesly', 'Lessie', 'Lester', 'Leta', 'Letha', 'Letitia',\n    'Levi', 'Lew', 'Lewis', 'Lexi', 'Lexie', 'Lexus', 'Lia', 'Liam', 'Liana',\n    'Libbie', 'Libby', 'Lila', 'Lilian', 'Liliana', 'Liliane', 'Lilla',\n    'Lillian', 'Lilliana', 'Lillie', 'Lilly', 'Lily', 'Lilyan', 'Lina',\n    'Lincoln', 'Linda', 'Lindsay', 'Lindsey', 'Linnea', 'Linnie', 'Linwood',\n    'Lionel', 'Lisa', 'Lisandro', 'Lisette', 'Litzy', 'Liza', 'Lizeth',\n    'Lizzie', 'Llewellyn', 'Lloyd', 'Logan', 'Lois', 'Lola', 'Lolita', 'Loma',\n    'Lon', 'London', 'Lonie', 'Lonnie', 'Lonny', 'Lonzo', 'Lora', 'Loraine',\n    'Loren', 'Lorena', 'Lorenz', 'Lorenza', 'Lorenzo', 'Lori', 'Lorine',\n    'Lorna', 'Lottie', 'Lou', 'Louie', 'Louisa', 'Lourdes', 'Louvenia',\n    'Lowell', 'Loy', 'Loyal', 'Loyce', 'Lucas', 'Luciano', 'Lucie', 'Lucienne',\n    'Lucile', 'Lucinda', 'Lucio', 'Lucious', 'Lucius', 'Lucy', 'Ludie',\n    'Ludwig', 'Lue', 'Luella', 'Luigi', 'Luis', 'Luisa', 'Lukas', 'Lula',\n    'Lulu', 'Luna', 'Lupe', 'Lura', 'Lurline', 'Luther', 'Luz', 'Lyda', 'Lydia',\n    'Lyla', 'Lynn', 'Lyric', 'Lysanne', 'Mabel', 'Mabelle', 'Mable', 'Mac',\n    'Macey', 'Maci', 'Macie', 'Mack', 'Mackenzie', 'Macy', 'Madaline',\n    'Madalyn', 'Maddison', 'Madeline', 'Madelyn', 'Madelynn', 'Madge', 'Madie',\n    'Madilyn', 'Madisen', 'Madison', 'Madisyn', 'Madonna', 'Madyson', 'Mae',\n    'Maegan', 'Maeve', 'Mafalda', 'Magali', 'Magdalen', 'Magdalena', 'Maggie',\n    'Magnolia', 'Magnus', 'Maia', 'Maida', 'Maiya', 'Major', 'Makayla',\n    'Makenna', 'Makenzie', 'Malachi', 'Malcolm', 'Malika', 'Malinda', 'Mallie',\n    'Mallory', 'Malvina', 'Mandy', 'Manley', 'Manuel', 'Manuela', 'Mara',\n    'Marc', 'Marcel', 'Marcelina', 'Marcelino', 'Marcella', 'Marcelle',\n    'Marcellus', 'Marcelo', 'Marcia', 'Marco', 'Marcos', 'Marcus', 'Margaret',\n    'Margarete', 'Margarett', 'Margaretta', 'Margarette', 'Margarita', 'Marge',\n    'Margie', 'Margot', 'Margret', 'Marguerite', 'Maria', 'Mariah', 'Mariam',\n    'Marian', 'Mariana', 'Mariane', 'Marianna', 'Marianne', 'Mariano',\n    'Maribel', 'Marie', 'Mariela', 'Marielle', 'Marietta', 'Marilie', 'Marilou',\n    'Marilyne', 'Marina', 'Mario', 'Marion', 'Marisa', 'Marisol', 'Maritza',\n    'Marjolaine', 'Marjorie', 'Marjory', 'Mark', 'Markus', 'Marlee', 'Marlen',\n    'Marlene', 'Marley', 'Marlin', 'Marlon', 'Marques', 'Marquis', 'Marquise',\n    'Marshall', 'Marta', 'Martin', 'Martina', 'Martine', 'Marty', 'Marvin',\n    'Mary', 'Maryam', 'Maryjane', 'Maryse', 'Mason', 'Mateo', 'Mathew',\n    'Mathias', 'Mathilde', 'Matilda', 'Matilde', 'Matt', 'Matteo', 'Mattie',\n    'Maud', 'Maude', 'Maudie', 'Maureen', 'Maurice', 'Mauricio', 'Maurine',\n    'Maverick', 'Mavis', 'Max', 'Maxie', 'Maxime', 'Maximilian', 'Maximillia',\n    'Maximillian', 'Maximo', 'Maximus', 'Maxine', 'Maxwell', 'May', 'Maya',\n    'Maybell', 'Maybelle', 'Maye', 'Maymie', 'Maynard', 'Mayra', 'Mazie',\n    'Mckayla', 'Mckenna', 'Mckenzie', 'Meagan', 'Meaghan', 'Meda', 'Megane',\n    'Meggie', 'Meghan', 'Mekhi', 'Melany', 'Melba', 'Melisa', 'Melissa',\n    'Mellie', 'Melody', 'Melvin', 'Melvina', 'Melyna', 'Melyssa', 'Mercedes',\n    'Meredith', 'Merl', 'Merle', 'Merlin', 'Merritt', 'Mertie', 'Mervin',\n    'Meta', 'Mia', 'Micaela', 'Micah', 'Michael', 'Michaela', 'Michale',\n    'Micheal', 'Michel', 'Michele', 'Michelle', 'Miguel', 'Mikayla', 'Mike',\n    'Mikel', 'Milan', 'Miles', 'Milford', 'Miller', 'Millie', 'Milo', 'Milton',\n    'Mina', 'Minerva', 'Minnie', 'Miracle', 'Mireille', 'Mireya', 'Misael',\n    'Missouri', 'Misty', 'Mitchel', 'Mitchell', 'Mittie', 'Modesta', 'Modesto',\n    'Mohamed', 'Mohammad', 'Mohammed', 'Moises', 'Mollie', 'Molly', 'Mona',\n    'Monica', 'Monique', 'Monroe', 'Monserrat', 'Monserrate', 'Montana',\n    'Monte', 'Monty', 'Morgan', 'Moriah', 'Morris', 'Mortimer', 'Morton',\n    'Mose', 'Moses', 'Moshe', 'Mossie', 'Mozell', 'Mozelle', 'Muhammad',\n    'Muriel', 'Murl', 'Murphy', 'Murray', 'Mustafa', 'Mya', 'Myah', 'Mylene',\n    'Myles', 'Myra', 'Myriam', 'Myrl', 'Myrna', 'Myron', 'Myrtice', 'Myrtie',\n    'Myrtis', 'Myrtle', 'Nadia', 'Nakia', 'Name', 'Nannie', 'Naomi', 'Naomie',\n    'Napoleon', 'Narciso', 'Nash', 'Nasir', 'Nat', 'Natalia', 'Natalie',\n    'Natasha', 'Nathan', 'Nathanael', 'Nathanial', 'Nathaniel', 'Nathen',\n    'Nayeli', 'Neal', 'Ned', 'Nedra', 'Neha', 'Neil', 'Nelda', 'Nella', 'Nelle',\n    'Nellie', 'Nels', 'Nelson', 'Neoma', 'Nestor', 'Nettie', 'Neva', 'Newell',\n    'Newton', 'Nia', 'Nicholas', 'Nicholaus', 'Nichole', 'Nick', 'Nicklaus',\n    'Nickolas', 'Nico', 'Nicola', 'Nicolas', 'Nicole', 'Nicolette', 'Nigel',\n    'Nikita', 'Nikki', 'Nikko', 'Niko', 'Nikolas', 'Nils', 'Nina', 'Noah',\n    'Noble', 'Noe', 'Noel', 'Noelia', 'Noemi', 'Noemie', 'Noemy', 'Nola',\n    'Nolan', 'Nona', 'Nora', 'Norbert', 'Norberto', 'Norene', 'Norma', 'Norris',\n    'Norval', 'Norwood', 'Nova', 'Novella', 'Nya', 'Nyah', 'Nyasia', 'Obie',\n    'Oceane', 'Ocie', 'Octavia', 'Oda', 'Odell', 'Odessa', 'Odie', 'Ofelia',\n    'Okey', 'Ola', 'Olaf', 'Ole', 'Olen', 'Oleta', 'Olga', 'Olin', 'Oliver',\n    'Ollie', 'Oma', 'Omari', 'Omer', 'Ona', 'Onie', 'Opal', 'Ophelia', 'Ora',\n    'Oral', 'Oran', 'Oren', 'Orie', 'Orin', 'Orion', 'Orland', 'Orlando',\n    'Orlo', 'Orpha', 'Orrin', 'Orval', 'Orville', 'Osbaldo', 'Osborne', 'Oscar',\n    'Osvaldo', 'Oswald', 'Oswaldo', 'Otha', 'Otho', 'Otilia', 'Otis', 'Ottilie',\n    'Ottis', 'Otto', 'Ova', 'Owen', 'Ozella', 'Pablo', 'Paige', 'Palma',\n    'Pamela', 'Pansy', 'Paolo', 'Paris', 'Parker', 'Pascale', 'Pasquale', 'Pat',\n    'Patience', 'Patricia', 'Patrick', 'Patsy', 'Pattie', 'Paul', 'Paula',\n    'Pauline', 'Paxton', 'Payton', 'Pearl', 'Pearlie', 'Pearline', 'Pedro',\n    'Peggie', 'Penelope', 'Percival', 'Percy', 'Perry', 'Pete', 'Peter',\n    'Petra', 'Peyton', 'Philip', 'Phoebe', 'Phyllis', 'Pierce', 'Pierre',\n    'Pietro', 'Pink', 'Pinkie', 'Piper', 'Polly', 'Porter', 'Precious',\n    'Presley', 'Preston', 'Price', 'Prince', 'Princess', 'Priscilla',\n    'Providenci', 'Prudence', 'Queen', 'Queenie', 'Quentin', 'Quincy', 'Quinn',\n    'Quinten', 'Quinton', 'Rachael', 'Rachel', 'Rachelle', 'Rae', 'Raegan',\n    'Rafael', 'Rafaela', 'Raheem', 'Rahsaan', 'Rahul', 'Raina', 'Raleigh',\n    'Ralph', 'Ramiro', 'Ramon', 'Ramona', 'Randal', 'Randall', 'Randi', 'Randy',\n    'Ransom', 'Raoul', 'Raphael', 'Raphaelle', 'Raquel', 'Rashad', 'Rashawn',\n    'Rasheed', 'Raul', 'Raven', 'Ray', 'Raymond', 'Raymundo', 'Reagan',\n    'Reanna', 'Reba', 'Rebeca', 'Rebecca', 'Rebeka', 'Rebekah', 'Reece', 'Reed',\n    'Reese', 'Regan', 'Reggie', 'Reginald', 'Reid', 'Reilly', 'Reina',\n    'Reinhold', 'Remington', 'Rene', 'Renee', 'Ressie', 'Reta', 'Retha',\n    'Retta', 'Reuben', 'Reva', 'Rex', 'Rey', 'Reyes', 'Reymundo', 'Reyna',\n    'Reynold', 'Rhea', 'Rhett', 'Rhianna', 'Rhiannon', 'Rhoda', 'Ricardo',\n    'Richard', 'Richie', 'Richmond', 'Rick', 'Rickey', 'Rickie', 'Ricky',\n    'Rico', 'Rigoberto', 'Riley', 'Rita', 'River', 'Robb', 'Robbie', 'Robert',\n    'Roberta', 'Roberto', 'Robin', 'Robyn', 'Rocio', 'Rocky', 'Rod', 'Roderick',\n    'Rodger', 'Rodolfo', 'Rodrick', 'Rodrigo', 'Roel', 'Rogelio', 'Roger',\n    'Rogers', 'Rolando', 'Rollin', 'Roma', 'Romaine', 'Roman', 'Ron', 'Ronaldo',\n    'Ronny', 'Roosevelt', 'Rory', 'Rosa', 'Rosalee', 'Rosalia', 'Rosalind',\n    'Rosalinda', 'Rosalyn', 'Rosamond', 'Rosanna', 'Rosario', 'Roscoe', 'Rose',\n    'Rosella', 'Roselyn', 'Rosemarie', 'Rosemary', 'Rosendo', 'Rosetta',\n    'Rosie', 'Rosina', 'Roslyn', 'Ross', 'Rossie', 'Rowan', 'Rowena', 'Rowland',\n    'Roxane', 'Roxanne', 'Roy', 'Royal', 'Royce', 'Rozella', 'Ruben', 'Rubie',\n    'Ruby', 'Rubye', 'Rudolph', 'Rudy', 'Rupert', 'Russ', 'Russel', 'Russell',\n    'Rusty', 'Ruth', 'Ruthe', 'Ruthie', 'Ryan', 'Ryann', 'Ryder', 'Rylan',\n    'Rylee', 'Ryleigh', 'Ryley', 'Sabina', 'Sabrina', 'Sabryna', 'Sadie',\n    'Sadye', 'Sage', 'Saige', 'Sallie', 'Sally', 'Salma', 'Salvador',\n    'Salvatore', 'Sam', 'Samanta', 'Samantha', 'Samara', 'Samir', 'Sammie',\n    'Sammy', 'Samson', 'Sandra', 'Sandrine', 'Sandy', 'Sanford', 'Santa',\n    'Santiago', 'Santina', 'Santino', 'Santos', 'Sarah', 'Sarai', 'Sarina',\n    'Sasha', 'Saul', 'Savanah', 'Savanna', 'Savannah', 'Savion', 'Scarlett',\n    'Schuyler', 'Scot', 'Scottie', 'Scotty', 'Seamus', 'Sean', 'Sebastian',\n    'Sedrick', 'Selena', 'Selina', 'Selmer', 'Serena', 'Serenity', 'Seth',\n    'Shad', 'Shaina', 'Shakira', 'Shana', 'Shane', 'Shanel', 'Shanelle',\n    'Shania', 'Shanie', 'Shaniya', 'Shanna', 'Shannon', 'Shanny', 'Shanon',\n    'Shany', 'Sharon', 'Shaun', 'Shawn', 'Shawna', 'Shaylee', 'Shayna',\n    'Shayne', 'Shea', 'Sheila', 'Sheldon', 'Shemar', 'Sheridan', 'Sherman',\n    'Sherwood', 'Shirley', 'Shyann', 'Shyanne', 'Sibyl', 'Sid', 'Sidney',\n    'Sienna', 'Sierra', 'Sigmund', 'Sigrid', 'Sigurd', 'Silas', 'Sim', 'Simeon',\n    'Simone', 'Sincere', 'Sister', 'Skye', 'Skyla', 'Skylar', 'Sofia',\n    'Soledad', 'Solon', 'Sonia', 'Sonny', 'Sonya', 'Sophia', 'Sophie',\n    'Spencer', 'Stacey', 'Stacy', 'Stan', 'Stanford', 'Stanley', 'Stanton',\n    'Stefan', 'Stefanie', 'Stella', 'Stephan', 'Stephania', 'Stephanie',\n    'Stephany', 'Stephen', 'Stephon', 'Sterling', 'Steve', 'Stevie', 'Stewart',\n    'Stone', 'Stuart', 'Summer', 'Sunny', 'Susan', 'Susana', 'Susanna', 'Susie',\n    'Suzanne', 'Sven', 'Syble', 'Sydnee', 'Sydney', 'Sydni', 'Sydnie', 'Sylvan',\n    'Sylvester', 'Sylvia', 'Tabitha', 'Tad', 'Talia', 'Talon', 'Tamara',\n    'Tamia', 'Tania', 'Tanner', 'Tanya', 'Tara', 'Taryn', 'Tate', 'Tatum',\n    'Tatyana', 'Taurean', 'Tavares', 'Taya', 'Taylor', 'Teagan', 'Ted', 'Telly',\n    'Terence', 'Teresa', 'Terrance', 'Terrell', 'Terrence', 'Terrill', 'Terry',\n    'Tess', 'Tessie', 'Tevin', 'Thad', 'Thaddeus', 'Thalia', 'Thea', 'Thelma',\n    'Theo', 'Theodora', 'Theodore', 'Theresa', 'Therese', 'Theresia', 'Theron',\n    'Thomas', 'Thora', 'Thurman', 'Tia', 'Tiana', 'Tianna', 'Tiara', 'Tierra',\n    'Tiffany', 'Tillman', 'Timmothy', 'Timmy', 'Timothy', 'Tina', 'Tito',\n    'Titus', 'Tobin', 'Toby', 'Tod', 'Tom', 'Tomas', 'Tomasa', 'Tommie',\n    'Toney', 'Toni', 'Tony', 'Torey', 'Torrance', 'Torrey', 'Toy', 'Trace',\n    'Tracey', 'Tracy', 'Travis', 'Travon', 'Tre', 'Tremaine', 'Tremayne',\n    'Trent', 'Trenton', 'Tressa', 'Tressie', 'Treva', 'Trever', 'Trevion',\n    'Trevor', 'Trey', 'Trinity', 'Trisha', 'Tristian', 'Tristin', 'Triston',\n    'Troy', 'Trudie', 'Trycia', 'Trystan', 'Turner', 'Twila', 'Tyler', 'Tyra',\n    'Tyree', 'Tyreek', 'Tyrel', 'Tyrell', 'Tyrese', 'Tyrique', 'Tyshawn',\n    'Tyson', 'Ubaldo', 'Ulices', 'Ulises', 'Una', 'Unique', 'Urban', 'Uriah',\n    'Uriel', 'Ursula', 'Vada', 'Valentin', 'Valentina', 'Valentine', 'Valerie',\n    'Vallie', 'Van', 'Vance', 'Vanessa', 'Vaughn', 'Veda', 'Velda', 'Vella',\n    'Velma', 'Velva', 'Vena', 'Verda', 'Verdie', 'Vergie', 'Verla', 'Verlie',\n    'Vern', 'Verna', 'Verner', 'Vernice', 'Vernie', 'Vernon', 'Verona',\n    'Veronica', 'Vesta', 'Vicenta', 'Vicente', 'Vickie', 'Vicky', 'Victor',\n    'Victoria', 'Vida', 'Vidal', 'Vilma', 'Vince', 'Vincent', 'Vincenza',\n    'Vincenzo', 'Vinnie', 'Viola', 'Violet', 'Violette', 'Virgie', 'Virgil',\n    'Virginia', 'Virginie', 'Vita', 'Vito', 'Viva', 'Vivian', 'Viviane',\n    'Vivianne', 'Vivien', 'Vivienne', 'Vladimir', 'Wade', 'Waino', 'Waldo',\n    'Walker', 'Wallace', 'Walter', 'Walton', 'Wanda', 'Ward', 'Warren',\n    'Watson', 'Wava', 'Waylon', 'Wayne', 'Webster', 'Weldon', 'Wellington',\n    'Wendell', 'Wendy', 'Werner', 'Westley', 'Weston', 'Whitney', 'Wilber',\n    'Wilbert', 'Wilburn', 'Wiley', 'Wilford', 'Wilfred', 'Wilfredo', 'Wilfrid',\n    'Wilhelm', 'Wilhelmine', 'Will', 'Willa', 'Willard', 'William', 'Willie',\n    'Willis', 'Willow', 'Willy', 'Wilma', 'Wilmer', 'Wilson', 'Wilton',\n    'Winfield', 'Winifred', 'Winnifred', 'Winona', 'Winston', 'Woodrow',\n    'Wyatt', 'Wyman', 'Xander', 'Xavier', 'Xzavier', 'Yadira', 'Yasmeen',\n    'Yasmin', 'Yasmine', 'Yazmin', 'Yesenia', 'Yessenia', 'Yolanda', 'Yoshiko',\n    'Yvette', 'Yvonne', 'Zachariah', 'Zachary', 'Zachery', 'Zack', 'Zackary',\n    'Zackery', 'Zakary', 'Zander', 'Zane', 'Zaria', 'Zechariah', 'Zelda',\n    'Zella', 'Zelma', 'Zena', 'Zetta', 'Zion', 'Zita', 'Zoe', 'Zoey', 'Zoie',\n    'Zoila', 'Zola', 'Zora', 'Zula'\n];\n\n/**\n * Generate random username.\n * @returns {string} random username\n */\nfunction generateUsername() {\n    const name = RandomUtil.randomElement(names);\n    const suffix = RandomUtil.randomAlphanumStr(3);\n\n    return `${name}-${suffix}`;\n}\n\nmodule.exports = {\n    generateUsername\n};\n","import Statistics from '../statistics/statistics';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * Creates new instance of <tt>ComponentsVersions</tt> which will be discovering\n * the versions of conferencing system components in given\n * <tt>JitsiConference</tt>.\n * @param conference <tt>JitsiConference</tt> instance which will be used to\n *        listen for focus presence updates.\n * @constructor\n */\nexport default function ComponentsVersions(conference) {\n\n    this.versions = {};\n\n    this.conference = conference;\n    this.conference.addCommandListener(\n        'versions', this.processVersions.bind(this));\n}\n\nComponentsVersions.prototype.processVersions\n    = function(versions, mucResource, mucJid) {\n        if (!this.conference._isFocus(mucJid)) {\n            logger.warn(\n                `Received versions not from the focus user: ${versions}`,\n                mucJid);\n\n            return;\n        }\n\n        const log = [];\n\n        versions.children.forEach(component => {\n\n            const name = component.attributes.name;\n            const version = component.value;\n\n            if (this.versions[name] !== version) {\n                this.versions[name] = version;\n                logger.info(`Got ${name} version: ${version}`);\n\n                log.push({\n                    id: 'component_version',\n                    component: name,\n                    version\n                });\n            }\n        });\n\n        // logs versions to stats\n        if (log.length > 0) {\n            Statistics.sendLog(JSON.stringify(log));\n        }\n    };\n\n/**\n * Obtains the version of conferencing system component.\n * @param componentName the name of the component for which we want to obtain\n *        the version.\n * @returns {String} which describes the version of the component identified by\n *          given <tt>componentName</tt> or <tt>undefined</tt> if not found.\n */\nComponentsVersions.prototype.getComponentVersion = function(componentName) {\n    return this.versions[componentName];\n};\n","import { getLogger } from 'jitsi-meet-logger';\nimport { $iq } from 'strophe.js';\n\nimport Listenable from '../util/Listenable';\n\nimport * as VideoSIPGWConstants from './VideoSIPGWConstants';\n\nconst logger = getLogger(__filename);\n\n/**\n * The event name for current sip video session state changed.\n * @type {string} event name for sip video session state changed.\n */\nconst STATE_CHANGED = 'STATE_CHANGED';\n\n/**\n * Jitsi video SIP GW session. Holding its state and able to start/stop it.\n * When session is in OFF or FAILED stated it cannot be used anymore.\n */\nexport default class JitsiVideoSIPGWSession extends Listenable {\n\n    /**\n     * Creates new session with the desired sip address and display name.\n     *\n     * @param {string} sipAddress - The sip address to use when\n     * starting the session.\n     * @param {string} displayName - The display name to use for\n     * that participant.\n     * @param {ChatRoom} chatRoom - The chat room this session is bound to.\n     */\n    constructor(sipAddress, displayName, chatRoom) {\n        super();\n\n        this.sipAddress = sipAddress;\n        this.displayName = displayName;\n        this.chatRoom = chatRoom;\n\n        /*\n         * The initial state is undefined. Initial state cannot be STATE_OFF,\n         * the session enters this state when it was in STATE_ON and was stopped\n         * and such session cannot be used anymore.\n         *\n         * @type {VideoSIPGWConstants|undefined}\n         */\n        this.state = undefined;\n    }\n\n    /**\n     * Stops the current session.\n     */\n    stop() {\n        if (this.state === VideoSIPGWConstants.STATE_OFF\n            || this.state === VideoSIPGWConstants.STATE_FAILED) {\n            logger.warn('Video SIP GW session already stopped or failed!');\n\n            return;\n        }\n\n        this._sendJibriIQ('stop');\n    }\n\n    /**\n     * Starts a new session. Sends an iq to the focus.\n     */\n    start() {\n        // if state is off, this session was active for some reason\n        // and we should create new one, rather than reusing it\n        if (this.state === VideoSIPGWConstants.STATE_ON\n            || this.state === VideoSIPGWConstants.STATE_OFF\n            || this.state === VideoSIPGWConstants.STATE_PENDING\n            || this.state === VideoSIPGWConstants.STATE_RETRYING) {\n            logger.warn('Video SIP GW session already started!');\n\n            return;\n        }\n\n        this._sendJibriIQ('start');\n    }\n\n    /**\n     * Changes the state of this session.\n     *\n     * @param {string} newState - The new {VideoSIPGWConstants} state to set.\n     * @param {string} [optional] failureReason - The reason why a failure state\n     * was entered.\n     * @returns {void}\n     */\n    setState(newState, failureReason) {\n        if (newState === this.state) {\n            return;\n        }\n\n        const oldState = this.state;\n\n        this.state = newState;\n        this.eventEmitter.emit(STATE_CHANGED,\n            {\n                address: this.sipAddress,\n                failureReason,\n                oldState,\n                newState: this.state,\n                displayName: this.displayName\n            }\n        );\n    }\n\n    /**\n     * Subscribes the passed listener to the event for state change of this\n     * session.\n     *\n     * @param {Function} listener - The function that will receive the event.\n     */\n    addStateListener(listener) {\n        this.addListener(STATE_CHANGED, listener);\n    }\n\n    /**\n     * Unsubscribes the passed handler.\n     *\n     * @param {Function} listener - The function to be removed.\n     */\n    removeStateListener(listener) {\n        this.removeListener(STATE_CHANGED, listener);\n    }\n\n    /**\n     * Sends a jibri command using an iq.\n     *\n     * @private\n     * @param {string} action - The action to send ('start' or 'stop').\n     */\n    _sendJibriIQ(action) {\n        const attributes = {\n            'xmlns': 'http://jitsi.org/protocol/jibri',\n            'action': action,\n            sipaddress: this.sipAddress\n        };\n\n        attributes.displayname = this.displayName;\n\n        const iq = $iq({\n            to: this.chatRoom.focusMucJid,\n            type: 'set' })\n            .c('jibri', attributes)\n            .up();\n\n        logger.debug(`${action} video SIP GW session`, iq.nodeTree);\n        this.chatRoom.connection.sendIQ(\n            iq,\n            () => {}, // eslint-disable-line no-empty-function\n            error => {\n                logger.error(\n                    `Failed to ${action} video SIP GW session, error: `, error);\n                this.setState(VideoSIPGWConstants.STATE_FAILED);\n            });\n    }\n}\n","import { getLogger } from 'jitsi-meet-logger';\nconst logger = getLogger(__filename);\n\nimport JitsiVideoSIPGWSession from './JitsiVideoSIPGWSession';\nimport * as Constants from './VideoSIPGWConstants';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\n/**\n * Main video SIP GW handler. Stores references of all created sessions.\n */\nexport default class VideoSIPGW {\n\n    /**\n     * Creates new handler.\n     *\n     * @param {ChatRoom} chatRoom - Tha chat room to handle.\n     */\n    constructor(chatRoom) {\n        this.chatRoom = chatRoom;\n        this.eventEmitter = chatRoom.eventEmitter;\n        logger.debug('creating VideoSIPGW');\n        this.sessions = {};\n\n        this.sessionStateChangeListener = this.sessionStateChanged.bind(this);\n\n        // VideoSIPGW, JitsiConference and ChatRoom are not reusable and no\n        // more than one VideoSIPGW can be created per JitsiConference,\n        // so we don't bother to cleanup\n        chatRoom.addPresenceListener('jibri-sip-call-state',\n            this.handleJibriSIPState.bind(this));\n    }\n\n    /**\n     * Handles presence nodes with name: jibri-sip-call-state.\n     *\n     * @param {Object} node the presence node Object to handle.\n     * Object representing part of the presence received over xmpp.\n     */\n    handleJibriSIPState(node) {\n        const attributes = node.attributes;\n\n        if (!attributes) {\n            return;\n        }\n\n        logger.debug('Handle video sip gw state : ', attributes);\n\n        const newState = attributes.state;\n\n        if (newState === this.state) {\n            return;\n        }\n\n        switch (newState) {\n        case Constants.STATE_ON:\n        case Constants.STATE_OFF:\n        case Constants.STATE_PENDING:\n        case Constants.STATE_RETRYING:\n        case Constants.STATE_FAILED: {\n            const address = attributes.sipaddress;\n\n            if (!address) {\n                return;\n            }\n\n            // find the corresponding session and set its state\n            const session = this.sessions[address];\n\n            if (session) {\n                session.setState(newState, attributes.failure_reason);\n            } else {\n                logger.warn('Video SIP GW session not found:', address);\n            }\n        }\n        }\n    }\n\n    /**\n     * Creates new session and stores its reference if it does not exist or\n     * returns an error otherwise.\n     *\n     * @param {string} sipAddress - The sip address to use.\n     * @param {string} displayName - The display name to use.\n     * @returns {JitsiVideoSIPGWSession|Error}\n     */\n    createVideoSIPGWSession(sipAddress, displayName) {\n        if (this.sessions[sipAddress]) {\n            logger.warn('There was already a Video SIP GW session for address',\n                sipAddress);\n\n            return new Error(Constants.ERROR_SESSION_EXISTS);\n        }\n\n        const session = new JitsiVideoSIPGWSession(\n            sipAddress, displayName, this.chatRoom);\n\n        session.addStateListener(this.sessionStateChangeListener);\n\n        this.sessions[sipAddress] = session;\n\n        return session;\n    }\n\n    /**\n     * Listener for session state changed. When a session goes to off or failed\n     * we delete its reference.\n     *\n     * @param {options} event - { address, oldState, newState, displayName }\n     */\n    sessionStateChanged(event) {\n        const address = event.address;\n\n        if (event.newState === Constants.STATE_OFF\n            || event.newState === Constants.STATE_FAILED) {\n            const session = this.sessions[address];\n\n            if (!session) {\n                logger.error('Missing Video SIP GW session with address:',\n                    address);\n\n                return;\n            }\n\n            session.removeStateListener(this.sessionStateChangeListener);\n            delete this.sessions[address];\n        }\n\n        this.eventEmitter.emit(\n            XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\n            event);\n    }\n}\n","/**\n * Status that video SIP GW service is available.\n * @type {string}\n */\nexport const STATUS_AVAILABLE = 'available';\n\n/**\n * Status that video SIP GW service is not available.\n * @type {string}\n */\nexport const STATUS_UNDEFINED = 'undefined';\n\n/**\n * Status that video SIP GW service is available but there are no free nodes\n * at the moment to serve new requests.\n * @type {string}\n */\nexport const STATUS_BUSY = 'busy';\n\n/**\n * Video SIP GW session state, currently running.\n * @type {string}\n */\nexport const STATE_ON = 'on';\n\n/**\n * Video SIP GW session state, currently stopped and not running.\n * @type {string}\n */\nexport const STATE_OFF = 'off';\n\n/**\n * Video SIP GW session state, currently is starting.\n * @type {string}\n */\nexport const STATE_PENDING = 'pending';\n\n/**\n * Video SIP GW session state, has observed some issues and is retrying at the\n * moment.\n * @type {string}\n */\nexport const STATE_RETRYING = 'retrying';\n\n/**\n * Video SIP GW session state, tried to start but it failed.\n * @type {string}\n */\nexport const STATE_FAILED = 'failed';\n\n/**\n * Error on trying to create video SIP GW session in conference where\n * there is no room connection (hasn't joined or has left the room).\n * @type {string}\n */\nexport const ERROR_NO_CONNECTION = 'error_no_connection';\n\n/**\n * Error on trying to create video SIP GW session with address for which\n * there is an already created session.\n * @type {string}\n */\nexport const ERROR_SESSION_EXISTS = 'error_session_already_exists';\n","/* global $ */\n\nimport { b64_sha1, Strophe } from 'strophe.js'; // eslint-disable-line camelcase\n\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport Listenable from '../util/Listenable';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * The property\n */\nconst IDENTITY_PROPERTIES = [ 'category', 'type', 'lang', 'name' ];\nconst IDENTITY_PROPERTIES_FOR_COMPARE = [ 'category', 'type', 'lang' ];\nconst HASH = 'sha-1';\n\n/**\n *\n * @param a\n * @param b\n */\nfunction compareIdentities(a, b) {\n    let res = 0;\n\n    IDENTITY_PROPERTIES_FOR_COMPARE.some(key =>\n        (res = ((a[key] > b[key]) && 1) || ((a[key] < b[key]) && -1)) !== 0\n    );\n\n    return res;\n}\n\n/**\n * Produces a sha-1 from provided identity and features values.\n *\n * @param {Array<Object>} identities - The identity objects.\n * @param {Array<string>} features - The features.\n * @returns {string}\n */\nfunction generateSha(identities, features) {\n    const sortedIdentities = identities.sort(compareIdentities).reduce(\n        (accumulatedValue, identity) => `${\n            IDENTITY_PROPERTIES.reduce(\n                (tmp, key, idx) =>\n                    tmp\n                        + (idx === 0 ? '' : '/')\n                        + (identity[key] ? identity[key] : ''),\n                '')\n        }<`, '');\n    const sortedFeatures = features.sort().reduce(\n        (tmp, feature) => `${tmp + feature}<`, '');\n\n    return b64_sha1(sortedIdentities + sortedFeatures);\n}\n\n/**\n * Implements xep-0115 ( http://xmpp.org/extensions/xep-0115.html )\n */\nexport default class Caps extends Listenable {\n    /**\n     * Constructs new Caps instance.\n     * @param {Strophe.Connection} connection the strophe connection object\n     * @param {String} node the value of the node attribute of the \"c\" xml node\n     * that will be sent to the other participants\n     */\n    constructor(connection = {}, node = 'http://jitsi.org/jitsimeet') {\n        super();\n        this.node = node;\n        this.disco = connection.disco;\n        if (!this.disco) {\n            throw new Error(\n                'Missing strophe-plugins '\n                + '(disco plugin is required)!');\n        }\n\n        this.versionToCapabilities = Object.create(null);\n        this.jidToVersion = Object.create(null);\n        this.version = '';\n        this.rooms = new Set();\n\n        const emuc = connection.emuc;\n\n        emuc.addListener(XMPPEvents.EMUC_ROOM_ADDED,\n            room => this._addChatRoom(room));\n        emuc.addListener(XMPPEvents.EMUC_ROOM_REMOVED,\n            room => this._removeChatRoom(room));\n        Object.keys(emuc.rooms).forEach(jid => {\n            this._addChatRoom(emuc.rooms[jid]);\n        });\n\n        Strophe.addNamespace('CAPS', 'http://jabber.org/protocol/caps');\n        this.disco.addFeature(Strophe.NS.CAPS);\n        connection.addHandler(this._handleCaps.bind(this), Strophe.NS.CAPS);\n\n        this._onMucMemberLeft = this._removeJidToVersionEntry.bind(this);\n    }\n\n    /**\n     * Adds new feature to the list of supported features for the local\n     * participant\n     * @param {String} feature the name of the feature.\n     * @param {boolean} submit if true - new presence with updated \"c\" node\n     * will be sent.\n     */\n    addFeature(feature, submit = false) {\n        this.disco.addFeature(feature);\n        this._generateVersion();\n        if (submit) {\n            this.submit();\n        }\n    }\n\n    /**\n     * Removes a feature from the list of supported features for the local\n     * participant\n     * @param {String} feature the name of the feature.\n     * @param {boolean} submit if true - new presence with updated \"c\" node\n     * will be sent.\n     */\n    removeFeature(feature, submit = false) {\n        this.disco.removeFeature(feature);\n        this._generateVersion();\n        if (submit) {\n            this.submit();\n        }\n    }\n\n    /**\n     * Sends new presence stanza for every room from the list of rooms.\n     */\n    submit() {\n        this.rooms.forEach(room => room.sendPresence());\n    }\n\n    /**\n     * Returns a set with the features for a participant.\n     * @param {String} jid the jid of the participant\n     * @param {int} timeout the timeout in ms for reply from the participant.\n     * @returns {Promise<Set<String>, Error>}\n     */\n    getFeatures(jid, timeout = 5000) {\n        const user\n            = jid in this.jidToVersion ? this.jidToVersion[jid] : null;\n\n        if (!user || !(user.version in this.versionToCapabilities)) {\n            const node = user ? `${user.node}#${user.version}` : null;\n\n            return this._getDiscoInfo(jid, node, timeout)\n                .then(({ features, identities }) => {\n                    if (user) {\n                        const sha = generateSha(\n                            Array.from(identities),\n                            Array.from(features)\n                        );\n                        const receivedNode = `${user.node}#${sha}`;\n\n                        if (receivedNode === node) {\n                            this.versionToCapabilities[receivedNode] = features;\n\n                            return features;\n                        }\n\n                        // Check once if it has been cached asynchronously.\n                        if (this.versionToCapabilities[receivedNode]) {\n                            return this.versionToCapabilities[receivedNode];\n                        }\n\n                        logger.error(`Expected node ${node} but received ${\n                            receivedNode}`);\n\n                        return Promise.reject('Feature version mismatch');\n                    }\n                });\n        }\n\n        return Promise.resolve(this.versionToCapabilities[user.version]);\n    }\n\n    /**\n     * Returns a set with the features for a host.\n     * @param {String} jid the jid of the host\n     * @param {int} timeout the timeout in ms for reply from the host.\n     * @returns {Promise<Set<String>, Error>}\n     */\n    getFeaturesAndIdentities(jid, timeout = 5000) {\n        return this._getDiscoInfo(jid, null, timeout);\n    }\n\n    /**\n     * Returns a set with the features and identities for a host.\n     * @param {String} jid the jid of the host\n     * @param {String|null} node the node to query\n     * @param {int} timeout the timeout in ms for reply from the host.\n     * @returns {Promise<Object>}\n     * @private\n     */\n    _getDiscoInfo(jid, node, timeout) {\n        return new Promise((resolve, reject) =>\n            this.disco.info(jid, node, response => {\n                const features = new Set();\n                const identities = new Set();\n\n                $(response)\n                    .find('>query>feature')\n                    .each(\n                        (_, el) => features.add(el.getAttribute('var')));\n                $(response)\n                    .find('>query>identity')\n                    .each(\n                        (_, el) => identities.add({\n                            type: el.getAttribute('type'),\n                            name: el.getAttribute('name'),\n                            category: el.getAttribute('category')\n                        }));\n                resolve({\n                    features,\n                    identities });\n            }, reject, timeout)\n        );\n    }\n\n    /**\n     * Adds ChatRoom instance to the list of rooms. Adds listeners to the room\n     * and adds \"c\" element to the presences of the room.\n     * @param {ChatRoom} room the room.\n     */\n    _addChatRoom(room) {\n        this.rooms.add(room);\n        room.addListener(XMPPEvents.MUC_MEMBER_LEFT, this._onMucMemberLeft);\n        this._fixChatRoomPresenceMap(room);\n    }\n\n    /**\n     * Removes ChatRoom instance from the list of rooms. Removes listeners\n     * added from the Caps class.\n     * @param {ChatRoom} room the room.\n     */\n    _removeChatRoom(room) {\n        this.rooms.delete(room);\n        room.removeListener(XMPPEvents.MUC_MEMBER_LEFT, this._onMucMemberLeft);\n    }\n\n    /**\n     * Creates/updates the \"c\" xml node into the presence of the passed room.\n     * @param {ChatRoom} room the room.\n     */\n    _fixChatRoomPresenceMap(room) {\n        room.addToPresence('c', {\n            attributes: {\n                xmlns: Strophe.NS.CAPS,\n                hash: HASH,\n                node: this.node,\n                ver: this.version\n            }\n        });\n    }\n\n    /**\n     * Handles this.version changes.\n     */\n    _notifyVersionChanged() {\n        // update the version for all rooms\n        this.rooms.forEach(room => this._fixChatRoomPresenceMap(room));\n    }\n\n    /**\n     * Generates the value for the \"ver\" attribute.\n     */\n    _generateVersion() {\n        this.version\n            = generateSha(this.disco._identities, this.disco._features);\n\n        this._notifyVersionChanged();\n    }\n\n    /**\n     * Parses the \"c\" xml node from presence.\n     * @param {DOMElement} stanza the presence packet\n     */\n    _handleCaps(stanza) {\n        const from = stanza.getAttribute('from');\n        const caps = stanza.querySelector('c');\n        const version = caps.getAttribute('ver');\n        const node = caps.getAttribute('node');\n        const oldVersion = this.jidToVersion[from];\n\n        this.jidToVersion[from] = { version,\n            node };\n        if (oldVersion && oldVersion.version !== version) {\n            this.eventEmitter.emit(XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\n                from);\n        }\n\n        // return true to not remove the handler from Strophe\n        return true;\n    }\n\n    /**\n     * Removes entry from this.jidToVersion map.\n     * @param {String} jid the jid to be removed.\n     */\n    _removeJidToVersionEntry(jid) {\n        if (jid in this.jidToVersion) {\n            delete this.jidToVersion[jid];\n        }\n    }\n}\n","/* global $, __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, $msg, $pres, Strophe } from 'strophe.js';\n\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport * as JitsiTranscriptionStatus from '../../JitsiTranscriptionStatus';\nimport Listenable from '../util/Listenable';\nimport Settings from '../settings/Settings';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nimport Moderator from './moderator';\n\nconst logger = getLogger(__filename);\n\nexport const parser = {\n    packet2JSON(xmlElement, nodes) {\n        for (const child of Array.from(xmlElement.children)) {\n            const node = {\n                attributes: {},\n                children: [],\n                tagName: child.tagName\n            };\n\n            for (const attr of Array.from(child.attributes)) {\n                node.attributes[attr.name] = attr.value;\n            }\n            const text = Strophe.getText(child);\n\n            if (text) {\n                // Using Strophe.getText will do work for traversing all direct\n                // child text nodes but returns an escaped value, which is not\n                // desirable at this point.\n                node.value = Strophe.xmlunescape(text);\n            }\n            nodes.push(node);\n            this.packet2JSON(child, node.children);\n        }\n    },\n    json2packet(nodes, packet) {\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            if (node) {\n                packet.c(node.tagName, node.attributes);\n                if (node.value) {\n                    packet.t(node.value);\n                }\n                if (node.children) {\n                    this.json2packet(node.children, packet);\n                }\n                packet.up();\n            }\n        }\n\n        // packet.up();\n    }\n};\n\n/**\n * Returns array of JS objects from the presence JSON associated with the passed\n / nodeName\n * @param pres the presence JSON\n * @param nodeName the name of the node (videomuted, audiomuted, etc)\n */\nfunction filterNodeFromPresenceJSON(pres, nodeName) {\n    const res = [];\n\n    for (let i = 0; i < pres.length; i++) {\n        if (pres[i].tagName === nodeName) {\n            res.push(pres[i]);\n        }\n    }\n\n    return res;\n}\n\n// XXX As ChatRoom constructs XMPP stanzas and Strophe is build around the idea\n// of chaining function calls, allow long function call chains.\n/* eslint-disable newline-per-chained-call */\n\n/**\n *\n */\nexport default class ChatRoom extends Listenable {\n\n    /* eslint-disable max-params */\n\n    /**\n     *\n     * @param connection\n     * @param jid\n     * @param password\n     * @param XMPP\n     * @param options\n     * @param {boolean} options.disableFocus - when set to {@code false} will\n     * not invite Jicofo into the room. This is intended to be used only by\n     * jitsi-meet-spot.\n     */\n    constructor(connection, jid, password, XMPP, options) {\n        super();\n        this.xmpp = XMPP;\n        this.connection = connection;\n        this.roomjid = Strophe.getBareJidFromJid(jid);\n        this.myroomjid = jid;\n        this.password = password;\n        logger.info(`Joined MUC as ${this.myroomjid}`);\n        this.members = {};\n        this.presMap = {};\n        this.presHandlers = {};\n        this.joined = false;\n        this.role = null;\n        this.focusMucJid = null;\n        this.noBridgeAvailable = false;\n        this.options = options || {};\n        this.moderator\n            = new Moderator(this.roomjid, this.xmpp, this.eventEmitter, {\n                connection: this.xmpp.options,\n                conference: this.options\n            });\n        this.initPresenceMap(options);\n        this.lastPresences = {};\n        this.phoneNumber = null;\n        this.phonePin = null;\n        this.connectionTimes = {};\n        this.participantPropertyListener = null;\n\n        this.locked = false;\n        this.transcriptionStatus = JitsiTranscriptionStatus.OFF;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     *\n     */\n    initPresenceMap(options = {}) {\n        this.presMap.to = this.myroomjid;\n        this.presMap.xns = 'http://jabber.org/protocol/muc';\n        this.presMap.nodes = [];\n\n        if (options.enableStatsID) {\n            this.presMap.nodes.push({\n                'tagName': 'stats-id',\n                'value': Settings.callStatsUserName\n            });\n        }\n\n        // We need to broadcast 'videomuted' status from the beginning, cause\n        // Jicofo makes decisions based on that. Initialize it with 'false'\n        // here.\n        this.addVideoInfoToPresence(false);\n\n        if (options.deploymentInfo && options.deploymentInfo.userRegion) {\n            this.presMap.nodes.push({\n                'tagName': 'region',\n                'attributes': {\n                    id: options.deploymentInfo.userRegion,\n                    xmlns: 'http://jitsi.org/jitsi-meet'\n                }\n            });\n        }\n    }\n\n    /**\n     * Joins the chat room.\n     * @param password\n     * @returns {Promise} - resolved when join completes. At the time of this\n     * writing it's never rejected.\n     */\n    join(password) {\n        this.password = password;\n\n        return new Promise(resolve => {\n            this.options.disableFocus\n                && logger.info('Conference focus disabled');\n\n            const preJoin\n                = this.options.disableFocus\n                    ? Promise.resolve()\n                    : this.moderator.allocateConferenceFocus();\n\n            preJoin.then(() => {\n                this.sendPresence(true);\n                resolve();\n            });\n        });\n    }\n\n    /**\n     *\n     * @param fromJoin\n     */\n    sendPresence(fromJoin) {\n        const to = this.presMap.to;\n\n        if (!to || (!this.joined && !fromJoin)) {\n            // Too early to send presence - not initialized\n            return;\n        }\n\n        const pres = $pres({ to });\n\n        // xep-0045 defines: \"including in the initial presence stanza an empty\n        // <x/> element qualified by the 'http://jabber.org/protocol/muc'\n        // namespace\" and subsequent presences should not include that or it can\n        // be considered as joining, and server can send us the message history\n        // for the room on every presence\n        if (fromJoin) {\n            pres.c('x', { xmlns: this.presMap.xns });\n\n            if (this.password) {\n                pres.c('password').t(this.password).up();\n            }\n            pres.up();\n        }\n\n        parser.json2packet(this.presMap.nodes, pres);\n        this.connection.send(pres);\n        if (fromJoin) {\n            // XXX We're pressed for time here because we're beginning a complex\n            // and/or lengthy conference-establishment process which supposedly\n            // involves multiple RTTs. We don't have the time to wait for\n            // Strophe to decide to send our IQ.\n            this.connection.flush();\n        }\n    }\n\n    /**\n     * Sends the presence unavailable, signaling the server\n     * we want to leave the room.\n     */\n    doLeave() {\n        logger.log('do leave', this.myroomjid);\n        const pres = $pres({ to: this.myroomjid,\n            type: 'unavailable' });\n\n        this.presMap.length = 0;\n\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that\n        // means that there may not be enough time to send the unavailable\n        // presence. Switching Strophe to synchronous sending is not much of an\n        // option because it may lead to a noticeable delay in navigating away\n        // from the current location. As a compromise, we will try to increase\n        // the chances of sending the unavailable presence within the short time\n        // span that we have upon unloading by invoking flush() on the\n        // connection. We flush() once before sending/queuing the unavailable\n        // presence in order to attemtp to have the unavailable presence at the\n        // top of the send queue. We flush() once more after sending/queuing the\n        // unavailable presence in order to attempt to have it sent as soon as\n        // possible.\n        this.connection.flush();\n        this.connection.send(pres);\n        this.connection.flush();\n    }\n\n    /**\n     *\n     */\n    discoRoomInfo() {\n        // https://xmpp.org/extensions/xep-0045.html#disco-roominfo\n\n        const getInfo\n            = $iq({\n                type: 'get',\n                to: this.roomjid\n            })\n                .c('query', { xmlns: Strophe.NS.DISCO_INFO });\n\n        this.connection.sendIQ(getInfo, result => {\n            const locked\n                = $(result).find('>query>feature[var=\"muc_passwordprotected\"]')\n                    .length\n                    === 1;\n\n            if (locked !== this.locked) {\n                this.eventEmitter.emit(XMPPEvents.MUC_LOCK_CHANGED, locked);\n                this.locked = locked;\n            }\n        }, error => {\n            GlobalOnErrorHandler.callErrorHandler(error);\n            logger.error('Error getting room info: ', error);\n        });\n    }\n\n    /**\n     *\n     */\n    createNonAnonymousRoom() {\n        // http://xmpp.org/extensions/xep-0045.html#createroom-reserved\n\n        const getForm = $iq({ type: 'get',\n            to: this.roomjid })\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' })\n            .c('x', { xmlns: 'jabber:x:data',\n                type: 'submit' });\n\n        const self = this;\n\n        this.connection.sendIQ(getForm, form => {\n            if (!$(form).find(\n                    '>query>x[xmlns=\"jabber:x:data\"]'\n                    + '>field[var=\"muc#roomconfig_whois\"]').length) {\n                const errmsg = 'non-anonymous rooms not supported';\n\n                GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n                logger.error(errmsg);\n\n                return;\n            }\n\n            const formSubmit = $iq({ to: self.roomjid,\n                type: 'set' })\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' });\n\n            formSubmit.c('x', { xmlns: 'jabber:x:data',\n                type: 'submit' });\n\n            formSubmit.c('field', { 'var': 'FORM_TYPE' })\n                .c('value')\n                .t('http://jabber.org/protocol/muc#roomconfig').up().up();\n\n            formSubmit.c('field', { 'var': 'muc#roomconfig_whois' })\n                .c('value').t('anyone').up().up();\n\n            self.connection.sendIQ(formSubmit);\n\n        }, error => {\n            GlobalOnErrorHandler.callErrorHandler(error);\n            logger.error('Error getting room configuration form: ', error);\n        });\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresence(pres) {\n        const from = pres.getAttribute('from');\n        const member = {};\n        const statusEl = pres.getElementsByTagName('status')[0];\n\n        if (statusEl) {\n            member.status = statusEl.textContent || '';\n        }\n        let hasStatusUpdate = false;\n        let hasVersionUpdate = false;\n        const xElement\n            = pres.getElementsByTagNameNS(\n                'http://jabber.org/protocol/muc#user', 'x')[0];\n        const mucUserItem\n            = xElement && xElement.getElementsByTagName('item')[0];\n\n        member.affiliation\n            = mucUserItem && mucUserItem.getAttribute('affiliation');\n        member.role = mucUserItem && mucUserItem.getAttribute('role');\n\n        // Focus recognition\n        const jid = mucUserItem && mucUserItem.getAttribute('jid');\n\n        member.jid = jid;\n        member.isFocus\n            = jid && jid.indexOf(`${this.moderator.getFocusUserJid()}/`) === 0;\n        member.isHiddenDomain\n            = jid && jid.indexOf('@') > 0\n                && this.options.hiddenDomain\n                    === jid.substring(jid.indexOf('@') + 1, jid.indexOf('/'));\n\n        this.eventEmitter.emit(XMPPEvents.PRESENCE_RECEIVED, {\n            fromHiddenDomain: member.isHiddenDomain,\n            presence: pres\n        });\n\n        const xEl = pres.querySelector('x');\n\n        if (xEl) {\n            xEl.remove();\n        }\n\n        const nodes = [];\n\n        parser.packet2JSON(pres, nodes);\n        this.lastPresences[from] = nodes;\n\n        // process nodes to extract data needed for MUC_JOINED and\n        // MUC_MEMBER_JOINED events\n        const extractIdentityInformation = node => {\n            const identity = {};\n            const userInfo = node.children.find(c => c.tagName === 'user');\n\n            if (userInfo) {\n                identity.user = {};\n                for (const tag of [ 'id', 'name', 'avatar' ]) {\n                    const child\n                        = userInfo.children.find(c => c.tagName === tag);\n\n                    if (child) {\n                        identity.user[tag] = child.value;\n                    }\n                }\n            }\n            const groupInfo = node.children.find(c => c.tagName === 'group');\n\n            if (groupInfo) {\n                identity.group = groupInfo.value;\n            }\n\n            return identity;\n        };\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            switch (node.tagName) {\n            case 'bot': {\n                const { attributes } = node;\n\n                if (!attributes) {\n                    break;\n                }\n                const { type } = attributes;\n\n                member.botType = type;\n                break;\n            }\n            case 'nick':\n                member.nick = node.value;\n                break;\n            case 'userId':\n                member.id = node.value;\n                break;\n            case 'stats-id':\n                member.statsID = node.value;\n                break;\n            case 'identity':\n                member.identity = extractIdentityInformation(node);\n                break;\n            case 'stat': {\n                const { attributes } = node;\n\n                if (!attributes) {\n                    break;\n                }\n                const { name } = attributes;\n\n                if (name === 'version') {\n                    member.version = attributes.value;\n                }\n                break;\n            }\n            }\n        }\n\n        if (from === this.myroomjid) {\n            const newRole\n                = member.affiliation === 'owner' ? member.role : 'none';\n\n            if (this.role !== newRole) {\n                this.role = newRole;\n                this.eventEmitter.emit(\n                    XMPPEvents.LOCAL_ROLE_CHANGED,\n                    this.role);\n            }\n            if (!this.joined) {\n                this.joined = true;\n                const now = this.connectionTimes['muc.joined']\n                    = window.performance.now();\n\n                logger.log('(TIME) MUC joined:\\t', now);\n\n                // set correct initial state of locked\n                if (this.password) {\n                    this.locked = true;\n                }\n\n                // Re-send presence in case any presence updates were added,\n                // but blocked from sending, during the join process.\n                this.sendPresence();\n\n                this.eventEmitter.emit(XMPPEvents.MUC_JOINED);\n            }\n        } else if (this.members[from] === undefined) {\n            // new participant\n            this.members[from] = member;\n            logger.log('entered', from, member);\n            hasStatusUpdate = member.status !== undefined;\n            hasVersionUpdate = member.version !== undefined;\n            if (member.isFocus) {\n                this._initFocus(from, jid);\n            } else {\n                // identity is being added to member joined, so external\n                // services can be notified for that (currently identity is\n                // not used inside library)\n                this.eventEmitter.emit(\n                    XMPPEvents.MUC_MEMBER_JOINED,\n                    from,\n                    member.nick,\n                    member.role,\n                    member.isHiddenDomain,\n                    member.statsID,\n                    member.status,\n                    member.identity,\n                    member.botType);\n\n                // we are reporting the status with the join\n                // so we do not want a second event about status update\n                hasStatusUpdate = false;\n            }\n        } else {\n            // Presence update for existing participant\n            // Watch role change:\n            const memberOfThis = this.members[from];\n\n            if (memberOfThis.role !== member.role) {\n                memberOfThis.role = member.role;\n                this.eventEmitter.emit(\n                    XMPPEvents.MUC_ROLE_CHANGED, from, member.role);\n            }\n\n            // fire event that botType had changed\n            if (memberOfThis.botType !== member.botType) {\n                memberOfThis.botType = member.botType;\n                this.eventEmitter.emit(\n                    XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\n                    from,\n                    member.botType);\n            }\n\n            if (member.isFocus) {\n                // From time to time first few presences of the focus are not\n                // containing it's jid. That way we can mark later the focus\n                // member instead of not marking it at all and not starting the\n                // conference.\n                // FIXME: Maybe there is a better way to handle this issue. It\n                // seems there is some period of time in prosody that the\n                // configuration form is received but not applied. And if any\n                // participant joins during that period of time the first\n                // presence from the focus won't contain\n                // <item jid=\"focus...\" />.\n                memberOfThis.isFocus = true;\n                this._initFocus(from, jid);\n            }\n\n            // store the new display name\n            if (member.displayName) {\n                memberOfThis.displayName = member.displayName;\n            }\n\n            // update stored status message to be able to detect changes\n            if (memberOfThis.status !== member.status) {\n                hasStatusUpdate = true;\n                memberOfThis.status = member.status;\n            }\n\n            if (memberOfThis.version !== member.version) {\n                hasVersionUpdate = true;\n                memberOfThis.version = member.version;\n            }\n        }\n\n        // after we had fired member or room joined events, lets fire events\n        // for the rest info we got in presence\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            switch (node.tagName) {\n            case 'nick':\n                if (!member.isFocus) {\n                    const displayName\n                        = this.xmpp.options.displayJids\n                            ? Strophe.getResourceFromJid(from)\n                            : member.nick;\n\n                    this.eventEmitter.emit(\n                        XMPPEvents.DISPLAY_NAME_CHANGED,\n                        from,\n                        displayName);\n                }\n                break;\n            case 'bridgeNotAvailable':\n                if (member.isFocus && !this.noBridgeAvailable) {\n                    this.noBridgeAvailable = true;\n                    this.eventEmitter.emit(XMPPEvents.BRIDGE_DOWN);\n                }\n                break;\n            case 'conference-properties':\n                if (member.isFocus) {\n                    const properties = {};\n\n                    for (let j = 0; j < node.children.length; j++) {\n                        const { attributes } = node.children[j];\n\n                        if (attributes && attributes.key) {\n                            properties[attributes.key] = attributes.value;\n                        }\n                    }\n\n                    this.eventEmitter.emit(\n                        XMPPEvents.CONFERENCE_PROPERTIES_CHANGED, properties);\n                }\n                break;\n            case 'transcription-status': {\n                const { attributes } = node;\n\n                if (!attributes) {\n                    break;\n                }\n\n                const { status } = attributes;\n\n                if (status && status !== this.transcriptionStatus) {\n                    this.transcriptionStatus = status;\n                    this.eventEmitter.emit(\n                        XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\n                        status\n                    );\n                }\n\n\n                break;\n            }\n            case 'call-control': {\n                const att = node.attributes;\n\n                if (!att) {\n                    break;\n                }\n                this.phoneNumber = att.phone || null;\n                this.phonePin = att.pin || null;\n                this.eventEmitter.emit(XMPPEvents.PHONE_NUMBER_CHANGED);\n                break;\n            }\n            default:\n                this.processNode(node, from);\n            }\n        }\n\n        // Trigger status message update if necessary\n        if (hasStatusUpdate) {\n            this.eventEmitter.emit(\n                XMPPEvents.PRESENCE_STATUS,\n                from,\n                member.status);\n        }\n\n        if (hasVersionUpdate) {\n            logger.info(`Received version for ${jid}: ${member.version}`);\n        }\n    }\n\n    /**\n     * Initialize some properties when the focus participant is verified.\n     * @param from jid of the focus\n     * @param mucJid the jid of the focus in the muc\n     */\n    _initFocus(from, mucJid) {\n        this.focusMucJid = from;\n\n        logger.info(`Ignore focus: ${from}, real JID: ${mucJid}`);\n    }\n\n    /**\n     * Sets the special listener to be used for \"command\"s whose name starts\n     * with \"jitsi_participant_\".\n     */\n    setParticipantPropertyListener(listener) {\n        this.participantPropertyListener = listener;\n    }\n\n    /**\n     *\n     * @param node\n     * @param from\n     */\n    processNode(node, from) {\n        // make sure we catch all errors coming from any handler\n        // otherwise we can remove the presence handler from strophe\n        try {\n            let tagHandlers = this.presHandlers[node.tagName];\n\n            if (node.tagName.startsWith('jitsi_participant_')) {\n                tagHandlers = [ this.participantPropertyListener ];\n            }\n\n            if (tagHandlers) {\n                tagHandlers.forEach(handler => {\n                    handler(node, Strophe.getResourceFromJid(from), from);\n                });\n            }\n        } catch (e) {\n            GlobalOnErrorHandler.callErrorHandler(e);\n            logger.error(`Error processing:${node.tagName} node.`, e);\n        }\n    }\n\n    /**\n     * Send text message to the other participants in the conference\n     * @param message\n     * @param elementName\n     * @param nickname\n     */\n    sendMessage(message, elementName, nickname) {\n        const msg = $msg({ to: this.roomjid,\n            type: 'groupchat' });\n\n        // We are adding the message in a packet extension. If this element\n        // is different from 'body', we add a custom namespace.\n        // e.g. for 'json-message' extension of message stanza.\n        if (elementName === 'body') {\n            msg.c(elementName, message).up();\n        } else {\n            msg.c(elementName, { xmlns: 'http://jitsi.org/jitmeet' }, message)\n                .up();\n        }\n        if (nickname) {\n            msg.c('nick', { xmlns: 'http://jabber.org/protocol/nick' })\n                .t(nickname)\n                .up()\n                .up();\n        }\n        this.connection.send(msg);\n        this.eventEmitter.emit(XMPPEvents.SENDING_CHAT_MESSAGE, message);\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Send private text message to another participant of the conference\n     * @param id id/muc resource of the receiver\n     * @param message\n     * @param elementName\n     * @param nickname\n     */\n    sendPrivateMessage(id, message, elementName, nickname) {\n        const msg = $msg({ to: `${this.roomjid}/${id}`,\n            type: 'chat' });\n\n        // We are adding the message in packet. If this element is different\n        // from 'body', we add our custom namespace for the same.\n        // e.g. for 'json-message' message extension.\n        if (elementName === 'body') {\n            msg.c(elementName, message).up();\n        } else {\n            msg.c(elementName, { xmlns: 'http://jitsi.org/jitmeet' }, message)\n                .up();\n        }\n        if (nickname) {\n            msg.c('nick', { xmlns: 'http://jabber.org/protocol/nick' })\n                .t(nickname)\n                .up()\n                .up();\n        }\n\n        this.connection.send(msg);\n        this.eventEmitter.emit(\n            XMPPEvents.SENDING_PRIVATE_CHAT_MESSAGE, message);\n    }\n    /* eslint-enable max-params */\n\n    /**\n     *\n     * @param subject\n     */\n    setSubject(subject) {\n        const msg = $msg({ to: this.roomjid,\n            type: 'groupchat' });\n\n        msg.c('subject', subject);\n        this.connection.send(msg);\n    }\n\n    /**\n     * Called when participant leaves.\n     * @param jid the jid of the participant that leaves\n     * @param skipEvents optional params to skip any events, including check\n     * whether this is the focus that left\n     */\n    onParticipantLeft(jid, skipEvents) {\n        delete this.lastPresences[jid];\n\n        if (skipEvents) {\n            return;\n        }\n\n        this.eventEmitter.emit(XMPPEvents.MUC_MEMBER_LEFT, jid);\n\n        this.moderator.onMucMemberLeft(jid);\n    }\n\n    /**\n     *\n     * @param pres\n     * @param from\n     */\n    onPresenceUnavailable(pres, from) {\n        // ignore presence\n        if ($(pres).find('>ignore[xmlns=\"http://jitsi.org/jitmeet/\"]').length) {\n            return true;\n        }\n\n        // room destroyed ?\n        if ($(pres).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n            + '>destroy').length) {\n            let reason;\n            const reasonSelect\n                = $(pres).find(\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n                        + '>destroy>reason');\n\n            if (reasonSelect.length) {\n                reason = reasonSelect.text();\n            }\n\n            this.eventEmitter.emit(XMPPEvents.MUC_DESTROYED, reason);\n            this.connection.emuc.doLeave(this.roomjid);\n\n            return true;\n        }\n\n        // Status code 110 indicates that this notification is \"self-presence\".\n        const isSelfPresence\n            = $(pres)\n                .find(\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>'\n                        + 'status[code=\"110\"]')\n                .length;\n        const isKick\n            = $(pres)\n                .find(\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n                        + '>status[code=\"307\"]')\n                .length;\n        const membersKeys = Object.keys(this.members);\n\n        if (isKick) {\n            const actorSelect\n                = $(pres)\n                .find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>item>actor');\n\n            let actorNick;\n\n            if (actorSelect.length) {\n                actorNick = actorSelect.attr('nick');\n            }\n\n            // if no member is found this is the case we had kicked someone\n            // and we are not in the list of members\n            if (membersKeys.find(jid => Strophe.getResourceFromJid(jid) === actorNick)) {\n                // we first fire the kicked so we can show the participant\n                // who kicked, before notifying that participant left\n                // we fire kicked for us and for any participant kicked\n                this.eventEmitter.emit(\n                    XMPPEvents.KICKED,\n                    isSelfPresence,\n                    actorNick,\n                    Strophe.getResourceFromJid(from));\n            }\n        }\n\n        if (!isSelfPresence) {\n            delete this.members[from];\n            this.onParticipantLeft(from, false);\n        } else if (membersKeys.length > 0) {\n            // If the status code is 110 this means we're leaving and we would\n            // like to remove everyone else from our view, so we trigger the\n            // event.\n            membersKeys.forEach(jid => {\n                const member = this.members[jid];\n\n                delete this.members[jid];\n                this.onParticipantLeft(jid, member.isFocus);\n            });\n            this.connection.emuc.doLeave(this.roomjid);\n\n            // we fire muc_left only if this is not a kick,\n            // kick has both statuses 110 and 307.\n            if (!isKick) {\n                this.eventEmitter.emit(XMPPEvents.MUC_LEFT);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param msg\n     * @param from\n     */\n    onMessage(msg, from) {\n        const nick\n            = $(msg).find('>nick[xmlns=\"http://jabber.org/protocol/nick\"]')\n                .text()\n            || Strophe.getResourceFromJid(from);\n\n        const txt = $(msg).find('>body').text();\n        const type = msg.getAttribute('type');\n\n        if (type === 'error') {\n            this.eventEmitter.emit(XMPPEvents.CHAT_ERROR_RECEIVED,\n                $(msg).find('>text').text(), txt);\n\n            return true;\n        }\n\n        const subject = $(msg).find('>subject');\n\n        if (subject.length) {\n            const subjectText = subject.text();\n\n            if (subjectText || subjectText === '') {\n                this.eventEmitter.emit(XMPPEvents.SUBJECT_CHANGED, subjectText);\n                logger.log(`Subject is changed to ${subjectText}`);\n            }\n        }\n\n        // xep-0203 delay\n        let stamp = $(msg).find('>delay').attr('stamp');\n\n        if (!stamp) {\n            // or xep-0091 delay, UTC timestamp\n            stamp = $(msg).find('>[xmlns=\"jabber:x:delay\"]').attr('stamp');\n\n            if (stamp) {\n                // the format is CCYYMMDDThh:mm:ss\n                const dateParts\n                    = stamp.match(/(\\d{4})(\\d{2})(\\d{2}T\\d{2}:\\d{2}:\\d{2})/);\n\n                stamp = `${dateParts[1]}-${dateParts[2]}-${dateParts[3]}Z`;\n            }\n        }\n\n        if (from === this.roomjid\n                && $(msg)\n                    .find(\n                        '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n                            + '>status[code=\"104\"]')\n                    .length) {\n            this.discoRoomInfo();\n        }\n        const jsonMessage = $(msg).find('>json-message').text();\n        const parsedJson = this.xmpp.tryParseJSONAndVerify(jsonMessage);\n\n        // We emit this event if the message is a valid json, and is not\n        // delivered after a delay, i.e. stamp is undefined.\n        // e.g. - subtitles should not be displayed if delayed.\n        if (parsedJson && stamp === undefined) {\n            this.eventEmitter.emit(XMPPEvents.JSON_MESSAGE_RECEIVED,\n                from, parsedJson);\n\n            return;\n        }\n\n        if (txt) {\n            if (type === 'chat') {\n                this.eventEmitter.emit(XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\n                        from, nick, txt, this.myroomjid, stamp);\n            } else if (type === 'groupchat') {\n                this.eventEmitter.emit(XMPPEvents.MESSAGE_RECEIVED,\n                        from, nick, txt, this.myroomjid, stamp);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param pres\n     * @param from\n     */\n    onPresenceError(pres, from) {\n        if ($(pres)\n                .find(\n                    '>error[type=\"auth\"]'\n                        + '>not-authorized['\n                        + 'xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]')\n                .length) {\n            logger.log('on password required', from);\n            this.eventEmitter.emit(XMPPEvents.PASSWORD_REQUIRED);\n        } else if ($(pres)\n                .find(\n                    '>error[type=\"cancel\"]'\n                        + '>not-allowed['\n                        + 'xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]')\n                .length) {\n            const toDomain = Strophe.getDomainFromJid(pres.getAttribute('to'));\n\n            if (toDomain === this.xmpp.options.hosts.anonymousdomain) {\n                // enter the room by replying with 'not-authorized'. This would\n                // result in reconnection from authorized domain.\n                // We're either missing Jicofo/Prosody config for anonymous\n                // domains or something is wrong.\n                this.eventEmitter.emit(XMPPEvents.ROOM_JOIN_ERROR);\n\n            } else {\n                logger.warn('onPresError ', pres);\n                this.eventEmitter.emit(\n                    XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR);\n            }\n        } else if ($(pres).find('>error>service-unavailable').length) {\n            logger.warn('Maximum users limit for the room has been reached',\n                pres);\n            this.eventEmitter.emit(XMPPEvents.ROOM_MAX_USERS_ERROR);\n        } else {\n            logger.warn('onPresError ', pres);\n            this.eventEmitter.emit(XMPPEvents.ROOM_CONNECT_ERROR);\n        }\n    }\n\n    /**\n     *\n     * @param jid\n     */\n    kick(jid) {\n        const kickIQ = $iq({ to: this.roomjid,\n            type: 'set' })\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#admin' })\n            .c('item', { nick: Strophe.getResourceFromJid(jid),\n                role: 'none' })\n            .c('reason').t('You have been kicked.').up().up().up();\n\n        this.connection.sendIQ(\n            kickIQ,\n            result => logger.log('Kick participant with jid: ', jid, result),\n            error => logger.log('Kick participant error: ', error));\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     *\n     * @param key\n     * @param onSuccess\n     * @param onError\n     * @param onNotSupported\n     */\n    lockRoom(key, onSuccess, onError, onNotSupported) {\n        // http://xmpp.org/extensions/xep-0045.html#roomconfig\n        this.connection.sendIQ(\n            $iq({\n                to: this.roomjid,\n                type: 'get'\n            })\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' }),\n            res => {\n                if ($(res)\n                        .find(\n                            '>query>x[xmlns=\"jabber:x:data\"]'\n                                + '>field[var=\"muc#roomconfig_roomsecret\"]')\n                        .length) {\n                    const formsubmit\n                        = $iq({\n                            to: this.roomjid,\n                            type: 'set'\n                        })\n                            .c('query', {\n                                xmlns: 'http://jabber.org/protocol/muc#owner'\n                            });\n\n                    formsubmit.c('x', {\n                        xmlns: 'jabber:x:data',\n                        type: 'submit'\n                    });\n                    formsubmit\n                        .c('field', { 'var': 'FORM_TYPE' })\n                        .c('value')\n                        .t('http://jabber.org/protocol/muc#roomconfig')\n                        .up()\n                        .up();\n                    formsubmit\n                        .c('field', { 'var': 'muc#roomconfig_roomsecret' })\n                        .c('value')\n                        .t(key)\n                        .up()\n                        .up();\n\n                    // Fixes a bug in prosody 0.9.+\n                    // https://prosody.im/issues/issue/373\n                    formsubmit\n                        .c('field', { 'var': 'muc#roomconfig_whois' })\n                        .c('value')\n                        .t('anyone')\n                        .up()\n                        .up();\n\n                    // FIXME: is muc#roomconfig_passwordprotectedroom required?\n                    this.connection.sendIQ(formsubmit, onSuccess, onError);\n                } else {\n                    onNotSupported();\n                }\n            },\n            onError);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     *\n     * @param key\n     * @param values\n     */\n    addToPresence(key, values) {\n        values.tagName = key;\n        this.removeFromPresence(key);\n        this.presMap.nodes.push(values);\n    }\n\n    /**\n     * Retreives a value from the presence map.\n     *\n     * @param {string} key - The key to find the value for.\n     * @returns {Object?}\n     */\n    getFromPresence(key) {\n        return this.presMap.nodes.find(node => key === node.tagName);\n    }\n\n    /**\n     *\n     * @param key\n     */\n    removeFromPresence(key) {\n        const nodes = this.presMap.nodes.filter(node => key !== node.tagName);\n\n        this.presMap.nodes = nodes;\n    }\n\n    /**\n     *\n     * @param name\n     * @param handler\n     */\n    addPresenceListener(name, handler) {\n        if (typeof handler !== 'function') {\n            throw new Error('\"handler\" is not a function');\n        }\n        let tagHandlers = this.presHandlers[name];\n\n        if (!tagHandlers) {\n            this.presHandlers[name] = tagHandlers = [];\n        }\n        if (tagHandlers.indexOf(handler) === -1) {\n            tagHandlers.push(handler);\n        } else {\n            logger.warn(\n                `Trying to add the same handler more than once for: ${name}`);\n        }\n    }\n\n    /**\n     *\n     * @param name\n     * @param handler\n     */\n    removePresenceListener(name, handler) {\n        const tagHandlers = this.presHandlers[name];\n        const handlerIdx = tagHandlers ? tagHandlers.indexOf(handler) : -1;\n\n        // eslint-disable-next-line no-negated-condition\n        if (handlerIdx !== -1) {\n            tagHandlers.splice(handlerIdx, 1);\n        } else {\n            logger.warn(`Handler for: ${name} was not registered`);\n        }\n    }\n\n    /**\n     * Checks if the user identified by given <tt>mucJid</tt> is the conference\n     * focus.\n     * @param mucJid the full MUC address of the user to be checked.\n     * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus\n     * or <tt>false</tt> if is not. When given <tt>mucJid</tt> does not exist in\n     * the MUC then <tt>null</tt> is returned.\n     */\n    isFocus(mucJid) {\n        const member = this.members[mucJid];\n\n        if (member) {\n            return member.isFocus;\n        }\n\n        return null;\n    }\n\n    /**\n     *\n     */\n    isModerator() {\n        return this.role === 'moderator';\n    }\n\n    /**\n     *\n     * @param peerJid\n     */\n    getMemberRole(peerJid) {\n        if (this.members[peerJid]) {\n            return this.members[peerJid].role;\n        }\n\n        return null;\n    }\n\n    /**\n     *\n     * @param mute\n     * @param callback\n     */\n    setVideoMute(mute, callback) {\n        this.sendVideoInfoPresence(mute);\n        if (callback) {\n            callback(mute);\n        }\n    }\n\n    /**\n     *\n     * @param mute\n     * @param callback\n     */\n    setAudioMute(mute, callback) {\n        return this.sendAudioInfoPresence(mute, callback);\n    }\n\n    /**\n     *\n     * @param mute\n     */\n    addAudioInfoToPresence(mute) {\n        this.removeFromPresence('audiomuted');\n        this.addToPresence(\n            'audiomuted',\n            {\n                attributes: { 'xmlns': 'http://jitsi.org/jitmeet/audio' },\n                value: mute.toString()\n            });\n    }\n\n    /**\n     *\n     * @param mute\n     * @param callback\n     */\n    sendAudioInfoPresence(mute, callback) {\n        this.addAudioInfoToPresence(mute);\n        if (this.connection) {\n            this.sendPresence();\n        }\n        if (callback) {\n            callback();\n        }\n    }\n\n    /**\n     *\n     * @param mute\n     */\n    addVideoInfoToPresence(mute) {\n        this.removeFromPresence('videomuted');\n        this.addToPresence(\n            'videomuted',\n            {\n                attributes: { 'xmlns': 'http://jitsi.org/jitmeet/video' },\n                value: mute.toString()\n            });\n    }\n\n    /**\n     *\n     * @param mute\n     */\n    sendVideoInfoPresence(mute) {\n        this.addVideoInfoToPresence(mute);\n        if (!this.connection) {\n            return;\n        }\n        this.sendPresence();\n    }\n\n    /**\n     * Obtains the info about given media advertised in the MUC presence of\n     * the participant identified by the given endpoint JID.\n     * @param {string} endpointId the endpoint ID mapped to the participant\n     * which corresponds to MUC nickname.\n     * @param {MediaType} mediaType the type of the media for which presence\n     * info will be obtained.\n     * @return {PeerMediaInfo} presenceInfo an object with media presence\n     * info or <tt>null</tt> either if there is no presence available or if\n     * the media type given is invalid.\n     */\n    getMediaPresenceInfo(endpointId, mediaType) {\n        // Will figure out current muted status by looking up owner's presence\n        const pres = this.lastPresences[`${this.roomjid}/${endpointId}`];\n\n        if (!pres) {\n            // No presence available\n            return null;\n        }\n        const data = {\n            muted: false, // unmuted by default\n            videoType: undefined // no video type by default\n        };\n        let mutedNode = null;\n\n        if (mediaType === MediaType.AUDIO) {\n            mutedNode = filterNodeFromPresenceJSON(pres, 'audiomuted');\n        } else if (mediaType === MediaType.VIDEO) {\n            mutedNode = filterNodeFromPresenceJSON(pres, 'videomuted');\n            const videoTypeNode = filterNodeFromPresenceJSON(pres, 'videoType');\n\n            if (videoTypeNode.length > 0) {\n                data.videoType = videoTypeNode[0].value;\n            }\n        } else {\n            logger.error(`Unsupported media type: ${mediaType}`);\n\n            return null;\n        }\n\n        data.muted = mutedNode.length > 0 && mutedNode[0].value === 'true';\n\n        return data;\n    }\n\n    /**\n     * Returns true if the SIP calls are supported and false otherwise\n     */\n    isSIPCallingSupported() {\n        if (this.moderator) {\n            return this.moderator.isSipGatewayEnabled();\n        }\n\n        return false;\n    }\n\n    /**\n     * Dials a number.\n     * @param number the number\n     */\n    dial(number) {\n        return this.connection.rayo.dial(number, 'fromnumber',\n            Strophe.getBareJidFromJid(this.myroomjid), this.password,\n            this.focusMucJid);\n    }\n\n    /**\n     * Hangup an existing call\n     */\n    hangup() {\n        return this.connection.rayo.hangup();\n    }\n\n    /**\n     * Returns the phone number for joining the conference.\n     */\n    getPhoneNumber() {\n        return this.phoneNumber;\n    }\n\n    /**\n     * Returns the pin for joining the conference with phone.\n     */\n    getPhonePin() {\n        return this.phonePin;\n    }\n\n    /**\n     * Mutes remote participant.\n     * @param jid of the participant\n     * @param mute\n     */\n    muteParticipant(jid, mute) {\n        logger.info('set mute', mute);\n        const iqToFocus = $iq(\n            { to: this.focusMucJid,\n                type: 'set' })\n            .c('mute', {\n                xmlns: 'http://jitsi.org/jitmeet/audio',\n                jid\n            })\n            .t(mute.toString())\n            .up();\n\n        this.connection.sendIQ(\n            iqToFocus,\n            result => logger.log('set mute', result),\n            error => logger.log('set mute error', error));\n    }\n\n    /**\n     * TODO: Document\n     * @param iq\n     */\n    onMute(iq) {\n        const from = iq.getAttribute('from');\n\n        if (from !== this.focusMucJid) {\n            logger.warn('Ignored mute from non focus peer');\n\n            return;\n        }\n        const mute = $(iq).find('mute');\n\n        if (mute.length && mute.text() === 'true') {\n            this.eventEmitter.emit(XMPPEvents.AUDIO_MUTED_BY_FOCUS, mute.attr('actor'));\n        } else {\n            // XXX Why do we support anything but muting? Why do we encode the\n            // value in the text of the element? Why do we use a separate XML\n            // namespace?\n            logger.warn('Ignoring a mute request which does not explicitly '\n                + 'specify a positive mute command.');\n        }\n    }\n\n    /**\n     * Leaves the room. Closes the jingle session.\n     * @returns {Promise} which is resolved if XMPPEvents.MUC_LEFT is received\n     * less than 5s after sending presence unavailable. Otherwise the promise is\n     * rejected.\n     */\n    leave() {\n        return new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => onMucLeft(true), 5000);\n            const eventEmitter = this.eventEmitter;\n\n            /**\n             *\n             * @param doReject\n             */\n            function onMucLeft(doReject = false) {\n                eventEmitter.removeListener(XMPPEvents.MUC_LEFT, onMucLeft);\n                clearTimeout(timeout);\n                if (doReject) {\n                    // the timeout expired\n                    reject(new Error('The timeout for the confirmation about '\n                        + 'leaving the room expired.'));\n                } else {\n                    resolve();\n                }\n            }\n            eventEmitter.on(XMPPEvents.MUC_LEFT, onMucLeft);\n            this.doLeave();\n        });\n    }\n}\n\n/* eslint-enable newline-per-chained-call */\n","import Listenable from '../util/Listenable';\n\n/**\n * Creates ConnectionPlugin class that extends the passed class.\n * @param {Class} base the definition of the class that will be extended by\n * ConnectionPlugin\n */\nfunction getConnectionPluginDefinition(base = class {}) {\n    /**\n     * Base class for strophe connection plugins.\n     */\n    return class extends base {\n        /**\n         *\n         */\n        constructor(...args) {\n            super(...args);\n            this.connection = null;\n        }\n\n        /**\n         *\n         * @param connection\n         */\n        init(connection) {\n            this.connection = connection;\n        }\n    };\n}\n\n/**\n * ConnectionPlugin class.\n */\nexport default getConnectionPluginDefinition();\n\n/**\n * ConnectionPlugin class that extends Listenable.\n */\nexport const ConnectionPluginListenable\n    = getConnectionPluginDefinition(Listenable);\n","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as JingleSessionState from './JingleSessionState';\n\nconst logger = getLogger(__filename);\n\n/**\n * JingleSession provides an API to manage a single Jingle session. We will\n * have different implementations depending on the underlying interface used\n * (i.e. WebRTC and ORTC) and here we hold the code common to all of them.\n */\nexport default class JingleSession {\n\n    /* eslint-disable max-params */\n\n    /**\n     * Creates new <tt>JingleSession</tt>.\n     * @param {string} sid the Jingle session identifier\n     * @param {string} localJid our JID\n     * @param {string} remoteJid the JID of the remote peer\n     * @param {Strophe.Connection} connection the XMPP connection\n     * @param {Object} mediaConstraints the media constraints object passed to\n     * the PeerConnection onCreateAnswer/Offer as defined by the WebRTC.\n     * @param {Object} iceConfig the ICE servers config object as defined by\n     * the WebRTC. Passed to the PeerConnection's constructor.\n     * @param {boolean} isInitiator indicates if it will be the side which\n     * initiates the session.\n     */\n    constructor(\n            sid,\n            localJid,\n            remoteJid,\n            connection,\n            mediaConstraints,\n            iceConfig,\n            isInitiator) {\n        this.sid = sid;\n        this.localJid = localJid;\n        this.remoteJid = remoteJid;\n        this.connection = connection;\n        this.mediaConstraints = mediaConstraints;\n        this.iceConfig = iceConfig;\n\n        /**\n         * Indicates whether this instance is an initiator or an answerer of\n         * the Jingle session.\n         * @type {boolean}\n         */\n        this.isInitiator = isInitiator;\n\n        /**\n         * Whether to use dripping or not. Dripping is sending trickle\n         * candidates not one-by-one.\n         */\n        this.usedrip = true;\n\n        /**\n         *  When dripping is used, stores ICE candidates which are to be sent.\n         */\n        this.dripContainer = [];\n\n        /**\n         * The chat room instance associated with the session.\n         * @type {ChatRoom}\n         */\n        this.room = null;\n\n        /**\n         * Jingle session state - uninitialized until {@link initialize} is\n         * called @type {JingleSessionState}\n         */\n        this.state = null;\n\n        /**\n         * The RTC service instance\n         * @type {RTC}\n         */\n        this.rtc = null;\n    }\n\n    /**\n     * Returns XMPP address of this session's initiator.\n     * @return {string}\n     */\n    get initiatorJid() {\n        return this.isInitiator ? this.localJid : this.remoteJid;\n    }\n\n    /**\n     * Returns XMPP address of this session's responder.\n     * @return {string}\n     */\n    get responderJid() {\n        return this.isInitiator ? this.remoteJid : this.localJid;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Prepares this object to initiate a session.\n     * @param {ChatRoom} room the chat room for the conference associated with\n     * this session\n     * @param {RTC} rtc the RTC service instance\n     * @param {object} options - the options, see implementing class's\n     * {@link #doInitialize} description for more details.\n     */\n    initialize(room, rtc, options) {\n        if (this.state !== null) {\n            const errmsg\n                = `attempt to initiate on session ${this.sid}\n                   in state ${this.state}`;\n\n            logger.error(errmsg);\n            throw new Error(errmsg);\n        }\n        this.room = room;\n        this.rtc = rtc;\n        this.state = JingleSessionState.PENDING;\n        this.doInitialize(options);\n    }\n\n    /**\n     * The implementing class finishes initialization here. Called at the end of\n     * {@link initialize}.\n     * @param {Object} options - The options specific to the implementing class.\n     * @protected\n     */\n    doInitialize(options) { } // eslint-disable-line no-unused-vars, no-empty-function, max-len\n\n    /* eslint-disable no-unused-vars, no-empty-function */\n\n    /**\n     * Adds the ICE candidates found in the 'contents' array as remote\n     * candidates?\n     * Note: currently only used on transport-info\n     *\n     * @param contents\n     */\n    addIceCandidates(contents) {}\n\n    /* eslint-enable no-unused-vars, no-empty-function */\n\n    /**\n     * Returns current state of this <tt>JingleSession</tt> instance.\n     * @returns {JingleSessionState} the current state of this session instance.\n     */\n    getState() {\n        return this.state;\n    }\n\n    /* eslint-disable no-unused-vars, no-empty-function */\n\n    /**\n     * Handles an 'add-source' event.\n     *\n     * @param contents an array of Jingle 'content' elements.\n     */\n    addSources(contents) {}\n\n    /**\n     * Handles a 'remove-source' event.\n     *\n     * @param contents an array of Jingle 'content' elements.\n     */\n    removeSources(contents) {}\n\n    /**\n     * Terminates this Jingle session by sending session-terminate\n     * @param success a callback called once the 'session-terminate' packet has\n     * been acknowledged with RESULT.\n     * @param failure a callback called when either timeout occurs or ERROR\n     * response is received.\n     * @param {Object} options\n     * @param {string} [options.reason] XMPP Jingle error condition\n     * @param {string} [options.reasonDescription] some meaningful error message\n     * @param {boolean} [options.sendSessionTerminate=true] set to false to skip\n     * sending session-terminate. It may not make sense to send it if the XMPP\n     * connection has been closed already or if the remote peer has disconnected\n     */\n    terminate(success, failure, options) {}\n\n    /**\n     * Handles an offer from the remote peer (prepares to accept a session).\n     * @param jingle the 'jingle' XML element.\n     * @param success callback called when we the incoming session has been\n     * accepted\n     * @param failure callback called when we fail for any reason, will supply\n     * error object with details(which is meant more to be printed to the logger\n     * than analysed in the code, as the error is unrecoverable anyway)\n     */\n    acceptOffer(jingle, success, failure) {}\n\n    /**\n     * Returns the JID of the initiator of the jingle session.\n     */\n    _getInitiatorJid() {\n        return this.isInitiator ? this.localJid : this.remoteJid;\n    }\n\n    /* eslint-enable no-unused-vars, no-empty-function */\n}\n","/* global __filename, $ */\n\nimport {\n    ICE_DURATION,\n    ICE_STATE_CHANGED\n} from '../../service/statistics/AnalyticsEvents';\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\nimport { integerHash } from '../util/StringUtils';\n\nimport JingleSession from './JingleSession';\nimport * as JingleSessionState from './JingleSessionState';\nimport SDP from './SDP';\nimport SDPDiffer from './SDPDiffer';\nimport SDPUtil from './SDPUtil';\nimport SignalingLayerImpl from './SignalingLayerImpl';\n\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport Statistics from '../statistics/statistics';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport AsyncQueue from '../util/AsyncQueue';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = getLogger(__filename);\n\n/**\n * Constant tells how long we're going to wait for IQ response, before timeout\n * error is  triggered.\n * @type {number}\n */\nconst IQ_TIMEOUT = 10000;\n\n/*\n * The default number of samples (per stat) to keep when webrtc stats gathering\n * is enabled in TraceablePeerConnection.\n */\nconst DEFAULT_MAX_STATS = 300;\n\n/**\n * @typedef {Object} JingleSessionPCOptions\n * @property {Object} abTesting - A/B testing related options (ask George).\n * @property {boolean} abTesting.enableSuspendVideoTest - enables the suspend\n * video test ?(ask George).\n * @property {boolean} disableH264 - Described in the config.js[1].\n * @property {boolean} disableRtx - Described in the config.js[1].\n * @property {boolean} disableSimulcast - Described in the config.js[1].\n * @property {boolean} enableLayerSuspension - Described in the config.js[1].\n * @property {boolean} failICE - it's an option used in the tests. Set to\n * <tt>true</tt> to block any real candidates and make the ICE fail.\n * @property {boolean} gatherStats - Described in the config.js[1].\n * @property {object} p2p - Peer to peer related options (FIXME those could be\n * fetched from config.p2p on the upper level).\n * @property {boolean} p2p.disableH264 - Described in the config.js[1].\n * @property {boolean} p2p.preferH264 - Described in the config.js[1].\n * @property {boolean} preferH264 - Described in the config.js[1].\n * @property {Object} testing - Testing and/or experimental options.\n * @property {boolean} testing.enableFirefoxSimulcast - Described in the\n * config.js[1].\n * @property {boolean} webrtcIceUdpDisable - Described in the config.js[1].\n * @property {boolean} webrtcIceTcpDisable - Described in the config.js[1].\n *\n * [1]: https://github.com/jitsi/jitsi-meet/blob/master/config.js\n */\n/**\n *\n */\nexport default class JingleSessionPC extends JingleSession {\n    /**\n     * Parses 'senders' attribute of the video content.\n     * @param {jQuery} jingleContents\n     * @return {string|null} one of the values of content \"senders\" attribute\n     * defined by Jingle. If there is no \"senders\" attribute or if the value is\n     * invalid then <tt>null</tt> will be returned.\n     * @private\n     */\n    static parseVideoSenders(jingleContents) {\n        const videoContents = jingleContents.find('>content[name=\"video\"]');\n\n        if (videoContents.length) {\n            const senders = videoContents[0].getAttribute('senders');\n\n            if (senders === 'both'\n                || senders === 'initiator'\n                || senders === 'responder'\n                || senders === 'none') {\n                return senders;\n            }\n        }\n\n        return null;\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Creates new <tt>JingleSessionPC</tt>\n     * @param {string} sid the Jingle Session ID - random string which\n     * identifies the session\n     * @param {string} localJid our JID\n     * @param {string} remoteJid remote peer JID\n     * @param {Strophe.Connection} connection Strophe XMPP connection instance\n     * used to send packets.\n     * @param mediaConstraints the media constraints object passed to\n     * createOffer/Answer, as defined by the WebRTC standard\n     * @param iceConfig the ICE servers config object as defined by the WebRTC\n     * standard.\n     * @param {boolean} isP2P indicates whether this instance is\n     * meant to be used in a direct, peer to peer connection or <tt>false</tt>\n     * if it's a JVB connection.\n     * @param {boolean} isInitiator indicates if it will be the side which\n     * initiates the session.\n     * @constructor\n     *\n     * @implements {SignalingLayer}\n     */\n    constructor(\n            sid,\n            localJid,\n            remoteJid,\n            connection,\n            mediaConstraints,\n            iceConfig,\n            isP2P,\n            isInitiator) {\n        super(\n            sid,\n            localJid,\n            remoteJid, connection, mediaConstraints, iceConfig, isInitiator);\n\n        /**\n         * The bridge session's identifier. One Jingle session can during\n         * it's lifetime participate in multiple bridge sessions managed by\n         * Jicofo. A new bridge session is started whenever Jicofo sends\n         * 'session-initiate' or 'transport-replace'.\n         *\n         * @type {?string}\n         * @private\n         */\n        this._bridgeSessionId = null;\n\n        /**\n         * Stores result of {@link window.performance.now()} at the time when\n         * ICE enters 'checking' state.\n         * @type {number|null} null if no value has been stored yet\n         * @private\n         */\n        this._iceCheckingStartedTimestamp = null;\n\n        /**\n         * Stores result of {@link window.performance.now()} at the time when\n         * first ICE candidate is spawned by the peerconnection to mark when\n         * ICE gathering started. That's, because ICE gathering state changed\n         * events are not supported by most of the browsers, so we try something\n         * that will work everywhere. It may not be as accurate, but given that\n         * 'host' candidate usually comes first, the delay should be minimal.\n         * @type {number|null} null if no value has been stored yet\n         * @private\n         */\n        this._gatheringStartedTimestamp = null;\n\n        /**\n         * Indicates whether or not this session is willing to send/receive\n         * video media. When set to <tt>false</tt> the underlying peer\n         * connection will disable local video transfer and the remote peer will\n         * be will be asked to stop sending video via 'content-modify' IQ\n         * (the senders attribute of video contents will be adjusted\n         * accordingly). Note that this notification is sent only in P2P\n         * session, because Jicofo does not support it yet. Obviously when\n         * the value is changed from <tt>false</tt> to <tt>true</tt> another\n         * notification will be sent to resume video transfer on the remote\n         * side.\n         * @type {boolean}\n         * @private\n         */\n        this._localVideoActive = true;\n\n        /**\n         * Indicates whether or not the remote peer has video transfer active.\n         * When set to <tt>true</tt> it means that remote peer is neither\n         * sending nor willing to receive video. In such case we'll ask\n         * our peerconnection to stop sending video by calling\n         * {@link TraceablePeerConnection.setVideoTransferActive} with\n         * <tt>false</tt>.\n         * @type {boolean}\n         * @private\n         */\n        this._remoteVideoActive = true;\n\n        /**\n         * Marks that ICE gathering duration has been reported already. That\n         * prevents reporting it again, after eventual 'transport-replace' (JVB\n         * conference migration/ICE restart).\n         * @type {boolean}\n         * @private\n         */\n        this._gatheringReported = false;\n\n        this.lasticecandidate = false;\n        this.closed = false;\n\n        /**\n         * Indicates whether or not this <tt>JingleSessionPC</tt> is used in\n         * a peer to peer type of session.\n         * @type {boolean} <tt>true</tt> if it's a peer to peer\n         * session or <tt>false</tt> if it's a JVB session\n         */\n        this.isP2P = isP2P;\n\n        /**\n         * The signaling layer implementation.\n         * @type {SignalingLayerImpl}\n         */\n        this.signalingLayer = new SignalingLayerImpl();\n\n        /**\n         * The queue used to serialize operations done on the peerconnection.\n         *\n         * @type {AsyncQueue}\n         */\n        this.modificationQueue = new AsyncQueue();\n\n        /**\n         * Flag used to guarantee that the connection established event is\n         * triggered just once.\n         * @type {boolean}\n         */\n        this.wasConnected = false;\n\n        /**\n         * Keeps track of how long (in ms) it took from ICE start to ICE\n         * connect.\n         *\n         * @type {number}\n         */\n        this.establishmentDuration = undefined;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Checks whether or not this session instance is still operational.\n     * @private\n     * @returns {boolean} {@code true} if operation or {@code false} otherwise.\n     */\n    _assertNotEnded() {\n        return this.state !== JingleSessionState.ENDED;\n    }\n\n    /**\n     * @inheritDoc\n     * @param {JingleSessionPCOptions} options  - a set of config options.\n     */\n    doInitialize(options) {\n        this.failICE = Boolean(options.failICE);\n        this.lasticecandidate = false;\n        this.options = options;\n\n        /**\n         * {@code true} if reconnect is in progress.\n         * @type {boolean}\n         */\n        this.isReconnect = false;\n\n        /**\n         * Set to {@code true} if the connection was ever stable\n         * @type {boolean}\n         */\n        this.wasstable = false;\n        this.webrtcIceUdpDisable = Boolean(options.webrtcIceUdpDisable);\n        this.webrtcIceTcpDisable = Boolean(options.webrtcIceTcpDisable);\n\n        const pcOptions = { disableRtx: options.disableRtx };\n\n        if (options.gatherStats) {\n            pcOptions.maxstats = DEFAULT_MAX_STATS;\n        }\n\n        if (this.isP2P) {\n            // simulcast needs to be disabled for P2P (121) calls\n            pcOptions.disableSimulcast = true;\n            pcOptions.disableH264 = options.p2p && options.p2p.disableH264;\n            pcOptions.preferH264 = options.p2p && options.p2p.preferH264;\n\n            const abtestSuspendVideo = this._abtestSuspendVideoEnabled(options);\n\n            if (typeof abtestSuspendVideo !== 'undefined') {\n                pcOptions.abtestSuspendVideo = abtestSuspendVideo;\n            }\n        } else {\n            // H264 does not support simulcast, so it needs to be disabled.\n            pcOptions.disableSimulcast\n                = options.disableSimulcast\n                    || (options.preferH264 && !options.disableH264);\n            pcOptions.preferH264 = options.preferH264;\n            pcOptions.enableFirefoxSimulcast\n                = options.testing && options.testing.enableFirefoxSimulcast;\n            pcOptions.enableLayerSuspension = options.enableLayerSuspension;\n        }\n\n        if (options.startSilent) {\n            pcOptions.startSilent = true;\n        }\n\n        this.peerconnection\n            = this.rtc.createPeerConnection(\n                    this.signalingLayer,\n                    this.iceConfig,\n                    this.isP2P,\n                    pcOptions);\n\n        this.peerconnection.onicecandidate = ev => {\n            if (!ev) {\n                // There was an incomplete check for ev before which left\n                // the last line of the function unprotected from a potential\n                // throw of an exception. Consequently, it may be argued that\n                // the check is unnecessary. Anyway, I'm leaving it and making\n                // the check complete.\n                return;\n            }\n\n            // XXX this is broken, candidate is not parsed.\n            const candidate = ev.candidate;\n            const now = window.performance.now();\n\n            if (candidate) {\n                if (this._gatheringStartedTimestamp === null) {\n                    this._gatheringStartedTimestamp = now;\n                }\n\n                // Discard candidates of disabled protocols.\n                let protocol = candidate.protocol;\n\n                if (typeof protocol === 'string') {\n                    protocol = protocol.toLowerCase();\n                    if (protocol === 'tcp' || protocol === 'ssltcp') {\n                        if (this.webrtcIceTcpDisable) {\n                            return;\n                        }\n                    } else if (protocol === 'udp') {\n                        if (this.webrtcIceUdpDisable) {\n                            return;\n                        }\n                    }\n                }\n            } else if (!this._gatheringReported) {\n                // End of gathering\n                Statistics.sendAnalytics(\n                    ICE_DURATION,\n                    {\n                        phase: 'gathering',\n                        value: now - this._gatheringStartedTimestamp,\n                        p2p: this.isP2P,\n                        initiator: this.isInitiator\n                    });\n                this._gatheringReported = true;\n            }\n            this.sendIceCandidate(candidate);\n        };\n\n        // Note there is a change in the spec about closed:\n        // This value moved into the RTCPeerConnectionState enum in\n        // the May 13, 2016 draft of the specification, as it reflects the state\n        // of the RTCPeerConnection, not the signaling connection. You now\n        // detect a closed connection by checking for connectionState to be\n        // \"closed\" instead.\n        // I suppose at some point this will be moved to onconnectionstatechange\n        this.peerconnection.onsignalingstatechange = () => {\n            if (this.peerconnection.signalingState === 'stable') {\n                this.wasstable = true;\n            } else if (this.peerconnection.signalingState === 'closed'\n                || this.peerconnection.connectionState === 'closed') {\n                this.room.eventEmitter.emit(XMPPEvents.SUSPEND_DETECTED, this);\n            }\n        };\n\n        /**\n         * The oniceconnectionstatechange event handler contains the code to\n         * execute when the iceconnectionstatechange event, of type Event,\n         * is received by this RTCPeerConnection. Such an event is sent when\n         * the value of RTCPeerConnection.iceConnectionState changes.\n         */\n        this.peerconnection.oniceconnectionstatechange = () => {\n            const now = window.performance.now();\n\n            if (!this.isP2P) {\n                this.room.connectionTimes[\n                    `ice.state.${this.peerconnection.iceConnectionState}`]\n                    = now;\n            }\n            logger.log(\n                `(TIME) ICE ${this.peerconnection.iceConnectionState}`\n                    + ` P2P? ${this.isP2P}:\\t`,\n                now);\n\n            Statistics.sendAnalytics(\n                ICE_STATE_CHANGED,\n                {\n                    p2p: this.isP2P,\n                    state: this.peerconnection.iceConnectionState,\n                    'signaling_state': this.peerconnection.signalingState,\n                    reconnect: this.isReconnect,\n                    value: now\n                });\n\n            this.room.eventEmitter.emit(\n                XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\n                this,\n                this.peerconnection.iceConnectionState);\n            switch (this.peerconnection.iceConnectionState) {\n            case 'checking':\n                this._iceCheckingStartedTimestamp = now;\n                break;\n            case 'connected':\n                // Informs interested parties that the connection has been\n                // restored.\n                if (this.peerconnection.signalingState === 'stable') {\n                    if (this.isReconnect) {\n                        this.room.eventEmitter.emit(\n                            XMPPEvents.CONNECTION_RESTORED, this);\n                    }\n                }\n\n                if (!this.wasConnected && this.wasstable) {\n\n                    Statistics.sendAnalytics(\n                        ICE_DURATION,\n                        {\n                            phase: 'checking',\n                            value: now - this._iceCheckingStartedTimestamp,\n                            p2p: this.isP2P,\n                            initiator: this.isInitiator\n                        });\n\n                    // Switch between ICE gathering and ICE checking whichever\n                    // started first (scenarios are different for initiator\n                    // vs responder)\n                    const iceStarted\n                        = Math.min(\n                            this._iceCheckingStartedTimestamp,\n                            this._gatheringStartedTimestamp);\n\n                    this.establishmentDuration = now - iceStarted;\n\n                    Statistics.sendAnalytics(\n                        ICE_DURATION,\n                        {\n                            phase: 'establishment',\n                            value: this.establishmentDuration,\n                            p2p: this.isP2P,\n                            initiator: this.isInitiator\n                        });\n\n                    this.wasConnected = true;\n                    this.room.eventEmitter.emit(\n                        XMPPEvents.CONNECTION_ESTABLISHED, this);\n                }\n                this.isReconnect = false;\n                break;\n            case 'disconnected':\n                this.isReconnect = true;\n\n                // Informs interested parties that the connection has been\n                // interrupted.\n                if (this.wasstable) {\n                    this.room.eventEmitter.emit(\n                        XMPPEvents.CONNECTION_INTERRUPTED, this);\n                }\n                break;\n            case 'failed':\n                this.room.eventEmitter.emit(\n                    XMPPEvents.CONNECTION_ICE_FAILED, this);\n                break;\n            }\n        };\n        this.peerconnection.onnegotiationneeded = () => {\n            this.room.eventEmitter.emit(XMPPEvents.PEERCONNECTION_READY, this);\n        };\n\n        // The signaling layer will bind it's listeners at this point\n        this.signalingLayer.setChatRoom(this.room);\n\n        if (!this.isP2P && options.enableLayerSuspension) {\n            // If this is the bridge session, we'll listen for\n            // IS_SELECTED_CHANGED events and notify the peer connection\n            this.rtc.addListener(RTCEvents.IS_SELECTED_CHANGED,\n                isSelected => {\n                    this.peerconnection.setIsSelected(isSelected);\n                    logger.info('Doing local O/A due to '\n                        + 'IS_SELECTED_CHANGED event');\n                    this.modificationQueue.push(finishedCallback => {\n                        this._renegotiate()\n                            .then(finishedCallback)\n                            .catch(finishedCallback);\n                    });\n                }\n            );\n        }\n    }\n\n    /**\n     * Sends given candidate in Jingle 'transport-info' message.\n     * @param {RTCIceCandidate} candidate the WebRTC ICE candidate instance\n     * @private\n     */\n    sendIceCandidate(candidate) {\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\n\n        if (candidate && !this.lasticecandidate) {\n            const ice\n                = SDPUtil.iceparams(\n                    localSDP.media[candidate.sdpMLineIndex], localSDP.session);\n            const jcand = SDPUtil.candidateToJingle(candidate.candidate);\n\n            if (!(ice && jcand)) {\n                const errorMesssage = 'failed to get ice && jcand';\n\n                GlobalOnErrorHandler.callErrorHandler(new Error(errorMesssage));\n                logger.error(errorMesssage);\n\n                return;\n            }\n            ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\n\n            if (this.usedrip) {\n                if (this.dripContainer.length === 0) {\n                    // start 20ms callout\n                    setTimeout(() => {\n                        if (this.dripContainer.length === 0) {\n                            return;\n                        }\n                        this.sendIceCandidates(this.dripContainer);\n                        this.dripContainer = [];\n                    }, 20);\n                }\n                this.dripContainer.push(candidate);\n            } else {\n                this.sendIceCandidates([ candidate ]);\n            }\n        } else {\n            logger.log('sendIceCandidate: last candidate.');\n\n            // FIXME: remember to re-think in ICE-restart\n            this.lasticecandidate = true;\n        }\n    }\n\n    /**\n     * Sends given candidates in Jingle 'transport-info' message.\n     * @param {Array<RTCIceCandidate>} candidates an array of the WebRTC ICE\n     * candidate instances\n     * @private\n     */\n    sendIceCandidates(candidates) {\n        if (!this._assertNotEnded('sendIceCandidates')) {\n\n            return;\n        }\n\n        logger.log('sendIceCandidates', candidates);\n        const cand = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\n                action: 'transport-info',\n                initiator: this.initiatorJid,\n                sid: this.sid });\n\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\n\n        for (let mid = 0; mid < localSDP.media.length; mid++) {\n            const cands = candidates.filter(el => el.sdpMLineIndex === mid);\n            const mline\n                = SDPUtil.parseMLine(localSDP.media[mid].split('\\r\\n')[0]);\n\n            if (cands.length > 0) {\n                const ice\n                    = SDPUtil.iceparams(localSDP.media[mid], localSDP.session);\n\n                ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\n                cand.c('content', {\n                    creator: this.initiatorJid === this.localJid\n                        ? 'initiator' : 'responder',\n                    name: cands[0].sdpMid ? cands[0].sdpMid : mline.media\n                }).c('transport', ice);\n                for (let i = 0; i < cands.length; i++) {\n                    const candidate\n                        = SDPUtil.candidateToJingle(cands[i].candidate);\n\n                    // Mangle ICE candidate if 'failICE' test option is enabled\n\n                    if (this.failICE) {\n                        candidate.ip = '1.1.1.1';\n                    }\n                    cand.c('candidate', candidate).up();\n                }\n\n                // add fingerprint\n                const fingerprintLine\n                    = SDPUtil.findLine(\n                        localSDP.media[mid],\n                        'a=fingerprint:', localSDP.session);\n\n                if (fingerprintLine) {\n                    const tmp = SDPUtil.parseFingerprint(fingerprintLine);\n\n                    tmp.required = true;\n                    cand.c(\n                        'fingerprint',\n                        { xmlns: 'urn:xmpp:jingle:apps:dtls:0' })\n                        .t(tmp.fingerprint);\n                    delete tmp.fingerprint;\n                    cand.attrs(tmp);\n                    cand.up();\n                }\n                cand.up(); // transport\n                cand.up(); // content\n            }\n        }\n\n        // might merge last-candidate notification into this, but it is called\n        // a lot later. See webrtc issue #2340\n        // logger.log('was this the last candidate', this.lasticecandidate);\n        this.connection.sendIQ(\n            cand, null, this.newJingleErrorHandler(cand), IQ_TIMEOUT);\n    }\n\n    /**\n     * Sends Jingle 'session-info' message which includes custom Jitsi Meet\n     * 'ice-state' element with the text value 'failed' to let Jicofo know\n     * that the ICE connection has entered the failed state. It can then\n     * choose to re-create JVB channels and send 'transport-replace' to\n     * retry the connection.\n     */\n    sendIceFailedNotification() {\n        const sessionInfo\n            = $iq({\n                to: this.remoteJid,\n                type: 'set' })\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\n                action: 'session-info',\n                initiator: this.initiatorJid,\n                sid: this.sid })\n            .c('ice-state', { xmlns: 'http://jitsi.org/protocol/focus' })\n            .t('failed')\n            .up();\n\n        this._bridgeSessionId\n            && sessionInfo.c(\n                'bridge-session', {\n                    xmlns: 'http://jitsi.org/protocol/focus',\n                    id: this._bridgeSessionId\n                });\n\n        this.connection.sendIQ(\n            sessionInfo,\n            null,\n            this.newJingleErrorHandler(sessionInfo),\n            /*\n             * This message will be often sent when there are connectivity\n             * issues, so make it slightly longer than Prosody's default BOSH\n             * inactivity timeout of 60 seconds.\n             */ 65);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    addIceCandidates(elem) {\n        if (this.peerconnection.signalingState === 'closed') {\n            logger.warn('Ignored add ICE candidate when in closed state');\n\n            return;\n        }\n\n        const iceCandidates = [];\n\n        elem.find('>content>transport>candidate')\n            .each((idx, candidate) => {\n                let line = SDPUtil.candidateFromJingle(candidate);\n\n                line = line.replace('\\r\\n', '').replace('a=', '');\n\n                // FIXME this code does not care to handle\n                // non-bundle transport\n                const rtcCandidate = new RTCIceCandidate({\n                    sdpMLineIndex: 0,\n\n                    // FF comes up with more complex names like audio-23423,\n                    // Given that it works on both Chrome and FF without\n                    // providing it, let's leave it like this for the time\n                    // being...\n                    // sdpMid: 'audio',\n                    sdpMid: '',\n                    candidate: line\n                });\n\n                iceCandidates.push(rtcCandidate);\n            });\n\n        if (!iceCandidates.length) {\n            logger.error(\n                'No ICE candidates to add ?', elem[0] && elem[0].outerHTML);\n\n            return;\n        }\n\n        // We want to have this task queued, so that we know it is executed,\n        // after the initial sRD/sLD offer/answer cycle was done (based on\n        // the assumption that candidates are spawned after the offer/answer\n        // and XMPP preserves order).\n        const workFunction = finishedCallback => {\n            for (const iceCandidate of iceCandidates) {\n                this.peerconnection.addIceCandidate(iceCandidate)\n                    .then(\n                        () => logger.debug('addIceCandidate ok!'),\n                        err => logger.error('addIceCandidate failed!', err));\n            }\n\n            finishedCallback();\n        };\n\n        logger.debug(\n            `Queued add (${iceCandidates.length}) ICE candidates task...`);\n        this.modificationQueue.push(workFunction);\n    }\n\n    /**\n     *\n     * @param contents\n     */\n    readSsrcInfo(contents) {\n        const ssrcs\n            = $(contents).find(\n                '>description>'\n                    + 'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n\n        ssrcs.each((i, ssrcElement) => {\n            const ssrc = Number(ssrcElement.getAttribute('ssrc'));\n\n            if (this.isP2P) {\n                // In P2P all SSRCs are owner by the remote peer\n                this.signalingLayer.setSSRCOwner(\n                    ssrc, Strophe.getResourceFromJid(this.remoteJid));\n            } else {\n                $(ssrcElement)\n                    .find('>ssrc-info[xmlns=\"http://jitsi.org/jitmeet\"]')\n                    .each((i3, ssrcInfoElement) => {\n                        const owner = ssrcInfoElement.getAttribute('owner');\n\n                        if (owner && owner.length) {\n                            if (isNaN(ssrc) || ssrc < 0) {\n                                logger.warn(\n                                    `Invalid SSRC ${ssrc} value received`\n                                        + ` for ${owner}`);\n                            } else {\n                                this.signalingLayer.setSSRCOwner(\n                                    ssrc,\n                                    Strophe.getResourceFromJid(owner));\n                            }\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * Makes the underlying TraceablePeerConnection generate new SSRC for\n     * the recvonly video stream.\n     * @deprecated\n     */\n    generateRecvonlySsrc() {\n        if (this.peerconnection) {\n            this.peerconnection.generateRecvonlySsrc();\n        } else {\n            logger.error(\n                'Unable to generate recvonly SSRC - no peerconnection');\n        }\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Accepts incoming Jingle 'session-initiate' and should send\n     * 'session-accept' in result.\n     * @param jingleOffer jQuery selector pointing to the jingle element of\n     * the offer IQ\n     * @param success callback called when we accept incoming session\n     * successfully and receive RESULT packet to 'session-accept' sent.\n     * @param failure function(error) called if for any reason we fail to accept\n     * the incoming offer. 'error' argument can be used to log some details\n     * about the error.\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\n     * the local tracks that will be added, before the offer/answer cycle\n     * executes. We allow the localTracks to optionally be passed in so that\n     * the addition of the local tracks and the processing of the initial offer\n     * can all be done atomically. We want to make sure that any other\n     * operations which originate in the XMPP Jingle messages related with\n     * this session to be executed with an assumption that the initial\n     * offer/answer cycle has been executed already.\n     */\n    acceptOffer(jingleOffer, success, failure, localTracks) {\n        this.setOfferAnswerCycle(\n            jingleOffer,\n            () => {\n                // FIXME we may not care about RESULT packet for session-accept\n                // then we should either call 'success' here immediately or\n                // modify sendSessionAccept method to do that\n                this.sendSessionAccept(success, failure);\n            },\n            failure,\n            localTracks);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Creates an offer and sends Jingle 'session-initiate' to the remote peer.\n     * @param {Array<JitsiLocalTrack>} localTracks the local tracks that will be\n     * added, before the offer/answer cycle executes (for the local track\n     * addition to be an atomic operation together with the offer/answer).\n     */\n    invite(localTracks) {\n        if (!this.isInitiator) {\n            throw new Error('Trying to invite from the responder session');\n        }\n        const workFunction = finishedCallback => {\n            for (const localTrack of localTracks) {\n                this.peerconnection.addTrack(localTrack);\n            }\n            this.peerconnection.createOffer(this.mediaConstraints)\n                .then(offerSdp => {\n                    this.peerconnection.setLocalDescription(offerSdp)\n                        .then(() => {\n                            // NOTE that the offer is obtained from\n                            // the localDescription getter as it needs to go\n                            // though the transformation chain.\n                            this.sendSessionInitiate(\n                                this.peerconnection.localDescription.sdp);\n                            finishedCallback();\n                        }, error => {\n                            logger.error(\n                                'Failed to set local SDP', error, offerSdp);\n                            finishedCallback(error);\n                        });\n                }, error => {\n                    logger.error(\n                        'Failed to create an offer',\n                        error,\n                        this.mediaConstraints);\n                    finishedCallback(error);\n                });\n        };\n\n        this.modificationQueue.push(\n            workFunction,\n            error => {\n                if (error) {\n                    logger.error('invite error', error);\n                } else {\n                    logger.debug('invite executed - OK');\n                }\n            });\n    }\n\n    /**\n     * Sends 'session-initiate' to the remote peer.\n     *\n     * NOTE this method is synchronous and we're not waiting for the RESULT\n     * response which would delay the startup process.\n     *\n     * @param {string} offerSdp  - The local session description which will be\n     * used to generate an offer.\n     * @private\n     */\n    sendSessionInitiate(offerSdp) {\n        let init = $iq({\n            to: this.remoteJid,\n            type: 'set'\n        }).c('jingle', {\n            xmlns: 'urn:xmpp:jingle:1',\n            action: 'session-initiate',\n            initiator: this.initiatorJid,\n            sid: this.sid\n        });\n\n        new SDP(offerSdp).toJingle(\n            init,\n            this.isInitiator ? 'initiator' : 'responder');\n        init = init.tree();\n        logger.info('Session-initiate: ', init);\n        this.connection.sendIQ(init,\n            () => {\n                logger.info('Got RESULT for \"session-initiate\"');\n            },\n            error => {\n                logger.error('\"session-initiate\" error', error);\n            },\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * Sets the answer received from the remote peer.\n     * @param jingleAnswer\n     */\n    setAnswer(jingleAnswer) {\n        if (!this.isInitiator) {\n            throw new Error('Trying to set an answer on the responder session');\n        }\n        this.setOfferAnswerCycle(\n            jingleAnswer,\n            () => {\n                logger.info('setAnswer - succeeded');\n            },\n            error => {\n                logger.error('setAnswer failed: ', error);\n            });\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * This is a setRemoteDescription/setLocalDescription cycle which starts at\n     * converting Strophe Jingle IQ into remote offer SDP. Once converted\n     * setRemoteDescription, createAnswer and setLocalDescription calls follow.\n     * @param jingleOfferAnswerIq jQuery selector pointing to the jingle element\n     *        of the offer (or answer) IQ\n     * @param success callback called when sRD/sLD cycle finishes successfully.\n     * @param failure callback called with an error object as an argument if we\n     *        fail at any point during setRD, createAnswer, setLD.\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\n     * the local tracks that will be added, before the offer/answer cycle\n     * executes (for the local track addition to be an atomic operation together\n     * with the offer/answer).\n     */\n    setOfferAnswerCycle(jingleOfferAnswerIq, success, failure, localTracks) {\n        const workFunction = finishedCallback => {\n\n            if (localTracks) {\n                for (const track of localTracks) {\n                    this.peerconnection.addTrack(track);\n                }\n            }\n\n            const newRemoteSdp\n                = this._processNewJingleOfferIq(jingleOfferAnswerIq);\n            const oldLocalSdp\n                = this.peerconnection.localDescription.sdp;\n\n            const bridgeSession\n                = $(jingleOfferAnswerIq)\n                    .find('>bridge-session['\n                        + 'xmlns=\"http://jitsi.org/protocol/focus\"]');\n            const bridgeSessionId = bridgeSession.attr('id');\n\n            if (bridgeSessionId !== this._bridgeSessionId) {\n                this._bridgeSessionId = bridgeSessionId;\n            }\n\n            this._renegotiate(newRemoteSdp.raw)\n                .then(() => {\n                    if (this.state === JingleSessionState.PENDING) {\n                        this.state = JingleSessionState.ACTIVE;\n\n                        // Sync up video transfer active/inactive only after\n                        // the initial O/A cycle. We want to adjust the video\n                        // media direction only in the local SDP and the Jingle\n                        // contents direction included in the initial\n                        // offer/answer is mapped to the remote SDP. Jingle\n                        // 'content-modify' IQ is processed in a way that it\n                        // will only modify local SDP when remote peer is no\n                        // longer interested in receiving video content.\n                        // Changing media direction in the remote SDP will mess\n                        // up our SDP translation chain (simulcast, video mute,\n                        // RTX etc.)\n                        if (this.isP2P && !this._localVideoActive) {\n                            this.sendContentModify(this._localVideoActive);\n                        }\n                    }\n\n                    // Old local SDP will be available when we're setting answer\n                    // for the first time, but not when offer and it's fine\n                    // since we're generating an answer now it will contain all\n                    // our SSRCs\n                    if (oldLocalSdp) {\n                        const newLocalSdp\n                            = new SDP(this.peerconnection.localDescription.sdp);\n\n                        this.notifyMySSRCUpdate(\n                            new SDP(oldLocalSdp), newLocalSdp);\n                    }\n\n                    finishedCallback();\n                }, error => {\n                    logger.error(\n                        `Error renegotiating after setting new remote ${\n                            this.isInitiator ? 'answer: ' : 'offer: '}${error}`,\n                        newRemoteSdp);\n\n                    finishedCallback(error);\n                });\n        };\n\n        this.modificationQueue.push(\n            workFunction,\n            error => {\n                error ? failure(error) : success();\n            });\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Although it states \"replace transport\" it does accept full Jingle offer\n     * which should contain new ICE transport details.\n     * @param jingleOfferElem an element Jingle IQ that contains new offer and\n     *        transport info.\n     * @param success callback called when we succeed to accept new offer.\n     * @param failure function(error) called when we fail to accept new offer.\n     */\n    replaceTransport(jingleOfferElem, success, failure) {\n        this.room.eventEmitter.emit(XMPPEvents.ICE_RESTARTING, this);\n\n        // We need to first reject the 'data' section to have the SCTP stack\n        // cleaned up to signal the known data channel is now invalid. After\n        // that the original offer is set to have the SCTP connection\n        // established with the new bridge.\n        const originalOffer = jingleOfferElem.clone();\n\n        jingleOfferElem\n            .find('>content[name=\\'data\\']')\n            .attr('senders', 'rejected');\n\n        // Remove all remote sources in order to reset the client's state\n        // for the remote MediaStreams. When a conference is moved to\n        // another bridge it will start streaming with a sequence number\n        // that is not in sync with the most recently seen by the client.\n        // The symptoms include frozen or black video and lots of \"failed to\n        // unprotect SRTP packets\" in Chrome logs.\n        jingleOfferElem\n            .find('>content>description>source')\n            .remove();\n        jingleOfferElem\n            .find('>content>description>ssrc-group')\n            .remove();\n\n        // On the JVB it's not a real ICE restart and all layers are re-initialized from scratch as Jicofo does\n        // the restart by re-allocating new channels. Chrome (or WebRTC stack) needs to have the DTLS transport layer\n        // reset to start a new handshake with fresh DTLS transport on the bridge. Make it think that the DTLS\n        // fingerprint has changed by setting an all zeros key.\n        const newFingerprint = jingleOfferElem.find('>content>transport>fingerprint');\n\n        newFingerprint.attr('hash', 'sha-1');\n        newFingerprint.text('00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00');\n\n        // First set an offer with a rejected 'data' section\n        this.setOfferAnswerCycle(\n            jingleOfferElem,\n            () => {\n                // Now set the original offer(with the 'data' section)\n                this.setOfferAnswerCycle(\n                    originalOffer,\n                    () => {\n                        const localSDP\n                            = new SDP(this.peerconnection.localDescription.sdp);\n\n                        this.sendTransportAccept(localSDP, success, failure);\n\n                        this.room.eventEmitter.emit(\n                            XMPPEvents.ICE_RESTART_SUCCESS,\n                            this,\n                            originalOffer);\n                    },\n                    failure);\n            },\n            failure\n        );\n    }\n\n    /**\n     * Sends Jingle 'session-accept' message.\n     * @param {function()} success callback called when we receive 'RESULT'\n     *        packet for the 'session-accept'\n     * @param {function(error)} failure called when we receive an error response\n     *        or when the request has timed out.\n     * @private\n     */\n    sendSessionAccept(success, failure) {\n        // NOTE: since we're just reading from it, we don't need to be within\n        //  the modification queue to access the local description\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\n        let accept = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\n                action: 'session-accept',\n                initiator: this.initiatorJid,\n                responder: this.responderJid,\n                sid: this.sid });\n\n        if (this.webrtcIceTcpDisable) {\n            localSDP.removeTcpCandidates = true;\n        }\n        if (this.webrtcIceUdpDisable) {\n            localSDP.removeUdpCandidates = true;\n        }\n        if (this.failICE) {\n            localSDP.failICE = true;\n        }\n        localSDP.toJingle(\n            accept,\n            this.initiatorJid === this.localJid ? 'initiator' : 'responder',\n            null);\n\n        // Calling tree() to print something useful\n        accept = accept.tree();\n        logger.info('Sending session-accept', accept);\n        this.connection.sendIQ(accept,\n            success,\n            this.newJingleErrorHandler(accept, error => {\n                failure(error);\n\n                // 'session-accept' is a critical timeout and we'll\n                // have to restart\n                this.room.eventEmitter.emit(\n                    XMPPEvents.SESSION_ACCEPT_TIMEOUT, this);\n            }),\n            IQ_TIMEOUT);\n\n        // XXX Videobridge needs WebRTC's answer (ICE ufrag and pwd, DTLS\n        // fingerprint and setup) ASAP in order to start the connection\n        // establishment.\n        //\n        // FIXME Flushing the connection at this point triggers an issue with\n        // BOSH request handling in Prosody on slow connections.\n        //\n        // The problem is that this request will be quite large and it may take\n        // time before it reaches Prosody. In the meantime Strophe may decide\n        // to send the next one. And it was observed that a small request with\n        // 'transport-info' usually follows this one. It does reach Prosody\n        // before the previous one was completely received. 'rid' on the server\n        // is increased and Prosody ignores the request with 'session-accept'.\n        // It will never reach Jicofo and everything in the request table is\n        // lost. Removing the flush does not guarantee it will never happen, but\n        // makes it much less likely('transport-info' is bundled with\n        // 'session-accept' and any immediate requests).\n        //\n        // this.connection.flush();\n    }\n\n    /**\n     * Will send 'content-modify' IQ in order to ask the remote peer to\n     * either stop or resume sending video media.\n     * @param {boolean} videoTransferActive <tt>false</tt> to let the other peer\n     * know that we're not sending nor interested in receiving video contents.\n     * When set to <tt>true</tt> remote peer will be asked to resume video\n     * transfer.\n     * @private\n     */\n    sendContentModify(videoTransferActive) {\n        const newSendersValue = videoTransferActive ? 'both' : 'none';\n\n        const sessionModify\n            = $iq({\n                to: this.remoteJid,\n                type: 'set'\n            })\n                .c('jingle', {\n                    xmlns: 'urn:xmpp:jingle:1',\n                    action: 'content-modify',\n                    initiator: this.initiatorJid,\n                    sid: this.sid\n                })\n                .c('content', {\n                    name: 'video',\n                    senders: newSendersValue\n                });\n\n        logger.info(\n            `Sending content-modify, video senders: ${newSendersValue}`);\n\n        this.connection.sendIQ(\n            sessionModify,\n            null,\n            this.newJingleErrorHandler(sessionModify),\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * Sends Jingle 'transport-accept' message which is a response to\n     * 'transport-replace'.\n     * @param localSDP the 'SDP' object with local session description\n     * @param success callback called when we receive 'RESULT' packet for\n     *        'transport-replace'\n     * @param failure function(error) called when we receive an error response\n     *        or when the request has timed out.\n     * @private\n     */\n    sendTransportAccept(localSDP, success, failure) {\n        let transportAccept = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'transport-accept',\n                initiator: this.initiatorJid,\n                sid: this.sid\n            });\n\n        localSDP.media.forEach((medialines, idx) => {\n            const mline = SDPUtil.parseMLine(medialines.split('\\r\\n')[0]);\n\n            transportAccept.c('content',\n                {\n                    creator:\n                        this.initiatorJid === this.localJid\n                            ? 'initiator'\n                            : 'responder',\n                    name: mline.media\n                }\n            );\n            localSDP.transportToJingle(idx, transportAccept);\n            transportAccept.up();\n        });\n\n        // Calling tree() to print something useful to the logger\n        transportAccept = transportAccept.tree();\n        logger.info('Sending transport-accept: ', transportAccept);\n\n        this.connection.sendIQ(transportAccept,\n            success,\n            this.newJingleErrorHandler(transportAccept, failure),\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * Sends Jingle 'transport-reject' message which is a response to\n     * 'transport-replace'.\n     * @param success callback called when we receive 'RESULT' packet for\n     *        'transport-replace'\n     * @param failure function(error) called when we receive an error response\n     *        or when the request has timed out.\n     *\n     * FIXME method should be marked as private, but there's some spaghetti that\n     *       needs to be fixed prior doing that\n     */\n    sendTransportReject(success, failure) {\n        // Send 'transport-reject', so that the focus will\n        // know that we've failed\n        let transportReject = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'transport-reject',\n                initiator: this.initiatorJid,\n                sid: this.sid\n            });\n\n        transportReject = transportReject.tree();\n        logger.info('Sending \\'transport-reject', transportReject);\n\n        this.connection.sendIQ(transportReject,\n            success,\n            this.newJingleErrorHandler(transportReject, failure),\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    terminate(success, failure, options) {\n        if (this.state === JingleSessionState.ENDED) {\n            return;\n        }\n\n        if (!options || Boolean(options.sendSessionTerminate)) {\n            let sessionTerminate\n                = $iq({\n                    to: this.remoteJid,\n                    type: 'set'\n                })\n                    .c('jingle', {\n                        xmlns: 'urn:xmpp:jingle:1',\n                        action: 'session-terminate',\n                        initiator: this.initiatorJid,\n                        sid: this.sid\n                    })\n                    .c('reason')\n                    .c((options && options.reason) || 'success');\n\n            if (options && options.reasonDescription) {\n                sessionTerminate.up()\n                    .c('text')\n                    .t(options.reasonDescription);\n            }\n\n            // Calling tree() to print something useful\n            sessionTerminate = sessionTerminate.tree();\n            logger.info('Sending session-terminate', sessionTerminate);\n            this.connection.sendIQ(\n                sessionTerminate,\n                success,\n                this.newJingleErrorHandler(sessionTerminate, failure),\n                IQ_TIMEOUT);\n        } else {\n            logger.info(`Skipped sending session-terminate for ${this}`);\n        }\n\n        // this should result in 'onTerminated' being called by strope.jingle.js\n        this.connection.jingle.terminate(this.sid);\n    }\n\n    /**\n     *\n     * @param reasonCondition\n     * @param reasonText\n     */\n    onTerminated(reasonCondition, reasonText) {\n        // Do something with reason and reasonCondition when we start to care\n        // this.reasonCondition = reasonCondition;\n        // this.reasonText = reasonText;\n        logger.info(`Session terminated ${this}`, reasonCondition, reasonText);\n\n        this.close();\n    }\n\n    /**\n     * Parse the information from the xml sourceAddElem and translate it\n     *  into sdp lines\n     * @param {jquery xml element} sourceAddElem the source-add\n     *  element from jingle\n     * @param {SDP object} currentRemoteSdp the current remote\n     *  sdp (as of this new source-add)\n     * @returns {list} a list of SDP line strings that should\n     *  be added to the remote SDP\n     */\n    _parseSsrcInfoFromSourceAdd(sourceAddElem, currentRemoteSdp) {\n        const addSsrcInfo = [];\n\n        $(sourceAddElem).each((i1, content) => {\n            const name = $(content).attr('name');\n            let lines = '';\n\n            $(content)\n                .find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\n                .each(function() {\n                    // eslint-disable-next-line no-invalid-this\n                    const semantics = this.getAttribute('semantics');\n                    const ssrcs\n                        = $(this) // eslint-disable-line no-invalid-this\n                            .find('>source')\n                            .map(function() {\n                                // eslint-disable-next-line no-invalid-this\n                                return this.getAttribute('ssrc');\n                            })\n                            .get();\n\n                    if (ssrcs.length) {\n                        lines\n                            += `a=ssrc-group:${semantics} ${\n                                ssrcs.join(' ')}\\r\\n`;\n                    }\n                });\n\n            // handles both >source and >description>source\n            const tmp\n                = $(content).find(\n                    'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n\n            /* eslint-disable no-invalid-this */\n            tmp.each(function() {\n                const ssrc = $(this).attr('ssrc');\n\n                if (currentRemoteSdp.containsSSRC(ssrc)) {\n                    logger.warn(\n                        `Source-add request for existing SSRC: ${ssrc}`);\n\n                    return;\n                }\n\n                // eslint-disable-next-line newline-per-chained-call\n                $(this).find('>parameter').each(function() {\n                    lines += `a=ssrc:${ssrc} ${$(this).attr('name')}`;\n                    if ($(this).attr('value') && $(this).attr('value').length) {\n                        lines += `:${$(this).attr('value')}`;\n                    }\n                    lines += '\\r\\n';\n                });\n            });\n\n            /* eslint-enable no-invalid-this */\n            currentRemoteSdp.media.forEach((media, i2) => {\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\n                    return;\n                }\n                if (!addSsrcInfo[i2]) {\n                    addSsrcInfo[i2] = '';\n                }\n                addSsrcInfo[i2] += lines;\n            });\n        });\n\n        return addSsrcInfo;\n    }\n\n    /**\n     * Handles a Jingle source-add message for this Jingle session.\n     * @param elem An array of Jingle \"content\" elements.\n     */\n    addRemoteStream(elem) {\n        this._addOrRemoveRemoteStream(true /* add */, elem);\n    }\n\n    /**\n     * Handles a Jingle source-remove message for this Jingle session.\n     * @param elem An array of Jingle \"content\" elements.\n     */\n    removeRemoteStream(elem) {\n        this._addOrRemoveRemoteStream(false /* remove */, elem);\n    }\n\n    /**\n     * Handles either Jingle 'source-add' or 'source-remove' message for this\n     * Jingle session.\n     * @param {boolean} isAdd <tt>true</tt> for 'source-add' or <tt>false</tt>\n     * otherwise.\n     * @param {Array<Element>} elem an array of Jingle \"content\" elements.\n     * @private\n     */\n    _addOrRemoveRemoteStream(isAdd, elem) {\n        const logPrefix = isAdd ? 'addRemoteStream' : 'removeRemoteStream';\n\n        if (isAdd) {\n            this.readSsrcInfo(elem);\n        }\n\n        const workFunction = finishedCallback => {\n            if (!this.peerconnection.localDescription\n                || !this.peerconnection.localDescription.sdp) {\n                const errMsg = `${logPrefix} - localDescription not ready yet`;\n\n                logger.error(errMsg);\n                finishedCallback(errMsg);\n\n                return;\n            }\n\n            logger.log(`Processing ${logPrefix}`);\n            logger.log(\n                'ICE connection state: ',\n                this.peerconnection.iceConnectionState);\n\n            const oldLocalSdp\n                = new SDP(this.peerconnection.localDescription.sdp);\n            const sdp = new SDP(this.peerconnection.remoteDescription.sdp);\n            const addOrRemoveSsrcInfo\n                = isAdd\n                    ? this._parseSsrcInfoFromSourceAdd(elem, sdp)\n                    : this._parseSsrcInfoFromSourceRemove(elem, sdp);\n            const newRemoteSdp\n                = isAdd\n                    ? this._processRemoteAddSource(addOrRemoveSsrcInfo)\n                    : this._processRemoteRemoveSource(addOrRemoveSsrcInfo);\n\n            this._renegotiate(newRemoteSdp.raw)\n                .then(() => {\n                    const newLocalSdp\n                        = new SDP(this.peerconnection.localDescription.sdp);\n\n                    logger.log(\n                        `${logPrefix} - OK, SDPs: `, oldLocalSdp, newLocalSdp);\n                    this.notifyMySSRCUpdate(oldLocalSdp, newLocalSdp);\n                    finishedCallback();\n                }, error => {\n                    logger.error(`${logPrefix} failed:`, error);\n                    finishedCallback(error);\n                });\n        };\n\n        // Queue and execute\n        this.modificationQueue.push(workFunction);\n    }\n\n    /**\n     * Takes in a jingle offer iq, returns the new sdp offer\n     * @param {jquery xml element} offerIq the incoming offer\n     * @returns {SDP object} the jingle offer translated to SDP\n     */\n    _processNewJingleOfferIq(offerIq) {\n        const remoteSdp = new SDP('');\n\n        if (this.webrtcIceTcpDisable) {\n            remoteSdp.removeTcpCandidates = true;\n        }\n        if (this.webrtcIceUdpDisable) {\n            remoteSdp.removeUdpCandidates = true;\n        }\n        if (this.failICE) {\n            remoteSdp.failICE = true;\n        }\n\n        remoteSdp.fromJingle(offerIq);\n        this.readSsrcInfo($(offerIq).find('>content'));\n\n        return remoteSdp;\n    }\n\n    /**\n     * Remove the given ssrc lines from the current remote sdp\n     * @param {list} removeSsrcInfo a list of SDP line strings that\n     *  should be removed from the remote SDP\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\n     *  in removeSsrcInfo\n     */\n    _processRemoteRemoveSource(removeSsrcInfo) {\n        const remoteSdp = new SDP(this.peerconnection.remoteDescription.sdp);\n\n        removeSsrcInfo.forEach((lines, idx) => {\n            // eslint-disable-next-line no-param-reassign\n            lines = lines.split('\\r\\n');\n            lines.pop(); // remove empty last element;\n            lines.forEach(line => {\n                remoteSdp.media[idx]\n                    = remoteSdp.media[idx].replace(`${line}\\r\\n`, '');\n            });\n        });\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\n\n        return remoteSdp;\n    }\n\n    /**\n     * Add the given ssrc lines to the current remote sdp\n     * @param {list} addSsrcInfo a list of SDP line strings that\n     *  should be added to the remote SDP\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\n     *  in removeSsrcInfo\n     */\n    _processRemoteAddSource(addSsrcInfo) {\n        const remoteSdp = new SDP(this.peerconnection.remoteDescription.sdp);\n\n        addSsrcInfo.forEach((lines, idx) => {\n            remoteSdp.media[idx] += lines;\n        });\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\n\n        return remoteSdp;\n    }\n\n    /**\n     * Do a new o/a flow using the existing remote description\n     * @param {string} [optionalRemoteSdp] optional, raw remote sdp\n     *  to use.  If not provided, the remote sdp from the\n     *  peerconnection will be used\n     * @returns {Promise} promise which resolves when the\n     *  o/a flow is complete with no arguments or\n     *  rejects with an error {string}\n     */\n    _renegotiate(optionalRemoteSdp) {\n        if (this.peerconnection.signalingState === 'closed') {\n            const error = new Error('Attempted to renegotiate in state closed');\n\n            this.room.eventEmitter.emit(XMPPEvents.RENEGOTIATION_FAILED, error, this);\n\n            return Promise.reject(error);\n        }\n\n        const remoteSdp\n            = optionalRemoteSdp || this.peerconnection.remoteDescription.sdp;\n\n        if (!remoteSdp) {\n            const error = new Error(`Can not renegotiate without remote description, current state: ${this.state}`);\n\n            this.room.eventEmitter.emit(XMPPEvents.RENEGOTIATION_FAILED, error, this);\n\n            return Promise.reject(error);\n        }\n\n        const remoteDescription = new RTCSessionDescription({\n            type: this.isInitiator ? 'answer' : 'offer',\n            sdp: remoteSdp\n        });\n\n        if (this.isInitiator) {\n            return this._initiatorRenegotiate(remoteDescription);\n        }\n\n        return this._responderRenegotiate(remoteDescription);\n    }\n\n    /**\n     * Renegotiate cycle implementation for the responder case.\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\n     * which will be used as remote description in the cycle.\n     * @private\n     */\n    _responderRenegotiate(remoteDescription) {\n        logger.debug('Renegotiate: setting remote description');\n\n        return this.peerconnection.setRemoteDescription(remoteDescription)\n            .then(() => {\n                logger.debug('Renegotiate: creating answer');\n\n                return this.peerconnection.createAnswer(this.mediaConstraints)\n                    .then(answer => {\n                        logger.debug('Renegotiate: setting local description');\n\n                        return this.peerconnection.setLocalDescription(answer);\n                    });\n            });\n    }\n\n    /**\n     * Renegotiate cycle implementation for the initiator's case.\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\n     * which will be used as remote description in the cycle.\n     * @private\n     */\n    _initiatorRenegotiate(remoteDescription) {\n        if (this.peerconnection.signalingState === 'have-local-offer') {\n            // Skip createOffer and setLocalDescription or FF will fail\n            logger.debug(\n                'Renegotiate: setting remote description');\n\n            /* eslint-disable arrow-body-style */\n\n            return this.peerconnection.setRemoteDescription(remoteDescription)\n                .then(() => {\n                    // In case when the answer is being set for the first time,\n                    // full sRD/sLD cycle is required to have the local\n                    // description updated and SSRCs synchronized correctly.\n                    // Otherwise SSRCs for streams added after invite, but\n                    // before the answer was accepted will not be detected.\n                    // The reason for that is that renegotiate can not be called\n                    // when adding tracks and they will not be reflected in\n                    // the local SDP.\n                    return this._initiatorRenegotiate(remoteDescription);\n                });\n            /* eslint-enable arrow-body-style */\n        }\n\n        logger.debug('Renegotiate: creating offer');\n\n        return this.peerconnection.createOffer(this.mediaConstraints)\n            .then(offer => {\n                logger.debug('Renegotiate: setting local description');\n\n                return this.peerconnection.setLocalDescription(offer)\n                    .then(() => {\n                        logger.debug(\n                            'Renegotiate: setting remote description');\n\n                        // eslint-disable-next-line max-len\n                        return this.peerconnection.setRemoteDescription(remoteDescription);\n                    });\n            });\n    }\n\n    /**\n     * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> and performs a single\n     * offer/answer cycle after both operations are done. Either\n     * <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\n     * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\n     * <tt>oldTrack</tt>\n     * @param {JitsiLocalTrack|null} oldTrack the current track in use to be\n     * replaced\n     * @param {JitsiLocalTrack|null} newTrack the new track to use\n     * @returns {Promise} which resolves once the replacement is complete\n     *  with no arguments or rejects with an error {string}\n     */\n    replaceTrack(oldTrack, newTrack) {\n        const workFunction = finishedCallback => {\n            const oldLocalSdp = this.peerconnection.localDescription.sdp;\n\n            // NOTE the code below assumes that no more than 1 video track\n            // can be added to the peer connection.\n            // Transition from no video to video (possibly screen sharing)\n            if (!oldTrack && newTrack && newTrack.isVideoTrack()) {\n                // Clearing current primary SSRC will make\n                // the SdpConsistency generate a new one which will result\n                // with:\n                // 1. source-remove for the recvonly\n                // 2. source-add for the new video stream\n                this.peerconnection.clearRecvonlySsrc();\n\n            // Transition from video to no video\n            } else if (oldTrack && oldTrack.isVideoTrack() && !newTrack) {\n                // Clearing current primary SSRC and generating the recvonly\n                // will result in:\n                // 1. source-remove for the old video stream\n                // 2. source-add for the recvonly stream\n                this.peerconnection.clearRecvonlySsrc();\n                this.peerconnection.generateRecvonlySsrc();\n            }\n\n            this.peerconnection.replaceTrack(oldTrack, newTrack)\n            .then(shouldRenegotiate => {\n                if (shouldRenegotiate\n                    && (oldTrack || newTrack)\n                    && this.state === JingleSessionState.ACTIVE) {\n                    this._renegotiate()\n                        .then(() => {\n                            const newLocalSDP\n                                = new SDP(\n                                    this.peerconnection.localDescription.sdp);\n\n                            this.notifyMySSRCUpdate(\n                                new SDP(oldLocalSdp), newLocalSDP);\n                            finishedCallback();\n                        },\n                        finishedCallback /* will be called with en error */);\n                } else {\n                    finishedCallback();\n                }\n            });\n        };\n\n        return new Promise((resolve, reject) => {\n            this.modificationQueue.push(\n                workFunction,\n                error => {\n                    if (error) {\n                        logger.error('Replace track error:', error);\n                        reject(error);\n                    } else {\n                        logger.info('Replace track done!');\n                        resolve();\n                    }\n                });\n        });\n    }\n\n    /**\n     * Parse the information from the xml sourceRemoveElem and translate it\n     *  into sdp lines\n     * @param {jquery xml element} sourceRemoveElem the source-remove\n     *  element from jingle\n     * @param {SDP object} currentRemoteSdp the current remote\n     *  sdp (as of this new source-remove)\n     * @returns {list} a list of SDP line strings that should\n     *  be removed from the remote SDP\n     */\n    _parseSsrcInfoFromSourceRemove(sourceRemoveElem, currentRemoteSdp) {\n        const removeSsrcInfo = [];\n\n        $(sourceRemoveElem).each((i1, content) => {\n            const name = $(content).attr('name');\n            let lines = '';\n\n            $(content)\n                .find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\n                .each(function() {\n                    /* eslint-disable no-invalid-this */\n                    const semantics = this.getAttribute('semantics');\n                    const ssrcs\n                        = $(this)\n                            .find('>source')\n                            .map(function() {\n                                return this.getAttribute('ssrc');\n                            })\n                            .get();\n\n                    if (ssrcs.length) {\n                        lines\n                            += `a=ssrc-group:${semantics} ${\n                                ssrcs.join(' ')}\\r\\n`;\n                    }\n\n                    /* eslint-enable no-invalid-this */\n                });\n            const ssrcs = [];\n\n            // handles both >source and >description>source versions\n            const tmp\n                = $(content).find(\n                    'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n\n            tmp.each(function() {\n                // eslint-disable-next-line no-invalid-this\n                const ssrc = $(this).attr('ssrc');\n\n                ssrcs.push(ssrc);\n            });\n            currentRemoteSdp.media.forEach((media, i2) => {\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\n                    return;\n                }\n                if (!removeSsrcInfo[i2]) {\n                    removeSsrcInfo[i2] = '';\n                }\n                ssrcs.forEach(ssrc => {\n                    const ssrcLines\n                        = SDPUtil.findLines(media, `a=ssrc:${ssrc}`);\n\n                    if (ssrcLines.length) {\n                        removeSsrcInfo[i2] += `${ssrcLines.join('\\r\\n')}\\r\\n`;\n                    }\n                });\n                removeSsrcInfo[i2] += lines;\n            });\n        });\n\n        return removeSsrcInfo;\n    }\n\n    /**\n     * Will print an error if there is any difference, between the SSRCs given\n     * in the <tt>oldSDP</tt> and the ones currently described in\n     * the peerconnection's local description.\n     * @param {string} operationName the operation's name which will be printed\n     * in the error message.\n     * @param {SDP} oldSDP the old local SDP which will be compared with\n     * the current one.\n     * @return {boolean} <tt>true</tt> if there was any change or <tt>false</tt>\n     * otherwise.\n     * @private\n     */\n    _verifyNoSSRCChanged(operationName, oldSDP) {\n        const currentLocalSDP\n            = new SDP(this.peerconnection.localDescription.sdp);\n        let sdpDiff = new SDPDiffer(oldSDP, currentLocalSDP);\n        const addedMedia = sdpDiff.getNewMedia();\n\n        if (Object.keys(addedMedia).length) {\n            logger.error(\n                `${this} - some SSRC were added on ${operationName}`,\n                addedMedia);\n\n            return false;\n        }\n\n        sdpDiff = new SDPDiffer(currentLocalSDP, oldSDP);\n        const removedMedia = sdpDiff.getNewMedia();\n\n        if (Object.keys(removedMedia).length) {\n            logger.error(\n                `${this} - some SSRCs were removed on ${operationName}`,\n                removedMedia);\n\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Adds local track back to this session, as part of the unmute operation.\n     * @param {JitsiLocalTrack} track\n     * @return {Promise} a promise that will resolve once the local track is\n     * added back to this session and renegotiation succeeds. Will be rejected\n     * with a <tt>string</tt> that provides some error details in case something\n     * goes wrong.\n     */\n    addTrackAsUnmute(track) {\n        return this._addRemoveTrackAsMuteUnmute(\n            false /* add as unmute */, track);\n    }\n\n    /**\n     * Remove local track as part of the mute operation.\n     * @param {JitsiLocalTrack} track the local track to be removed\n     * @return {Promise} a promise which will be resolved once the local track\n     * is removed from this session and the renegotiation is performed.\n     * The promise will be rejected with a <tt>string</tt> that the describes\n     * the error if anything goes wrong.\n     */\n    removeTrackAsMute(track) {\n        return this._addRemoveTrackAsMuteUnmute(\n            true /* remove as mute */, track);\n    }\n\n    /**\n     * See {@link addTrackAsUnmute} and {@link removeTrackAsMute}.\n     * @param {boolean} isMute <tt>true</tt> for \"remove as mute\" or\n     * <tt>false</tt> for \"add as unmute\".\n     * @param {JitsiLocalTrack} track the track that will be added/removed\n     * @private\n     */\n    _addRemoveTrackAsMuteUnmute(isMute, track) {\n        if (!track) {\n            return Promise.reject('invalid \"track\" argument value');\n        }\n        const operationName = isMute ? 'removeTrackMute' : 'addTrackUnmute';\n        const workFunction = finishedCallback => {\n            const tpc = this.peerconnection;\n\n            if (!tpc) {\n                finishedCallback(\n                    `Error:  tried ${operationName} track with no active peer`\n                        + 'connection');\n\n                return;\n            }\n            const oldLocalSDP = tpc.localDescription.sdp;\n            const tpcOperation\n                = isMute\n                    ? tpc.removeTrackMute.bind(tpc, track)\n                    : tpc.addTrackUnmute.bind(tpc, track);\n\n            if (!tpcOperation()) {\n                finishedCallback(`${operationName} failed!`);\n            } else if (!oldLocalSDP || !tpc.remoteDescription.sdp) {\n                finishedCallback();\n            } else {\n                this._renegotiate()\n                    .then(() => {\n                        // The results are ignored, as this check failure is not\n                        // enough to fail the whole operation. It will log\n                        // an error inside.\n                        this._verifyNoSSRCChanged(\n                            operationName, new SDP(oldLocalSDP));\n                        finishedCallback();\n                    },\n                    finishedCallback /* will be called with an error */);\n            }\n        };\n\n        return new Promise((resolve, reject) => {\n            this.modificationQueue.push(\n                workFunction,\n                error => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        resolve();\n                    }\n                });\n        });\n    }\n\n    /**\n     * Resumes or suspends media transfer over the underlying peer connection.\n     * @param {boolean} audioActive <tt>true</tt> to enable audio media\n     * transfer or <tt>false</tt> to suspend audio media transmission.\n     * @param {boolean} videoActive <tt>true</tt> to enable video media\n     * transfer or <tt>false</tt> to suspend video media transmission.\n     * @return {Promise} a <tt>Promise</tt> which will resolve once\n     * the operation is done. It will be rejected with an error description as\n     * a string in case anything goes wrong.\n     */\n    setMediaTransferActive(audioActive, videoActive) {\n        if (!this.peerconnection) {\n            return Promise.reject(\n                'Can not modify transfer active state,'\n                    + ' before \"initialize\" is called');\n        }\n\n        const logAudioStr = audioActive ? 'audio active' : 'audio inactive';\n        const logVideoStr = videoActive ? 'video active' : 'video inactive';\n\n        logger.info(`Queued make ${logVideoStr}, ${logAudioStr} task...`);\n\n        const workFunction = finishedCallback => {\n            const isSessionActive = this.state === JingleSessionState.ACTIVE;\n\n            // Because the value is modified on the queue it's impossible to\n            // check it's final value reliably prior to submitting the task.\n            // The rule here is that the last submitted state counts.\n            // Check the values here to avoid unnecessary renegotiation cycle.\n            const audioActiveChanged\n                = this.peerconnection.setAudioTransferActive(audioActive);\n\n            if (this._localVideoActive !== videoActive) {\n                this._localVideoActive = videoActive;\n\n                // Do only for P2P - Jicofo will reply with 'bad-request'\n                // We don't want to send 'content-modify', before the initial\n                // O/A (state === JingleSessionState.ACTIVE), because that will\n                // mess up video media direction in the remote SDP.\n                // 'content-modify' when processed only affects the media\n                // direction in the local SDP. We're doing that, because setting\n                // 'inactive' on video media in remote SDP will mess up our SDP\n                // translation chain (simulcast, RTX, video mute etc.).\n                if (this.isP2P && isSessionActive) {\n                    this.sendContentModify(videoActive);\n                }\n            }\n\n            const pcVideoActiveChanged\n                = this.peerconnection.setVideoTransferActive(\n                    this._localVideoActive && this._remoteVideoActive);\n\n            // Will do the sRD/sLD cycle to update SDPs and adjust the media\n            // direction\n            if (isSessionActive\n                    && (audioActiveChanged || pcVideoActiveChanged)) {\n                this._renegotiate()\n                    .then(\n                        finishedCallback,\n                        finishedCallback /* will be called with an error */);\n            } else {\n                finishedCallback();\n            }\n        };\n\n        return new Promise((resolve, reject) => {\n            this.modificationQueue.push(\n                workFunction,\n                error => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        resolve();\n                    }\n                });\n        });\n    }\n\n    /**\n     * Will put and execute on the queue a session modify task. Currently it\n     * only checks the senders attribute of the video content in order to figure\n     * out if the remote peer has video in the inactive state (stored locally\n     * in {@link _remoteVideoActive} - see field description for more info).\n     * @param {jQuery} jingleContents jQuery selector pointing to the jingle\n     * element of the session modify IQ.\n     * @see {@link _remoteVideoActive}\n     * @see {@link _localVideoActive}\n     */\n    modifyContents(jingleContents) {\n        const newVideoSenders\n            = JingleSessionPC.parseVideoSenders(jingleContents);\n\n        if (newVideoSenders === null) {\n            logger.error(\n                `${this} - failed to parse video \"senders\" attribute in`\n                    + '\"content-modify\" action');\n\n            return;\n        }\n\n        const workFunction = finishedCallback => {\n            if (this._assertNotEnded('content-modify')\n                    && this._modifyRemoteVideoActive(newVideoSenders)) {\n                // Will do the sRD/sLD cycle to update SDPs and adjust\n                // the media direction\n                this._renegotiate()\n                    .then(finishedCallback, finishedCallback /* (error) */);\n            } else {\n                finishedCallback();\n            }\n        };\n\n        logger.debug(\n            `${this} queued \"content-modify\" task`\n                + `(video senders=\"${newVideoSenders}\")`);\n\n        this.modificationQueue.push(\n            workFunction,\n            error => {\n                if (error) {\n                    logger.error('\"content-modify\" failed', error);\n                }\n            });\n    }\n\n    /**\n     * Processes new value of remote video \"senders\" Jingle attribute and tries\n     * to apply it for {@link _remoteVideoActive}.\n     * @param {string} remoteVideoSenders the value of \"senders\" attribute of\n     * Jingle video content element advertised by remote peer.\n     * @return {boolean} <tt>true</tt> if the change affected state of\n     * the underlying peerconnection and renegotiation is required for\n     * the changes to take effect.\n     * @private\n     */\n    _modifyRemoteVideoActive(remoteVideoSenders) {\n        const isRemoteVideoActive\n            = remoteVideoSenders === 'both'\n                || (remoteVideoSenders === 'initiator' && this.isInitiator)\n                || (remoteVideoSenders === 'responder' && !this.isInitiator);\n\n        if (isRemoteVideoActive !== this._remoteVideoActive) {\n            logger.debug(\n                `${this} new remote video active: ${isRemoteVideoActive}`);\n            this._remoteVideoActive = isRemoteVideoActive;\n        }\n\n        return this.peerconnection.setVideoTransferActive(\n            this._localVideoActive && this._remoteVideoActive);\n    }\n\n    /**\n     * Figures out added/removed ssrcs and send update IQs.\n     * @param oldSDP SDP object for old description.\n     * @param newSDP SDP object for new description.\n     */\n    notifyMySSRCUpdate(oldSDP, newSDP) {\n\n        if (this.state !== JingleSessionState.ACTIVE) {\n            logger.warn(`Skipping SSRC update in '${this.state} ' state.`);\n\n            return;\n        }\n\n        // send source-remove IQ.\n        let sdpDiffer = new SDPDiffer(newSDP, oldSDP);\n        const remove = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'source-remove',\n                initiator: this.initiatorJid,\n                sid: this.sid\n            }\n            );\n        const removedAnySSRCs = sdpDiffer.toJingle(remove);\n\n        if (removedAnySSRCs) {\n            logger.info('Sending source-remove', remove.tree());\n            this.connection.sendIQ(\n                remove, null,\n                this.newJingleErrorHandler(remove), IQ_TIMEOUT);\n        } else {\n            logger.log('removal not necessary');\n        }\n\n        // send source-add IQ.\n        sdpDiffer = new SDPDiffer(oldSDP, newSDP);\n        const add = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'source-add',\n                initiator: this.initiatorJid,\n                sid: this.sid\n            }\n            );\n\n        const containsNewSSRCs = sdpDiffer.toJingle(add);\n\n        if (containsNewSSRCs) {\n            logger.info('Sending source-add', add.tree());\n            this.connection.sendIQ(\n                add, null, this.newJingleErrorHandler(add), IQ_TIMEOUT);\n        } else {\n            logger.log('addition not necessary');\n        }\n    }\n\n    /**\n     * Method returns function(errorResponse) which is a callback to be passed\n     * to Strophe connection.sendIQ method. An 'error' structure is created that\n     * is passed as 1st argument to given <tt>failureCb</tt>. The format of this\n     * structure is as follows:\n     * {\n     *  code: {XMPP error response code}\n     *  reason: {the name of XMPP error reason element or 'timeout' if the\n      *          request has timed out within <tt>IQ_TIMEOUT</tt> milliseconds}\n     *  source: {request.tree() that provides original request}\n     *  session: {this JingleSessionPC.toString()}\n     * }\n     * @param request Strophe IQ instance which is the request to be dumped into\n     *        the error structure\n     * @param failureCb function(error) called when error response was returned\n     *        or when a timeout has occurred.\n     * @returns {function(this:JingleSessionPC)}\n     */\n    newJingleErrorHandler(request, failureCb) {\n        return errResponse => {\n\n            const error = {};\n\n            // Get XMPP error code and condition(reason)\n            const errorElSel = $(errResponse).find('error');\n\n            if (errorElSel.length) {\n                error.code = errorElSel.attr('code');\n                const errorReasonSel = $(errResponse).find('error :first');\n\n                if (errorReasonSel.length) {\n                    error.reason = errorReasonSel[0].tagName;\n                }\n\n                const errorMsgSel = errorElSel.find('>text');\n\n                if (errorMsgSel.length) {\n                    error.msg = errorMsgSel.text();\n                }\n            }\n\n            if (!errResponse) {\n                error.reason = 'timeout';\n            }\n\n            error.session = this.toString();\n\n            if (failureCb) {\n                failureCb(error);\n            } else if (this.state === JingleSessionState.ENDED\n                        && error.reason === 'item-not-found') {\n                // When remote peer decides to terminate the session, but it\n                // still have few messages on the queue for processing,\n                // it will first send us 'session-terminate' (we enter ENDED)\n                // and then follow with 'item-not-found' for the queued requests\n                // We don't want to have that logged on error level.\n                logger.debug(`Jingle error: ${JSON.stringify(error)}`);\n            } else {\n                GlobalOnErrorHandler.callErrorHandler(\n                    new Error(\n                        `Jingle error: ${JSON.stringify(error)}`));\n            }\n        };\n    }\n\n    /**\n     * Returns the ice connection state for the peer connection.\n     * @returns the ice connection state for the peer connection.\n     */\n    getIceConnectionState() {\n        return this.peerconnection.iceConnectionState;\n    }\n\n    /**\n     * Closes the peerconnection.\n     */\n    close() {\n        this.state = JingleSessionState.ENDED;\n        this.establishmentDuration = undefined;\n\n        if (this.peerconnection) {\n            this.peerconnection.onicecandidate = null;\n            this.peerconnection.oniceconnectionstatechange = null;\n            this.peerconnection.onnegotiationneeded = null;\n            this.peerconnection.onsignalingstatechange = null;\n        }\n\n        // Remove any pending tasks from the queue\n        this.modificationQueue.clear();\n\n        this.modificationQueue.push(finishCallback => {\n            // The signaling layer will remove it's listeners\n            this.signalingLayer.setChatRoom(null);\n\n            // do not try to close if already closed.\n            this.peerconnection && this.peerconnection.close();\n            finishCallback();\n        });\n\n        // No more tasks can go in after the close task\n        this.modificationQueue.shutdown();\n    }\n\n    /**\n     * Converts to string with minor summary.\n     * @return {string}\n     */\n    toString() {\n        return `JingleSessionPC[p2p=${this.isP2P},`\n                    + `initiator=${this.isInitiator},sid=${this.sid}]`;\n    }\n\n    /**\n     * If the A/B test for suspend video is disabled according to the room's\n     * configuration, returns undefined. Otherwise returns a boolean which\n     * indicates whether the suspend video option should be enabled or disabled.\n     * @param {JingleSessionPCOptions} options - The config options.\n     */\n    _abtestSuspendVideoEnabled({ abTesting }) {\n        if (!abTesting || !abTesting.enableSuspendVideoTest) {\n            return;\n        }\n\n        // We want the two participants in a P2P call to agree on the value of\n        // the \"suspend\" option. We use the JID of the initiator, because it is\n        // both randomly selected and agreed upon by both participants.\n        const jid = this._getInitiatorJid();\n\n        return integerHash(jid) % 2 === 0;\n    }\n}\n","/**\n * The pending Jingle session state which means the session as defined in\n * XEP-0166(before 'session-invite/session-accept' took place).\n *\n * @type {string}\n */\nexport const PENDING = 'pending';\n\n/**\n * The active Jingle session state as defined in XEP-0166\n * (after 'session-invite'/'session-accept').\n *\n * @type {string}\n */\nexport const ACTIVE = 'active';\n\n/**\n * The ended Jingle session state as defined in XEP-0166\n * (after 'session-terminate').\n * @type {string}\n */\nexport const ENDED = 'ended';\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { parseSecondarySSRC, SdpTransformWrap } from './SdpTransformUtil';\nimport SDPUtil from './SDPUtil';\n\nconst logger = getLogger(__filename);\n\n/**\n * Begin helper functions\n */\n/**\n * Updates or inserts the appropriate rtx information for primarySsrc with\n *  the given rtxSsrc.  If no rtx ssrc for primarySsrc currently exists, it will\n *  add the appropriate ssrc and ssrc group lines.  If primarySsrc already has\n *  an rtx ssrc, the appropriate ssrc and group lines will be updated\n * @param {MLineWrap} mLine\n * @param {object} primarySsrcInfo the info (ssrc, msid & cname) for the\n *  primary ssrc\n * @param {number} rtxSsrc the rtx ssrc to associate with the primary ssrc\n */\nfunction updateAssociatedRtxStream(mLine, primarySsrcInfo, rtxSsrc) {\n    logger.debug(\n        `Updating mline to associate ${rtxSsrc}`\n        + `rtx ssrc with primary stream, ${primarySsrcInfo.id}`);\n    const primarySsrc = primarySsrcInfo.id;\n    const primarySsrcMsid = primarySsrcInfo.msid;\n    const primarySsrcCname = primarySsrcInfo.cname;\n\n    const previousRtxSSRC = mLine.getRtxSSRC(primarySsrc);\n\n    if (previousRtxSSRC === rtxSsrc) {\n        logger.debug(`${rtxSsrc} was already associated with ${primarySsrc}`);\n\n        return;\n    }\n    if (previousRtxSSRC) {\n        logger.debug(\n            `${primarySsrc} was previously associated with rtx`\n            + `${previousRtxSSRC}, removing all references to it`);\n\n        // Stream already had an rtx ssrc that is different than the one given,\n        //  remove all trace of the old one\n        mLine.removeSSRC(previousRtxSSRC);\n\n        logger.debug(`groups before filtering for ${previousRtxSSRC}`);\n        logger.debug(mLine.dumpSSRCGroups());\n\n        mLine.removeGroupsWithSSRC(previousRtxSSRC);\n    }\n    mLine.addSSRCAttribute({\n        id: rtxSsrc,\n        attribute: 'cname',\n        value: primarySsrcCname\n    });\n    mLine.addSSRCAttribute({\n        id: rtxSsrc,\n        attribute: 'msid',\n        value: primarySsrcMsid\n    });\n    mLine.addSSRCGroup({\n        semantics: 'FID',\n        ssrcs: `${primarySsrc} ${rtxSsrc}`\n    });\n}\n\n/**\n * End helper functions\n */\n\n/**\n * Adds any missing RTX streams for video streams\n *  and makes sure that they remain consistent\n */\nexport default class RtxModifier {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /**\n         * Map of video ssrc to corresponding RTX\n         *  ssrc\n         */\n        this.correspondingRtxSsrcs = new Map();\n    }\n\n    /**\n     * Clear the cached map of primary video ssrcs to\n     *  their corresponding rtx ssrcs so that they will\n     *  not be used for the next call to modifyRtxSsrcs\n     */\n    clearSsrcCache() {\n        this.correspondingRtxSsrcs.clear();\n    }\n\n    /**\n     * Explicitly set the primary video ssrc -> rtx ssrc\n     *  mapping to be used in modifyRtxSsrcs\n     * @param {Map} ssrcMapping a mapping of primary video\n     *  ssrcs to their corresponding rtx ssrcs\n     */\n    setSsrcCache(ssrcMapping) {\n        logger.debug('Setting ssrc cache to ', ssrcMapping);\n        this.correspondingRtxSsrcs = ssrcMapping;\n    }\n\n    /**\n     * Adds RTX ssrcs for any video ssrcs that don't\n     *  already have them.  If the video ssrc has been\n     *  seen before, and already had an RTX ssrc generated,\n     *  the same RTX ssrc will be used again.\n     * @param {string} sdpStr sdp in raw string format\n     */\n    modifyRtxSsrcs(sdpStr) {\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\n        const videoMLine = sdpTransformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\n\n            return sdpStr;\n        }\n\n        return this.modifyRtxSsrcs2(videoMLine)\n            ? sdpTransformer.toRawSDP() : sdpStr;\n    }\n\n    /**\n     * Does the same thing as {@link modifyRtxSsrcs}, but takes the\n     *  {@link MLineWrap} instance wrapping video media as an argument.\n     * @param {MLineWrap} videoMLine\n     * @return {boolean} <tt>true</tt> if the SDP wrapped by\n     *  {@link SdpTransformWrap} has been modified or <tt>false</tt> otherwise.\n     */\n    modifyRtxSsrcs2(videoMLine) {\n        if (videoMLine.direction === 'recvonly') {\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\n\n            return false;\n        }\n        if (videoMLine.getSSRCCount() < 1) {\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\n\n            return false;\n        }\n        logger.debug('Current ssrc mapping: ', this.correspondingRtxSsrcs);\n        const primaryVideoSsrcs = videoMLine.getPrimaryVideoSSRCs();\n\n        logger.debug('Parsed primary video ssrcs ', primaryVideoSsrcs,\n            ' making sure all have rtx streams');\n        for (const ssrc of primaryVideoSsrcs) {\n            const msid = videoMLine.getSSRCAttrValue(ssrc, 'msid');\n            const cname = videoMLine.getSSRCAttrValue(ssrc, 'cname');\n            let correspondingRtxSsrc = this.correspondingRtxSsrcs.get(ssrc);\n\n            if (correspondingRtxSsrc) {\n                logger.debug(\n                    'Already have an associated rtx ssrc for'\n                    + `video ssrc ${ssrc}: ${correspondingRtxSsrc}`);\n            } else {\n                logger.debug(\n                    `No previously associated rtx ssrc for video ssrc ${ssrc}`);\n\n                // If there's one in the sdp already for it, we'll just set\n                //  that as the corresponding one\n                const previousAssociatedRtxStream = videoMLine.getRtxSSRC(ssrc);\n\n                if (previousAssociatedRtxStream) {\n                    logger.debug(\n                        `Rtx stream ${previousAssociatedRtxStream} `\n                        + 'already existed in the sdp as an rtx stream for '\n                        + `${ssrc}`);\n                    correspondingRtxSsrc = previousAssociatedRtxStream;\n                } else {\n                    correspondingRtxSsrc = SDPUtil.generateSsrc();\n                    logger.debug(`Generated rtx ssrc ${correspondingRtxSsrc} `\n                                 + `for ssrc ${ssrc}`);\n                }\n                logger.debug(`Caching rtx ssrc ${correspondingRtxSsrc} `\n                             + `for video ssrc ${ssrc}`);\n                this.correspondingRtxSsrcs.set(ssrc, correspondingRtxSsrc);\n            }\n            updateAssociatedRtxStream(\n                videoMLine,\n                {\n                    id: ssrc,\n                    cname,\n                    msid\n                },\n                correspondingRtxSsrc);\n        }\n\n        // FIXME we're not looking into much details whether the SDP has been\n        // modified or not once the precondition requirements are met.\n        return true;\n    }\n\n    /**\n     * Strip all rtx streams from the given sdp\n     * @param {string} sdpStr sdp in raw string format\n     * @returns {string} sdp string with all rtx streams stripped\n     */\n    stripRtx(sdpStr) {\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\n        const videoMLine = sdpTransformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\n\n            return sdpStr;\n        }\n        if (videoMLine.direction === 'recvonly') {\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\n\n            return sdpStr;\n        }\n        if (videoMLine.getSSRCCount() < 1) {\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\n\n            return sdpStr;\n        }\n        if (!videoMLine.containsAnySSRCGroups()) {\n            logger.debug('RtxModifier doing nothing, '\n              + 'no video ssrcGroups present');\n\n            return sdpStr;\n        }\n        const fidGroups = videoMLine.findGroups('FID');\n\n        // Remove the fid groups from the mline\n\n        videoMLine.removeGroupsBySemantics('FID');\n\n        // Get the rtx ssrcs and remove them from the mline\n        for (const fidGroup of fidGroups) {\n            const rtxSsrc = parseSecondarySSRC(fidGroup);\n\n            videoMLine.removeSSRC(rtxSsrc);\n        }\n\n        return sdpTransformer.toRawSDP();\n    }\n}\n","/* global $ */\n\nimport SDPUtil from './SDPUtil';\n\n/**\n *\n * @param sdp\n */\nexport default function SDP(sdp) {\n    const media = sdp.split('\\r\\nm=');\n\n    for (let i = 1, length = media.length; i < length; i++) {\n        let mediaI = `m=${media[i]}`;\n\n        if (i !== length - 1) {\n            mediaI += '\\r\\n';\n        }\n        media[i] = mediaI;\n    }\n    const session = `${media.shift()}\\r\\n`;\n\n    this.media = media;\n    this.raw = session + media.join('');\n    this.session = session;\n}\n\n/**\n * A flag will make {@link transportToJingle} and {@link jingle2media} replace\n * ICE candidates IPs with invalid value of '1.1.1.1' which will cause ICE\n * failure. The flag is used in the automated testing.\n * @type {boolean}\n */\nSDP.prototype.failICE = false;\n\n/**\n * Whether or not to remove TCP ice candidates when translating from/to jingle.\n * @type {boolean}\n */\nSDP.prototype.removeTcpCandidates = false;\n\n/**\n * Whether or not to remove UDP ice candidates when translating from/to jingle.\n * @type {boolean}\n */\nSDP.prototype.removeUdpCandidates = false;\n\n/**\n * Returns map of MediaChannel mapped per channel idx.\n */\nSDP.prototype.getMediaSsrcMap = function() {\n    const self = this;\n    const mediaSSRCs = {};\n    let tmp;\n\n    for (let mediaindex = 0; mediaindex < self.media.length; mediaindex++) {\n        tmp = SDPUtil.findLines(self.media[mediaindex], 'a=ssrc:');\n        const mid\n            = SDPUtil.parseMID(\n                SDPUtil.findLine(self.media[mediaindex], 'a=mid:'));\n        const media = {\n            mediaindex,\n            mid,\n            ssrcs: {},\n            ssrcGroups: []\n        };\n\n        mediaSSRCs[mediaindex] = media;\n        tmp.forEach(line => {\n            const linessrc = line.substring(7).split(' ')[0];\n\n            // allocate new ChannelSsrc\n\n            if (!media.ssrcs[linessrc]) {\n                media.ssrcs[linessrc] = {\n                    ssrc: linessrc,\n                    lines: []\n                };\n            }\n            media.ssrcs[linessrc].lines.push(line);\n        });\n        tmp = SDPUtil.findLines(self.media[mediaindex], 'a=ssrc-group:');\n        tmp.forEach(line => {\n            const idx = line.indexOf(' ');\n            const semantics = line.substr(0, idx).substr(13);\n            const ssrcs = line.substr(14 + semantics.length).split(' ');\n\n            if (ssrcs.length) {\n                media.ssrcGroups.push({\n                    semantics,\n                    ssrcs\n                });\n            }\n        });\n    }\n\n    return mediaSSRCs;\n};\n\n/**\n * Returns <tt>true</tt> if this SDP contains given SSRC.\n * @param ssrc the ssrc to check.\n * @returns {boolean} <tt>true</tt> if this SDP contains given SSRC.\n */\nSDP.prototype.containsSSRC = function(ssrc) {\n    // FIXME this code is really strange - improve it if you can\n    const medias = this.getMediaSsrcMap();\n    let result = false;\n\n    Object.keys(medias).forEach(mediaindex => {\n        if (result) {\n            return;\n        }\n        if (medias[mediaindex].ssrcs[ssrc]) {\n            result = true;\n        }\n    });\n\n    return result;\n};\n\n// remove iSAC and CN from SDP\nSDP.prototype.mangle = function() {\n    let i, j, lines, mline, newdesc, rtpmap;\n\n    for (i = 0; i < this.media.length; i++) {\n        lines = this.media[i].split('\\r\\n');\n        lines.pop(); // remove empty last element\n        mline = SDPUtil.parseMLine(lines.shift());\n        if (mline.media !== 'audio') {\n            continue; // eslint-disable-line no-continue\n        }\n        newdesc = '';\n        mline.fmt.length = 0;\n        for (j = 0; j < lines.length; j++) {\n            if (lines[j].substr(0, 9) === 'a=rtpmap:') {\n                rtpmap = SDPUtil.parseRTPMap(lines[j]);\n                if (rtpmap.name === 'CN' || rtpmap.name === 'ISAC') {\n                    continue; // eslint-disable-line no-continue\n                }\n                mline.fmt.push(rtpmap.id);\n            }\n            newdesc += `${lines[j]}\\r\\n`;\n        }\n        this.media[i] = `${SDPUtil.buildMLine(mline)}\\r\\n${newdesc}`;\n    }\n    this.raw = this.session + this.media.join('');\n};\n\n// remove lines matching prefix from session section\nSDP.prototype.removeSessionLines = function(prefix) {\n    const self = this;\n    const lines = SDPUtil.findLines(this.session, prefix);\n\n    lines.forEach(line => {\n        self.session = self.session.replace(`${line}\\r\\n`, '');\n    });\n    this.raw = this.session + this.media.join('');\n\n    return lines;\n};\n\n// remove lines matching prefix from a media section specified by mediaindex\n// TODO: non-numeric mediaindex could match mid\nSDP.prototype.removeMediaLines = function(mediaindex, prefix) {\n    const self = this;\n    const lines = SDPUtil.findLines(this.media[mediaindex], prefix);\n\n    lines.forEach(line => {\n        self.media[mediaindex]\n            = self.media[mediaindex].replace(`${line}\\r\\n`, '');\n    });\n    this.raw = this.session + this.media.join('');\n\n    return lines;\n};\n\n// add content's to a jingle element\nSDP.prototype.toJingle = function(elem, thecreator) {\n    let i, j, k, lines, mline, rtpmap, ssrc, tmp;\n\n    // new bundle plan\n\n    lines = SDPUtil.findLines(this.session, 'a=group:');\n    if (lines.length) {\n        for (i = 0; i < lines.length; i++) {\n            tmp = lines[i].split(' ');\n            const semantics = tmp.shift().substr(8);\n\n            elem.c('group', { xmlns: 'urn:xmpp:jingle:apps:grouping:0',\n                semantics });\n            for (j = 0; j < tmp.length; j++) {\n                elem.c('content', { name: tmp[j] }).up();\n            }\n            elem.up();\n        }\n    }\n    for (i = 0; i < this.media.length; i++) {\n        mline = SDPUtil.parseMLine(this.media[i].split('\\r\\n')[0]);\n        if (!(mline.media === 'audio'\n              || mline.media === 'video'\n              || mline.media === 'application')) {\n            continue; // eslint-disable-line no-continue\n        }\n        const assrcline = SDPUtil.findLine(this.media[i], 'a=ssrc:');\n\n        if (assrcline) {\n            ssrc = assrcline.substring(7).split(' ')[0]; // take the first\n        } else {\n            ssrc = false;\n        }\n\n        elem.c('content', { creator: thecreator,\n            name: mline.media });\n        const amidline = SDPUtil.findLine(this.media[i], 'a=mid:');\n\n        if (amidline) {\n            // prefer identifier from a=mid if present\n            const mid = SDPUtil.parseMID(amidline);\n\n            elem.attrs({ name: mid });\n        }\n\n        if (SDPUtil.findLine(this.media[i], 'a=rtpmap:').length) {\n            elem.c('description',\n                { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\n                    media: mline.media });\n            if (ssrc) {\n                elem.attrs({ ssrc });\n            }\n            for (j = 0; j < mline.fmt.length; j++) {\n                rtpmap\n                    = SDPUtil.findLine(\n                        this.media[i],\n                        `a=rtpmap:${mline.fmt[j]}`);\n                elem.c('payload-type', SDPUtil.parseRTPMap(rtpmap));\n\n                // put any 'a=fmtp:' + mline.fmt[j] lines into <param name=foo\n                // value=bar/>\n                const afmtpline\n                    = SDPUtil.findLine(\n                        this.media[i],\n                        `a=fmtp:${mline.fmt[j]}`);\n\n                if (afmtpline) {\n                    tmp = SDPUtil.parseFmtp(afmtpline);\n\n                    // eslint-disable-next-line max-depth\n                    for (k = 0; k < tmp.length; k++) {\n                        elem.c('parameter', tmp[k]).up();\n                    }\n                }\n\n                // XEP-0293 -- map a=rtcp-fb\n                this.rtcpFbToJingle(i, elem, mline.fmt[j]);\n\n                elem.up();\n            }\n            const crypto\n                = SDPUtil.findLines(this.media[i], 'a=crypto:', this.session);\n\n            if (crypto.length) {\n                elem.c('encryption', { required: 1 });\n                crypto.forEach(\n                    line => elem.c('crypto', SDPUtil.parseCrypto(line)).up());\n                elem.up(); // end of encryption\n            }\n\n            if (ssrc) {\n                const ssrcMap = SDPUtil.parseSSRC(this.media[i]);\n\n                for (const [ availableSsrc, ssrcParameters ] of ssrcMap) {\n                    elem.c('source', {\n                        ssrc: availableSsrc,\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                    });\n\n                    ssrcParameters.forEach(ssrcSdpLine => {\n                        // get everything after first space\n                        const idx = ssrcSdpLine.indexOf(' ');\n                        const kv = ssrcSdpLine.substr(idx + 1);\n\n                        elem.c('parameter');\n                        if (kv.indexOf(':') === -1) {\n                            elem.attrs({ name: kv });\n                        } else {\n                            const name = kv.split(':', 2)[0];\n\n                            elem.attrs({ name });\n\n                            let v = kv.split(':', 2)[1];\n\n                            v = SDPUtil.filterSpecialChars(v);\n                            elem.attrs({ value: v });\n                        }\n                        elem.up();\n                    });\n\n                    elem.up();\n                }\n\n                // XEP-0339 handle ssrc-group attributes\n                const ssrcGroupLines\n                    = SDPUtil.findLines(this.media[i], 'a=ssrc-group:');\n\n                ssrcGroupLines.forEach(line => {\n                    const idx = line.indexOf(' ');\n                    const semantics = line.substr(0, idx).substr(13);\n                    const ssrcs = line.substr(14 + semantics.length).split(' ');\n\n                    if (ssrcs.length) {\n                        elem.c('ssrc-group', { semantics,\n                            xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\n                        ssrcs.forEach(s => elem.c('source', { ssrc: s }).up());\n                        elem.up();\n                    }\n                });\n            }\n\n            const ridLines = SDPUtil.findLines(this.media[i], 'a=rid');\n\n            if (ridLines.length) {\n                // Map a line which looks like \"a=rid:2 send\" to just\n                // the rid (\"2\")\n                const rids = ridLines\n                    .map(ridLine => ridLine.split(':')[1])\n                    .map(ridInfo => ridInfo.split(' ')[0]);\n\n                rids.forEach(rid => {\n                    elem.c('source', {\n                        rid,\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                    });\n                    elem.up();\n                });\n                const unifiedSimulcast\n                    = SDPUtil.findLine(this.media[i], 'a=simulcast');\n\n                if (unifiedSimulcast) {\n                    elem.c('rid-group', {\n                        semantics: 'SIM',\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                    });\n                    rids.forEach(rid => {\n                        elem.c('source', { rid }).up();\n                    });\n                    elem.up();\n                }\n            }\n\n            if (SDPUtil.findLine(this.media[i], 'a=rtcp-mux')) {\n                elem.c('rtcp-mux').up();\n            }\n\n            // XEP-0293 -- map a=rtcp-fb:*\n            this.rtcpFbToJingle(i, elem, '*');\n\n            // XEP-0294\n            lines = SDPUtil.findLines(this.media[i], 'a=extmap:');\n            if (lines.length) {\n                for (j = 0; j < lines.length; j++) {\n                    tmp = SDPUtil.parseExtmap(lines[j]);\n                    elem.c('rtp-hdrext', {\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:rtp-hdrext:0',\n                        uri: tmp.uri,\n                        id: tmp.value\n                    });\n\n                    // eslint-disable-next-line max-depth\n                    if (tmp.hasOwnProperty('direction')) {\n\n                        // eslint-disable-next-line max-depth\n                        switch (tmp.direction) {\n                        case 'sendonly':\n                            elem.attrs({ senders: 'responder' });\n                            break;\n                        case 'recvonly':\n                            elem.attrs({ senders: 'initiator' });\n                            break;\n                        case 'sendrecv':\n                            elem.attrs({ senders: 'both' });\n                            break;\n                        case 'inactive':\n                            elem.attrs({ senders: 'none' });\n                            break;\n                        }\n                    }\n\n                    // TODO: handle params\n                    elem.up();\n                }\n            }\n            elem.up(); // end of description\n        }\n\n        // map ice-ufrag/pwd, dtls fingerprint, candidates\n        this.transportToJingle(i, elem);\n\n        const m = this.media[i];\n\n        if (SDPUtil.findLine(m, 'a=sendrecv', this.session)) {\n            elem.attrs({ senders: 'both' });\n        } else if (SDPUtil.findLine(m, 'a=sendonly', this.session)) {\n            elem.attrs({ senders: 'initiator' });\n        } else if (SDPUtil.findLine(m, 'a=recvonly', this.session)) {\n            elem.attrs({ senders: 'responder' });\n        } else if (SDPUtil.findLine(m, 'a=inactive', this.session)) {\n            elem.attrs({ senders: 'none' });\n        }\n        if (mline.port === '0') {\n            // estos hack to reject an m-line\n            elem.attrs({ senders: 'rejected' });\n        }\n        elem.up(); // end of content\n    }\n    elem.up();\n\n    return elem;\n};\n\nSDP.prototype.transportToJingle = function(mediaindex, elem) {\n    let tmp;\n    const self = this;\n\n    elem.c('transport');\n\n    // XEP-0343 DTLS/SCTP\n    const sctpmap\n        = SDPUtil.findLine(this.media[mediaindex], 'a=sctpmap:', self.session);\n\n    if (sctpmap) {\n        const sctpAttrs = SDPUtil.parseSCTPMap(sctpmap);\n\n        elem.c('sctpmap', {\n            xmlns: 'urn:xmpp:jingle:transports:dtls-sctp:1',\n            number: sctpAttrs[0], /* SCTP port */\n            protocol: sctpAttrs[1] /* protocol */\n        });\n\n        // Optional stream count attribute\n        if (sctpAttrs.length > 2) {\n            elem.attrs({ streams: sctpAttrs[2] });\n        }\n        elem.up();\n    }\n\n    // XEP-0320\n    const fingerprints\n        = SDPUtil.findLines(\n            this.media[mediaindex],\n            'a=fingerprint:',\n            this.session);\n\n    fingerprints.forEach(line => {\n        tmp = SDPUtil.parseFingerprint(line);\n        tmp.xmlns = 'urn:xmpp:jingle:apps:dtls:0';\n        elem.c('fingerprint').t(tmp.fingerprint);\n        delete tmp.fingerprint;\n\n        // eslint-disable-next-line no-param-reassign\n        line\n            = SDPUtil.findLine(\n                self.media[mediaindex],\n                'a=setup:',\n                self.session);\n        if (line) {\n            tmp.setup = line.substr(8);\n        }\n        elem.attrs(tmp);\n        elem.up(); // end of fingerprint\n    });\n    tmp = SDPUtil.iceparams(this.media[mediaindex], this.session);\n    if (tmp) {\n        tmp.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\n        elem.attrs(tmp);\n\n        // XEP-0176\n        const lines\n            = SDPUtil.findLines(\n                this.media[mediaindex],\n                'a=candidate:',\n                this.session);\n\n        if (lines.length) { // add any a=candidate lines\n            lines.forEach(line => {\n                const candidate = SDPUtil.candidateToJingle(line);\n\n                if (self.failICE) {\n                    candidate.ip = '1.1.1.1';\n                }\n                const protocol\n                    = candidate && typeof candidate.protocol === 'string'\n                        ? candidate.protocol.toLowerCase()\n                        : '';\n\n                if ((self.removeTcpCandidates\n                        && (protocol === 'tcp' || protocol === 'ssltcp'))\n                    || (self.removeUdpCandidates && protocol === 'udp')) {\n                    return;\n                }\n                elem.c('candidate', candidate).up();\n            });\n        }\n    }\n    elem.up(); // end of transport\n};\n\n// XEP-0293\nSDP.prototype.rtcpFbToJingle = function(mediaindex, elem, payloadtype) {\n    const lines\n        = SDPUtil.findLines(\n            this.media[mediaindex],\n            `a=rtcp-fb:${payloadtype}`);\n\n    lines.forEach(line => {\n        const tmp = SDPUtil.parseRTCPFB(line);\n\n        if (tmp.type === 'trr-int') {\n            elem.c('rtcp-fb-trr-int', {\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\n                value: tmp.params[0]\n            });\n            elem.up();\n        } else {\n            elem.c('rtcp-fb', {\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\n                type: tmp.type\n            });\n            if (tmp.params.length > 0) {\n                elem.attrs({ 'subtype': tmp.params[0] });\n            }\n            elem.up();\n        }\n    });\n};\n\nSDP.prototype.rtcpFbFromJingle = function(elem, payloadtype) { // XEP-0293\n    let media = '';\n    let tmp\n        = elem.find(\n            '>rtcp-fb-trr-int[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]');\n\n    if (tmp.length) {\n        media += 'a=rtcp-fb:* trr-int ';\n        if (tmp.attr('value')) {\n            media += tmp.attr('value');\n        } else {\n            media += '0';\n        }\n        media += '\\r\\n';\n    }\n    tmp = elem.find('>rtcp-fb[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]');\n    tmp.each(function() {\n        /* eslint-disable no-invalid-this */\n        media += `a=rtcp-fb:${payloadtype} ${$(this).attr('type')}`;\n        if ($(this).attr('subtype')) {\n            media += ` ${$(this).attr('subtype')}`;\n        }\n        media += '\\r\\n';\n\n        /* eslint-enable no-invalid-this */\n    });\n\n    return media;\n};\n\n// construct an SDP from a jingle stanza\nSDP.prototype.fromJingle = function(jingle) {\n    const self = this;\n\n    this.raw = 'v=0\\r\\n'\n        + 'o=- 1923518516 2 IN IP4 0.0.0.0\\r\\n'// FIXME\n        + 's=-\\r\\n'\n        + 't=0 0\\r\\n';\n\n    // http://tools.ietf.org/html/draft-ietf-mmusic-sdp-bundle-negotiation-04\n    // #section-8\n    const groups\n        = $(jingle).find('>group[xmlns=\"urn:xmpp:jingle:apps:grouping:0\"]');\n\n    if (groups.length) {\n        groups.each((idx, group) => {\n            const contents\n                = $(group)\n                    .find('>content')\n                    .map((_, content) => content.getAttribute('name'))\n                    .get();\n\n            if (contents.length > 0) {\n                self.raw\n                    += `a=group:${\n                        group.getAttribute('semantics')\n                            || group.getAttribute('type')} ${\n                        contents.join(' ')}\\r\\n`;\n            }\n        });\n    }\n\n    this.session = this.raw;\n    jingle.find('>content').each(function() {\n        // eslint-disable-next-line no-invalid-this\n        const m = self.jingle2media($(this));\n\n        self.media.push(m);\n    });\n\n    // reconstruct msid-semantic -- apparently not necessary\n    /*\n     var msid = SDPUtil.parseSSRC(this.raw);\n     if (msid.hasOwnProperty('mslabel')) {\n     this.session += \"a=msid-semantic: WMS \" + msid.mslabel + \"\\r\\n\";\n     }\n     */\n\n    this.raw = this.session + this.media.join('');\n};\n\n// translate a jingle content element into an an SDP media part\nSDP.prototype.jingle2media = function(content) {\n    const desc = content.find('description');\n    let media = '';\n    const self = this;\n    const sctp = content.find(\n        '>transport>sctpmap[xmlns=\"urn:xmpp:jingle:transports:dtls-sctp:1\"]');\n\n    let tmp = { media: desc.attr('media') };\n\n    tmp.port = '1';\n    if (content.attr('senders') === 'rejected') {\n        // estos hack to reject an m-line.\n        tmp.port = '0';\n    }\n    if (content.find('>transport>fingerprint').length\n            || desc.find('encryption').length) {\n        tmp.proto = sctp.length ? 'DTLS/SCTP' : 'RTP/SAVPF';\n    } else {\n        tmp.proto = 'RTP/AVPF';\n    }\n    if (sctp.length) {\n        media += `m=application ${tmp.port} DTLS/SCTP ${\n            sctp.attr('number')}\\r\\n`;\n        media += `a=sctpmap:${sctp.attr('number')} ${sctp.attr('protocol')}`;\n\n        const streamCount = sctp.attr('streams');\n\n        if (streamCount) {\n            media += ` ${streamCount}\\r\\n`;\n        } else {\n            media += '\\r\\n';\n        }\n    } else {\n        tmp.fmt\n            = desc\n                .find('payload-type')\n                .map(function() {\n                    // eslint-disable-next-line no-invalid-this\n                    return this.getAttribute('id');\n                })\n                .get();\n        media += `${SDPUtil.buildMLine(tmp)}\\r\\n`;\n    }\n\n    media += 'c=IN IP4 0.0.0.0\\r\\n';\n    if (!sctp.length) {\n        media += 'a=rtcp:1 IN IP4 0.0.0.0\\r\\n';\n    }\n    tmp\n        = content.find(\n            '>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]');\n    if (tmp.length) {\n        if (tmp.attr('ufrag')) {\n            media += `${SDPUtil.buildICEUfrag(tmp.attr('ufrag'))}\\r\\n`;\n        }\n        if (tmp.attr('pwd')) {\n            media += `${SDPUtil.buildICEPwd(tmp.attr('pwd'))}\\r\\n`;\n        }\n        tmp.find('>fingerprint').each(function() {\n            /* eslint-disable no-invalid-this */\n            // FIXME: check namespace at some point\n            media += `a=fingerprint:${this.getAttribute('hash')}`;\n            media += ` ${$(this).text()}`;\n            media += '\\r\\n';\n            if (this.getAttribute('setup')) {\n                media += `a=setup:${this.getAttribute('setup')}\\r\\n`;\n            }\n\n            /* eslint-enable no-invalid-this */\n        });\n    }\n    switch (content.attr('senders')) {\n    case 'initiator':\n        media += 'a=sendonly\\r\\n';\n        break;\n    case 'responder':\n        media += 'a=recvonly\\r\\n';\n        break;\n    case 'none':\n        media += 'a=inactive\\r\\n';\n        break;\n    case 'both':\n        media += 'a=sendrecv\\r\\n';\n        break;\n    }\n    media += `a=mid:${content.attr('name')}\\r\\n`;\n\n    // <description><rtcp-mux/></description>\n    // see http://code.google.com/p/libjingle/issues/detail?id=309 -- no spec\n    // though\n    // and http://mail.jabber.org/pipermail/jingle/2011-December/001761.html\n    if (desc.find('rtcp-mux').length) {\n        media += 'a=rtcp-mux\\r\\n';\n    }\n\n    if (desc.find('encryption').length) {\n        desc.find('encryption>crypto').each(function() {\n            /* eslint-disable no-invalid-this */\n            media += `a=crypto:${this.getAttribute('tag')}`;\n            media += ` ${this.getAttribute('crypto-suite')}`;\n            media += ` ${this.getAttribute('key-params')}`;\n            if (this.getAttribute('session-params')) {\n                media += ` ${this.getAttribute('session-params')}`;\n            }\n            media += '\\r\\n';\n\n            /* eslint-enable no-invalid-this */\n        });\n    }\n    desc.find('payload-type').each(function() {\n        /* eslint-disable no-invalid-this */\n        media += `${SDPUtil.buildRTPMap(this)}\\r\\n`;\n        if ($(this).find('>parameter').length) {\n            media += `a=fmtp:${this.getAttribute('id')} `;\n            media\n                += $(this)\n                    .find('parameter')\n                    .map(function() {\n                        const name = this.getAttribute('name');\n\n                        return (\n                            (name ? `${name}=` : '')\n                                + this.getAttribute('value'));\n                    })\n                    .get()\n                    .join('; ');\n            media += '\\r\\n';\n        }\n\n        // xep-0293\n        media += self.rtcpFbFromJingle($(this), this.getAttribute('id'));\n\n        /* eslint-enable no-invalid-this */\n    });\n\n    // xep-0293\n    media += self.rtcpFbFromJingle(desc, '*');\n\n    // xep-0294\n    tmp\n        = desc.find(\n            '>rtp-hdrext[xmlns=\"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0\"]');\n    tmp.each(function() {\n        /* eslint-disable no-invalid-this */\n        media\n            += `a=extmap:${this.getAttribute('id')} ${\n                this.getAttribute('uri')}\\r\\n`;\n\n        /* eslint-enable no-invalid-this */\n    });\n\n    content\n        .find(\n            '>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]'\n                + '>candidate')\n        .each(function() {\n            /* eslint-disable no-invalid-this */\n            let protocol = this.getAttribute('protocol');\n\n            protocol\n                = typeof protocol === 'string' ? protocol.toLowerCase() : '';\n\n            if ((self.removeTcpCandidates\n                    && (protocol === 'tcp' || protocol === 'ssltcp'))\n                || (self.removeUdpCandidates && protocol === 'udp')) {\n                return;\n            } else if (self.failICE) {\n                this.setAttribute('ip', '1.1.1.1');\n            }\n\n            media += SDPUtil.candidateFromJingle(this);\n\n            /* eslint-enable no-invalid-this */\n        });\n\n    // XEP-0339 handle ssrc-group attributes\n    content\n        .find('description>ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\n        .each(function() {\n            /* eslint-disable no-invalid-this */\n            const semantics = this.getAttribute('semantics');\n            const ssrcs\n                = $(this)\n                    .find('>source')\n                    .map(function() {\n                        return this.getAttribute('ssrc');\n                    })\n                    .get();\n\n            if (ssrcs.length) {\n                media += `a=ssrc-group:${semantics} ${ssrcs.join(' ')}\\r\\n`;\n            }\n\n            /* eslint-enable no-invalid-this */\n        });\n\n    tmp\n        = content.find(\n            'description>source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n    tmp.each(function() {\n        /* eslint-disable no-invalid-this */\n        const ssrc = this.getAttribute('ssrc');\n\n        // eslint-disable-next-line newline-per-chained-call\n        $(this).find('>parameter').each(function() {\n            const name = this.getAttribute('name');\n            let value = this.getAttribute('value');\n\n            value = SDPUtil.filterSpecialChars(value);\n            media += `a=ssrc:${ssrc} ${name}`;\n            if (value && value.length) {\n                media += `:${value}`;\n            }\n            media += '\\r\\n';\n        });\n\n        /* eslint-enable no-invalid-this */\n    });\n\n    return media;\n};\n","import SDPUtil from './SDPUtil';\n\n// this could be useful in Array.prototype.\n/**\n *\n * @param array1\n * @param array2\n */\nfunction arrayEquals(array1, array2) {\n    // if the other array is a falsy value, return\n    if (!array2) {\n        return false;\n    }\n\n    // compare lengths - can save a lot of time\n    if (array1.length !== array2.length) {\n        return false;\n    }\n\n    for (let i = 0, l = array1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!array1[i].equals(array2[i])) {\n                return false;\n            }\n        } else if (array1[i] !== array2[i]) {\n            // Warning - two different object instances will never be\n            // equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n *\n * @param mySDP\n * @param otherSDP\n */\nexport default function SDPDiffer(mySDP, otherSDP) {\n    this.mySDP = mySDP;\n    this.otherSDP = otherSDP;\n    if (!mySDP) {\n        throw new Error('\"mySDP\" is undefined!');\n    } else if (!otherSDP) {\n        throw new Error('\"otherSDP\" is undefined!');\n    }\n}\n\n/**\n * Returns map of MediaChannel that contains media contained in\n * 'mySDP', but not contained in 'otherSdp'. Mapped by channel idx.\n */\nSDPDiffer.prototype.getNewMedia = function() {\n\n    const myMedias = this.mySDP.getMediaSsrcMap();\n    const othersMedias = this.otherSDP.getMediaSsrcMap();\n    const newMedia = {};\n\n    Object.keys(othersMedias).forEach(othersMediaIdx => {\n        const myMedia = myMedias[othersMediaIdx];\n        const othersMedia = othersMedias[othersMediaIdx];\n\n        if (!myMedia && othersMedia) {\n            // Add whole channel\n            newMedia[othersMediaIdx] = othersMedia;\n\n            return;\n        }\n\n        // Look for new ssrcs across the channel\n        Object.keys(othersMedia.ssrcs).forEach(ssrc => {\n            if (Object.keys(myMedia.ssrcs).indexOf(ssrc) === -1) {\n                // Allocate channel if we've found ssrc that doesn't exist in\n                // our channel\n                if (!newMedia[othersMediaIdx]) {\n                    newMedia[othersMediaIdx] = {\n                        mediaindex: othersMedia.mediaindex,\n                        mid: othersMedia.mid,\n                        ssrcs: {},\n                        ssrcGroups: []\n                    };\n                }\n                newMedia[othersMediaIdx].ssrcs[ssrc] = othersMedia.ssrcs[ssrc];\n            } else if (othersMedia.ssrcs[ssrc].lines\n                        && myMedia.ssrcs[ssrc].lines) {\n                // we want to detect just changes in adding/removing msid\n                const myContainMsid = myMedia.ssrcs[ssrc].lines.find(\n                    line => line.indexOf('msid') !== -1) !== undefined;\n                const newContainMsid = othersMedia.ssrcs[ssrc].lines.find(\n                    line => line.indexOf('msid') !== -1) !== undefined;\n\n                if (myContainMsid !== newContainMsid) {\n                    if (!newMedia[othersMediaIdx]) {\n                        newMedia[othersMediaIdx] = {\n                            mediaindex: othersMedia.mediaindex,\n                            mid: othersMedia.mid,\n                            ssrcs: {},\n                            ssrcGroups: []\n                        };\n                    }\n                    newMedia[othersMediaIdx].ssrcs[ssrc]\n                        = othersMedia.ssrcs[ssrc];\n                }\n            }\n        });\n\n        // Look for new ssrc groups across the channels\n        othersMedia.ssrcGroups.forEach(otherSsrcGroup => {\n\n            // try to match the other ssrc-group with an ssrc-group of ours\n            let matched = false;\n\n            for (let i = 0; i < myMedia.ssrcGroups.length; i++) {\n                const mySsrcGroup = myMedia.ssrcGroups[i];\n\n                if (otherSsrcGroup.semantics === mySsrcGroup.semantics\n                    && arrayEquals(otherSsrcGroup.ssrcs, mySsrcGroup.ssrcs)) {\n\n                    matched = true;\n                    break;\n                }\n            }\n\n            if (!matched) {\n                // Allocate channel if we've found an ssrc-group that doesn't\n                // exist in our channel\n\n                if (!newMedia[othersMediaIdx]) {\n                    newMedia[othersMediaIdx] = {\n                        mediaindex: othersMedia.mediaindex,\n                        mid: othersMedia.mid,\n                        ssrcs: {},\n                        ssrcGroups: []\n                    };\n                }\n                newMedia[othersMediaIdx].ssrcGroups.push(otherSsrcGroup);\n            }\n        });\n    });\n\n    return newMedia;\n};\n\n/**\n * TODO: document!\n */\nSDPDiffer.prototype.toJingle = function(modify) {\n    const sdpMediaSsrcs = this.getNewMedia();\n\n    let modified = false;\n\n    Object.keys(sdpMediaSsrcs).forEach(mediaindex => {\n        modified = true;\n        const media = sdpMediaSsrcs[mediaindex];\n\n        modify.c('content', { name: media.mid });\n\n        modify.c('description',\n            { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\n                media: media.mid });\n\n        // FIXME: not completely sure this operates on blocks and / or handles\n        // different ssrcs correctly\n        // generate sources from lines\n        Object.keys(media.ssrcs).forEach(ssrcNum => {\n            const mediaSsrc = media.ssrcs[ssrcNum];\n\n            modify.c('source', { xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\n            modify.attrs({ ssrc: mediaSsrc.ssrc });\n\n            // iterate over ssrc lines\n            mediaSsrc.lines.forEach(line => {\n                const idx = line.indexOf(' ');\n                const kv = line.substr(idx + 1);\n\n                modify.c('parameter');\n                if (kv.indexOf(':') === -1) {\n                    modify.attrs({ name: kv });\n                } else {\n                    const nv = kv.split(':', 2);\n                    const name = nv[0];\n                    const value = SDPUtil.filterSpecialChars(nv[1]);\n\n                    modify.attrs({ name });\n                    modify.attrs({ value });\n                }\n                modify.up(); // end of parameter\n            });\n            modify.up(); // end of source\n        });\n\n        // generate source groups from lines\n        media.ssrcGroups.forEach(ssrcGroup => {\n            if (ssrcGroup.ssrcs.length) {\n\n                modify.c('ssrc-group', {\n                    semantics: ssrcGroup.semantics,\n                    xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                });\n\n                ssrcGroup.ssrcs.forEach(ssrc => {\n                    modify.c('source', { ssrc })\n                        .up(); // end of source\n                });\n                modify.up(); // end of ssrc-group\n            }\n        });\n\n        modify.up(); // end of description\n        modify.up(); // end of content\n    });\n\n    return modified;\n};\n","import { getLogger } from 'jitsi-meet-logger';\nconst logger = getLogger(__filename);\n\nimport RandomUtil from '../util/RandomUtil';\nimport browser from '../browser';\n\nconst SDPUtil = {\n    filterSpecialChars(text) {\n        // XXX Neither one of the falsy values (e.g. null, undefined, false,\n        // \"\", etc.) \"contain\" special chars.\n        // eslint-disable-next-line no-useless-escape\n        return text ? text.replace(/[\\\\\\/\\{,\\}\\+]/g, '') : text;\n    },\n    iceparams(mediadesc, sessiondesc) {\n        let data = null;\n        let pwd, ufrag;\n\n        if ((ufrag = SDPUtil.findLine(mediadesc, 'a=ice-ufrag:', sessiondesc))\n                && (pwd\n                    = SDPUtil.findLine(\n                        mediadesc,\n                        'a=ice-pwd:',\n                        sessiondesc))) {\n            data = {\n                ufrag: SDPUtil.parseICEUfrag(ufrag),\n                pwd: SDPUtil.parseICEPwd(pwd)\n            };\n        }\n\n        return data;\n    },\n    parseICEUfrag(line) {\n        return line.substring(12);\n    },\n    buildICEUfrag(frag) {\n        return `a=ice-ufrag:${frag}`;\n    },\n    parseICEPwd(line) {\n        return line.substring(10);\n    },\n    buildICEPwd(pwd) {\n        return `a=ice-pwd:${pwd}`;\n    },\n    parseMID(line) {\n        return line.substring(6);\n    },\n    parseMLine(line) {\n        const data = {};\n        const parts = line.substring(2).split(' ');\n\n        data.media = parts.shift();\n        data.port = parts.shift();\n        data.proto = parts.shift();\n        if (parts[parts.length - 1] === '') { // trailing whitespace\n            parts.pop();\n        }\n        data.fmt = parts;\n\n        return data;\n    },\n    buildMLine(mline) {\n        return (\n            `m=${mline.media} ${mline.port} ${mline.proto} ${\n                mline.fmt.join(' ')}`);\n    },\n    parseRTPMap(line) {\n        const data = {};\n        let parts = line.substring(9).split(' ');\n\n        data.id = parts.shift();\n        parts = parts[0].split('/');\n        data.name = parts.shift();\n        data.clockrate = parts.shift();\n        data.channels = parts.length ? parts.shift() : '1';\n\n        return data;\n    },\n\n    /**\n     * Parses SDP line \"a=sctpmap:...\" and extracts SCTP port from it.\n     * @param line eg. \"a=sctpmap:5000 webrtc-datachannel\"\n     * @returns [SCTP port number, protocol, streams]\n     */\n    parseSCTPMap(line) {\n        const parts = line.substring(10).split(' ');\n        const sctpPort = parts[0];\n        const protocol = parts[1];\n\n        // Stream count is optional\n        const streamCount = parts.length > 2 ? parts[2] : null;\n\n\n        return [ sctpPort, protocol, streamCount ];// SCTP port\n    },\n    buildRTPMap(el) {\n        let line\n            = `a=rtpmap:${el.getAttribute('id')} ${el.getAttribute('name')}/${\n                el.getAttribute('clockrate')}`;\n\n        if (el.getAttribute('channels')\n            && el.getAttribute('channels') !== '1') {\n            line += `/${el.getAttribute('channels')}`;\n        }\n\n        return line;\n    },\n    parseCrypto(line) {\n        const data = {};\n        const parts = line.substring(9).split(' ');\n\n        data.tag = parts.shift();\n        data['crypto-suite'] = parts.shift();\n        data['key-params'] = parts.shift();\n        if (parts.length) {\n            data['session-params'] = parts.join(' ');\n        }\n\n        return data;\n    },\n    parseFingerprint(line) { // RFC 4572\n        const data = {};\n        const parts = line.substring(14).split(' ');\n\n        data.hash = parts.shift();\n        data.fingerprint = parts.shift();\n\n        // TODO assert that fingerprint satisfies 2UHEX *(\":\" 2UHEX) ?\n        return data;\n    },\n    parseFmtp(line) {\n        const data = [];\n        let parts = line.split(' ');\n\n        parts.shift();\n        parts = parts.join(' ').split(';');\n        for (let i = 0; i < parts.length; i++) {\n            let key = parts[i].split('=')[0];\n\n            while (key.length && key[0] === ' ') {\n                key = key.substring(1);\n            }\n            const value = parts[i].split('=')[1];\n\n            if (key && value) {\n                data.push({ name: key,\n                    value });\n            } else if (key) {\n                // rfc 4733 (DTMF) style stuff\n                data.push({ name: '',\n                    value: key });\n            }\n        }\n\n        return data;\n    },\n    parseICECandidate(line) {\n        const candidate = {};\n        const elems = line.split(' ');\n\n        candidate.foundation = elems[0].substring(12);\n        candidate.component = elems[1];\n        candidate.protocol = elems[2].toLowerCase();\n        candidate.priority = elems[3];\n        candidate.ip = elems[4];\n        candidate.port = elems[5];\n\n        // elems[6] => \"typ\"\n        candidate.type = elems[7];\n        candidate.generation = 0; // default value, may be overwritten below\n        for (let i = 8; i < elems.length; i += 2) {\n            switch (elems[i]) {\n            case 'raddr':\n                candidate['rel-addr'] = elems[i + 1];\n                break;\n            case 'rport':\n                candidate['rel-port'] = elems[i + 1];\n                break;\n            case 'generation':\n                candidate.generation = elems[i + 1];\n                break;\n            case 'tcptype':\n                candidate.tcptype = elems[i + 1];\n                break;\n            default: // TODO\n                logger.log(\n                    `parseICECandidate not translating \"${\n                        elems[i]}\" = \"${elems[i + 1]}\"`);\n            }\n        }\n        candidate.network = '1';\n\n        // not applicable to SDP -- FIXME: should be unique, not just random\n        // eslint-disable-next-line newline-per-chained-call\n        candidate.id = Math.random().toString(36).substr(2, 10);\n\n        return candidate;\n    },\n    buildICECandidate(cand) {\n        let line = [\n            `a=candidate:${cand.foundation}`,\n            cand.component,\n            cand.protocol,\n            cand.priority,\n            cand.ip,\n            cand.port,\n            'typ',\n            cand.type\n        ].join(' ');\n\n        line += ' ';\n        switch (cand.type) {\n        case 'srflx':\n        case 'prflx':\n        case 'relay':\n            if (cand.hasOwnAttribute('rel-addr')\n                    && cand.hasOwnAttribute('rel-port')) {\n                line += 'raddr';\n                line += ' ';\n                line += cand['rel-addr'];\n                line += ' ';\n                line += 'rport';\n                line += ' ';\n                line += cand['rel-port'];\n                line += ' ';\n            }\n            break;\n        }\n        if (cand.hasOwnAttribute('tcptype')) {\n            line += 'tcptype';\n            line += ' ';\n            line += cand.tcptype;\n            line += ' ';\n        }\n        line += 'generation';\n        line += ' ';\n        line += cand.hasOwnAttribute('generation') ? cand.generation : '0';\n\n        return line;\n    },\n    parseSSRC(desc) {\n        // proprietary mapping of a=ssrc lines\n        // TODO: see \"Jingle RTP Source Description\" by Juberti and P. Thatcher\n        // on google docs and parse according to that\n        const data = new Map();\n        const lines = desc.split('\\r\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            if (lines[i].substring(0, 7) === 'a=ssrc:') {\n                // FIXME: Use regex to smartly find the ssrc.\n                const ssrc = lines[i].split('a=ssrc:')[1].split(' ')[0];\n\n                if (!data.get(ssrc)) {\n                    data.set(ssrc, []);\n                }\n\n                data.get(ssrc).push(lines[i]);\n            }\n        }\n\n        return data;\n    },\n    parseRTCPFB(line) {\n        const parts = line.substr(10).split(' ');\n        const data = {};\n\n        data.pt = parts.shift();\n        data.type = parts.shift();\n        data.params = parts;\n\n        return data;\n    },\n    parseExtmap(line) {\n        const parts = line.substr(9).split(' ');\n        const data = {};\n\n        data.value = parts.shift();\n        if (data.value.indexOf('/') === -1) {\n            data.direction = 'both';\n        } else {\n            data.direction = data.value.substr(data.value.indexOf('/') + 1);\n            data.value = data.value.substr(0, data.value.indexOf('/'));\n        }\n        data.uri = parts.shift();\n        data.params = parts;\n\n        return data;\n    },\n    findLine(haystack, needle, sessionpart) {\n        let lines = haystack.split('\\r\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            if (lines[i].substring(0, needle.length) === needle) {\n                return lines[i];\n            }\n        }\n        if (!sessionpart) {\n            return false;\n        }\n\n        // search session part\n        lines = sessionpart.split('\\r\\n');\n        for (let j = 0; j < lines.length; j++) {\n            if (lines[j].substring(0, needle.length) === needle) {\n                return lines[j];\n            }\n        }\n\n        return false;\n    },\n    findLines(haystack, needle, sessionpart) {\n        let lines = haystack.split('\\r\\n');\n        const needles = [];\n\n        for (let i = 0; i < lines.length; i++) {\n            if (lines[i].substring(0, needle.length) === needle) {\n                needles.push(lines[i]);\n            }\n        }\n        if (needles.length || !sessionpart) {\n            return needles;\n        }\n\n        // search session part\n        lines = sessionpart.split('\\r\\n');\n        for (let j = 0; j < lines.length; j++) {\n            if (lines[j].substring(0, needle.length) === needle) {\n                needles.push(lines[j]);\n            }\n        }\n\n        return needles;\n    },\n    candidateToJingle(line) {\n        // a=candidate:2979166662 1 udp 2113937151 192.168.2.100 57698 typ host\n        // generation 0\n        //      <candidate component=... foundation=... generation=... id=...\n        // ip=... network=... port=... priority=... protocol=... type=.../>\n        if (line.indexOf('candidate:') === 0) {\n            // eslint-disable-next-line no-param-reassign\n            line = `a=${line}`;\n        } else if (line.substring(0, 12) !== 'a=candidate:') {\n            logger.log(\n                'parseCandidate called with a line that is not a candidate'\n                    + ' line');\n            logger.log(line);\n\n            return null;\n        }\n        if (line.substring(line.length - 2) === '\\r\\n') { // chomp it\n            // eslint-disable-next-line no-param-reassign\n            line = line.substring(0, line.length - 2);\n        }\n        const candidate = {};\n        const elems = line.split(' ');\n\n        if (elems[6] !== 'typ') {\n            logger.log('did not find typ in the right place');\n            logger.log(line);\n\n            return null;\n        }\n        candidate.foundation = elems[0].substring(12);\n        candidate.component = elems[1];\n        candidate.protocol = elems[2].toLowerCase();\n        candidate.priority = elems[3];\n        candidate.ip = elems[4];\n        candidate.port = elems[5];\n\n        // elems[6] => \"typ\"\n        candidate.type = elems[7];\n\n        candidate.generation = '0'; // default, may be overwritten below\n        for (let i = 8; i < elems.length; i += 2) {\n            switch (elems[i]) {\n            case 'raddr':\n                candidate['rel-addr'] = elems[i + 1];\n                break;\n            case 'rport':\n                candidate['rel-port'] = elems[i + 1];\n                break;\n            case 'generation':\n                candidate.generation = elems[i + 1];\n                break;\n            case 'tcptype':\n                candidate.tcptype = elems[i + 1];\n                break;\n            default: // TODO\n                logger.log(`not translating \"${elems[i]}\" = \"${elems[i + 1]}\"`);\n            }\n        }\n        candidate.network = '1';\n\n        // not applicable to SDP -- FIXME: should be unique, not just random\n        // eslint-disable-next-line newline-per-chained-call\n        candidate.id = Math.random().toString(36).substr(2, 10);\n\n        return candidate;\n    },\n    candidateFromJingle(cand) {\n        let line = 'a=candidate:';\n\n        line += cand.getAttribute('foundation');\n        line += ' ';\n        line += cand.getAttribute('component');\n        line += ' ';\n\n        let protocol = cand.getAttribute('protocol');\n\n        // use tcp candidates for FF\n\n        if (browser.isFirefox() && protocol.toLowerCase() === 'ssltcp') {\n            protocol = 'tcp';\n        }\n\n        line += protocol; // .toUpperCase(); // chrome M23 doesn't like this\n        line += ' ';\n        line += cand.getAttribute('priority');\n        line += ' ';\n        line += cand.getAttribute('ip');\n        line += ' ';\n        line += cand.getAttribute('port');\n        line += ' ';\n        line += 'typ';\n        line += ` ${cand.getAttribute('type')}`;\n        line += ' ';\n        switch (cand.getAttribute('type')) {\n        case 'srflx':\n        case 'prflx':\n        case 'relay':\n            if (cand.getAttribute('rel-addr')\n                    && cand.getAttribute('rel-port')) {\n                line += 'raddr';\n                line += ' ';\n                line += cand.getAttribute('rel-addr');\n                line += ' ';\n                line += 'rport';\n                line += ' ';\n                line += cand.getAttribute('rel-port');\n                line += ' ';\n            }\n            break;\n        }\n        if (protocol.toLowerCase() === 'tcp') {\n            line += 'tcptype';\n            line += ' ';\n            line += cand.getAttribute('tcptype');\n            line += ' ';\n        }\n        line += 'generation';\n        line += ' ';\n        line += cand.getAttribute('generation') || '0';\n\n        return `${line}\\r\\n`;\n    },\n\n    /**\n     * Parse the 'most' primary video ssrc from the given m line\n     * @param {object} mLine object as parsed from transform.parse\n     * @return {number} the primary video ssrc from the given m line\n     */\n    parsePrimaryVideoSsrc(videoMLine) {\n        const numSsrcs = videoMLine.ssrcs\n            .map(ssrcInfo => ssrcInfo.id)\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\n            .length;\n        const numGroups\n            = (videoMLine.ssrcGroups && videoMLine.ssrcGroups.length) || 0;\n\n        if (numSsrcs > 1 && numGroups === 0) {\n            // Ambiguous, can't figure out the primary\n            return;\n        }\n        let primarySsrc = null;\n\n        if (numSsrcs === 1) {\n            primarySsrc = videoMLine.ssrcs[0].id;\n        } else if (numSsrcs === 2) {\n            // Can figure it out if there's an FID group\n            const fidGroup\n                = videoMLine.ssrcGroups.find(\n                    group => group.semantics === 'FID');\n\n            if (fidGroup) {\n                primarySsrc = fidGroup.ssrcs.split(' ')[0];\n            }\n        } else if (numSsrcs >= 3) {\n            // Can figure it out if there's a sim group\n            const simGroup\n                = videoMLine.ssrcGroups.find(\n                    group => group.semantics === 'SIM');\n\n            if (simGroup) {\n                primarySsrc = simGroup.ssrcs.split(' ')[0];\n            }\n        }\n\n        return primarySsrc;\n    },\n\n    /**\n     * Generate an ssrc\n     * @returns {number} an ssrc\n     */\n    generateSsrc() {\n        return RandomUtil.randomInt(1, 0xffffffff);\n    },\n\n    /**\n     * Get an attribute for the given ssrc with the given attributeName\n     *  from the given mline\n     * @param {object} mLine an mLine object as parsed from transform.parse\n     * @param {number} ssrc the ssrc for which an attribtue is desired\n     * @param {string} attributeName the name of the desired attribute\n     * @returns {string} the value corresponding to the given ssrc\n     *  and attributeName\n     */\n    getSsrcAttribute(mLine, ssrc, attributeName) {\n        for (let i = 0; i < mLine.ssrcs.length; ++i) {\n            const ssrcLine = mLine.ssrcs[i];\n\n            if (ssrcLine.id === ssrc\n                && ssrcLine.attribute === attributeName) {\n                return ssrcLine.value;\n            }\n        }\n    },\n\n    /**\n     * Parses the ssrcs from the group sdp line and\n     *  returns them as a list of numbers\n     * @param {object} the ssrcGroup object as parsed from\n     *  sdp-transform\n     * @returns {list<number>} a list of the ssrcs in the group\n     *  parsed as numbers\n     */\n    parseGroupSsrcs(ssrcGroup) {\n        return ssrcGroup\n            .ssrcs\n            .split(' ')\n            .map(ssrcStr => parseInt(ssrcStr, 10));\n    },\n\n    /**\n     * Get the mline of the given type from the given sdp\n     * @param {object} sdp sdp as parsed from transform.parse\n     * @param {string} type the type of the desired mline (e.g. \"video\")\n     * @returns {object} a media object\n     */\n    getMedia(sdp, type) {\n        return sdp.media.find(m => m.type === type);\n    },\n\n    /**\n     * Extracts the ICE username fragment from an SDP string.\n     * @param {string} sdp the SDP in raw text format\n     */\n    getUfrag(sdp) {\n        const ufragLines\n            = sdp.split('\\n').filter(line => line.startsWith('a=ice-ufrag:'));\n\n        if (ufragLines.length > 0) {\n            return ufragLines[0].substr('a=ice-ufrag:'.length);\n        }\n    },\n\n    /**\n     * Sets the given codecName as the preferred codec by\n     *  moving it to the beginning of the payload types\n     *  list (modifies the given mline in place).  If there\n     *  are multiple options within the same codec (multiple h264\n     *  profiles, for instance), this will prefer the first one\n     *  that is found.\n     * @param {object} videoMLine the video mline object from\n     *  an sdp as parsed by transform.parse\n     * @param {string} codecName the name of the preferred codec\n     */\n    preferVideoCodec(videoMLine, codecName) {\n        let payloadType = null;\n\n        if (!videoMLine || !codecName) {\n            return;\n        }\n\n        for (let i = 0; i < videoMLine.rtp.length; ++i) {\n            const rtp = videoMLine.rtp[i];\n\n            if (rtp.codec\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\n                payloadType = rtp.payload;\n                break;\n            }\n        }\n        if (payloadType) {\n            // Call toString() on payloads to get around an issue within\n            // SDPTransform that sets payloads as a number, instead of a string,\n            // when there is only one payload.\n            const payloadTypes\n                = videoMLine.payloads\n                    .toString()\n                    .split(' ')\n                    .map(p => parseInt(p, 10));\n            const payloadIndex = payloadTypes.indexOf(payloadType);\n\n            payloadTypes.splice(payloadIndex, 1);\n            payloadTypes.unshift(payloadType);\n            videoMLine.payloads = payloadTypes.join(' ');\n        }\n    },\n\n    /**\n     * Strips the given codec from the given mline. All related RTX payload\n     * types are also stripped. If the resulting mline would have no codecs,\n     * it's disabled.\n     *\n     * @param {object} videoMLine the video mline object from an sdp as parsed\n     * by transform.parse.\n     * @param {string} codecName the name of the codec which will be stripped.\n     */\n    stripVideoCodec(videoMLine, codecName) {\n        if (!videoMLine || !codecName) {\n            return;\n        }\n\n        const removePts = [];\n\n        for (const rtp of videoMLine.rtp) {\n            if (rtp.codec\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\n                removePts.push(rtp.payload);\n            }\n        }\n\n        if (removePts.length > 0) {\n            // We also need to remove the payload types that are related to RTX\n            // for the codecs we want to disable.\n            const rtxApts = removePts.map(item => `apt=${item}`);\n            const rtxPts = videoMLine.fmtp.filter(\n                item => rtxApts.indexOf(item.config) !== -1);\n\n            removePts.push(...rtxPts.map(item => item.payload));\n\n            // Call toString() on payloads to get around an issue within\n            // SDPTransform that sets payloads as a number, instead of a string,\n            // when there is only one payload.\n            const allPts = videoMLine.payloads\n                .toString()\n                .split(' ')\n                .map(Number);\n            const keepPts = allPts.filter(pt => removePts.indexOf(pt) === -1);\n\n            if (keepPts.length === 0) {\n                // There are no other video codecs, disable the stream.\n                videoMLine.port = 0;\n                videoMLine.direction = 'inactive';\n                videoMLine.payloads = '*';\n            } else {\n                videoMLine.payloads = keepPts.join(' ');\n            }\n\n            videoMLine.rtp = videoMLine.rtp.filter(\n                item => keepPts.indexOf(item.payload) !== -1);\n            videoMLine.fmtp = videoMLine.fmtp.filter(\n                item => keepPts.indexOf(item.payload) !== -1);\n            if (videoMLine.rtcpFb) {\n                videoMLine.rtcpFb = videoMLine.rtcpFb.filter(\n                    item => keepPts.indexOf(item.payload) !== -1);\n            }\n        }\n    }\n};\n\nexport default SDPUtil;\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport {\n    parsePrimarySSRC,\n    parseSecondarySSRC,\n    SdpTransformWrap\n} from './SdpTransformUtil';\n\nconst logger = getLogger(__filename);\n\n/**\n * Handles the work of keeping video ssrcs consistent across multiple\n * o/a cycles, making it such that all stream operations can be\n * kept local and do not need to be signaled.\n * NOTE: This only keeps the 'primary' video ssrc consistent: meaning\n * the primary video stream\n */\nexport default class SdpConsistency {\n    /**\n     * Constructor\n     * @param {string} logPrefix the log prefix appended to every logged\n     * message, currently used to distinguish for which\n     * <tt>TraceablePeerConnection</tt> the instance works.\n     */\n    constructor(logPrefix) {\n        this.clearVideoSsrcCache();\n        this.logPrefix = logPrefix;\n    }\n\n    /**\n     * Clear the cached video primary and primary rtx ssrcs so that\n     *  they will not be used for the next call to\n     *  makeVideoPrimarySsrcsConsistent\n     */\n    clearVideoSsrcCache() {\n        this.cachedPrimarySsrc = null;\n        this.injectRecvOnly = false;\n    }\n\n    /**\n     * Explicitly set the primary ssrc to be used in\n     *  makeVideoPrimarySsrcsConsistent\n     * @param {number} primarySsrc the primarySsrc to be used\n     *  in future calls to makeVideoPrimarySsrcsConsistent\n     * @throws Error if <tt>primarySsrc</tt> is not a number\n     */\n    setPrimarySsrc(primarySsrc) {\n        if (typeof primarySsrc !== 'number') {\n            throw new Error('Primary SSRC must be a number!');\n        }\n        this.cachedPrimarySsrc = primarySsrc;\n    }\n\n    /**\n     * Checks whether or not there is a primary video SSRC cached already.\n     * @return {boolean}\n     */\n    hasPrimarySsrcCached() {\n        return Boolean(this.cachedPrimarySsrc);\n    }\n\n    /**\n     * Given an sdp string, either:\n     *  1) record the primary video and primary rtx ssrcs to be\n     *   used in future calls to makeVideoPrimarySsrcsConsistent or\n     *  2) change the primary and primary rtx ssrcs in the given sdp\n     *   to match the ones previously cached\n     * @param {string} sdpStr the sdp string to (potentially)\n     *  change to make the video ssrcs consistent\n     * @returns {string} a (potentially) modified sdp string\n     *  with ssrcs consistent with this class' cache\n     */\n    makeVideoPrimarySsrcsConsistent(sdpStr) {\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\n        const videoMLine = sdpTransformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(\n                `${this.logPrefix} no 'video' media found in the sdp: `\n                    + `${sdpStr}`);\n\n            return sdpStr;\n        }\n\n        if (videoMLine.direction === 'recvonly') {\n            // If the mline is recvonly, we'll add the primary\n            //  ssrc as a recvonly ssrc\n            if (this.cachedPrimarySsrc && this.injectRecvOnly) {\n                videoMLine.addSSRCAttribute({\n                    id: this.cachedPrimarySsrc,\n                    attribute: 'cname',\n                    value: `recvonly-${this.cachedPrimarySsrc}`\n                });\n            } else {\n                logger.info(\n                    `${this.logPrefix} no SSRC found for the recvonly video`\n                        + 'stream!');\n            }\n        } else {\n            const newPrimarySsrc = videoMLine.getPrimaryVideoSsrc();\n\n            if (!newPrimarySsrc) {\n                logger.info(\n                    `${this.logPrefix} sdp-consistency couldn't`\n                        + ' parse new primary ssrc');\n\n                return sdpStr;\n            }\n            if (this.cachedPrimarySsrc) {\n                logger.info(\n                    `${this.logPrefix} sdp-consistency replacing new ssrc`\n                        + `${newPrimarySsrc} with cached `\n                        + `${this.cachedPrimarySsrc}`);\n                videoMLine.replaceSSRC(newPrimarySsrc, this.cachedPrimarySsrc);\n                for (const group of videoMLine.ssrcGroups) {\n                    if (group.semantics === 'FID') {\n                        const primarySsrc = parsePrimarySSRC(group);\n                        const rtxSsrc = parseSecondarySSRC(group);\n\n                        // eslint-disable-next-line max-depth\n                        if (primarySsrc === newPrimarySsrc) {\n                            group.ssrcs\n                                = `${this.cachedPrimarySsrc} ${rtxSsrc}`;\n                        }\n                    }\n                }\n            } else {\n                this.cachedPrimarySsrc = newPrimarySsrc;\n                logger.info(\n                    `${this.logPrefix} sdp-consistency caching primary ssrc`\n                        + `${this.cachedPrimarySsrc}`);\n            }\n\n            this.injectRecvOnly = true;\n        }\n\n        return sdpTransformer.toRawSDP();\n    }\n}\n","import * as transform from 'sdp-transform';\n\n/**\n * Parses the primary SSRC of given SSRC group.\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\n * @return {Number} the primary SSRC number\n */\nexport function parsePrimarySSRC(group) {\n    return parseInt(group.ssrcs.split(' ')[0], 10);\n}\n\n/**\n * Parses the secondary SSRC of given SSRC group.\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\n * @return {Number} the secondary SSRC number\n */\nexport function parseSecondarySSRC(group) {\n    return parseInt(group.ssrcs.split(' ')[1], 10);\n}\n\n/**\n * Tells how many distinct SSRCs are contained in given media line.\n * @param {Object} mLine the media line object as defined by 'sdp-transform' lib\n * @return {number}\n */\nfunction _getSSRCCount(mLine) {\n    if (!mLine.ssrcs) {\n        return 0;\n    }\n\n    return mLine.ssrcs\n        .map(ssrcInfo => ssrcInfo.id)\n        .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\n        .length;\n}\n\n/**\n * A wrapper around 'sdp-transform' media description object which provides\n * utility methods for common SDP/SSRC related operations.\n */\nclass MLineWrap {\n\n    /**\n     * Creates new <tt>MLineWrap</t>>\n     * @param {Object} mLine the media line object as defined by 'sdp-transform'\n     * lib.\n     */\n    constructor(mLine) {\n        if (!mLine) {\n            throw new Error('mLine is undefined');\n        }\n\n        this.mLine = mLine;\n    }\n\n    /**\n     * Getter for the mLine's \"ssrcs\" array. If the array was undefined an empty\n     * one will be preassigned.\n     *\n     * @return {Array<Object>} an array of 'sdp-transform' SSRC attributes\n     * objects.\n     */\n    get ssrcs() {\n        if (!this.mLine.ssrcs) {\n            this.mLine.ssrcs = [];\n        }\n\n        return this.mLine.ssrcs;\n    }\n\n    /**\n     * Setter for the mLine's \"ssrcs\" array.\n     *\n     * @param {Array<Object>} ssrcs an array of 'sdp-transform' SSRC attributes\n     * objects.\n     */\n    set ssrcs(ssrcs) {\n        this.mLine.ssrcs = ssrcs;\n    }\n\n    /**\n     * Returns the direction of the underlying media description.\n     * @return {string} the media direction name as defined in the SDP.\n     */\n    get direction() {\n        return this.mLine.direction;\n    }\n\n    /**\n     * Modifies the direction of the underlying media description.\n     * @param {string} direction the new direction to be set\n     */\n    set direction(direction) {\n        this.mLine.direction = direction;\n    }\n\n    /**\n     * Exposes the SSRC group array of the underlying media description object.\n     * @return {Array.<Object>}\n     */\n    get ssrcGroups() {\n        if (!this.mLine.ssrcGroups) {\n            this.mLine.ssrcGroups = [];\n        }\n\n        return this.mLine.ssrcGroups;\n    }\n\n    /**\n     * Modifies the SSRC groups array of the underlying media description\n     * object.\n     * @param {Array.<Object>} ssrcGroups\n     */\n    set ssrcGroups(ssrcGroups) {\n        this.mLine.ssrcGroups = ssrcGroups;\n    }\n\n    /**\n     * Obtains value from SSRC attribute.\n     * @param {number} ssrcNumber the SSRC number for which attribute is to be\n     * found\n     * @param {string} attrName the name of the SSRC attribute to be found.\n     * @return {string|undefined} the value of SSRC attribute or\n     * <tt>undefined</tt> if no such attribute exists.\n     */\n    getSSRCAttrValue(ssrcNumber, attrName) {\n        const attribute = this.ssrcs.find(\n            ssrcObj => ssrcObj.id === ssrcNumber\n            && ssrcObj.attribute === attrName);\n\n\n        return attribute && attribute.value;\n    }\n\n    /**\n     * Removes all attributes for given SSRC number.\n     * @param {number} ssrcNum the SSRC number for which all attributes will be\n     * removed.\n     */\n    removeSSRC(ssrcNum) {\n        if (!this.mLine.ssrcs || !this.mLine.ssrcs.length) {\n            return;\n        }\n\n        this.mLine.ssrcs\n            = this.mLine.ssrcs.filter(ssrcObj => ssrcObj.id !== ssrcNum);\n    }\n\n    /**\n     * Adds SSRC attribute\n     * @param {object} ssrcObj the SSRC attribute object as defined in\n     * the 'sdp-transform' lib.\n     */\n    addSSRCAttribute(ssrcObj) {\n        this.ssrcs.push(ssrcObj);\n    }\n\n    /**\n     * Finds a SSRC group matching both semantics and SSRCs in order.\n     * @param {string} semantics the name of the semantics\n     * @param {string} [ssrcs] group SSRCs as a string (like it's defined in\n     * SSRC group object of the 'sdp-transform' lib) e.g. \"1232546 342344 25434\"\n     * @return {object|undefined} the SSRC group object or <tt>undefined</tt> if\n     * not found.\n     */\n    findGroup(semantics, ssrcs) {\n        return this.ssrcGroups.find(\n            group =>\n                group.semantics === semantics\n                    && (!ssrcs || ssrcs === group.ssrcs));\n    }\n\n    /**\n     * Finds all groups matching given semantic's name.\n     * @param {string} semantics the name of the semantics\n     * @return {Array.<object>} an array of SSRC group objects as defined by\n     * the 'sdp-transform' lib.\n     */\n    findGroups(semantics) {\n        return this.ssrcGroups.filter(\n            group => group.semantics === semantics);\n    }\n\n    /**\n     * Finds all groups matching given semantic's name and group's primary SSRC.\n     * @param {string} semantics the name of the semantics\n     * @param {number} primarySSRC the primary SSRC number to be matched\n     * @return {Object} SSRC group object as defined by the 'sdp-transform' lib.\n     */\n    findGroupByPrimarySSRC(semantics, primarySSRC) {\n        return this.ssrcGroups.find(\n            group => group.semantics === semantics\n                && parsePrimarySSRC(group) === primarySSRC);\n    }\n\n    /**\n     * @param {string|null} msid the media stream id or <tt>null</tt> to match\n     * the first SSRC object with any 'msid' value.\n     * @return {Object|undefined} the SSRC object as defined by 'sdp-transform'\n     * lib.\n     */\n    findSSRCByMSID(msid) {\n        return this.ssrcs.find(\n            ssrcObj => ssrcObj.attribute === 'msid'\n                && (msid === null || ssrcObj.value === msid));\n    }\n\n    /**\n     * Gets the SSRC count for the underlying media description.\n     * @return {number}\n     */\n    getSSRCCount() {\n        return _getSSRCCount(this.mLine);\n    }\n\n    /**\n     * Checks whether the underlying media description contains any SSRC groups.\n     * @return {boolean} <tt>true</tt> if there are any SSRC groups or\n     * <tt>false</tt> otherwise.\n     */\n    containsAnySSRCGroups() {\n        return this.mLine.ssrcGroups !== undefined;\n    }\n\n    /**\n     * Finds the primary video SSRC.\n     * @returns {number|undefined} the primary video ssrc\n     * @throws Error if the underlying media description is not a video\n     */\n    getPrimaryVideoSsrc() {\n        const mediaType = this.mLine.type;\n\n        if (mediaType !== 'video') {\n            throw new Error(\n                `getPrimarySsrc doesn't work with '${mediaType}'`);\n        }\n\n        const numSsrcs = _getSSRCCount(this.mLine);\n\n        if (numSsrcs === 1) {\n            // Not using \"ssrcs\" getter on purpose here\n            return this.mLine.ssrcs[0].id;\n        }\n\n        // Look for a SIM, FID, or FEC-FR group\n        if (this.mLine.ssrcGroups) {\n            const simGroup = this.findGroup('SIM');\n\n            if (simGroup) {\n                return parsePrimarySSRC(simGroup);\n            }\n            const fidGroup = this.findGroup('FID');\n\n            if (fidGroup) {\n                return parsePrimarySSRC(fidGroup);\n            }\n            const fecGroup = this.findGroup('FEC-FR');\n\n            if (fecGroup) {\n                return parsePrimarySSRC(fecGroup);\n            }\n        }\n\n    }\n\n    /**\n     * Obtains RTX SSRC from the underlying video description (the\n     * secondary SSRC of the first \"FID\" group found)\n     * @param {number} primarySsrc the video ssrc for which to find the\n     * corresponding rtx ssrc\n     * @returns {number|undefined} the rtx ssrc (or undefined if there isn't\n     * one)\n     */\n    getRtxSSRC(primarySsrc) {\n        const fidGroup = this.findGroupByPrimarySSRC('FID', primarySsrc);\n\n\n        return fidGroup && parseSecondarySSRC(fidGroup);\n    }\n\n    /**\n     * Obtains all SSRCs contained in the underlying media description.\n     * @return {Array.<number>} an array with all SSRC as numbers.\n     */\n    getSSRCs() {\n        return this.ssrcs\n            .map(ssrcInfo => ssrcInfo.id)\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index);\n    }\n\n    /**\n     * Obtains primary video SSRCs.\n     * @return {Array.<number>} an array of all primary video SSRCs as numbers.\n     * @throws Error if the wrapped media description is not a video.\n     */\n    getPrimaryVideoSSRCs() {\n        const mediaType = this.mLine.type;\n\n        if (mediaType !== 'video') {\n            throw new Error(\n                `getPrimaryVideoSSRCs doesn't work with ${mediaType}`);\n        }\n\n        const videoSSRCs = this.getSSRCs();\n\n        for (const ssrcGroupInfo of this.ssrcGroups) {\n            // Right now, FID and FEC-FR groups are the only ones we parse to\n            // disqualify streams.  If/when others arise we'll\n            // need to add support for them here\n            if (ssrcGroupInfo.semantics === 'FID'\n                    || ssrcGroupInfo.semantics === 'FEC-FR') {\n                // secondary streams should be filtered out\n                const secondarySsrc = parseSecondarySSRC(ssrcGroupInfo);\n\n                videoSSRCs.splice(\n                    videoSSRCs.indexOf(secondarySsrc), 1);\n            }\n        }\n\n        return videoSSRCs;\n    }\n\n    /**\n     * Dumps all SSRC groups of this media description to JSON.\n     */\n    dumpSSRCGroups() {\n        return JSON.stringify(this.mLine.ssrcGroups);\n    }\n\n    /**\n     * Removes all SSRC groups which contain given SSRC number at any position.\n     * @param {number} ssrc the SSRC for which all matching groups are to be\n     * removed.\n     */\n    removeGroupsWithSSRC(ssrc) {\n        if (!this.mLine.ssrcGroups) {\n            return;\n        }\n\n        this.mLine.ssrcGroups = this.mLine.ssrcGroups\n            .filter(groupInfo => groupInfo.ssrcs.indexOf(`${ssrc}`) === -1);\n    }\n\n    /**\n     * Removes groups that match given semantics.\n     * @param {string} semantics e.g. \"SIM\" or \"FID\"\n     */\n    removeGroupsBySemantics(semantics) {\n        if (!this.mLine.ssrcGroups) {\n            return;\n        }\n\n        this.mLine.ssrcGroups\n            = this.mLine.ssrcGroups\n                .filter(groupInfo => groupInfo.semantics !== semantics);\n    }\n\n    /**\n     * Replaces SSRC (does not affect SSRC groups, but only attributes).\n     * @param {number} oldSSRC the old SSRC number\n     * @param {number} newSSRC the new SSRC number\n     */\n    replaceSSRC(oldSSRC, newSSRC) {\n        if (this.mLine.ssrcs) {\n            this.mLine.ssrcs.forEach(ssrcInfo => {\n                if (ssrcInfo.id === oldSSRC) {\n                    ssrcInfo.id = newSSRC;\n                }\n            });\n        }\n    }\n\n    /**\n     * Adds given SSRC group to this media description.\n     * @param {object} group the SSRC group object as defined by\n     * the 'sdp-transform' lib.\n     */\n    addSSRCGroup(group) {\n        this.ssrcGroups.push(group);\n    }\n}\n\n/**\n * Utility class for SDP manipulation using the 'sdp-transform' library.\n *\n * Typical use usage scenario:\n *\n * const transformer = new SdpTransformWrap(rawSdp);\n * const videoMLine = transformer.selectMedia('video);\n * if (videoMLine) {\n *     videoMLiner.addSSRCAttribute({\n *         id: 2342343,\n *         attribute: \"cname\",\n *         value: \"someCname\"\n *     });\n *     rawSdp = transformer.toRawSdp();\n * }\n */\nexport class SdpTransformWrap {\n\n    /**\n     * Creates new instance and parses the raw SDP into objects using\n     * 'sdp-transform' lib.\n     * @param {string} rawSDP the SDP in raw text format.\n     */\n    constructor(rawSDP) {\n        this.parsedSDP = transform.parse(rawSDP);\n    }\n\n    /**\n     * Selects the first media SDP of given name.\n     * @param {string} mediaType the name of the media e.g. 'audio', 'video',\n     * 'data'.\n     * @return {MLineWrap|null} return {@link MLineWrap} instance for the media\n     * line or <tt>null</tt> if not found. The object returned references\n     * the underlying SDP state held by this <tt>SdpTransformWrap</tt> instance\n     * (it's not a copy).\n     */\n    selectMedia(mediaType) {\n        const selectedMLine\n            = this.parsedSDP.media.find(mLine => mLine.type === mediaType);\n\n        return selectedMLine ? new MLineWrap(selectedMLine) : null;\n    }\n\n    /**\n     * Converts the currently stored SDP state in this instance to raw text SDP\n     * format.\n     * @return {string}\n     */\n    toRawSDP() {\n        return transform.write(this.parsedSDP);\n    }\n}\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\nimport SignalingLayer from '../../service/RTC/SignalingLayer';\n\nconst logger = getLogger(__filename);\n\n/**\n * Default XMPP implementation of the {@link SignalingLayer} interface. Obtains\n * the data from the MUC presence.\n */\nexport default class SignalingLayerImpl extends SignalingLayer {\n    /**\n     * Creates new instance.\n     */\n    constructor() {\n        super();\n\n        /**\n         * A map that stores SSRCs of remote streams. And is used only locally\n         * We store the mapping when jingle is received, and later is used\n         * onaddstream webrtc event where we have only the ssrc\n         * FIXME: This map got filled and never cleaned and can grow during long\n         * conference\n         * @type {Map<number, string>} maps SSRC number to jid\n         */\n        this.ssrcOwners = new Map();\n\n        /**\n         *\n         * @type {ChatRoom|null}\n         */\n        this.chatRoom = null;\n    }\n\n    /**\n     * Sets the <tt>ChatRoom</tt> instance used and binds presence listeners.\n     * @param {ChatRoom} room\n     */\n    setChatRoom(room) {\n        const oldChatRoom = this.chatRoom;\n\n        this.chatRoom = room;\n        if (oldChatRoom) {\n            oldChatRoom.removePresenceListener(\n                'audiomuted', this._audioMuteHandler);\n            oldChatRoom.removePresenceListener(\n                'videomuted', this._videoMuteHandler);\n            oldChatRoom.removePresenceListener(\n                'videoType', this._videoTypeHandler);\n        }\n        if (room) {\n            // SignalingEvents\n            this._audioMuteHandler = (node, from) => {\n                this.eventEmitter.emit(\n                    SignalingEvents.PEER_MUTED_CHANGED,\n                    from, MediaType.AUDIO, node.value === 'true');\n            };\n            room.addPresenceListener('audiomuted', this._audioMuteHandler);\n\n            this._videoMuteHandler = (node, from) => {\n                this.eventEmitter.emit(\n                    SignalingEvents.PEER_MUTED_CHANGED,\n                    from, MediaType.VIDEO, node.value === 'true');\n            };\n            room.addPresenceListener('videomuted', this._videoMuteHandler);\n\n            this._videoTypeHandler = (node, from) => {\n                this.eventEmitter.emit(\n                    SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\n                    from, node.value);\n            };\n            room.addPresenceListener('videoType', this._videoTypeHandler);\n        }\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getPeerMediaInfo(owner, mediaType) {\n        if (this.chatRoom) {\n            return this.chatRoom.getMediaPresenceInfo(owner, mediaType);\n        }\n        logger.error('Requested peer media info, before room was set');\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getSSRCOwner(ssrc) {\n        return this.ssrcOwners.get(ssrc);\n    }\n\n    /**\n     * Set an SSRC owner.\n     * @param {number} ssrc an SSRC to be owned\n     * @param {string} endpointId owner's ID (MUC nickname)\n     * @throws TypeError if <tt>ssrc</tt> is not a number\n     */\n    setSSRCOwner(ssrc, endpointId) {\n        if (typeof ssrc !== 'number') {\n            throw new TypeError(`SSRC(${ssrc}) must be a number`);\n        }\n        this.ssrcOwners.set(ssrc, endpointId);\n    }\n}\n","/**\n * Class attaches to Strophe BOSH connection and tracks the time of last successful request.\n * It does that by overriding {@code nextValidRid} method and tracking how the RID value changes.\n * A request was successful if the number has increased by 1 since the last time the method was called.\n */\nexport default class LastRequestTracker {\n    /**\n     * Initializes new instance.\n     */\n    constructor() {\n        this._nextValidRid = null;\n        this._lastSuccess = null;\n    }\n\n    /**\n     * Starts tracking requests on the given connection.\n     *\n     * @param {Object} stropheConnection - Strophe connection instance.\n     */\n    startTracking(stropheConnection) {\n        stropheConnection.nextValidRid = rid => {\n            // Just before connect and on disconnect RID will get assigned a new random value.\n            // A request was successful only when the value got increased exactly by 1.\n            if (this._nextValidRid === rid - 1) {\n                this._lastSuccess = new Date().getTime();\n            }\n            this._nextValidRid = rid;\n        };\n    }\n\n    /**\n     * Returns how many milliseconds have passed since the last successful BOSH request.\n     *\n     * @returns {number|null}\n     */\n    getTimeSinceLastSuccess() {\n        return this._lastSuccess\n            ? new Date().getTime() - this._lastSuccess\n            : null;\n    }\n}\n","/* global $, Promise */\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\nimport { $iq, Strophe } from 'strophe.js';\n\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\nconst AuthenticationEvents\n    = require('../../service/authentication/AuthenticationEvents');\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\n\nimport browser from '../browser';\nimport Settings from '../settings/Settings';\n\n/**\n *\n * @param step\n */\nfunction createExpBackoffTimer(step) {\n    let count = 1;\n\n    return function(reset) {\n        // Reset call\n        if (reset) {\n            count = 1;\n\n            return;\n        }\n\n        // Calculate next timeout\n        const timeout = Math.pow(2, count - 1);\n\n        count += 1;\n\n        return timeout * step;\n    };\n}\n\n/* eslint-disable max-params */\n\n/**\n *\n * @param roomName\n * @param xmpp\n * @param emitter\n * @param options\n */\nexport default function Moderator(roomName, xmpp, emitter, options) {\n    this.roomName = roomName;\n    this.xmppService = xmpp;\n    this.getNextTimeout = createExpBackoffTimer(1000);\n    this.getNextErrorTimeout = createExpBackoffTimer(1000);\n\n    // External authentication stuff\n    this.externalAuthEnabled = false;\n    this.options = options;\n\n    // Sip gateway can be enabled by configuring Jigasi host in config.js or\n    // it will be enabled automatically if focus detects the component through\n    // service discovery.\n    this.sipGatewayEnabled\n        = this.options.connection.hosts\n            && this.options.connection.hosts.call_control !== undefined;\n\n    this.eventEmitter = emitter;\n\n    this.connection = this.xmppService.connection;\n\n    // FIXME: Message listener that talks to POPUP window\n    /**\n     *\n     * @param event\n     */\n    function listener(event) {\n        if (event.data && event.data.sessionId) {\n            if (event.origin !== window.location.origin) {\n                logger.warn(\n                    `Ignoring sessionId from different origin: ${\n                        event.origin}`);\n\n                return;\n            }\n            Settings.sessionId = event.data.sessionId;\n\n            // After popup is closed we will authenticate\n        }\n    }\n\n    // Register\n    if (window.addEventListener) {\n        window.addEventListener('message', listener, false);\n    } else {\n        window.attachEvent('onmessage', listener);\n    }\n}\n\n/* eslint-enable max-params */\n\nModerator.prototype.isExternalAuthEnabled = function() {\n    return this.externalAuthEnabled;\n};\n\nModerator.prototype.isSipGatewayEnabled = function() {\n    return this.sipGatewayEnabled;\n};\n\nModerator.prototype.onMucMemberLeft = function(jid) {\n    logger.info(`Someone left is it focus ? ${jid}`);\n    const resource = Strophe.getResourceFromJid(jid);\n\n    if (resource === 'focus') {\n        logger.info(\n            'Focus has left the room - leaving conference');\n        this.eventEmitter.emit(XMPPEvents.FOCUS_LEFT);\n    }\n};\n\nModerator.prototype.setFocusUserJid = function(focusJid) {\n    if (!this.focusUserJid) {\n        this.focusUserJid = focusJid;\n        logger.info(`Focus jid set to:  ${this.focusUserJid}`);\n    }\n};\n\nModerator.prototype.getFocusUserJid = function() {\n    return this.focusUserJid;\n};\n\nModerator.prototype.getFocusComponent = function() {\n    // Get focus component address\n    let focusComponent = this.options.connection.hosts.focus;\n\n    // If not specified use default:  'focus.domain'\n\n    if (!focusComponent) {\n        focusComponent = `focus.${this.options.connection.hosts.domain}`;\n    }\n\n    return focusComponent;\n};\n\nModerator.prototype.createConferenceIq = function() {\n    // Generate create conference IQ\n    const elem = $iq({ to: this.getFocusComponent(),\n        type: 'set' });\n\n    // Session Id used for authentication\n    const { sessionId } = Settings;\n    const machineUID = Settings.machineId;\n    const config = this.options.conference;\n\n    logger.info(`Session ID: ${sessionId} machine UID: ${machineUID}`);\n\n    elem.c('conference', {\n        xmlns: 'http://jitsi.org/protocol/focus',\n        room: this.roomName,\n        'machine-uid': machineUID\n    });\n\n    if (sessionId) {\n        elem.attrs({ 'session-id': sessionId });\n    }\n    if (this.options.connection.enforcedBridge !== undefined) {\n        elem.c(\n            'property', {\n                name: 'enforcedBridge',\n                value: this.options.connection.enforcedBridge\n            }).up();\n    }\n\n    // Tell the focus we have Jigasi configured\n    if (this.options.connection.hosts !== undefined\n        && this.options.connection.hosts.call_control !== undefined) {\n        elem.c(\n            'property', {\n                name: 'call_control',\n                value: this.options.connection.hosts.call_control\n            }).up();\n    }\n    if (config.channelLastN !== undefined) {\n        elem.c(\n            'property', {\n                name: 'channelLastN',\n                value: config.channelLastN\n            }).up();\n    }\n    elem.c(\n        'property', {\n            name: 'disableRtx',\n            value: Boolean(config.disableRtx)\n        }).up();\n\n    if (config.enableTcc !== undefined) {\n        elem.c(\n                'property', {\n                    name: 'enableTcc',\n                    value: Boolean(config.enableTcc)\n                }).up();\n    }\n    if (config.enableRemb !== undefined) {\n        elem.c(\n                'property', {\n                    name: 'enableRemb',\n                    value: Boolean(config.enableRemb)\n                }).up();\n    }\n    if (config.minParticipants !== undefined) {\n        elem.c(\n                'property', {\n                    name: 'minParticipants',\n                    value: config.minParticipants\n                }).up();\n    }\n\n    elem.c(\n        'property', {\n            name: 'enableLipSync',\n            value: this.options.connection.enableLipSync !== false\n        }).up();\n    if (config.audioPacketDelay !== undefined) {\n        elem.c(\n            'property', {\n                name: 'audioPacketDelay',\n                value: config.audioPacketDelay\n            }).up();\n    }\n    if (config.startBitrate) {\n        elem.c(\n            'property', {\n                name: 'startBitrate',\n                value: config.startBitrate\n            }).up();\n    }\n    if (config.minBitrate) {\n        elem.c(\n            'property', {\n                name: 'minBitrate',\n                value: config.minBitrate\n            }).up();\n    }\n    if (config.testing && config.testing.octo\n        && typeof config.testing.octo.probability === 'number') {\n        if (Math.random() < config.testing.octo.probability) {\n            elem.c(\n                'property', {\n                    name: 'octo',\n                    value: true\n                }).up();\n        }\n    }\n\n    let openSctp;\n\n    switch (this.options.conference.openBridgeChannel) {\n    case 'datachannel':\n    case true:\n    case undefined:\n        openSctp = true;\n        break;\n    case 'websocket':\n        openSctp = false;\n        break;\n    }\n\n    if (openSctp && !browser.supportsDataChannels()) {\n        openSctp = false;\n    }\n\n    elem.c(\n        'property', {\n            name: 'openSctp',\n            value: openSctp\n        }).up();\n\n    if (this.options.conference.startAudioMuted !== undefined) {\n        elem.c(\n            'property', {\n                name: 'startAudioMuted',\n                value: this.options.conference.startAudioMuted\n            }).up();\n    }\n    if (this.options.conference.startVideoMuted !== undefined) {\n        elem.c(\n            'property', {\n                name: 'startVideoMuted',\n                value: this.options.conference.startVideoMuted\n            }).up();\n    }\n    if (this.options.conference.stereo !== undefined) {\n        elem.c(\n            'property', {\n                name: 'stereo',\n                value: this.options.conference.stereo\n            }).up();\n    }\n    if (this.options.conference.useRoomAsSharedDocumentName !== undefined) {\n        elem.c(\n            'property', {\n                name: 'useRoomAsSharedDocumentName',\n                value: this.options.conference.useRoomAsSharedDocumentName\n            }).up();\n    }\n    elem.up();\n\n    return elem;\n};\n\n\nModerator.prototype.parseSessionId = function(resultIq) {\n    // eslint-disable-next-line newline-per-chained-call\n    const sessionId = $(resultIq).find('conference').attr('session-id');\n\n    if (sessionId) {\n        logger.info(`Received sessionId:  ${sessionId}`);\n        Settings.sessionId = sessionId;\n    }\n};\n\nModerator.prototype.parseConfigOptions = function(resultIq) {\n    // eslint-disable-next-line newline-per-chained-call\n    this.setFocusUserJid($(resultIq).find('conference').attr('focusjid'));\n\n    const authenticationEnabled\n        = $(resultIq).find(\n            '>conference>property'\n            + '[name=\\'authentication\\'][value=\\'true\\']').length > 0;\n\n    logger.info(`Authentication enabled: ${authenticationEnabled}`);\n\n    this.externalAuthEnabled = $(resultIq).find(\n        '>conference>property'\n            + '[name=\\'externalAuth\\'][value=\\'true\\']').length > 0;\n\n    logger.info(\n        `External authentication enabled: ${this.externalAuthEnabled}`);\n\n    if (!this.externalAuthEnabled) {\n        // We expect to receive sessionId in 'internal' authentication mode\n        this.parseSessionId(resultIq);\n    }\n\n    // eslint-disable-next-line newline-per-chained-call\n    const authIdentity = $(resultIq).find('>conference').attr('identity');\n\n    this.eventEmitter.emit(AuthenticationEvents.IDENTITY_UPDATED,\n        authenticationEnabled, authIdentity);\n\n    // Check if focus has auto-detected Jigasi component(this will be also\n    // included if we have passed our host from the config)\n    if ($(resultIq).find(\n        '>conference>property'\n        + '[name=\\'sipGatewayEnabled\\'][value=\\'true\\']').length) {\n        this.sipGatewayEnabled = true;\n    }\n\n    logger.info(`Sip gateway enabled:  ${this.sipGatewayEnabled}`);\n};\n\n// FIXME We need to show the fact that we're waiting for the focus to the user\n// (or that the focus is not available)\n/**\n * Allocates the conference focus.\n *\n * @param {Function} callback - the function to be called back upon the\n * successful allocation of the conference focus\n * @returns {Promise} - Resolved when Jicofo allows to join the room. It's never\n * rejected and it'll keep on pinging Jicofo forever.\n */\nModerator.prototype.allocateConferenceFocus = function() {\n    return new Promise(resolve => {\n        // Try to use focus user JID from the config\n        this.setFocusUserJid(this.options.connection.focusUserJid);\n\n        // Send create conference IQ\n        this.connection.sendIQ(\n            this.createConferenceIq(),\n            result => this._allocateConferenceFocusSuccess(result, resolve),\n            error => this._allocateConferenceFocusError(error, resolve));\n\n        // XXX We're pressed for time here because we're beginning a complex\n        // and/or lengthy conference-establishment process which supposedly\n        // involves multiple RTTs. We don't have the time to wait for Strophe to\n        // decide to send our IQ.\n        this.connection.flush();\n    });\n};\n\n/**\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving an\n * error result.\n *\n * @param error - the error result of the request that\n * {@link #allocateConferenceFocus} sent\n * @param {Function} callback - the function to be called back upon the\n * successful allocation of the conference focus\n */\nModerator.prototype._allocateConferenceFocusError = function(error, callback) {\n    // If the session is invalid, remove and try again without session ID to get\n    // a new one\n    const invalidSession\n        = $(error).find('>error>session-invalid').length\n            || $(error).find('>error>not-acceptable').length;\n\n    if (invalidSession) {\n        logger.info('Session expired! - removing');\n        Settings.sessionId = undefined;\n    }\n    if ($(error).find('>error>graceful-shutdown').length) {\n        this.eventEmitter.emit(XMPPEvents.GRACEFUL_SHUTDOWN);\n\n        return;\n    }\n\n    // Check for error returned by the reservation system\n    const reservationErr = $(error).find('>error>reservation-error');\n\n    if (reservationErr.length) {\n        // Trigger error event\n        const errorCode = reservationErr.attr('error-code');\n        const errorTextNode = $(error).find('>error>text');\n        let errorMsg;\n\n        if (errorTextNode) {\n            errorMsg = errorTextNode.text();\n        }\n        this.eventEmitter.emit(\n            XMPPEvents.RESERVATION_ERROR,\n            errorCode,\n            errorMsg);\n\n        return;\n    }\n\n    // Not authorized to create new room\n    if ($(error).find('>error>not-authorized').length) {\n        logger.warn('Unauthorized to start the conference', error);\n        const toDomain = Strophe.getDomainFromJid(error.getAttribute('to'));\n\n        if (toDomain !== this.options.connection.hosts.anonymousdomain) {\n            // FIXME \"is external\" should come either from the focus or\n            // config.js\n            this.externalAuthEnabled = true;\n        }\n        this.eventEmitter.emit(XMPPEvents.AUTHENTICATION_REQUIRED);\n\n        return;\n    }\n    const waitMs = this.getNextErrorTimeout();\n    const errmsg = `Focus error, retry after ${waitMs}`;\n\n    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n    logger.error(errmsg, error);\n\n    // Show message\n    const focusComponent = this.getFocusComponent();\n    const retrySec = waitMs / 1000;\n\n    // FIXME: message is duplicated ? Do not show in case of session invalid\n    // which means just a retry\n\n    if (!invalidSession) {\n        this.eventEmitter.emit(\n            XMPPEvents.FOCUS_DISCONNECTED,\n            focusComponent,\n            retrySec);\n    }\n\n    // Reset response timeout\n    this.getNextTimeout(true);\n    window.setTimeout(\n        () => this.allocateConferenceFocus().then(callback),\n        waitMs);\n};\n\n/**\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving a\n * success (i.e. non-error) result.\n *\n * @param result - the success (i.e. non-error) result of the request that\n * {@link #allocateConferenceFocus} sent\n * @param {Function} callback - the function to be called back upon the\n * successful allocation of the conference focus\n */\nModerator.prototype._allocateConferenceFocusSuccess = function(\n        result,\n        callback) {\n    // Setup config options\n    this.parseConfigOptions(result);\n\n    // Reset the error timeout (because we haven't failed here).\n    this.getNextErrorTimeout(true);\n\n    // eslint-disable-next-line newline-per-chained-call\n    if ($(result).find('conference').attr('ready') === 'true') {\n        // Reset the non-error timeout (because we've succeeded here).\n        this.getNextTimeout(true);\n\n        // Exec callback\n        callback();\n    } else {\n        const waitMs = this.getNextTimeout();\n\n        logger.info(`Waiting for the focus... ${waitMs}`);\n        window.setTimeout(\n            () => this.allocateConferenceFocus().then(callback),\n            waitMs);\n    }\n};\n\nModerator.prototype.authenticate = function() {\n    return new Promise((resolve, reject) => {\n        this.connection.sendIQ(\n            this.createConferenceIq(),\n            result => {\n                this.parseSessionId(result);\n                resolve();\n            },\n            errorIq => reject({\n                error: $(errorIq).find('iq>error :first')\n                    .prop('tagName'),\n                message: $(errorIq).find('iq>error>text')\n                    .text()\n            })\n        );\n    });\n};\n\nModerator.prototype.getLoginUrl = function(urlCallback, failureCallback) {\n    this._getLoginUrl(/* popup */ false, urlCallback, failureCallback);\n};\n\n/**\n *\n * @param {boolean} popup false for {@link Moderator#getLoginUrl} or true for\n * {@link Moderator#getPopupLoginUrl}\n * @param urlCb\n * @param failureCb\n */\nModerator.prototype._getLoginUrl = function(popup, urlCb, failureCb) {\n    const iq = $iq({ to: this.getFocusComponent(),\n        type: 'get' });\n    const attrs = {\n        xmlns: 'http://jitsi.org/protocol/focus',\n        room: this.roomName,\n        'machine-uid': Settings.machineId\n    };\n    let str = 'auth url'; // for logger\n\n    if (popup) {\n        attrs.popup = true;\n        str = `POPUP ${str}`;\n    }\n    iq.c('login-url', attrs);\n\n    /**\n     * Implements a failure callback which reports an error message and an error\n     * through (1) GlobalOnErrorHandler, (2) logger, and (3) failureCb.\n     *\n     * @param {string} errmsg the error messsage to report\n     * @param {*} error the error to report (in addition to errmsg)\n     */\n    function reportError(errmsg, err) {\n        GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n        logger.error(errmsg, err);\n        failureCb(err);\n    }\n    this.connection.sendIQ(\n        iq,\n        result => {\n            // eslint-disable-next-line newline-per-chained-call\n            let url = $(result).find('login-url').attr('url');\n\n            url = decodeURIComponent(url);\n            if (url) {\n                logger.info(`Got ${str}: ${url}`);\n                urlCb(url);\n            } else {\n                reportError(`Failed to get ${str} from the focus`, result);\n            }\n        },\n        reportError.bind(undefined, `Get ${str} error`)\n    );\n};\n\nModerator.prototype.getPopupLoginUrl = function(urlCallback, failureCallback) {\n    this._getLoginUrl(/* popup */ true, urlCallback, failureCallback);\n};\n\nModerator.prototype.logout = function(callback) {\n    const iq = $iq({ to: this.getFocusComponent(),\n        type: 'set' });\n    const { sessionId } = Settings;\n\n    if (!sessionId) {\n        callback();\n\n        return;\n    }\n    iq.c('logout', {\n        xmlns: 'http://jitsi.org/protocol/focus',\n        'session-id': sessionId\n    });\n    this.connection.sendIQ(\n        iq,\n        result => {\n            // eslint-disable-next-line newline-per-chained-call\n            let logoutUrl = $(result).find('logout').attr('logout-url');\n\n            if (logoutUrl) {\n                logoutUrl = decodeURIComponent(logoutUrl);\n            }\n            logger.info(`Log out OK, url: ${logoutUrl}`, result);\n            Settings.sessionId = undefined;\n            callback(logoutUrl);\n        },\n        error => {\n            const errmsg = 'Logout error';\n\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n            logger.error(errmsg, error);\n        }\n    );\n};\n","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { Strophe } from 'strophe.js';\n\nimport ChatRoom from './ChatRoom';\nimport { ConnectionPluginListenable } from './ConnectionPlugin';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * MUC connection plugin.\n */\nclass MucConnectionPlugin extends ConnectionPluginListenable {\n    /**\n     *\n     * @param xmpp\n     */\n    constructor(xmpp) {\n        super();\n        this.xmpp = xmpp;\n        this.rooms = {};\n    }\n\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n\n        // add handlers (just once)\n        this.connection.addHandler(this.onPresence.bind(this), null,\n            'presence', null, null, null, null);\n        this.connection.addHandler(this.onPresenceUnavailable.bind(this),\n            null, 'presence', 'unavailable', null);\n        this.connection.addHandler(this.onPresenceError.bind(this), null,\n            'presence', 'error', null);\n        this.connection.addHandler(this.onMessage.bind(this), null,\n            'message', null, null);\n        this.connection.addHandler(this.onMute.bind(this),\n            'http://jitsi.org/jitmeet/audio', 'iq', 'set', null, null);\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     * @param options\n     */\n    createRoom(jid, password, options) {\n        const roomJid = Strophe.getBareJidFromJid(jid);\n\n        if (this.rooms[roomJid]) {\n            const errmsg = 'You are already in the room!';\n\n            logger.error(errmsg);\n            throw new Error(errmsg);\n        }\n        this.rooms[roomJid] = new ChatRoom(this.connection, jid,\n            password, this.xmpp, options);\n        this.eventEmitter.emit(\n            XMPPEvents.EMUC_ROOM_ADDED, this.rooms[roomJid]);\n\n        return this.rooms[roomJid];\n    }\n\n    /**\n     *\n     * @param jid\n     */\n    doLeave(jid) {\n        this.eventEmitter.emit(\n            XMPPEvents.EMUC_ROOM_REMOVED, this.rooms[jid]);\n        delete this.rooms[jid];\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresence(pres) {\n        const from = pres.getAttribute('from');\n\n        // What is this for? A workaround for something?\n        if (pres.getAttribute('type')) {\n            return true;\n        }\n\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return true;\n        }\n\n        // Parse status.\n        if ($(pres).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n            + '>status[code=\"201\"]').length) {\n            room.createNonAnonymousRoom();\n        }\n\n        room.onPresence(pres);\n\n        return true;\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresenceUnavailable(pres) {\n        const from = pres.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return true;\n        }\n\n        room.onPresenceUnavailable(pres, from);\n\n        return true;\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresenceError(pres) {\n        const from = pres.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return true;\n        }\n\n        room.onPresenceError(pres, from);\n\n        return true;\n    }\n\n    /**\n     *\n     * @param msg\n     */\n    onMessage(msg) {\n        // FIXME: this is a hack. but jingle on muc makes nickchanges hard\n        const from = msg.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return true;\n        }\n\n        room.onMessage(msg, from);\n\n        return true;\n    }\n\n    /**\n     * TODO: Document\n     * @param iq\n     */\n    onMute(iq) {\n        const from = iq.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        // Returning false would result in the listener being deregistered by Strophe\n        if (!room) {\n            return true;\n        }\n\n        room.onMute(iq);\n\n        return true;\n    }\n}\n\n/**\n *\n * @param XMPP\n */\nexport default function(XMPP) {\n    Strophe.addConnectionPlugin('emuc', new MucConnectionPlugin(XMPP));\n}\n","/* global $, __filename */\n\nimport {\n    ACTION_JINGLE_TR_RECEIVED,\n    ACTION_JINGLE_TR_SUCCESS,\n    createJingleEvent\n} from '../../service/statistics/AnalyticsEvents';\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\n\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport RandomUtil from '../util/RandomUtil';\nimport Statistics from '../statistics/statistics';\n\nimport JingleSessionPC from './JingleSessionPC';\nimport ConnectionPlugin from './ConnectionPlugin';\n\nconst logger = getLogger(__filename);\n\n// XXX Strophe is build around the idea of chaining function calls so allow long\n// function call chains.\n/* eslint-disable newline-per-chained-call */\n\n/**\n *\n */\nclass JingleConnectionPlugin extends ConnectionPlugin {\n    /**\n     * Creates new <tt>JingleConnectionPlugin</tt>\n     * @param {XMPP} xmpp\n     * @param {EventEmitter} eventEmitter\n     * @param {Object} iceConfig an object that holds the iceConfig to be passed\n     * to the p2p and the jvb <tt>PeerConnection</tt>.\n     */\n    constructor(xmpp, eventEmitter, iceConfig) {\n        super();\n        this.xmpp = xmpp;\n        this.eventEmitter = eventEmitter;\n        this.sessions = {};\n        this.jvbIceConfig = iceConfig.jvb;\n        this.p2pIceConfig = iceConfig.p2p;\n        this.mediaConstraints = {\n            offerToReceiveAudio: true,\n            offerToReceiveVideo: true\n        };\n    }\n\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n        this.connection.addHandler(this.onJingle.bind(this),\n            'urn:xmpp:jingle:1', 'iq', 'set', null, null);\n    }\n\n    /**\n     *\n     * @param iq\n     */\n    onJingle(iq) {\n        const sid = $(iq).find('jingle').attr('sid');\n        const action = $(iq).find('jingle').attr('action');\n        const fromJid = iq.getAttribute('from');\n\n        // send ack first\n        const ack = $iq({ type: 'result',\n            to: fromJid,\n            id: iq.getAttribute('id')\n        });\n\n        logger.log(`on jingle ${action} from ${fromJid}`, iq);\n        let sess = this.sessions[sid];\n\n        if (action !== 'session-initiate') {\n            if (!sess) {\n                ack.attrs({ type: 'error' });\n                ack.c('error', { type: 'cancel' })\n                    .c('item-not-found', {\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\n                    })\n                    .up()\n                    .c('unknown-session', {\n                        xmlns: 'urn:xmpp:jingle:errors:1'\n                    });\n                logger.warn('invalid session id', iq);\n                this.connection.send(ack);\n\n                return true;\n            }\n\n            // local jid is not checked\n            if (fromJid !== sess.remoteJid) {\n                logger.warn(\n                    'jid mismatch for session id', sid, sess.remoteJid, iq);\n                ack.attrs({ type: 'error' });\n                ack.c('error', { type: 'cancel' })\n                    .c('item-not-found', {\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\n                    })\n                    .up()\n                    .c('unknown-session', {\n                        xmlns: 'urn:xmpp:jingle:errors:1'\n                    });\n                this.connection.send(ack);\n\n                return true;\n            }\n        } else if (sess !== undefined) {\n            // Existing session with same session id. This might be out-of-order\n            // if the sess.remoteJid is the same as from.\n            ack.attrs({ type: 'error' });\n            ack.c('error', { type: 'cancel' })\n                .c('service-unavailable', {\n                    xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\n                })\n                .up();\n            logger.warn('duplicate session id', sid, iq);\n            this.connection.send(ack);\n\n            return true;\n        }\n        const now = window.performance.now();\n\n        // FIXME that should work most of the time, but we'd have to\n        // think how secure it is to assume that user with \"focus\"\n        // nickname is Jicofo.\n        const isP2P = Strophe.getResourceFromJid(fromJid) !== 'focus';\n\n        // see http://xmpp.org/extensions/xep-0166.html#concepts-session\n\n        switch (action) {\n        case 'session-initiate': {\n            logger.log('(TIME) received session-initiate:\\t', now);\n            const startMuted = $(iq).find('jingle>startmuted');\n\n            if (startMuted && startMuted.length > 0) {\n                const audioMuted = startMuted.attr('audio');\n                const videoMuted = startMuted.attr('video');\n\n                this.eventEmitter.emit(\n                    XMPPEvents.START_MUTED_FROM_FOCUS,\n                    audioMuted === 'true',\n                    videoMuted === 'true');\n            }\n\n            logger.info(\n                `Marking session from ${fromJid\n                } as ${isP2P ? '' : '*not*'} P2P`);\n            sess\n                = new JingleSessionPC(\n                    $(iq).find('jingle').attr('sid'),\n                    $(iq).attr('to'),\n                    fromJid,\n                    this.connection,\n                    this.mediaConstraints,\n                    isP2P ? this.p2pIceConfig : this.jvbIceConfig,\n                    isP2P,\n                    /* initiator */ false);\n\n            this.sessions[sess.sid] = sess;\n\n            this.eventEmitter.emit(XMPPEvents.CALL_INCOMING,\n                sess, $(iq).find('>jingle'), now);\n            break;\n        }\n        case 'session-accept': {\n            this.eventEmitter.emit(\n                XMPPEvents.CALL_ACCEPTED, sess, $(iq).find('>jingle'));\n            break;\n        }\n        case 'content-modify': {\n            sess.modifyContents($(iq).find('>jingle'));\n            break;\n        }\n        case 'transport-info': {\n            this.eventEmitter.emit(\n                XMPPEvents.TRANSPORT_INFO, sess, $(iq).find('>jingle'));\n            break;\n        }\n        case 'session-terminate': {\n            logger.log('terminating...', sess.sid);\n            let reasonCondition = null;\n            let reasonText = null;\n\n            if ($(iq).find('>jingle>reason').length) {\n                reasonCondition\n                    = $(iq).find('>jingle>reason>:first')[0].tagName;\n                reasonText = $(iq).find('>jingle>reason>text').text();\n            }\n            this.terminate(sess.sid, reasonCondition, reasonText);\n            this.eventEmitter.emit(XMPPEvents.CALL_ENDED,\n                sess, reasonCondition, reasonText);\n            break;\n        }\n        case 'transport-replace':\n            logger.info('(TIME) Start transport replace', now);\n            Statistics.sendAnalytics(createJingleEvent(\n                ACTION_JINGLE_TR_RECEIVED,\n                {\n                    p2p: isP2P,\n                    value: now\n                }));\n\n            sess.replaceTransport($(iq).find('>jingle'), () => {\n                const successTime = window.performance.now();\n\n                logger.info('(TIME) Transport replace success!', successTime);\n                Statistics.sendAnalytics(createJingleEvent(\n                    ACTION_JINGLE_TR_SUCCESS,\n                    {\n                        p2p: isP2P,\n                        value: successTime\n                    }));\n            }, error => {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error('Transport replace failed', error);\n                sess.sendTransportReject();\n            });\n            break;\n        case 'addsource': // FIXME: proprietary, un-jingleish\n        case 'source-add': // FIXME: proprietary\n            sess.addRemoteStream($(iq).find('>jingle>content'));\n            break;\n        case 'removesource': // FIXME: proprietary, un-jingleish\n        case 'source-remove': // FIXME: proprietary\n            sess.removeRemoteStream($(iq).find('>jingle>content'));\n            break;\n        default:\n            logger.warn('jingle action not implemented', action);\n            ack.attrs({ type: 'error' });\n            ack.c('error', { type: 'cancel' })\n                .c('bad-request',\n                    { xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas' })\n                .up();\n            break;\n        }\n        this.connection.send(ack);\n\n        return true;\n    }\n\n    /**\n     * Creates new <tt>JingleSessionPC</tt> meant to be used in a direct P2P\n     * connection, configured as 'initiator'.\n     * @param {string} me our JID\n     * @param {string} peer remote participant's JID\n     * @return {JingleSessionPC}\n     */\n    newP2PJingleSession(me, peer) {\n        const sess\n            = new JingleSessionPC(\n                RandomUtil.randomHexString(12),\n                me,\n                peer,\n                this.connection,\n                this.mediaConstraints,\n                this.p2pIceConfig,\n                /* P2P */ true,\n                /* initiator */ true);\n\n        this.sessions[sess.sid] = sess;\n\n        return sess;\n    }\n\n    /**\n     *\n     * @param sid\n     * @param reasonCondition\n     * @param reasonText\n     */\n    terminate(sid, reasonCondition, reasonText) {\n        if (this.sessions.hasOwnProperty(sid)) {\n            if (this.sessions[sid].state !== 'ended') {\n                this.sessions[sid].onTerminated(reasonCondition, reasonText);\n            }\n            delete this.sessions[sid];\n        }\n    }\n\n    /**\n     *\n     */\n    getStunAndTurnCredentials() {\n        // get stun and turn configuration from server via xep-0215\n        // uses time-limited credentials as described in\n        // http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00\n        //\n        // See https://modules.prosody.im/mod_turncredentials.html\n        // for a prosody module which implements this.\n        //\n        // Currently, this doesn't work with updateIce and therefore credentials\n        // with a long validity have to be fetched before creating the\n        // peerconnection.\n        // TODO: implement refresh via updateIce as described in\n        //      https://code.google.com/p/webrtc/issues/detail?id=1650\n        this.connection.sendIQ(\n            $iq({ type: 'get',\n                to: this.connection.domain })\n                .c('services', { xmlns: 'urn:xmpp:extdisco:1' }),\n            res => {\n                const iceservers = [];\n\n                $(res).find('>services>service').each((idx, el) => {\n                    // eslint-disable-next-line no-param-reassign\n                    el = $(el);\n                    const dict = {};\n                    const type = el.attr('type');\n\n                    switch (type) {\n                    case 'stun':\n                        dict.url = `stun:${el.attr('host')}`;\n                        if (el.attr('port')) {\n                            dict.url += `:${el.attr('port')}`;\n                        }\n                        iceservers.push(dict);\n                        break;\n                    case 'turn':\n                    case 'turns': {\n                        dict.url = `${type}:`;\n                        const username = el.attr('username');\n\n                        // https://code.google.com/p/webrtc/issues/detail\n                        // ?id=1508\n\n                        if (username) {\n                            const match\n                                = navigator.userAgent.match(\n                                    /Chrom(e|ium)\\/([0-9]+)\\./);\n\n                            if (match && parseInt(match[2], 10) < 28) {\n                                dict.url += `${username}@`;\n                            } else {\n                                // only works in M28\n                                dict.username = username;\n                            }\n                        }\n                        dict.url += el.attr('host');\n                        const port = el.attr('port');\n\n                        if (port) {\n                            dict.url += `:${el.attr('port')}`;\n                        }\n                        const transport = el.attr('transport');\n\n                        if (transport && transport !== 'udp') {\n                            dict.url += `?transport=${transport}`;\n                        }\n\n                        dict.credential = el.attr('password')\n                                || dict.credential;\n                        iceservers.push(dict);\n                        break;\n                    }\n                    }\n                });\n\n                const options = this.xmpp.options;\n\n                if (options.useStunTurn) {\n                    // we want to filter and leave only tcp/turns candidates\n                    // which make sense for the jvb connections\n                    this.jvbIceConfig.iceServers\n                        = iceservers.filter(s => s.url.startsWith('turns'));\n                }\n\n                if (options.p2p && options.p2p.useStunTurn) {\n                    this.p2pIceConfig.iceServers = iceservers;\n                }\n\n            }, err => {\n                logger.warn('getting turn credentials failed', err);\n                logger.warn('is mod_turncredentials or similar installed?');\n            });\n\n        // implement push?\n    }\n\n    /**\n     * Returns the data saved in 'updateLog' in a format to be logged.\n     */\n    getLog() {\n        const data = {};\n\n        Object.keys(this.sessions).forEach(sid => {\n            const session = this.sessions[sid];\n            const pc = session.peerconnection;\n\n            if (pc && pc.updateLog) {\n                // FIXME: should probably be a .dump call\n                data[`jingle_${sid}`] = {\n                    updateLog: pc.updateLog,\n                    stats: pc.stats,\n                    url: window.location.href\n                };\n            }\n        });\n\n        return data;\n    }\n}\n\n/* eslint-enable newline-per-chained-call */\n\n/**\n *\n * @param XMPP\n * @param eventEmitter\n * @param iceConfig\n */\nexport default function initJingle(XMPP, eventEmitter, iceConfig) {\n    Strophe.addConnectionPlugin(\n        'jingle',\n        new JingleConnectionPlugin(XMPP, eventEmitter, iceConfig));\n}\n","import { Strophe } from 'strophe.js';\n\nimport ConnectionPlugin from './ConnectionPlugin';\n\n/**\n *  Logs raw stanzas and makes them available for download as JSON\n */\nclass StropheLogger extends ConnectionPlugin {\n    /**\n     *\n     */\n    constructor() {\n        super();\n        this.log = [];\n    }\n\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n        this.connection.rawInput = this.logIncoming.bind(this);\n        this.connection.rawOutput = this.logOutgoing.bind(this);\n    }\n\n    /**\n     *\n     * @param stanza\n     */\n    logIncoming(stanza) {\n        this.log.push([ new Date().getTime(), 'incoming', stanza ]);\n    }\n\n    /**\n     *\n     * @param stanza\n     */\n    logOutgoing(stanza) {\n        this.log.push([ new Date().getTime(), 'outgoing', stanza ]);\n    }\n}\n\n/**\n *\n */\nexport default function() {\n    Strophe.addConnectionPlugin('logger', new StropheLogger());\n}\n","import { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\n\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nimport ConnectionPlugin from './ConnectionPlugin';\n\n\nconst logger = getLogger(__filename);\n\n/**\n * Ping every 10 sec\n */\nconst PING_INTERVAL = 10000;\n\n/**\n * Ping timeout error after 15 sec of waiting.\n */\nconst PING_TIMEOUT = 15000;\n\n/**\n * Will close the connection after 3 consecutive ping errors.\n */\nconst PING_THRESHOLD = 3;\n\n/**\n * The number of timestamps of send pings to keep.\n * The current value is 2 minutes.\n * @type {number} number of timestamps.\n */\nconst PING_TIMESTAMPS_TO_KEEP = 120000 / PING_INTERVAL;\n\n/**\n * XEP-0199 ping plugin.\n *\n * Registers \"urn:xmpp:ping\" namespace under Strophe.NS.PING.\n */\nclass PingConnectionPlugin extends ConnectionPlugin {\n    /**\n     * Contructs new object\n     * @param {XMPP} xmpp the xmpp module.\n     * @constructor\n     */\n    constructor(xmpp) {\n        super();\n        this.failedPings = 0;\n        this.xmpp = xmpp;\n        this.pingExecIntervals = new Array(PING_TIMESTAMPS_TO_KEEP);\n    }\n\n    /**\n     * Initializes the plugin. Method called by Strophe.\n     * @param connection Strophe connection instance.\n     */\n    init(connection) {\n        super.init(connection);\n        Strophe.addNamespace('PING', 'urn:xmpp:ping');\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Sends \"ping\" to given <tt>jid</tt>\n     * @param jid the JID to which ping request will be sent.\n     * @param success callback called on success.\n     * @param error callback called on error.\n     * @param timeout ms how long are we going to wait for the response. On\n     * timeout <tt>error<//t> callback is called with undefined error argument.\n     */\n    ping(jid, success, error, timeout) {\n        this._addPingExecutionTimestamp();\n\n        const iq = $iq({\n            type: 'get',\n            to: jid\n        });\n\n        iq.c('ping', { xmlns: Strophe.NS.PING });\n        this.connection.sendIQ(iq, success, error, timeout);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Starts to send ping in given interval to specified remote JID.\n     * This plugin supports only one such task and <tt>stopInterval</tt>\n     * must be called before starting a new one.\n     * @param remoteJid remote JID to which ping requests will be sent to.\n     * @param interval task interval in ms.\n     */\n    startInterval(remoteJid, interval = PING_INTERVAL) {\n        if (this.intervalId) {\n            const errmsg = 'Ping task scheduled already';\n\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n            logger.error(errmsg);\n\n            return;\n        }\n        this.intervalId = window.setInterval(() => {\n            this.ping(remoteJid, () => {\n                this.failedPings = 0;\n            }, error => {\n                this.failedPings += 1;\n                const errmsg = `Ping ${error ? 'error' : 'timeout'}`;\n\n                if (this.failedPings >= PING_THRESHOLD) {\n                    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n                    logger.error(errmsg, error);\n\n                    // FIXME it doesn't help to disconnect when 3rd PING\n                    // times out, it only stops Strophe from retrying.\n                    // Not really sure what's the right thing to do in that\n                    // situation, but just closing the connection makes no\n                    // sense.\n                    // self.connection.disconnect();\n                } else {\n                    logger.warn(errmsg, error);\n                }\n            }, PING_TIMEOUT);\n        }, interval);\n        logger.info(`XMPP pings will be sent every ${interval} ms`);\n    }\n\n    /**\n     * Stops current \"ping\"  interval task.\n     */\n    stopInterval() {\n        if (this.intervalId) {\n            window.clearInterval(this.intervalId);\n            this.intervalId = null;\n            this.failedPings = 0;\n            logger.info('Ping interval cleared');\n        }\n    }\n\n    /**\n     * Adds the current time to the array of send ping timestamps.\n     * @private\n     */\n    _addPingExecutionTimestamp() {\n        this.pingExecIntervals.push(new Date().getTime());\n\n        // keep array length to PING_TIMESTAMPS_TO_KEEP\n        if (this.pingExecIntervals.length > PING_TIMESTAMPS_TO_KEEP) {\n            this.pingExecIntervals.shift();\n        }\n    }\n\n    /**\n     * Returns the maximum time between the recent sent pings, if there is a\n     * big value it means the computer was inactive for some time(suspended).\n     * Checks the maximum gap between sending pings, considering and the\n     * current time. Trying to detect computer inactivity (sleep).\n     *\n     * @returns {int} the time ping was suspended, if it was not 0 is returned.\n     */\n    getPingSuspendTime() {\n        const pingIntervals = this.pingExecIntervals.slice();\n\n        // we need current time, as if ping was sent now\n        // if computer sleeps we will get correct interval after next\n        // scheduled ping, bet we sometimes need that interval before waiting\n        // for the next ping, on closing the connection on error.\n        pingIntervals.push(new Date().getTime());\n\n        let maxInterval = 0;\n        let previousTS = pingIntervals[0];\n\n        pingIntervals.forEach(e => {\n            const currentInterval = e - previousTS;\n\n            if (currentInterval > maxInterval) {\n                maxInterval = currentInterval;\n            }\n\n            previousTS = e;\n        });\n\n        // remove the interval between the ping sent\n        // this way in normal execution there is no suspend and the return\n        // will be 0 or close to 0.\n        maxInterval -= PING_INTERVAL;\n\n        // make sure we do not return less than 0\n        return Math.max(maxInterval, 0);\n    }\n}\n\n/**\n *\n * @param xmpp\n */\nexport default function(xmpp) {\n    Strophe.addConnectionPlugin('ping', new PingConnectionPlugin(xmpp));\n}\n","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\n\nimport ConnectionPlugin from './ConnectionPlugin';\n\nconst logger = getLogger(__filename);\n\nconst RAYO_XMLNS = 'urn:xmpp:rayo:1';\n\n/**\n *\n */\nclass RayoConnectionPlugin extends ConnectionPlugin {\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n\n        this.connection.addHandler(\n            this.onRayo.bind(this), RAYO_XMLNS, 'iq', 'set', null, null);\n    }\n\n    /**\n     *\n     * @param iq\n     */\n    onRayo(iq) {\n        logger.info('Rayo IQ', iq);\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     *\n     * @param to\n     * @param from\n     * @param roomName\n     * @param roomPass\n     * @param focusMucJid\n     */\n    dial(to, from, roomName, roomPass, focusMucJid) {\n        return new Promise((resolve, reject) => {\n            if (!focusMucJid) {\n                reject(new Error('Internal error!'));\n\n                return;\n            }\n            const req = $iq({\n                type: 'set',\n                to: focusMucJid\n            });\n\n            req.c('dial', {\n                xmlns: RAYO_XMLNS,\n                to,\n                from\n            });\n            req.c('header', {\n                name: 'JvbRoomName',\n                value: roomName\n            }).up();\n\n            if (roomPass && roomPass.length) {\n                req.c('header', {\n                    name: 'JvbRoomPassword',\n                    value: roomPass\n                }).up();\n            }\n\n            this.connection.sendIQ(\n                req,\n                result => {\n                    logger.info('Dial result ', result);\n\n                    // eslint-disable-next-line newline-per-chained-call\n                    const resource = $(result).find('ref').attr('uri');\n\n                    this.callResource = resource.substr('xmpp:'.length);\n                    logger.info(`Received call resource: ${this.callResource}`);\n                    resolve();\n                },\n                error => {\n                    logger.info('Dial error ', error);\n                    reject(error);\n                });\n        });\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     *\n     */\n    hangup() {\n        return new Promise((resolve, reject) => {\n            if (!this.callResource) {\n                reject(new Error('No call in progress'));\n                logger.warn('No call in progress');\n\n                return;\n            }\n\n            const req = $iq({\n                type: 'set',\n                to: this.callResource\n            });\n\n            req.c('hangup', {\n                xmlns: RAYO_XMLNS\n            });\n\n            this.connection.sendIQ(req, result => {\n                logger.info('Hangup result ', result);\n                this.callResource = null;\n                resolve();\n            }, error => {\n                logger.info('Hangup error ', error);\n                this.callResource = null;\n                reject(new Error('Hangup error '));\n            });\n        });\n    }\n}\n\n/**\n *\n */\nexport default function() {\n    Strophe.addConnectionPlugin('rayo', new RayoConnectionPlugin());\n}\n","/* global __filename */\n/**\n * Strophe logger implementation. Logs from level WARN and above.\n */\nimport { getLogger } from 'jitsi-meet-logger';\nimport { Strophe } from 'strophe.js';\n\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = getLogger(__filename);\n\n/**\n * This is the last HTTP error status captured from Strophe debug logs.\n * The purpose of storing it is to distinguish between the network and\n * infrastructure reason for connection being dropped (see connectionHandler in\n * xmpp.js). The value will be cleared (-1) if the subsequent request succeeds\n * which means that the failure could be transient.\n *\n * FIXME in the latest Strophe (not released on npm) there is API to handle\n * particular HTTP errors, but there is no way to learn if the subsequent\n * request succeeded in order to tell if the error was one time incident or if\n * it was the reason for dropping the connection by Strophe (the connection is\n * dropped after 5 subsequent failures). Ideally Strophe should provide more\n * details about the reason on why the connection stopped.\n *\n * @type {number}\n */\nlet lastErrorStatus = -1;\n\n/**\n * A regular expression used to catch Strophe's log message indicating that the\n * last BOSH request was successful. When there is such message seen the\n * {@link lastErrorStatus} will be set back to '-1'.\n * @type {RegExp}\n */\nconst resetLastErrorStatusRegExpr = /request id \\d+.\\d+ got 200/;\n\n/**\n * A regular expression used to capture the current value of the BOSH request\n * error status (HTTP error code or '0' or something else).\n * @type {RegExp}\n */\nconst lastErrorStatusRegExpr\n    = /request errored, status: (\\d+), number of errors: \\d+/;\n\n/**\n *\n */\nexport default function() {\n\n    Strophe.log = function(level, msg) {\n        // Our global handler reports uncaught errors to the stats which may\n        // interpret those as partial call failure.\n        // Strophe log entry about secondary request timeout does not mean that\n        // it's a final failure(the request will be restarted), so we lower it's\n        // level here to a warning.\n        logger.trace('Strophe', level, msg);\n        if (typeof msg === 'string'\n                && msg.indexOf('Request ') !== -1\n                && msg.indexOf('timed out (secondary), restarting') !== -1) {\n            // eslint-disable-next-line no-param-reassign\n            level = Strophe.LogLevel.WARN;\n        }\n\n        /* eslint-disable no-case-declarations */\n        switch (level) {\n        case Strophe.LogLevel.DEBUG:\n            // The log message which reports successful status is logged on\n            // Strophe's DEBUG level.\n            if (lastErrorStatus !== -1\n                    && resetLastErrorStatusRegExpr.test(msg)) {\n                logger.debug('Reset lastErrorStatus');\n                lastErrorStatus = -1;\n            }\n            break;\n        case Strophe.LogLevel.WARN:\n            logger.warn(`Strophe: ${msg}`);\n            const errStatusCapture = lastErrorStatusRegExpr.exec(msg);\n\n            if (errStatusCapture && errStatusCapture.length === 2) {\n                lastErrorStatus = parseInt(errStatusCapture[1], 10);\n                logger.debug(`lastErrorStatus set to: ${lastErrorStatus}`);\n            }\n            break;\n        case Strophe.LogLevel.ERROR:\n        case Strophe.LogLevel.FATAL:\n            // eslint-disable-next-line no-param-reassign\n            msg = `Strophe: ${msg}`;\n            GlobalOnErrorHandler.callErrorHandler(new Error(msg));\n            logger.error(msg);\n            break;\n        }\n\n        /* eslint-enable no-case-declarations */\n    };\n\n    /**\n     * Returns error status (HTTP error code) of the last BOSH request.\n     *\n     * @return {number} HTTP error code, '0' for unknown or \"god knows what\"\n     * (this is a hack).\n     */\n    Strophe.getLastErrorStatus = function() {\n        return lastErrorStatus;\n    };\n\n    Strophe.getStatusString = function(status) {\n        switch (status) {\n        case Strophe.Status.ERROR:\n            return 'ERROR';\n        case Strophe.Status.CONNECTING:\n            return 'CONNECTING';\n        case Strophe.Status.CONNFAIL:\n            return 'CONNFAIL';\n        case Strophe.Status.AUTHENTICATING:\n            return 'AUTHENTICATING';\n        case Strophe.Status.AUTHFAIL:\n            return 'AUTHFAIL';\n        case Strophe.Status.CONNECTED:\n            return 'CONNECTED';\n        case Strophe.Status.DISCONNECTED:\n            return 'DISCONNECTED';\n        case Strophe.Status.DISCONNECTING:\n            return 'DISCONNECTING';\n        case Strophe.Status.ATTACHED:\n            return 'ATTACHED';\n        default:\n            return 'unknown';\n        }\n    };\n}\n","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $msg, $pres, Strophe } from 'strophe.js';\nimport 'strophejs-plugin-disco';\n\nimport RandomUtil from '../util/RandomUtil';\nimport * as JitsiConnectionErrors from '../../JitsiConnectionErrors';\nimport * as JitsiConnectionEvents from '../../JitsiConnectionEvents';\nimport browser from '../browser';\nimport initEmuc from './strophe.emuc';\nimport initJingle from './strophe.jingle';\nimport initStropheUtil from './strophe.util';\nimport initPing from './strophe.ping';\nimport initRayo from './strophe.rayo';\nimport initStropheLogger from './strophe.logger';\nimport LastSuccessTracker from './StropheBoshLastSuccess';\nimport Listenable from '../util/Listenable';\nimport Caps from './Caps';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n *\n * @param token\n * @param bosh\n */\nfunction createConnection(token, bosh = '/http-bind') {\n    // Append token as URL param\n    if (token) {\n        // eslint-disable-next-line no-param-reassign\n        bosh += `${bosh.indexOf('?') === -1 ? '?' : '&'}token=${token}`;\n    }\n\n    const conn = new Strophe.Connection(bosh);\n\n    // The default maxRetries is 5, which is too long.\n    conn.maxRetries = 3;\n\n    return conn;\n}\n\n// FIXME: remove once we have a default config template. -saghul\n/**\n * A list of ice servers to use by default for P2P.\n */\nexport const DEFAULT_STUN_SERVERS = [\n    { urls: 'stun:stun.l.google.com:19302' },\n    { urls: 'stun:stun1.l.google.com:19302' },\n    { urls: 'stun:stun2.l.google.com:19302' }\n];\n\n/**\n * The name of the field used to recognize a chat message as carrying a JSON\n * payload from another endpoint.\n * If the json-message of a chat message contains a valid JSON object, and\n * the JSON has this key, then it is a valid json-message to be sent.\n */\nexport const JITSI_MEET_MUC_TYPE = 'type';\n\n/**\n *\n */\nexport default class XMPP extends Listenable {\n    /**\n     * FIXME describe all options\n     * @param {Object} options\n     * @param {Array<Object>} options.p2pStunServers see\n     * {@link JingleConnectionPlugin} for more details.\n     * @param token\n     */\n    constructor(options, token) {\n        super();\n        this.connection = null;\n        this.disconnectInProgress = false;\n        this.connectionTimes = {};\n        this.options = options;\n        this.token = token;\n        this.authenticatedUser = false;\n        this._initStrophePlugins(this);\n\n        this.connection = createConnection(token, options.bosh);\n\n        this._lastSuccessTracker = new LastSuccessTracker();\n        this._lastSuccessTracker.startTracking(this.connection);\n\n        this.caps = new Caps(this.connection, this.options.clientNode);\n\n        // Initialize features advertised in disco-info\n        this.initFeaturesList();\n\n        // Setup a disconnect on unload as a way to facilitate API consumers. It\n        // sounds like they would want that. A problem for them though may be if\n        // they wanted to utilize the connected connection in an unload handler\n        // of their own. However, it should be fairly easy for them to do that\n        // by registering their unload handler before us.\n        $(window).on('beforeunload unload', ev => {\n            this.disconnect(ev).catch(() => {\n                // ignore errors in order to not brake the unload.\n            });\n        });\n    }\n\n    /**\n     * Initializes the list of feature advertised through the disco-info\n     * mechanism.\n     */\n    initFeaturesList() {\n        // http://xmpp.org/extensions/xep-0167.html#support\n        // http://xmpp.org/extensions/xep-0176.html#support\n        this.caps.addFeature('urn:xmpp:jingle:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:1');\n        this.caps.addFeature('urn:xmpp:jingle:transports:ice-udp:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:dtls:0');\n        this.caps.addFeature('urn:xmpp:jingle:transports:dtls-sctp:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:audio');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:video');\n\n        if (!this.options.disableRtx && browser.supportsRtx()) {\n            this.caps.addFeature('urn:ietf:rfc:4588');\n        }\n\n        // this is dealt with by SDP O/A so we don't need to announce this\n        // XEP-0293\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtcp-fb:0');\n        // XEP-0294\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtp-hdrext:0');\n\n        this.caps.addFeature('urn:ietf:rfc:5761'); // rtcp-mux\n        this.caps.addFeature('urn:ietf:rfc:5888'); // a=group, e.g. bundle\n\n        // this.caps.addFeature('urn:ietf:rfc:5576'); // a=ssrc\n\n        // Enable Lipsync ?\n        if (browser.isChrome() && this.options.enableLipSync !== false) {\n            logger.info('Lip-sync enabled !');\n            this.caps.addFeature('http://jitsi.org/meet/lipsync');\n        }\n\n        if (this.connection.rayo) {\n            this.caps.addFeature('urn:xmpp:rayo:client:1');\n        }\n    }\n\n    /**\n     * Returns {@code true} if the PING functionality is supported by the server\n     * or {@code false} otherwise.\n     * @returns {boolean}\n     */\n    isPingSupported() {\n        return this._pingSupported !== false;\n    }\n\n    /**\n     *\n     */\n    getConnection() {\n        return this.connection;\n    }\n\n    /**\n     * Receive connection status changes and handles them.\n     *\n     * @param {Object} credentials\n     * @param {string} credentials.jid - The user's XMPP ID passed to the\n     * connect method. For example, 'user@xmpp.com'.\n     * @param {string} credentials.password - The password passed to the connect\n     * method.\n     * @param {string} status - One of Strophe's connection status strings.\n     * @param {string} [msg] - The connection error message provided by Strophe.\n     */\n    connectionHandler(credentials = {}, status, msg) {\n        const now = window.performance.now();\n        const statusStr = Strophe.getStatusString(status).toLowerCase();\n\n        this.connectionTimes[statusStr] = now;\n        logger.log(\n            `(TIME) Strophe ${statusStr}${msg ? `[${msg}]` : ''}:\\t`,\n            now);\n\n        this.eventEmitter.emit(XMPPEvents.CONNECTION_STATUS_CHANGED, credentials, status, msg);\n        if (status === Strophe.Status.CONNECTED\n            || status === Strophe.Status.ATTACHED) {\n            if (this.options.useStunTurn\n                || (this.options.p2p && this.options.p2p.useStunTurn)) {\n                this.connection.jingle.getStunAndTurnCredentials();\n            }\n\n            logger.info(`My Jabber ID: ${this.connection.jid}`);\n\n            // Schedule ping ?\n            const pingJid = this.connection.domain;\n\n            this.caps.getFeaturesAndIdentities(pingJid)\n                .then(({ features, identities }) => {\n                    if (features.has(Strophe.NS.PING)) {\n                        this._pingSupported = true;\n                        this.connection.ping.startInterval(pingJid);\n                    } else {\n                        logger.warn(`Ping NOT supported by ${pingJid}`);\n                    }\n\n                    // check for speakerstats\n                    identities.forEach(identity => {\n                        if (identity.type === 'speakerstats') {\n                            this.speakerStatsComponentAddress = identity.name;\n\n                            this.connection.addHandler(\n                                this._onPrivateMessage.bind(this), null,\n                                'message', null, null);\n                        }\n                    });\n                })\n                .catch(error => {\n                    const errmsg = 'Feature discovery error';\n\n                    GlobalOnErrorHandler.callErrorHandler(\n                        new Error(`${errmsg}: ${error}`));\n                    logger.error(errmsg, error);\n                });\n\n            if (credentials.password) {\n                this.authenticatedUser = true;\n            }\n            if (this.connection && this.connection.connected\n                && Strophe.getResourceFromJid(this.connection.jid)) {\n                // .connected is true while connecting?\n                // this.connection.send($pres());\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_ESTABLISHED,\n                    Strophe.getResourceFromJid(this.connection.jid));\n            }\n        } else if (status === Strophe.Status.CONNFAIL) {\n            if (msg === 'x-strophe-bad-non-anon-jid') {\n                this.anonymousConnectionFailed = true;\n            } else {\n                this.connectionFailed = true;\n            }\n            this.lastErrorMsg = msg;\n            if (msg === 'giving-up') {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.OTHER_ERROR, msg);\n            }\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            // Stop ping interval\n            this.connection.ping.stopInterval();\n            const wasIntentionalDisconnect = this.disconnectInProgress;\n            const errMsg = msg || this.lastErrorMsg;\n\n            this.disconnectInProgress = false;\n            if (this.anonymousConnectionFailed) {\n                // prompt user for username and password\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.PASSWORD_REQUIRED);\n            } else if (this.connectionFailed) {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.OTHER_ERROR,\n                    errMsg,\n                    undefined, /* credentials */\n                    this._getConnectionFailedReasonDetails());\n            } else if (wasIntentionalDisconnect) {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_DISCONNECTED, errMsg);\n            } else {\n                // XXX if Strophe drops the connection while not being asked to,\n                // it means that most likely some serious error has occurred.\n                // One currently known case is when a BOSH request fails for\n                // more than 4 times. The connection is dropped without\n                // supplying a reason(error message/event) through the API.\n                logger.error('XMPP connection dropped!');\n\n                // XXX if the last request error is within 5xx range it means it\n                // was a server failure\n                const lastErrorStatus = Strophe.getLastErrorStatus();\n\n                if (lastErrorStatus >= 500 && lastErrorStatus < 600) {\n                    this.eventEmitter.emit(\n                        JitsiConnectionEvents.CONNECTION_FAILED,\n                        JitsiConnectionErrors.SERVER_ERROR,\n                        errMsg || 'server-error',\n                        /* credentials */ undefined,\n                        this._getConnectionFailedReasonDetails());\n                } else {\n                    this.eventEmitter.emit(\n                        JitsiConnectionEvents.CONNECTION_FAILED,\n                        JitsiConnectionErrors.CONNECTION_DROPPED_ERROR,\n                        errMsg || 'connection-dropped-error',\n                        /* credentials */ undefined,\n                        this._getConnectionFailedReasonDetails());\n                }\n            }\n        } else if (status === Strophe.Status.AUTHFAIL) {\n            // wrong password or username, prompt user\n            this.eventEmitter.emit(\n                JitsiConnectionEvents.CONNECTION_FAILED,\n                JitsiConnectionErrors.PASSWORD_REQUIRED,\n                msg,\n                credentials);\n        }\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     */\n    _connect(jid, password) {\n        // connection.connect() starts the connection process.\n        //\n        // As the connection process proceeds, the user supplied callback will\n        // be triggered multiple times with status updates. The callback should\n        // take two arguments - the status code and the error condition.\n        //\n        // The status code will be one of the values in the Strophe.Status\n        // constants. The error condition will be one of the conditions defined\n        // in RFC 3920 or the condition ‘strophe-parsererror’.\n        //\n        // The Parameters wait, hold and route are optional and only relevant\n        // for BOSH connections. Please see XEP 124 for a more detailed\n        // explanation of the optional parameters.\n        //\n        // Connection status constants for use by the connection handler\n        // callback.\n        //\n        //  Status.ERROR - An error has occurred (websockets specific)\n        //  Status.CONNECTING - The connection is currently being made\n        //  Status.CONNFAIL - The connection attempt failed\n        //  Status.AUTHENTICATING - The connection is authenticating\n        //  Status.AUTHFAIL - The authentication attempt failed\n        //  Status.CONNECTED - The connection has succeeded\n        //  Status.DISCONNECTED - The connection has been terminated\n        //  Status.DISCONNECTING - The connection is currently being terminated\n        //  Status.ATTACHED - The connection has been attached\n\n        this.anonymousConnectionFailed = false;\n        this.connectionFailed = false;\n        this.lastErrorMsg = undefined;\n        this.connection.connect(\n            jid,\n            password,\n            this.connectionHandler.bind(this, {\n                jid,\n                password\n            }));\n    }\n\n    /**\n     * Attach to existing connection. Can be used for optimizations. For\n     * example: if the connection is created on the server we can attach to it\n     * and start using it.\n     *\n     * @param options {object} connecting options - rid, sid, jid and password.\n     */\n    attach(options) {\n        const now = this.connectionTimes.attaching = window.performance.now();\n\n        logger.log(`(TIME) Strophe Attaching\\t:${now}`);\n        this.connection.attach(options.jid, options.sid,\n            parseInt(options.rid, 10) + 1,\n            this.connectionHandler.bind(this, {\n                jid: options.jid,\n                password: options.password\n            }));\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     */\n    connect(jid, password) {\n        if (!jid) {\n            const { anonymousdomain, domain } = this.options.hosts;\n            let configDomain = anonymousdomain || domain;\n\n            // Force authenticated domain if room is appended with '?login=true'\n            // or if we're joining with the token\n\n            // FIXME Do not rely on window.location because (1) React Native\n            // does not have a window.location by default and (2) here we cannot\n            // know for sure that query/search has not be stripped from\n            // window.location by the time the following executes.\n            const { location } = window;\n\n            if (anonymousdomain) {\n                const search = location && location.search;\n\n                if ((search && search.indexOf('login=true') !== -1)\n                        || this.token) {\n                    configDomain = domain;\n                }\n            }\n\n            // eslint-disable-next-line no-param-reassign\n            jid = configDomain || (location && location.hostname);\n        }\n\n        return this._connect(jid, password);\n    }\n\n    /**\n     * Joins or creates a muc with the provided jid, created from the passed\n     * in room name and muc host and onCreateResource result.\n     *\n     * @param {string} roomName - The name of the muc to join.\n     * @param {Object} options - Configuration for how to join the muc.\n     * @param {Function} [onCreateResource] - Callback to invoke when a resource\n     * is to be added to the jid.\n     * @returns {Promise} Resolves with an instance of a strophe muc.\n     */\n    createRoom(roomName, options, onCreateResource) {\n        let roomjid = `${roomName}@${this.options.hosts.muc}/`;\n\n        const mucNickname = onCreateResource\n            ? onCreateResource(this.connection.jid, this.authenticatedUser)\n            : RandomUtil.randomHexString(8).toLowerCase();\n\n        logger.info(`JID ${this.connection.jid} using MUC nickname ${mucNickname}`);\n        roomjid += mucNickname;\n\n        return this.connection.emuc.createRoom(roomjid, null, options);\n    }\n\n    /**\n     * Returns the jid of the participant associated with the Strophe connection.\n     *\n     * @returns {string} The jid of the participant.\n     */\n    getJid() {\n        return this.connection.jid;\n    }\n\n    /**\n     * Returns the logs from strophe.jingle.\n     * @returns {Object}\n     */\n    getJingleLog() {\n        const jingle = this.connection.jingle;\n\n\n        return jingle ? jingle.getLog() : {};\n    }\n\n    /**\n     * Returns the logs from strophe.\n     */\n    getXmppLog() {\n        return (this.connection.logger || {}).log || null;\n    }\n\n    /**\n     *\n     */\n    dial(...args) {\n        this.connection.rayo.dial(...args);\n    }\n\n    /**\n     * Pings the server. Remember to check {@link isPingSupported} before using\n     * this method.\n     * @param timeout how many ms before a timeout should occur.\n     * @returns {Promise} resolved on ping success and reject on an error or\n     * a timeout.\n     */\n    ping(timeout) {\n        return new Promise((resolve, reject) => {\n            if (this.isPingSupported()) {\n                this.connection.ping\n                    .ping(this.connection.domain, resolve, reject, timeout);\n            } else {\n                reject('PING operation is not supported by the server');\n            }\n        });\n    }\n\n    /**\n     *\n     */\n    getSessions() {\n        return this.connection.jingle.sessions;\n    }\n\n    /**\n     * Disconnects this from the XMPP server (if this is connected).\n     *\n     * @param {Object} ev - Optionally, the event which triggered the necessity to\n     * disconnect from the XMPP server (e.g. beforeunload, unload).\n     * @returns {Promise} - Resolves when the disconnect process is finished or rejects with an error.\n     */\n    disconnect(ev) {\n        if (this.disconnectInProgress || !this.connection) {\n            this.eventEmitter.emit(JitsiConnectionEvents.WRONG_STATE);\n\n            return Promise.reject(new Error('Wrong connection state!'));\n        }\n\n        this.disconnectInProgress = true;\n\n        return new Promise(resolve => {\n            const disconnectListener = (credentials, status) => {\n                if (status === Strophe.Status.DISCONNECTED) {\n                    resolve();\n                    this.eventEmitter.removeListener(XMPPEvents.CONNECTION_STATUS_CHANGED, disconnectListener);\n                }\n            };\n\n            this.eventEmitter.on(XMPPEvents.CONNECTION_STATUS_CHANGED, disconnectListener);\n\n            // XXX Strophe is asynchronously sending by default. Unfortunately, that\n            // means that there may not be enough time to send an unavailable\n            // presence or disconnect at all. Switching Strophe to synchronous\n            // sending is not much of an option because it may lead to a noticeable\n            // delay in navigating away from the current location. As a compromise,\n            // we will try to increase the chances of sending an unavailable\n            // presence and/or disconecting within the short time span that we have\n            // upon unloading by invoking flush() on the connection. We flush() once\n            // before disconnect() in order to attemtp to have its unavailable\n            // presence at the top of the send queue. We flush() once more after\n            // disconnect() in order to attempt to have its unavailable presence\n            // sent as soon as possible.\n            this.connection.flush();\n\n            if (ev !== null && typeof ev !== 'undefined') {\n                const evType = ev.type;\n\n                if (evType === 'beforeunload' || evType === 'unload') {\n                    // XXX Whatever we said above, synchronous sending is the best\n                    // (known) way to properly disconnect from the XMPP server.\n                    // Consequently, it may be fine to have the source code and\n                    // comment it in or out depending on whether we want to run with\n                    // it for some time.\n                    this.connection.options.sync = true;\n\n                    // This is needed in some browsers where sync xhr sending\n                    // is disabled by default on unload\n                    if (navigator.sendBeacon && !this.connection.disconnecting\n                            && this.connection.connected) {\n                        this.connection._changeConnectStatus(Strophe.Status.DISCONNECTING);\n                        this.connection.disconnecting = true;\n\n                        const body = this.connection._proto._buildBody()\n                            .attrs({\n                                type: 'terminate'\n                            });\n                        const pres = $pres({\n                            xmlns: Strophe.NS.CLIENT,\n                            type: 'unavailable'\n                        });\n\n                        body.cnode(pres.tree());\n\n                        const res = navigator.sendBeacon(\n                            `https:${this.connection.service}`,\n                            Strophe.serialize(body.tree()));\n\n                        logger.info(`Successfully send unavailable beacon ${res}`);\n\n                        this.connection._proto._abortAllRequests();\n                        this.connection._doDisconnect();\n\n                        return;\n                    }\n                }\n            }\n\n            this.connection.disconnect();\n\n            if (this.connection.options.sync !== true) {\n                this.connection.flush();\n            }\n        });\n    }\n\n    /**\n     *\n     */\n    _initStrophePlugins() {\n        const iceConfig = {\n            jvb: { iceServers: [ ] },\n            p2p: { iceServers: [ ] }\n        };\n\n        const p2pStunServers = (this.options.p2p\n            && this.options.p2p.stunServers) || DEFAULT_STUN_SERVERS;\n\n        if (Array.isArray(p2pStunServers)) {\n            logger.info('P2P STUN servers: ', p2pStunServers);\n            iceConfig.p2p.iceServers = p2pStunServers;\n        }\n\n        if (this.options.p2p && this.options.p2p.iceTransportPolicy) {\n            logger.info('P2P ICE transport policy: ',\n                this.options.p2p.iceTransportPolicy);\n\n            iceConfig.p2p.iceTransportPolicy\n                = this.options.p2p.iceTransportPolicy;\n        }\n\n        initEmuc(this);\n        initJingle(this, this.eventEmitter, iceConfig);\n        initStropheUtil();\n        initPing(this);\n        initRayo();\n        initStropheLogger();\n    }\n\n    /**\n     * Returns details about connection failure. Shard change or is it after\n     * suspend.\n     * @returns {object} contains details about a connection failure.\n     * @private\n     */\n    _getConnectionFailedReasonDetails() {\n        const details = {};\n\n        // check for moving between shard if information is available\n        if (this.options.deploymentInfo\n            && this.options.deploymentInfo.shard\n            && this.connection._proto\n            && this.connection._proto.lastResponseHeaders) {\n\n            // split headers by line\n            const headersArr = this.connection._proto.lastResponseHeaders\n                .trim().split(/[\\r\\n]+/);\n            const headers = {};\n\n            headersArr.forEach(line => {\n                const parts = line.split(': ');\n                const header = parts.shift();\n                const value = parts.join(': ');\n\n                headers[header] = value;\n            });\n\n            /* eslint-disable camelcase */\n            details.shard_changed\n                = this.options.deploymentInfo.shard\n                    !== headers['x-jitsi-shard'];\n            /* eslint-enable camelcase */\n        }\n\n        /* eslint-disable camelcase */\n        // check for possible suspend\n        details.suspend_time = this.connection.ping.getPingSuspendTime();\n        details.time_since_last_success = this._lastSuccessTracker.getTimeSinceLastSuccess();\n        /* eslint-enable camelcase */\n\n        return details;\n    }\n\n    /**\n     * Notifies speaker stats component if available that we are the new\n     * dominant speaker in the conference.\n     * @param {String} roomJid - The room jid where the speaker event occurred.\n     */\n    sendDominantSpeakerEvent(roomJid) {\n        // no speaker stats component advertised\n        if (!this.speakerStatsComponentAddress || !roomJid) {\n            return;\n        }\n\n        const msg = $msg({ to: this.speakerStatsComponentAddress });\n\n        msg.c('speakerstats', {\n            xmlns: 'http://jitsi.org/jitmeet',\n            room: roomJid })\n            .up();\n\n        this.connection.send(msg);\n    }\n\n    /**\n     * Check if the given argument is a valid JSON ENDPOINT_MESSAGE string by\n     * parsing it and checking if it has a field called 'type'.\n     *\n     * @param {string} jsonString check if this string is a valid json string\n     * and contains the special structure.\n     * @returns {boolean, object} if given object is a valid JSON string, return\n     * the json object. Otherwise, returns false.\n     */\n    tryParseJSONAndVerify(jsonString) {\n        try {\n            const json = JSON.parse(jsonString);\n\n            // Handle non-exception-throwing cases:\n            // Neither JSON.parse(false) or JSON.parse(1234) throw errors,\n            // hence the type-checking,\n            // but... JSON.parse(null) returns null, and\n            // typeof null === \"object\",\n            // so we must check for that, too.\n            // Thankfully, null is falsey, so this suffices:\n            if (json && typeof json === 'object') {\n                const type = json[JITSI_MEET_MUC_TYPE];\n\n                if (typeof type !== 'undefined') {\n                    return json;\n                }\n\n                logger.debug('parsing valid json but does not have correct '\n                    + 'structure', 'topic: ', type);\n            }\n        } catch (e) {\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     * A private message is received, message that is not addressed to the muc.\n     * We expect private message coming from speaker stats component if it is\n     * enabled and running.\n     *\n     * @param {string} msg - The message.\n     */\n    _onPrivateMessage(msg) {\n        const from = msg.getAttribute('from');\n\n        if (!this.speakerStatsComponentAddress\n            || from !== this.speakerStatsComponentAddress) {\n            return;\n        }\n\n        const jsonMessage = $(msg).find('>json-message')\n            .text();\n        const parsedJson = this.tryParseJSONAndVerify(jsonMessage);\n\n        if (parsedJson\n            && parsedJson[JITSI_MEET_MUC_TYPE] === 'speakerstats'\n            && parsedJson.users) {\n            this.eventEmitter.emit(\n                XMPPEvents.SPEAKER_STATS_RECEIVED, parsedJson.users);\n        }\n\n        return true;\n    }\n}\n","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = function arrayEquals(array) {\n    // if the other array is a falsy value, return\n    if (!array)\n        return false;\n\n    // compare lengths - can save a lot of time\n    if (this.length != array.length)\n        return false;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (this[i] instanceof Array && array[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!arrayEquals.apply(this[i], [array[i]]))\n                return false;\n        } else if (this[i] != array[i]) {\n            // Warning - two different object instances will never be equal:\n            // {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n};\n\n","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexports.Interop = require('./interop');\n","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* global RTCSessionDescription */\n/* global RTCIceCandidate */\n/* jshint -W097 */\n\"use strict\";\n\nvar transform = require('./transform');\nvar arrayEquals = require('./array-equals');\n\n/**\n * Unified Plan mids may be parsed as integers\n */\nfunction midToString(line) {\n    if (typeof line.mid === 'number') {\n        line.mid = line.mid.toString();\n    }\n}\n\n\nfunction Interop() {\n\n    /**\n     * This map holds the most recent Unified Plan offer/answer SDP that was\n     * converted to Plan B, with the SDP type ('offer' or 'answer') as keys and\n     * the SDP string as values.\n     *\n     * @type {{}}\n     */\n    this.cache = {\n        mlB2UMap : {},\n        mlU2BMap : {}\n    };\n}\n\nmodule.exports = Interop;\n\n/**\n * Changes the candidate args to match with the related Unified Plan\n */\nInterop.prototype.candidateToUnifiedPlan = function(candidate) {\n    var cand = new RTCIceCandidate(candidate);\n\n    cand.sdpMLineIndex = this.cache.mlB2UMap[cand.sdpMLineIndex];\n    /* TODO: change sdpMid to (audio|video)-SSRC */\n\n    return cand;\n};\n\n/**\n * Changes the candidate args to match with the related Plan B\n */\nInterop.prototype.candidateToPlanB = function(candidate) {\n    var cand = new RTCIceCandidate(candidate);\n\n    if (cand.sdpMid.indexOf('audio') === 0) {\n      cand.sdpMid = 'audio';\n    } else if (cand.sdpMid.indexOf('video') === 0) {\n      cand.sdpMid = 'video';\n    } else {\n      throw new Error('candidate with ' + cand.sdpMid + ' not allowed');\n    }\n\n    cand.sdpMLineIndex = this.cache.mlU2BMap[cand.sdpMLineIndex];\n\n    return cand;\n};\n\n/**\n * Returns the index of the first m-line with the given media type and with a\n * direction which allows sending, in the last Unified Plan description with\n * type \"answer\" converted to Plan B. Returns {null} if there is no saved\n * answer, or if none of its m-lines with the given type allow sending.\n * @param type the media type (\"audio\" or \"video\").\n * @returns {*}\n */\nInterop.prototype.getFirstSendingIndexFromAnswer = function(type) {\n    if (!this.cache.answer) {\n        return null;\n    }\n\n    var session = transform.parse(this.cache.answer);\n    if (session && session.media && Array.isArray(session.media)){\n        for (var i = 0; i < session.media.length; i++) {\n            if (session.media[i].type == type &&\n                (!session.media[i].direction /* default to sendrecv */ ||\n                    session.media[i].direction === 'sendrecv' ||\n                    session.media[i].direction === 'sendonly')){\n                return i;\n            }\n        }\n    }\n\n    return null;\n};\n\n/**\n * This method transforms a Unified Plan SDP to an equivalent Plan B SDP. A\n * PeerConnection wrapper transforms the SDP to Plan B before passing it to the\n * application.\n *\n * @param desc\n * @returns {*}\n */\nInterop.prototype.toPlanB = function(desc) {\n    var self = this;\n    //#region Preliminary input validation.\n\n    if (typeof desc !== 'object' || desc === null ||\n        typeof desc.sdp !== 'string') {\n        console.warn('An empty description was passed as an argument.');\n        return desc;\n    }\n\n    // Objectify the SDP for easier manipulation.\n    var session = transform.parse(desc.sdp);\n\n    // If the SDP contains no media, there's nothing to transform.\n    if (typeof session.media === 'undefined' ||\n        !Array.isArray(session.media) || session.media.length === 0) {\n        console.warn('The description has no media.');\n        return desc;\n    }\n\n    // Try some heuristics to \"make sure\" this is a Unified Plan SDP. Plan B\n    // SDP has a video, an audio and a data \"channel\" at most.\n    if (session.media.length <= 3 && session.media.every(function(m) {\n            return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\n        })) {\n        console.warn('This description does not look like Unified Plan.');\n        return desc;\n    }\n\n    //#endregion\n\n    // HACK https://bugzilla.mozilla.org/show_bug.cgi?id=1113443\n    var sdp = desc.sdp;\n    var rewrite = false;\n    for (var i = 0; i < session.media.length; i++) {\n        var uLine = session.media[i];\n        uLine.rtp.forEach(function(rtp) {\n            if (rtp.codec === 'NULL')\n            {\n                rewrite = true;\n                var offer = transform.parse(self.cache.offer);\n                rtp.codec = offer.media[i].rtp[0].codec;\n            }\n        });\n    }\n    if (rewrite) {\n        sdp = transform.write(session);\n    }\n\n    // Unified Plan SDP is our \"precious\". Cache it for later use in the Plan B\n    // -> Unified Plan transformation.\n    this.cache[desc.type] = sdp;\n\n    //#region Convert from Unified Plan to Plan B.\n\n    // We rebuild the session.media array.\n    var media = session.media;\n    session.media = [];\n\n    // Associative array that maps channel types to channel objects for fast\n    // access to channel objects by their type, e.g. type2bl['audio']->channel\n    // obj.\n    var type2bl = {};\n\n    // Used to build the group:BUNDLE value after the channels construction\n    // loop.\n    var types = [];\n\n    // Used to aggregate the directions of the m-lines.\n    var directionResult = {};\n\n    media.forEach(function(uLine) {\n        midToString(uLine);\n        // rtcp-mux is required in the Plan B SDP.\n        if ((typeof uLine.rtcpMux !== 'string' ||\n            uLine.rtcpMux !== 'rtcp-mux') &&\n            uLine.direction !== 'inactive' && uLine.type !== 'application') {\n            throw new Error('Cannot convert to Plan B because m-lines ' +\n                'without the rtcp-mux attribute were found.');\n        }\n\n        // If we don't have a channel for this uLine.type OR the selected is\n        // inactive, then select this uLine as the channel basis.\n        if (typeof type2bl[uLine.type] === 'undefined' ||\n            type2bl[uLine.type].direction === 'inactive') {\n            type2bl[uLine.type] = uLine;\n        }\n    });\n\n    // Implode the Unified Plan m-lines/tracks into Plan B channels.\n    media.forEach(function(uLine) {\n        var type = uLine.type;\n\n        if (type === 'application') {\n            uLine.mid = \"data\";\n            session.media.push(uLine);\n            types.push(uLine.mid);\n            return;\n        }\n\n        // Add sources to the channel and handle a=msid.\n        if (typeof uLine.sources === 'object') {\n            Object.keys(uLine.sources).forEach(function(ssrc) {\n                if (typeof type2bl[type].sources !== 'object')\n                    type2bl[type].sources = {};\n\n                // Assign the sources to the channel.\n                type2bl[type].sources[ssrc] = uLine.sources[ssrc];\n\n                if (typeof uLine.msid !== 'undefined') {\n                    // In Plan B the msid is an SSRC attribute. Also, we don't\n                    // care about the obsolete label and mslabel attributes.\n                    //\n                    // Note that it is not guaranteed that the uLine will\n                    // have an msid. recvonly channels in particular don't have\n                    // one.\n                    type2bl[type].sources[ssrc].msid = uLine.msid;\n                }\n                // NOTE ssrcs in ssrc groups will share msids, as\n                // draft-uberti-rtcweb-plan-00 mandates.\n            });\n        }\n\n        // Add ssrc groups to the channel.\n        if (typeof uLine.ssrcGroups !== 'undefined' &&\n                Array.isArray(uLine.ssrcGroups)) {\n\n            // Create the ssrcGroups array, if it's not defined.\n            if (typeof type2bl[type].ssrcGroups === 'undefined' ||\n                    !Array.isArray(type2bl[type].ssrcGroups)) {\n                type2bl[type].ssrcGroups = [];\n            }\n\n            // Different ssrc may belong to the same group\n            if (!arrayEquals.apply(type2bl[type].ssrcGroups,\n                                   [uLine.ssrcGroups])) {\n                type2bl[type].ssrcGroups\n                    = type2bl[type].ssrcGroups.concat(uLine.ssrcGroups);\n            }\n        }\n\n        var direction = uLine.direction;\n\n        directionResult[type]\n            = (directionResult[type] || 0 /* inactive */)\n                | directionMasks[direction || 'inactive'];\n\n        if (type2bl[type] === uLine) {\n            // Plan B mids are in ['audio', 'video', 'data']\n            uLine.mid = type;\n\n            // Plan B doesn't support/need the bundle-only attribute.\n            delete uLine.bundleOnly;\n\n            // In Plan B the msid is an SSRC attribute.\n            delete uLine.msid;\n\n            if (direction !== 'inactive') {\n              // Used to build the group:BUNDLE value after this loop.\n              types.push(type);\n            }\n\n            // Add the channel to the new media array.\n            session.media.push(uLine);\n        }\n    });\n\n    // We regenerate the BUNDLE group with the new mids.\n    session.groups.some(function(group) {\n        if (group.type === 'BUNDLE') {\n            group.mids = types.join(' ');\n            return true;\n        }\n    });\n\n    // msid semantic\n    session.msidSemantic = {\n        semantic: 'WMS',\n        token: '*'\n    };\n\n    var resStr = transform.write(session);\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: resStr\n    });\n\n    //#endregion\n};\n\n/**\n * This method transforms a Plan B SDP to an equivalent Unified Plan SDP. A\n * PeerConnection wrapper transforms the SDP to Unified Plan before passing it\n * to FF.\n *\n * @param desc\n * @returns {*}\n */\nInterop.prototype.toUnifiedPlan = function(desc) {\n    var self = this;\n    //#region Preliminary input validation.\n\n    if (typeof desc !== 'object' || desc === null ||\n        typeof desc.sdp !== 'string') {\n        console.warn('An empty description was passed as an argument.');\n        return desc;\n    }\n\n    var session = transform.parse(desc.sdp);\n\n    // If the SDP contains no media, there's nothing to transform.\n    if (typeof session.media === 'undefined' ||\n        !Array.isArray(session.media) || session.media.length === 0) {\n        console.warn('The description has no media.');\n        return desc;\n    }\n\n    // Try some heuristics to \"make sure\" this is a Plan B SDP. Plan B SDP has\n    // a video, an audio and a data \"channel\" at most.\n    if (session.media.length > 3 || !session.media.every(function(m) {\n            return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\n        })) {\n        console.warn('This description does not look like Plan B.');\n        return desc;\n    }\n\n    // Make sure this Plan B SDP can be converted to a Unified Plan SDP.\n    var mids = [];\n    session.media.forEach(function(m) {\n        mids.push(m.mid);\n    });\n\n    var hasBundle = false;\n    if (typeof session.groups !== 'undefined' &&\n        Array.isArray(session.groups)) {\n        hasBundle = session.groups.every(function(g) {\n            return g.type !== 'BUNDLE' ||\n                arrayEquals.apply(g.mids.sort(), [mids.sort()]);\n        });\n    }\n\n    if (!hasBundle) {\n        throw new Error(\"Cannot convert to Unified Plan because m-lines that\" +\n            \" are not bundled were found.\");\n    }\n\n    //#endregion\n\n\n    //#region Convert from Plan B to Unified Plan.\n\n    // Unfortunately, a Plan B offer/answer doesn't have enough information to\n    // rebuild an equivalent Unified Plan offer/answer.\n    //\n    // For example, if this is a local answer (in Unified Plan style) that we\n    // convert to Plan B prior to handing it over to the application (the\n    // PeerConnection wrapper called us, for instance, after a successful\n    // createAnswer), we want to remember the m-line at which we've seen the\n    // (local) SSRC. That's because when the application wants to do call the\n    // SLD method, forcing us to do the inverse transformation (from Plan B to\n    // Unified Plan), we need to know to which m-line to assign the (local)\n    // SSRC. We also need to know all the other m-lines that the original\n    // answer had and include them in the transformed answer as well.\n    //\n    // Another example is if this is a remote offer that we convert to Plan B\n    // prior to giving it to the application, we want to remember the mid at\n    // which we've seen the (remote) SSRC.\n    //\n    // In the iteration that follows, we use the cached Unified Plan (if it\n    // exists) to assign mids to ssrcs.\n\n    var cached;\n    if (typeof this.cache[desc.type] !== 'undefined') {\n        cached = transform.parse(this.cache[desc.type]);\n    }\n\n    var recvonlySsrcs = {\n        audio: {},\n        video: {}\n    };\n\n    // A helper map that sends mids to m-line objects. We use it later to\n    // rebuild the Unified Plan style session.media array.\n    var mid2ul = {};\n    var bIdx = 0;\n    var uIdx = 0;\n\n    session.media.forEach(function(bLine) {\n\n        if ((typeof bLine.rtcpMux !== 'string' ||\n            bLine.rtcpMux !== 'rtcp-mux') &&\n            bLine.direction !== 'inactive' && bLine.type !== 'application') {\n            throw new Error(\"Cannot convert to Unified Plan because m-lines \" +\n                \"without the rtcp-mux attribute were found.\");\n        }\n\n        if (bLine.type === 'application') {\n            var uLineData = null;\n            if (cached && cached.media) {\n                uLineData = cached.media.find(function(uLine) {\n                    return uLine.type === 'application';\n                });\n            }\n            if (uLineData) {\n                mid2ul[uLineData.mid] = uLineData;\n            } else {\n                mid2ul[bLine.mid] = bLine;\n            }\n            return;\n        }\n\n        // With rtcp-mux and bundle all the channels should have the same ICE\n        // stuff.\n        var sources = bLine.sources;\n        var ssrcGroups = bLine.ssrcGroups;\n        var candidates = bLine.candidates;\n        var iceUfrag = bLine.iceUfrag;\n        var icePwd = bLine.icePwd;\n        var fingerprint = bLine.fingerprint;\n        var port = bLine.port;\n\n        // We'll use the \"bLine\" object as a prototype for each new \"mLine\"\n        // that we create, but first we need to clean it up a bit.\n        delete bLine.sources;\n        delete bLine.ssrcGroups;\n        delete bLine.candidates;\n        delete bLine.iceUfrag;\n        delete bLine.icePwd;\n        delete bLine.fingerprint;\n        delete bLine.port;\n        delete bLine.mid;\n\n        // inverted ssrc group map\n        var ssrc2group = {};\n        if (typeof ssrcGroups !== 'undefined' && Array.isArray(ssrcGroups)) {\n            ssrcGroups.forEach(function (ssrcGroup) {\n\n                // TODO(gp) find out how to receive simulcast with FF. For the\n                // time being, hide it.\n                if (ssrcGroup.semantics === 'SIM') {\n                    return;\n                }\n\n                // XXX This might brake if an SSRC is in more than one group\n                // for some reason.\n                if (typeof ssrcGroup.ssrcs !== 'undefined' &&\n                    Array.isArray(ssrcGroup.ssrcs)) {\n                    ssrcGroup.ssrcs.forEach(function (ssrc) {\n                        if (typeof ssrc2group[ssrc] === 'undefined') {\n                            ssrc2group[ssrc] = [];\n                        }\n\n                        ssrc2group[ssrc].push(ssrcGroup);\n                    });\n                }\n            });\n        }\n\n        // ssrc to m-line index.\n        var ssrc2ml = {};\n\n        if (typeof sources === 'object') {\n\n            // Explode the Plan B channel sources with one m-line per source.\n            Object.keys(sources).forEach(function(ssrc) {\n\n                // The (unified) m-line for this SSRC. We either create it from\n                // scratch or, if it's a grouped SSRC, we re-use a related\n                // mline. In other words, if the source is grouped with another\n                // source, put the two together in the same m-line.\n                var uLine;\n\n                // We assume here that we are the answerer in the O/A, so any\n                // offers which we translate come from the remote side, while\n                // answers are local. So the check below is to make that we\n                // handle receive-only SSRCs in a special way only if they come\n                // from the remote side.\n                if (desc.type==='offer') {\n                    // We want to detect SSRCs which are used by a remote peer\n                    // in an m-line with direction=recvonly (i.e. they are\n                    // being used for RTCP only).\n                    // This information would have gotten lost if the remote\n                    // peer used Unified Plan and their local description was\n                    // translated to Plan B. So we use the lack of an MSID\n                    // attribute to deduce a \"receive only\" SSRC.\n                    if (!sources[ssrc].msid) {\n                        recvonlySsrcs[bLine.type][ssrc] = sources[ssrc];\n                        // Receive-only SSRCs must not create new m-lines. We\n                        // will assign them to an existing m-line later.\n                        return;\n                    }\n                }\n\n                if (typeof ssrc2group[ssrc] !== 'undefined' &&\n                    Array.isArray(ssrc2group[ssrc])) {\n                    ssrc2group[ssrc].some(function (ssrcGroup) {\n                        // ssrcGroup.ssrcs *is* an Array, no need to check\n                        // again here.\n                        return ssrcGroup.ssrcs.some(function (related) {\n                            if (typeof ssrc2ml[related] === 'object') {\n                                uLine = ssrc2ml[related];\n                                return true;\n                            }\n                        });\n                    });\n                }\n\n                if (typeof uLine === 'object') {\n                    // the m-line already exists. Just add the source.\n                    uLine.sources[ssrc] = sources[ssrc];\n                    delete sources[ssrc].msid;\n                } else {\n                    // Use the \"bLine\" as a prototype for the \"uLine\".\n                    uLine = Object.create(bLine);\n                    ssrc2ml[ssrc] = uLine;\n\n                    if (typeof sources[ssrc].msid !== 'undefined') {\n                        // Assign the msid of the source to the m-line. Note\n                        // that it is not guaranteed that the source will have\n                        // msid. In particular \"recvonly\" sources don't have an\n                        // msid. Note that \"recvonly\" is a term only defined\n                        // for m-lines.\n                        uLine.msid = sources[ssrc].msid;\n                        delete sources[ssrc].msid;\n                    }\n\n                    // We assign one SSRC per media line.\n                    uLine.sources = {};\n                    uLine.sources[ssrc] = sources[ssrc];\n                    uLine.ssrcGroups = ssrc2group[ssrc];\n\n                    // Use the cached Unified Plan SDP (if it exists) to assign\n                    // SSRCs to mids.\n                    if (typeof cached !== 'undefined' &&\n                        typeof cached.media !== 'undefined' &&\n                        Array.isArray(cached.media)) {\n\n                        cached.media.forEach(function (m) {\n                            if (typeof m.sources === 'object') {\n                                Object.keys(m.sources).forEach(function (s) {\n                                    if (s === ssrc) {\n                                        uLine.mid = m.mid;\n                                    }\n                                });\n                            }\n                        });\n                    }\n\n                    midToString(uLine);\n\n                    if (typeof uLine.mid === 'undefined') {\n\n                        // If this is an SSRC that we see for the first time\n                        // assign it a new mid. This is typically the case when\n                        // this method is called to transform a remote\n                        // description for the first time or when there is a\n                        // new SSRC in the remote description because a new\n                        // peer has joined the conference. Local SSRCs should\n                        // have already been added to the map in the toPlanB\n                        // method.\n                        //\n                        // Because FF generates answers in Unified Plan style,\n                        // we MUST already have a cached answer with all the\n                        // local SSRCs mapped to some m-line/mid.\n\n                        if (desc.type === 'answer') {\n                            throw new Error(\"An unmapped SSRC was found.\");\n                        }\n\n                        uLine.mid = [bLine.type, '-', ssrc].join('');\n                    }\n\n                    // Include the candidates in the 1st media line.\n                    uLine.candidates = candidates;\n                    uLine.iceUfrag = iceUfrag;\n                    uLine.icePwd = icePwd;\n                    uLine.fingerprint = fingerprint;\n                    uLine.port = port;\n\n                    mid2ul[uLine.mid] = uLine;\n\n                    self.cache.mlU2BMap[uIdx] = bIdx;\n                    if (typeof self.cache.mlB2UMap[bIdx] === 'undefined') {\n                      self.cache.mlB2UMap[bIdx] = uIdx;\n                    }\n                    uIdx++;\n                }\n            });\n        }\n\n        bIdx++;\n    });\n\n    // Rebuild the media array in the right order and add the missing mLines\n    // (missing from the Plan B SDP).\n    session.media = [];\n    mids = []; // reuse\n\n    if (desc.type === 'answer') {\n\n        // The media lines in the answer must match the media lines in the\n        // offer. The order is important too. Here we assume that Firefox is\n        // the answerer, so we merely have to use the reconstructed (unified)\n        // answer to update the cached (unified) answer accordingly.\n        //\n        // In the general case, one would have to use the cached (unified)\n        // offer to find the m-lines that are missing from the reconstructed\n        // answer, potentially grabbing them from the cached (unified) answer.\n        // One has to be careful with this approach because inactive m-lines do\n        // not always have an mid, making it tricky (impossible?) to find where\n        // exactly and which m-lines are missing from the reconstructed answer.\n\n        for (var i = 0; i < cached.media.length; i++) {\n            var uLine = cached.media[i];\n            midToString(uLine);\n\n            if (typeof mid2ul[uLine.mid] === 'undefined') {\n\n                // The mid isn't in the reconstructed (unified) answer.\n                // This is either a (unified) m-line containing a remote\n                // track only, or a (unified) m-line containing a remote\n                // track and a local track that has been removed.\n                // In either case, it MUST exist in the cached\n                // (unified) answer.\n                //\n                // In case this is a removed local track, clean-up\n                // the (unified) m-line and make sure it's 'recvonly' or\n                // 'inactive'.\n\n                delete uLine.msid;\n                delete uLine.sources;\n                delete uLine.ssrcGroups;\n                if (!uLine.direction\n                    || uLine.direction === 'sendrecv')\n                    uLine.direction = 'recvonly';\n                else if (uLine.direction === 'sendonly')\n                    uLine.direction = 'inactive';\n            } else {\n                // This is an (unified) m-line/channel that contains a local\n                // track (sendrecv or sendonly channel) or it's a unified\n                // recvonly m-line/channel. In either case, since we're\n                // going from PlanB -> Unified Plan this m-line MUST\n                // exist in the cached answer.\n            }\n\n            session.media.push(uLine);\n            if (typeof uLine.mid === 'string') {\n                // inactive lines don't/may not have an mid.\n                mids.push(uLine.mid);\n            }\n        }\n    } else {\n\n        // SDP offer/answer (and the JSEP spec) forbids removing an m-section\n        // under any circumstances. If we are no longer interested in sending a\n        // track, we just remove the msid and ssrc attributes and set it to\n        // either a=recvonly (as the reofferer, we must use recvonly if the\n        // other side was previously sending on the m-section, but we can also\n        // leave the possibility open if it wasn't previously in use), or\n        // a=inactive.\n\n        if (typeof cached !== 'undefined' &&\n            typeof cached.media !== 'undefined' &&\n            Array.isArray(cached.media)) {\n            cached.media.forEach(function(uLine) {\n                midToString(uLine);\n                mids.push(uLine.mid);\n                if (typeof mid2ul[uLine.mid] !== 'undefined') {\n                    session.media.push(mid2ul[uLine.mid]);\n                } else {\n                    delete uLine.msid;\n                    delete uLine.sources;\n                    delete uLine.ssrcGroups;\n                    if (!uLine.direction\n                        || uLine.direction === 'sendrecv')\n                        uLine.direction = 'recvonly';\n                    if (!uLine.direction\n                        || uLine.direction === 'sendonly')\n                        uLine.direction = 'inactive';\n                    session.media.push(uLine);\n                }\n            });\n        }\n\n        // Add all the remaining (new) m-lines of the transformed SDP.\n        Object.keys(mid2ul).forEach(function(mid) {\n            if (mids.indexOf(mid) === -1) {\n                mids.push(mid);\n                if (mid2ul[mid].direction === 'recvonly') {\n                    // This is a remote recvonly channel. Add its SSRC to the\n                    // appropriate sendrecv or sendonly channel.\n                    // TODO(gp) what if we don't have sendrecv/sendonly\n                    // channel?\n\n                    session.media.some(function (uLine) {\n                        if ((uLine.direction === 'sendrecv' ||\n                            uLine.direction === 'sendonly') &&\n                            uLine.type === mid2ul[mid].type) {\n\n                            // mid2ul[mid] shouldn't have any ssrc-groups\n                            Object.keys(mid2ul[mid].sources).forEach(\n                                function (ssrc) {\n                                uLine.sources[ssrc] =\n                                    mid2ul[mid].sources[ssrc];\n                            });\n\n                            return true;\n                        }\n                    });\n                } else {\n                    session.media.push(mid2ul[mid]);\n                }\n            }\n        });\n    }\n\n    // After we have constructed the Plan Unified m-lines we can figure out\n    // where (in which m-line) to place the 'recvonly SSRCs'.\n    // Note: we assume here that we are the answerer in the O/A, so any offers\n    // which we translate come from the remote side, while answers are local\n    // (and so our last local description is cached as an 'answer').\n    [\"audio\", \"video\"].forEach(function (type) {\n        if (!session || !session.media || !Array.isArray(session.media))\n            return;\n\n        var idx = null;\n        if (Object.keys(recvonlySsrcs[type]).length > 0) {\n            idx = self.getFirstSendingIndexFromAnswer(type);\n            if (idx === null){\n                // If this is the first offer we receive, we don't have a\n                // cached answer. Assume that we will be sending media using\n                // the first m-line for each media type.\n\n                for (var i = 0; i < session.media.length; i++) {\n                    if (session.media[i].type === type) {\n                        idx = i;\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (idx && session.media.length > idx) {\n            var mLine = session.media[idx];\n            Object.keys(recvonlySsrcs[type]).forEach(function(ssrc) {\n                if (mLine.sources && mLine.sources[ssrc]) {\n                    console.warn(\"Replacing an existing SSRC.\");\n                }\n                if (!mLine.sources) {\n                    mLine.sources = {};\n                }\n\n                mLine.sources[ssrc] = recvonlySsrcs[type][ssrc];\n            });\n        }\n    });\n\n    // We regenerate the BUNDLE group (since we regenerated the mids)\n    session.groups.some(function(group) {\n        if (group.type === 'BUNDLE') {\n            group.mids = mids.join(' ');\n            return true;\n        }\n    });\n\n    // msid semantic\n    session.msidSemantic = {\n        semantic: 'WMS',\n        token: '*'\n    };\n\n    var resStr = transform.write(session);\n\n    // Cache the transformed SDP (Unified Plan) for later re-use in this\n    // function.\n    this.cache[desc.type] = resStr;\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: resStr\n    });\n\n    //#endregion\n};\n\n/**\n * Maps the direction strings to their binary representation. The binary\n * representation of the directions will contain only 2 bits. The least\n * significant bit will indicate the receiving direction and the other bit will\n * indicate the sending direction.\n *\n * @type {Map<string, number>}\n */\nvar directionMasks = {\n    'inactive': 0, // 00\n    'recvonly': 1, // 01\n    'sendonly': 2, // 10\n    'sendrecv': 3  // 11\n};\n\n/**\n * Parses a number into direction string.\n *\n * @param {number} direction - The number to be parsed.\n * @returns {string} - The parsed direction string.\n */\nfunction parseDirection(direction) { // eslint-disable-line no-unused-vars\n    // Filter all other bits except the 2 less significant.\n    var directionMask = direction & 3;\n\n    switch (directionMask) {\n    case 0:\n        return 'inactive';\n    case 1:\n        return 'recvonly';\n    case 2:\n        return 'sendonly';\n    case 3:\n        return 'sendrecv';\n    }\n}\n","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar transform = require('sdp-transform');\n\nexports.write = function(session, opts) {\n\n  if (typeof session !== 'undefined' &&\n      typeof session.media !== 'undefined' &&\n      Array.isArray(session.media)) {\n\n    session.media.forEach(function (mLine) {\n      // expand sources to ssrcs\n      if (typeof mLine.sources !== 'undefined' &&\n        Object.keys(mLine.sources).length !== 0) {\n          mLine.ssrcs = [];\n          Object.keys(mLine.sources).forEach(function (ssrc) {\n            var source = mLine.sources[ssrc];\n            Object.keys(source).forEach(function (attribute) {\n              mLine.ssrcs.push({\n                id: ssrc,\n                attribute: attribute,\n                value: source[attribute]\n              });\n            });\n          });\n          delete mLine.sources;\n        }\n\n      // join ssrcs in ssrc groups\n      if (typeof mLine.ssrcGroups !== 'undefined' &&\n        Array.isArray(mLine.ssrcGroups)) {\n          mLine.ssrcGroups.forEach(function (ssrcGroup) {\n            if (typeof ssrcGroup.ssrcs !== 'undefined' &&\n                Array.isArray(ssrcGroup.ssrcs)) {\n              ssrcGroup.ssrcs = ssrcGroup.ssrcs.join(' ');\n            }\n          });\n        }\n    });\n  }\n\n  // join group mids\n  if (typeof session !== 'undefined' &&\n      typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\n\n    session.groups.forEach(function (g) {\n      if (typeof g.mids !== 'undefined' && Array.isArray(g.mids)) {\n        g.mids = g.mids.join(' ');\n      }\n    });\n  }\n\n  return transform.write(session, opts);\n};\n\nexports.parse = function(sdp) {\n  var session = transform.parse(sdp);\n\n  if (typeof session !== 'undefined' && typeof session.media !== 'undefined' &&\n      Array.isArray(session.media)) {\n\n    session.media.forEach(function (mLine) {\n      // group sources attributes by ssrc\n      if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\n        mLine.sources = {};\n        mLine.ssrcs.forEach(function (ssrc) {\n          if (!mLine.sources[ssrc.id])\n          mLine.sources[ssrc.id] = {};\n        mLine.sources[ssrc.id][ssrc.attribute] = ssrc.value;\n        });\n\n        delete mLine.ssrcs;\n      }\n\n      // split ssrcs in ssrc groups\n      if (typeof mLine.ssrcGroups !== 'undefined' &&\n        Array.isArray(mLine.ssrcGroups)) {\n          mLine.ssrcGroups.forEach(function (ssrcGroup) {\n            if (typeof ssrcGroup.ssrcs === 'string') {\n              ssrcGroup.ssrcs = ssrcGroup.ssrcs.split(' ');\n            }\n          });\n        }\n    });\n  }\n  // split group mids\n  if (typeof session !== 'undefined' &&\n      typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\n\n    session.groups.forEach(function (g) {\n      if (typeof g.mids === 'string') {\n        g.mids = g.mids.split(' ');\n      }\n    });\n  }\n\n  return session;\n};\n\n","/* Copyright @ 2016 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar transform = require('sdp-transform');\nvar transformUtils = require('./transform-utils');\nvar parseSsrcs = transformUtils.parseSsrcs;\nvar writeSsrcs = transformUtils.writeSsrcs;\n\n//region Constants\n\nvar DEFAULT_NUM_OF_LAYERS = 3;\n\n//endregion\n\nfunction getSsrcAttribute (mLine, ssrc, attributeName) {\n    return mLine\n        .ssrcs\n        .filter(function(ssrcInfo) { return ssrcInfo.id === ssrc; })\n        .filter(function(ssrcInfo) { return ssrcInfo.attribute === attributeName; })\n        .map(function(ssrcInfo) { return ssrcInfo.value; })[0];\n}\n\n//region Ctor\n\nfunction Simulcast(options) {\n\n    this.options = options ? options : {};\n\n    if (!this.options.numOfLayers) {\n        this.options.numOfLayers = DEFAULT_NUM_OF_LAYERS;\n    }\n    console.log(\"SdpSimulcast: using \" + this.options.numOfLayers + \" layers\");\n\n    /**\n     * An IN-ORDER list of the simulcast ssrcs\n     * @type {list<number>}\n     */\n    this.ssrcCache = [];\n}\n\n//endregion\n\n//region Stateless private utility functions\n\n/**\n * Returns a random integer between min (included) and max (excluded)\n * Using Math.round() gives a non-uniform distribution!\n * @returns {number}\n */\nfunction generateSSRC() {\n    var min = 0, max = 0xffffffff;\n    return Math.floor(Math.random() * (max - min)) + min;\n};\n\nfunction processVideo(session, action) {\n    if (session == null || !Array.isArray(session.media)) {\n        return;\n    }\n\n    session.media.forEach(function (mLine) {\n        if (mLine.type === 'video') {\n            action(mLine);\n        }\n    });\n};\n\nfunction validateDescription(desc)\n{\n    return desc && desc != null\n        && desc.type && desc.type != ''\n        && desc.sdp && desc.sdp != '';\n}\n\nfunction explodeRemoteSimulcast(mLine) {\n\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\n        return;\n    }\n\n    var sources = parseSsrcs(mLine);\n    var order = [];\n\n    // Find the SIM group and explode its sources.\n    var j = mLine.ssrcGroups.length;\n    while (j--) {\n\n        if (mLine.ssrcGroups[j].semantics !== 'SIM') {\n            continue;\n        }\n\n        var simulcastSsrcs = mLine.ssrcGroups[j].ssrcs.split(' ');\n\n        for (var i = 0; i < simulcastSsrcs.length; i++) {\n\n            var ssrc = simulcastSsrcs[i];\n            order.push(ssrc);\n\n            var parts = sources[ssrc].msid.split(' ');\n            sources[ssrc].msid = [parts[0], '/', i, ' ', parts[1], '/', i].join('');\n            sources[ssrc].cname = [sources[ssrc].cname, '/', i].join('');\n\n            // Remove all the groups that this SSRC participates in.\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\n                if (relatedGroup.semantics === 'SIM') {\n                    return;\n                }\n\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\n                    return;\n                }\n\n                // Nuke all the related SSRCs.\n                relatedSsrcs.forEach(function (relatedSSRC) {\n                    sources[relatedSSRC].msid = sources[ssrc].msid;\n                    sources[relatedSSRC].cname = sources[ssrc].cname;\n                    if (relatedSSRC !== ssrc) {\n                        order.push(relatedSSRC);\n                    }\n                });\n\n                // Schedule the related group for nuking.\n            })\n        }\n\n        mLine.ssrcs = writeSsrcs(sources, order);\n        mLine.ssrcGroups.splice(j, 1);\n    };\n}\n\nfunction implodeRemoteSimulcast(mLine) {\n\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\n        console.info('Halt: There are no SSRC groups in the remote ' +\n                'description.');\n        return;\n    }\n\n    var sources = parseSsrcs(mLine);\n\n    // Find the SIM group and nuke it.\n    mLine.ssrcGroups.forEach(function (simulcastGroup) {\n        if (simulcastGroup.semantics !== 'SIM') {\n            return;\n        }\n\n        console.info(\"Imploding SIM group: \" + simulcastGroup.ssrcs);\n        // Schedule the SIM group for nuking.\n        simulcastGroup.nuke = true;\n\n        var simulcastSsrcs = simulcastGroup.ssrcs.split(' ');\n\n        // Nuke all the higher layer SSRCs.\n        for (var i = 1; i < simulcastSsrcs.length; i++) {\n\n            var ssrc = simulcastSsrcs[i];\n            delete sources[ssrc];\n\n            // Remove all the groups that this SSRC participates in.\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\n                if (relatedGroup.semantics === 'SIM') {\n                    return;\n                }\n\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\n                    return;\n                }\n\n                // Nuke all the related SSRCs.\n                relatedSsrcs.forEach(function (relatedSSRC) {\n                    delete sources[relatedSSRC];\n                });\n\n                // Schedule the related group for nuking.\n                relatedGroup.nuke = true;\n            })\n        }\n\n        return;\n    });\n\n    mLine.ssrcs = writeSsrcs(sources);\n\n    // Nuke all the scheduled groups.\n    var i = mLine.ssrcGroups.length;\n    while (i--) {\n        if (mLine.ssrcGroups[i].nuke) {\n            mLine.ssrcGroups.splice(i, 1);\n        }\n    }\n}\n\nfunction removeGoogConference(mLine) {\n    if (!mLine || !Array.isArray(mLine.invalid)) {\n        return;\n    }\n\n    var i = mLine.invalid.length;\n    while (i--) {\n        if (mLine.invalid[i].value == 'x-google-flag:conference') {\n            mLine.invalid.splice(i, 1);\n        }\n    }\n}\n\nfunction assertGoogConference(mLine) {\n    if (!mLine) {\n        return;\n    }\n\n    if (!Array.isArray(mLine.invalid)) {\n        mLine.invalid = [];\n    }\n\n    if (!mLine.invalid.some(\n            function (i) { return i.value === 'x-google-flag:conference' })) {\n        mLine.invalid.push({'value': 'x-google-flag:conference'});\n    }\n}\n\nSimulcast.prototype.clearSsrcCache = function() {\n    this.ssrcCache = [];\n}\n\n/**\n * When we start as video muted, all of the video\n *  ssrcs get generated so we can include them as part\n *  of the original session-accept.  That means we\n *  need this library to restore to those same ssrcs\n *  the first time we unmute, so we need the ability to\n *  force its cache\n */\nSimulcast.prototype.setSsrcCache = function(ssrcs) {\n    this.ssrcCache = ssrcs;\n}\n\n//endregion\n\n//region \"Private\" functions\n\n/**\n * Given a video mLine, return a list of the video ssrcs\n *  in simulcast layer order (returns a list of just\n *  the primary ssrc if there are no simulcast layers)\n */\nSimulcast.prototype._parseSimLayers = function (mLine) {\n    var simGroup = mLine.ssrcGroups &&\n        mLine.ssrcGroups.find(function(group) { return group.semantics === \"SIM\"; });\n    if (simGroup) {\n        return simGroup.ssrcs\n            .split(\" \")\n            .map(function(ssrcStr) { return parseInt(ssrcStr) });\n    } else {\n        return [mLine.ssrcs[0].id];\n    }\n}\n\nSimulcast.prototype._buildNewToOldSsrcMap = function (newSsrcList, oldSsrcList) {\n    var ssrcMap = {};\n    for (var i = 0; i < newSsrcList.length; ++i) {\n        var newSsrc = newSsrcList[i];\n        var oldSsrc = oldSsrcList[i] || null;\n        ssrcMap[newSsrc] = oldSsrc;\n    }\n    return ssrcMap;\n}\n\nSimulcast.prototype._fillInSourceDataFromCache = function(mLine) {\n    console.log(\"SdpSimulcast restoring from cache: \", this.ssrcCache);\n    var newSimSsrcs = this._parseSimLayers(mLine);\n    console.log(\"SdpSimulcast Parsed new sim ssrcs: \", newSimSsrcs);\n    var newMsid = getSsrcAttribute(mLine, newSimSsrcs[0], \"msid\");\n    var newCname = getSsrcAttribute(mLine, newSimSsrcs[0], \"cname\");\n    var ssrcsToReplace = this._buildNewToOldSsrcMap(newSimSsrcs, this.ssrcCache);\n    console.log(\"SdpSimulcast built replacement map: \", ssrcsToReplace);\n    // New sdp might only have 1 layer, so not every cached ssrc will have a new one\n    //  to replace directly\n    var ssrcsToAdd = this.ssrcCache\n        .filter(function(ssrc) { return Object.values(ssrcsToReplace).indexOf(ssrc) === -1; });\n    console.log(\"SdpSimulcast built ssrcs to add: \", ssrcsToAdd);\n\n    // First do the replacements\n    mLine.ssrcs.forEach(function(ssrc) {\n        if (ssrcsToReplace[ssrc.id]) {\n            ssrc.id = ssrcsToReplace[ssrc.id];\n        }\n    });\n    // Now the adds\n    ssrcsToAdd.forEach(function(ssrc) {\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"msid\",\n            value: newMsid\n        });\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"cname\",\n            value: newCname\n        });\n    });\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\n    mLine.ssrcGroups.push({\n        semantics: \"SIM\",\n        ssrcs: this.ssrcCache.join(\" \")\n    });\n    return mLine;\n}\n\nSimulcast.prototype._generateSourceData = function(mLine, primarySsrc) {\n    var addAssociatedStream = function(mLine, ssrc) {\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"cname\",\n            value: primarySsrcCname\n        });\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"msid\",\n            value: primarySsrcMsid\n        });\n    }\n    var primarySsrcMsid = getSsrcAttribute(mLine, primarySsrc, \"msid\");\n    var primarySsrcCname = getSsrcAttribute(mLine, primarySsrc, \"cname\");\n\n    // Generate sim layers\n    var simSsrcs = [];\n    for (var i = 0; i < this.options.numOfLayers - 1; ++i) {\n        var simSsrc = generateSSRC();\n        addAssociatedStream(mLine, simSsrc);\n        simSsrcs.push(simSsrc);\n    }\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\n    mLine.ssrcGroups.push({\n        semantics: \"SIM\",\n        ssrcs: primarySsrc + \" \" + simSsrcs.join(\" \")\n    });\n    return mLine;\n}\n\n\n\n// Assumptions:\n//  1) 'mLine' contains only a single primary video source\n//   (i.e. it will not already have simulcast streams inserted)\n//  2) 'mLine' MAY already contain an RTX stream for its video source\n//  3) 'mLine' is in sendrecv or sendonly state\n// Guarantees:\n//  1) return mLine will contain 2 additional simulcast layers\n//   generated\n//  2) if the base video ssrc in mLine has been seen before,\n//   then the same generated simulcast streams from before will\n//   be used again\n//  3) if rtx is enabled for the mLine, all generated simulcast\n//   streams will have rtx streams generated as well\n//  4) if rtx has been generated for a src before, we will generate\n//   the same rtx stream again\nSimulcast.prototype._restoreSimulcast = function(mLine) {\n    // First, find the primary video source in the given\n    // mLine and see if we've seen it before.\n    var primarySsrc;\n    var numSsrcs = mLine.ssrcs && mLine.ssrcs\n        .map(function(ssrcInfo) { return ssrcInfo.id; })\n        .filter(function(ssrc, index, array) {\n            return array.indexOf(ssrc) === index;\n        })\n        .length || 0;\n    var numGroups = (mLine.ssrcGroups && mLine.ssrcGroups.length) || 0;\n\n    if (numSsrcs === 0 || numSsrcs > 2) {\n        // Unsupported scenario\n        return mLine;\n    }\n    if (numSsrcs == 2 && numGroups === 0) {\n        // Unsupported scenario\n        return mLine;\n    }\n\n    if (numSsrcs === 1) {\n        primarySsrc = mLine.ssrcs[0].id;\n    } else {\n        // There must be an FID group, so parse\n        //  that and pull the primary ssrc from there\n        var fidGroup = mLine.ssrcGroups.filter(function(group) { return group.semantics === \"FID\"; })[0];\n        if (fidGroup) {\n            primarySsrc = parseInt(fidGroup.ssrcs.split(\" \")[0]);\n        } else {\n            // Unsupported scenario\n            return mLine;\n        }\n    }\n    console.log(\"SdpSimulcast: current ssrc cache: \", this.ssrcCache);\n    console.log(\"SdpSimulcast: parsed primary ssrc \" + primarySsrc);\n\n    var seenPrimarySsrc = this.ssrcCache.indexOf(primarySsrc) !== -1;\n\n    if (seenPrimarySsrc) {\n        console.log(\"SdpSimulcast: Have seen primary ssrc before, \" +\n            \"filling in data from cache\");\n        mLine = this._fillInSourceDataFromCache(mLine);\n    } else {\n        console.log(\"SdpSimulcast: Have not seen primary ssrc before, \" +\n            \"generating source data\");\n        mLine = this._generateSourceData(mLine, primarySsrc);\n    }\n    // Now update the cache to match whatever we've just put into this sdp\n    this.ssrcCache = this._parseSimLayers(mLine);\n    return mLine;\n}\n\n//endregion\n\n//region \"Public\" functions\n\n/**\n *\n * @param desc\n * @returns {RTCSessionDescription}\n */\nSimulcast.prototype.mungeRemoteDescription = function (desc) {\n\n    if (!validateDescription(desc)) {\n        return desc;\n    }\n\n    var session = transform.parse(desc.sdp);\n\n    var self = this;\n    processVideo(session, function (mLine) {\n\n        // Handle simulcast reception.\n        if (self.options.explodeRemoteSimulcast) {\n            explodeRemoteSimulcast(mLine);\n        } else {\n            implodeRemoteSimulcast(mLine);\n        }\n\n        // Make sure that we ALWAYS add the conference flag to the remote\n        // description: That flag is deprecated but, as of this writing\n        // (09/2019), it's still used in jitsi-meet to enable legacy simulcast\n        // when screen-sharing (https://cs.chromium.org/chromium/src/third_party/webrtc/media/base/media_channel.h?rcl=f2773b54647633d5725fa25dea883f99dd1b400c&l=838).\n        //\n        // We've observed the following chain of events that almost always\n        // results in connectivity issues at the receiver:\n        //\n        // 1. The user joins a call with startVideoMuted=true, so there's no\n        //    jitsi track created.\n        // 2. The user enables screen-sharing. At this point we do a\n        //    renegotiation (which starts with an sRD); the ssrcCache is empty,\n        //    so the conference flag is not added to the remote description SDP.\n        // 3. The next step of the re-negotiation is to set the answer, so\n        //    mungeLocalDescription is called, and because now we have a track\n        //    due to the user enabling screen-sharing, it enables simulcast.\n        // 4. sLD is called with simulcast ssrcs, but the sRD call of step 2\n        //    didn't add the conference flag in the SDP, so the screen-sharing\n        //    is without simulcast.\n        // 5. Any subsequent re-negotiation (for example, due to a participant\n        //    joining/leaving the call) will enable simulcast and this switch\n        //    almost always results in a broken stream at the receiver.\n\n        assertGoogConference(mLine);\n    });\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: transform.write(session)\n    });\n};\n\n/**\n *\n * NOTE this method should be called only if simulcast is supported by\n * the current browser, otherwise local SDP should not be munged.\n * @param desc\n * @returns {RTCSessionDescription}\n */\nSimulcast.prototype.mungeLocalDescription = function (desc) {\n\n    if (!validateDescription(desc)) {\n        return desc;\n    }\n\n    var session = transform.parse(desc.sdp);\n\n    var self = this;\n    processVideo(session, function (mLine) {\n        if (mLine.direction == 'recvonly' || mLine.direction == 'inactive')\n        {\n            return;\n        }\n        self._restoreSimulcast(mLine);\n    });\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: transform.write(session)\n    });\n};\n\n//endregion\n\nmodule.exports = Simulcast;\n","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * FIXME\n * @param sources FIXME\n * @param order An array of SSRCs which will be used to order the entries in\n * the returned array. Sources whose SSRC appears in 'order' will be added first,\n * in the specified order, and all other sources will be added afterwards (in\n * no specific order).\n * @returns {Array} FIXME\n */\nexports.writeSsrcs = function(sources, order) {\n  var ssrcs = [];\n\n  // expand sources to ssrcs\n  if (typeof sources !== 'undefined' &&\n      Object.keys(sources).length !== 0) {\n\n    if (!Array.isArray(order)) {\n      order = []\n    }\n\n    // Add the sources that appear in 'order' first.\n    for (var i = 0; i < order.length; i++) {\n      var ssrc = order[i];\n      var source = sources[ssrc];\n      Object.keys(source).forEach(function (attribute) {\n        ssrcs.push({\n          id: ssrc,\n          attribute: attribute,\n          value: source[attribute]\n        });\n      });\n    }\n\n    // Now add the rest of the sources.\n    Object.keys(sources).forEach(function (ssrc) {\n      ssrc = parseInt(ssrc); // Object.keys() returns string\n      if (order.indexOf(ssrc) >= 0) {\n        // Already added.\n        return;\n      }\n\n      var source = sources[ssrc];\n      Object.keys(source).forEach(function (attribute) {\n        ssrcs.push({\n          id: ssrc,\n          attribute: attribute,\n          value: source[attribute]\n        });\n      });\n    });\n  }\n\n  return ssrcs;\n};\n\nexports.parseSsrcs = function (mLine) {\n  var sources = {};\n  // group sources attributes by ssrc.\n  if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\n    mLine.ssrcs.forEach(function (ssrc) {\n      if (!sources[ssrc.id])\n        sources[ssrc.id] = {};\n      sources[ssrc.id][ssrc.attribute] = ssrc.value;\n    });\n  }\n  return sources;\n};\n\n","/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n/*jshint onevar: false, indent:4 */\n/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _toString = Object.prototype.toString;\n\n    var _isArray = Array.isArray || function (obj) {\n        return _toString.call(obj) === '[object Array]';\n    };\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(done) );\n        });\n        function done(err) {\n          if (err) {\n              callback(err);\n              callback = function () {};\n          }\n          else {\n              completed += 1;\n              if (completed >= arr.length) {\n                  callback();\n              }\n          }\n        }\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback();\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        if (!callback) {\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err) {\n                    callback(err);\n                });\n            });\n        } else {\n            var results = [];\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err, v) {\n                    results[x.index] = v;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        var remainingTasks = keys.length\n        if (!remainingTasks) {\n            return callback();\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            remainingTasks--\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (!remainingTasks) {\n                var theCallback = callback;\n                // prevent final callback from calling itself if it errors\n                callback = function () {};\n\n                theCallback(null, results);\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.retry = function(times, task, callback) {\n        var DEFAULT_TIMES = 5;\n        var attempts = [];\n        // Use defaults if times not passed\n        if (typeof times === 'function') {\n            callback = task;\n            task = times;\n            times = DEFAULT_TIMES;\n        }\n        // Make sure times is a number\n        times = parseInt(times, 10) || DEFAULT_TIMES;\n        var wrappedTask = function(wrappedCallback, wrappedResults) {\n            var retryAttempt = function(task, finalAttempt) {\n                return function(seriesCallback) {\n                    task(function(err, result){\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\n                    }, wrappedResults);\n                };\n            };\n            while (times) {\n                attempts.push(retryAttempt(task, !(times-=1)));\n            }\n            async.series(attempts, function(done, data){\n                data = data[data.length - 1];\n                (wrappedCallback || callback)(data.err, data.result);\n            });\n        }\n        // If a callback is passed, run this as a controll flow\n        return callback ? wrappedTask() : wrappedTask\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (!_isArray(tasks)) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (test.apply(null, args)) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (!test.apply(null, args)) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            started: false,\n            paused: false,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            kill: function () {\n              q.drain = null;\n              q.tasks = [];\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (!q.paused && workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            },\n            idle: function() {\n                return q.tasks.length + workers === 0;\n            },\n            pause: function () {\n                if (q.paused === true) { return; }\n                q.paused = true;\n                q.process();\n            },\n            resume: function () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                q.process();\n            }\n        };\n        return q;\n    };\n    \n    async.priorityQueue = function (worker, concurrency) {\n        \n        function _compareTasks(a, b){\n          return a.priority - b.priority;\n        };\n        \n        function _binarySearch(sequence, item, compare) {\n          var beg = -1,\n              end = sequence.length - 1;\n          while (beg < end) {\n            var mid = beg + ((end - beg + 1) >>> 1);\n            if (compare(item, sequence[mid]) >= 0) {\n              beg = mid;\n            } else {\n              end = mid - 1;\n            }\n          }\n          return beg;\n        }\n        \n        function _insert(q, data, priority, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  priority: priority,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n              \n              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n        \n        // Start with a normal queue\n        var q = async.queue(worker, concurrency);\n        \n        // Override push to accept second parameter representing priority\n        q.push = function (data, priority, callback) {\n          _insert(q, data, priority, callback);\n        };\n        \n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            drained: true,\n            push: function (data, callback) {\n                if (!_isArray(data)) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    cargo.drained = false;\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain && !cargo.drained) cargo.drain();\n                    cargo.drained = true;\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0, tasks.length);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                async.nextTick(function () {\n                    callback.apply(null, memo[key]);\n                });\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.seq = function (/* functions... */) {\n        var fns = arguments;\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    async.compose = function (/* functions... */) {\n      return async.seq.apply(null, Array.prototype.reverse.call(arguments));\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // Node.js\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // AMD / RequireJS\n    else if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n","/*!\n * Bowser - a browser detector\n * https://github.com/ded/bowser\n * MIT License | (c) Dustin Diaz 2015\n */\n\n!function (root, name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(name, definition)\n  else root[name] = definition()\n}(this, 'bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\n      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\n      , chromeos = /CrOS/.test(ua)\n      , silk = /silk/i.test(ua)\n      , sailfish = /sailfish/i.test(ua)\n      , tizen = /tizen/i.test(ua)\n      , webos = /(web|hpw)os/i.test(ua)\n      , windowsphone = /windows phone/i.test(ua)\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\n      , windows = !windowsphone && /windows/i.test(ua)\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\n      , edgeVersion = getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , xbox = /xbox/i.test(ua)\n      , result\n\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/opr\\/|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera'\n        , opera: t\n        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android'\n        , samsungBrowser: t\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast'\n        , coast: t\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser'\n      , yandexbrowser: t\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/ucbrowser/i.test(ua)) {\n      result = {\n          name: 'UC Browser'\n        , ucbrowser: t\n        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon'\n        , maxthon: t\n        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany'\n        , epiphany: t\n        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin'\n        , puffin: t\n        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      }\n    }\n    else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir'\n        , sleipnir: t\n        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon'\n        , kMeleon: t\n        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (windowsphone) {\n      result = {\n        name: 'Windows Phone'\n      , osname: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome'\n      , osname: 'Chrome OS'\n      , chromeos: t\n      , chromeBook: t\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/edg([ea]|ios)/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi'\n        , vivaldi: t\n        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (sailfish) {\n      result = {\n        name: 'Sailfish'\n      , osname: 'Sailfish OS'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n        result.osname = 'Firefox OS'\n      }\n    }\n    else if (silk) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS'\n        , slimer: t\n        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , osname: 'BlackBerry OS'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (webos) {\n      result = {\n        name: 'WebOS'\n      , osname: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , osname: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (tizen) {\n      result = {\n        name: 'Tizen'\n      , osname: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla'\n        , qupzilla: t\n        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      }\n    }\n    else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium'\n        , chromium: t\n        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n        , chrome: t\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n        , version: versionIdentifier\n      }\n    }\n    else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      }\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if(/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot'\n      , googlebot: t\n      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\"\n        result.blink = t\n      } else {\n        result.name = result.name || \"Webkit\"\n        result.webkit = t\n      }\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.windowsphone && (android || result.silk)) {\n      result.android = t\n      result.osname = 'Android'\n    } else if (!result.windowsphone && iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n      result.osname = 'iOS'\n    } else if (mac) {\n      result.mac = t\n      result.osname = 'macOS'\n    } else if (xbox) {\n      result.xbox = t\n      result.osname = 'Xbox'\n    } else if (windows) {\n      result.windows = t\n      result.osname = 'Windows'\n    } else if (linux) {\n      result.linux = t\n      result.osname = 'Linux'\n    }\n\n    function getWindowsVersion (s) {\n      switch (s) {\n        case 'NT': return 'NT'\n        case 'XP': return 'XP'\n        case 'NT 5.0': return '2000'\n        case 'NT 5.1': return 'XP'\n        case 'NT 5.2': return '2003'\n        case 'NT 6.0': return 'Vista'\n        case 'NT 6.1': return '7'\n        case 'NT 6.2': return '8'\n        case 'NT 6.3': return '8.1'\n        case 'NT 10.0': return '10'\n        default: return undefined\n      }\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windows) {\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i))\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.mac) {\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n    if (\n         tablet\n      || nexusTablet\n      || iosdevice == 'ipad'\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\n      || result.silk\n    ) {\n      result.tablet = t\n    } else if (\n         mobile\n      || iosdevice == 'iphone'\n      || iosdevice == 'ipod'\n      || android\n      || nexusMobile\n      || result.blackberry\n      || result.webos\n      || result.bada\n    ) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.yandexbrowser && result.version >= 15) ||\n\t\t    (result.vivaldi && result.version >= 1.0) ||\n        (result.chrome && result.version >= 20) ||\n        (result.samsungBrowser && result.version >= 4) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        || (result.chromium && result.version >= 20)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        || (result.chromium && result.version < 20)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  function map(arr, iterator) {\n    var result = [], i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n   *\n   * @param  {Array<String>} versions versions to compare\n   * @return {Number} comparison result\n   */\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      version = version + new Array(delta + 1).join(\".0\");\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    });\n\n    // iterate in reverse order by reversed chunks array\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n      else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      }\n      else {\n        return -1;\n      }\n    }\n  }\n\n  /**\n   * Check if browser is unsupported\n   *\n   * @example\n   *   bowser.isUnsupportedBrowser({\n   *     msie: \"10\",\n   *     firefox: \"23\",\n   *     chrome: \"29\",\n   *     safari: \"5.1\",\n   *     opera: \"16\",\n   *     phantom: \"534\"\n   *   });\n   *\n   * @param  {Object}  minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser;\n\n    // make strictMode param optional with ua param usage\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void(0);\n    }\n\n    if (strictMode === void(0)) {\n      strictMode = false;\n    }\n    if (ua) {\n      _bowser = detect(ua);\n    }\n\n    var version = \"\" + _bowser.version;\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          if (typeof minVersions[browser] !== 'string') {\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n          }\n\n          // browser version and min supported version.\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n\n    return strictMode; // not found\n  }\n\n  /**\n   * Check if browser is supported\n   *\n   * @param  {Object} minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  /*\n   * Set our detect public method to the main bowser object\n   * This is needed to implement bowser in server side\n   */\n  bowser.detect = detect;\n  return bowser\n});\n","/*!\n * currentExecutingScript\n * Get the currently executing script, regardless of its source/trigger/synchronicity. Similar to HTML5's `document.currentScript` but arguably much more useful!\n * Copyright (c) 2015 James M. Greene\n * Licensed MIT\n * https://github.com/JamesMGreene/currentExecutingScript\n * v0.1.3\n */\n(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === \"object\") {\n    // CommonJS-like environments that support `module.exports`,\n    // like Node.js. Does not work with strict CommonJS!\n    module.exports = factory();\n  } else {\n    // Browser globals (`root` is `window`)\n    root.currentExecutingScript = factory();\n  }\n}(\n  // Current context/scope\n  this || window,\n\n  // Factory function to return the export\n  function() {\n\nvar scriptReadyRegex = /^(interactive|loaded|complete)$/;\n\n// This page's URL (minus query string and fragment identifer hash, if any)\nvar fullPageUrl = !!window.location ? window.location.href : null;\nvar pageUrl = fullPageUrl ? fullPageUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\") || null : null;\n\n// Live NodeList collection\nvar scripts = document.getElementsByTagName(\"script\");\n\n// Check if the browser supports the `readyState` property on `script` elements\nvar supportsScriptReadyState = \"readyState\" in (scripts[0] || document.createElement(\"script\"));\n\n// Lousy browser detection for [not] Opera\nvar isNotOpera = !window.opera || window.opera.toString() !== \"[object Opera]\";\n\n// Detect if `document.currentScript` is supported\nvar hasNativeCurrentScriptAccessor = \"currentScript\" in document;\n\nvar originalStackDepthConfig;\n// Detect if the V8 Error Stack Trace API is supported\nif (\"stackTraceLimit\" in Error && Error.stackTraceLimit !== Infinity) {\n  originalStackDepthConfig = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n}\n\n\n// In some browsers (e.g. Chrome), you can get the current stack from an Error\n// object instance without needing to throw it. Avoiding an unnecessary\n// use of `throw` saves time and performance.\nvar hasStackBeforeThrowing = false,\n    hasStackAfterThrowing = false;\n(function() {\n  try {\n    var err = new Error();\n    hasStackBeforeThrowing = typeof err.stack === \"string\" && !!err.stack;\n    throw err;\n  }\n  catch (thrownErr) {\n    hasStackAfterThrowing = typeof thrownErr.stack === \"string\" && !!thrownErr.stack;\n  }\n})();\n\n\n// Normalize whitespace within a string\nfunction normalizeWhitespace(str) {\n  return str ? str.replace(/^\\s+$|\\s+$/g, \"\").replace(/\\s\\s+/g, \" \") : \"\";\n}\n\n// Get script object based on the `src` URL\nfunction getScriptFromUrl(url, eligibleScripts) {\n  var i,\n      script = null;\n\n  eligibleScripts = eligibleScripts || scripts;\n\n  if (typeof url === \"string\" && url) {\n    for (i = eligibleScripts.length; i--; ) {\n      if (eligibleScripts[i].src === url) {\n        // NOTE: Could check if the same script URL is used by more than one `script` element\n        // here... but let's not. That would yield less useful results in \"loose\" detection. ;)\n        script = eligibleScripts[i];\n        break;\n      }\n    }\n  }\n  return script;\n}\n\n// Get script object based on the caller function's source code body (text)\nfunction getInlineScriptFromCallerSource(callerFnSource, eligibleScripts) {\n  var i, inlineScriptText,\n      script = null,\n      callerSourceText = normalizeWhitespace(callerFnSource);\n\n  eligibleScripts = eligibleScripts || scripts;\n\n  if (callerFnSource && callerSourceText) {\n    for (i = eligibleScripts.length; i--; ) {\n      // Only look at inline scripts\n      if (!eligibleScripts[i].hasAttribute(\"src\")) {\n        inlineScriptText = normalizeWhitespace(eligibleScripts[i].text);\n        if (inlineScriptText.indexOf(callerSourceText) !== -1) {\n          // If more than one match is found, don't return any\n          if (script) {\n            script = null;\n            break;\n          }\n          script = eligibleScripts[i];\n        }\n      }\n    }\n  }\n\n  return script;\n}\n\n// If there is only a single inline script on the page, return it; otherwise `null`\nfunction getSoleInlineScript(eligibleScripts) {\n  var i, len,\n      script = null;\n  eligibleScripts = eligibleScripts || scripts;\n  for (i = 0, len = eligibleScripts.length; i < len; i++) {\n    if (!eligibleScripts[i].hasAttribute(\"src\")) {\n      if (script) {\n        script = null;\n        break;\n      }\n      script = eligibleScripts[i];\n    }\n  }\n  return script;\n}\n\n// Get the currently executing script URL from an Error stack trace\nfunction getScriptUrlFromStack(stack, skipStackDepth) {\n  var matches, remainingStack,\n      url = null,\n      ignoreMessage = typeof skipStackDepth === \"number\";\n  skipStackDepth = ignoreMessage ? Math.round(skipStackDepth) : 0;\n  if (typeof stack === \"string\" && stack) {\n    if (ignoreMessage) {\n      matches = stack.match(/(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n    }\n    else {\n      matches = stack.match(/^(?:|[^:@]*@|.+\\)@(?=data:text\\/javascript|blob|http[s]?|file)|.+?\\s+(?: at |@)(?:[^:\\(]+ )*[\\(]?)(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n\n      if (!(matches && matches[1])) {\n        matches = stack.match(/\\)@(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n      }\n    }\n\n    if (matches && matches[1]) {\n      if (skipStackDepth > 0) {\n        remainingStack = stack.slice(stack.indexOf(matches[0]) + matches[0].length);\n        url = getScriptUrlFromStack(remainingStack, (skipStackDepth - 1));\n      }\n      else {\n        url = matches[1];\n      }\n    }\n\n    // TODO: Handle more edge cases!\n    // Fixes #1\n    // See https://github.com/JamesMGreene/currentExecutingScript/issues/1\n\n    // ???\n\n  }\n  return url;\n}\n\n\n// Get the farthest currently executing (i.e. yes, EXECUTING) `script` DOM\n// element for the caller function, regardless of whether it is that `script`\n// DOM element is currently being evaluated for the first time. The farthest\n// currently executing `script` DOM element would typically be considered the\n// originator of the current execution stack.\nfunction _farthestExecutingScript() {\n  /*jshint noarg:false */\n\n  // TODO: Implement!\n  // Fixes #3\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/3\n  return null;\n\n/*\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\n  if (scripts.length === 0) {\n    return null;\n  }\n\n  // Guaranteed accurate in IE 6-10.\n  // Not accurate/supported in any other browsers.\n  if (isNotOpera && supportsScriptReadyState) {\n    for (var i = scripts.length; i--; ) {\n      if (scripts[i].readyState === \"interactive\") {\n        return scripts[i];\n      }\n    }\n  }\n\n  var stack,\n      e = new Error();\n  if (hasStackBeforeThrowing) {\n    stack = e.stack;\n  }\n  if (!stack && hasStackAfterThrowing) {\n    try {\n      throw e;\n    }\n    catch (err) {\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\n      stack = err.stack;\n    }\n  }\n  if (stack) {\n    var url = getScriptUrlFromStack(stack, skipStackDepth);\n    var script = getScriptFromUrl(url, scripts );\n    if (!script && pageUrl && url === pageUrl) {\n      // Try to find the correct inline script by searching through\n      // inline scripts' text content for the caller function's source\n      // code to be present. If the caller function's source code is\n      // not available, see if there is only one inline script element\n      // in the DOM and return that (even though it may be wrong)\n\n      // TODO: Implement!\n      // Fixes #4 in part\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\n\n      var callerFn = _farthestExecutingScript.caller || null,\n          callerFnStack = [],\n          callerFnSource = null;\n\n      while (callerFn) {\n        callerFnStack.push(callerFn);\n        callerFn = callerFn.caller || null;\n      }\n      callerFn = callerFnStack.slice(-1)[0];\n      callerFnSource = callerFn ? (\"\" + callerFn) : null;\n\n\n      if (callerFnSource) {\n        script = getInlineScriptFromCallerSource(callerFnSource);\n      }\n      else {\n        // NOTE: This is a loose assumption that could be inaccurate!\n        //\n        // Inaccuracies:\n        //  - If the inline script that initiated the call was also removed from the DOM.\n        //  - If the call was initiated by an element's inline event handler,\n        //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n        script = getSoleInlineScript();\n      }\n    }\n    return script;\n  }\n\n  // NOTE: This is a loose assumption that could be inaccurate!\n  //\n  // Inaccuracies:\n  //  - If a script is created dynamically and appended to some position\n  //    other than the very end of the document.\n  //  - If multiple scripts are created dynamically and all appended to the\n  //    same position within the document (and do not have their `async` attributes\n  //    set to `false`, at least in browsers that support async script evaluation.\n  //    other than the very end of the document.\n  //  - If any scripts are added with the `async` attribute set to `true` in a browser\n  //    that supports it.\n  //  - May get confused by `script` elements within `svg` elements\n  return scripts[scripts.length - 1] || null;\n*/\n}\n\n\n// Get the originating currently executing (i.e. yes, EXECUTING) `script` DOM\n// element or attribute node (e.g. `onclick`) for the caller function,\n// regardless of whether it is that `script` DOM element is currently being\n// evaluated for the first time. The originating currently executing `script`\n// DOM element [or attribute node] is the originator of the current execution stack.\nfunction _originatingExecutingScript() {\n  // TODO: Implement!\n  // Fixes #2\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/2\n  return null;\n}\n\n// Get the nearest currently executing (i.e. yes, EXECUTING) `script` DOM\n// element for the caller function, regardless of whether it is that `script`\n// DOM element is currently being evaluated for the first time.\nfunction _nearestExecutingScript() {\n  /*jshint noarg:false */\n\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\n  if (scripts.length === 0) {\n    return null;\n  }\n\n  var i, e, stack, url, script,\n      eligibleScripts = [],\n      skipStackDepth = _nearestExecutingScript.skipStackDepth || 1,\n\n      // TODO: Implement!\n      // Fixes #4 in part\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\n      callerFnSource = null;  //(\"\" + (_nearestExecutingScript.caller || \"\")) || null;\n\n  // This part will only help in IE 6-10.\n  for (i = 0; i < scripts.length; i++) {\n    if (isNotOpera && supportsScriptReadyState) {\n      if (scriptReadyRegex.test(scripts[i].readyState)) {\n        eligibleScripts.push(scripts[i]);\n      }\n    }\n    else {\n      eligibleScripts.push(scripts[i]);\n    }\n  }\n\n  e = new Error();\n  if (hasStackBeforeThrowing) {\n    stack = e.stack;\n  }\n  if (!stack && hasStackAfterThrowing) {\n    try {\n      throw e;\n    }\n    catch (err) {\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\n      stack = err.stack;\n    }\n  }\n\n  if (stack) {\n    url = getScriptUrlFromStack(stack, skipStackDepth);\n    script = getScriptFromUrl(url, eligibleScripts);\n\n    if (!script && pageUrl && url === pageUrl) {\n      // Try to find the correct inline script by searching through\n      // inline scripts' text content for the caller function's source\n      // code to be present.\n      if (callerFnSource) {\n        script = getInlineScriptFromCallerSource(callerFnSource, eligibleScripts);\n      }\n      // If the caller function's source code is not available, see if\n      // there is only one inline script element in the DOM and return\n      // that (even though it may be wrong)...\n      else {\n        // NOTE: This is a loose assumption that could be inaccurate!\n        //\n        // Inaccuracies:\n        //  - If the inline script that initiated the call was also removed from the DOM.\n        //  - If the call was initiated by an element's inline event handler,\n        //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n        script = getSoleInlineScript(eligibleScripts);\n      }\n    }\n  }\n\n  //\n  // Welcome to the Island of Inaccurate Assumptions!\n  // NOTE: ALL of the following are loose assumptions that could be inaccurate!\n  //\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If the inline script that initiated the call was also removed from the DOM.\n    //  - If the call was initiated by an element's inline event handler,\n    //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n    if (eligibleScripts.length === 1) {\n      script = eligibleScripts[0];\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    if (hasNativeCurrentScriptAccessor) {\n      script = document.currentScript;\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    if (isNotOpera && supportsScriptReadyState) {\n      for (i = eligibleScripts.length; i--; ) {\n        if (eligibleScripts[i].readyState === \"interactive\") {\n          script = eligibleScripts[i];\n          break;\n        }\n      }\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If a script is created dynamically and appended to some position\n    //    other than the very end of the document.\n    //  - If multiple scripts are created dynamically and all appended to the\n    //    same position within the document (and do not have their `async` attributes\n    //    set to `false`, at least in browsers that support async script evaluation.\n    //    other than the very end of the document.\n    //  - If any scripts are added with the `async` attribute set to `true` in a browser\n    //    that supports it.\n    //  - May get confused by `script` elements within `svg` elements\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    //    ```\n    script = eligibleScripts[eligibleScripts.length - 1] || null;\n  }\n\n  return script;\n}\n\n// Default stack depth to skip over when analyzing call stack frames\n_nearestExecutingScript.skipStackDepth = 1;\n\n\n\n    //\n    // Export the API\n    //\n    var currentExecutingScript    = _nearestExecutingScript;      // default\n    currentExecutingScript.near   = _nearestExecutingScript;\n    currentExecutingScript.far    = _farthestExecutingScript;\n    currentExecutingScript.origin = _originatingExecutingScript;\n\n\n    // Just return a value to define the module export.\n    // This example returns an object, but the module\n    // can return a function as the exported value.\n    return currentExecutingScript;\n  })\n);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","/* Copyright @ 2016-present 8x8, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Logger = require('./Logger.js');\n\n/**\n * Creates new <tt>LogCollector</tt>. Class implements <tt>LoggerTransport</tt>\n * and thus can be added as global transport in order to capture all the logs.\n *\n * It captures subsequent log lines created whenever <tt>Logger</tt> logs\n * a message and stores them in a queue in order to batch log entries. There are\n * time and size limit constraints which determine how often batch entries are\n * stored. Whenever one of these limits is exceeded the <tt>LogCollector</tt>\n * will use the <tt>logStorage</tt> object given as an argument to save\n * the batch log entry.\n *\n * @param {Object} logStorage an object which allows to store the logs collected\n * @param {function(string|object[])} logStorage.storeLogs a method called when\n * this <tt>LogCollector</tt> requests log entry storage. The method's argument\n * is an array which can contain <tt>string</tt>s and <tt>object</tt>s. If given\n * item is an object it means that it's an aggregated message. That is a message\n * which is the same as the previous one and it's representation has\n * the following format:\n * {\n *   {string} text: 'the text of some duplicated message'\n *   {number} count: 3 // how many times the message appeared in a row\n * }\n * If a message \"B\" after an aggregated message \"A\" is different, then it breaks\n * the sequence of \"A\". Which means that even if the next message \"C\" is\n * the same as \"A\" it will start a new aggregated message \"C\".\n * @param {function()} logStorage.isReady a method which should return\n * a <tt>boolean</tt> to tell the collector that it's ready to store. During the\n * time storage is not ready log batches will be cached and stored on the next\n * occasion (flush or interval timeout).\n *\n * @param {Object} options the <tt>LogCollector</tt> configuration options.\n * @param {number} options.maxEntryLength the size limit for a single log entry\n * to be stored. The <tt>LogCollector</tt> will push the entry as soon as it\n * reaches or exceeds this limit given that <tt>logStorage.isReady</tt>\n * returns <tt>true</tt>. Otherwise the log entry will be cached until the log\n * storage becomes ready. Note that the \"is ready\" condition is checked every\n * <tt>options.storeInterval</tt> milliseconds.\n * @param {number} options.storeInterval how often the logs should be stored in\n * case <tt>maxEntryLength</tt> was not exceeded.\n * @param {boolean} options.stringifyObjects indicates whether or not object\n * arguments should be \"stringified\" with <tt>JSON.stringify</tt> when a log\n * message is composed. Note that objects logged on the error log level are\n * always stringified.\n *\n * @constructor\n */\nfunction LogCollector(logStorage, options) {\n    this.logStorage = logStorage;\n    this.stringifyObjects\n        = options && options.stringifyObjects\n            ? options.stringifyObjects : false;\n    this.storeInterval\n        = options && options.storeInterval\n            ? options.storeInterval: 30000;\n    this.maxEntryLength\n        = options && options.maxEntryLength\n            ? options.maxEntryLength : 10000;\n    // Bind the log method for each level to the corresponding method name\n    // in order to implement \"global log transport\" object.\n    Object.keys(Logger.levels).forEach(\n    function (logLevel) {\n        var methodName = Logger.levels[logLevel];\n        this[methodName] = function (logLevel) {\n            this._log.apply(this, arguments);\n        }.bind(this, logLevel);\n    }.bind(this));\n    /**\n     * The ID of store logs interval if one is currently scheduled or\n     * <tt>null</tt> otherwise.\n     * @type {number|null}\n     */\n    this.storeLogsIntervalID = null;\n    /**\n     * The log messages that are to be batched into log entry when\n     * {@link LogCollector._flush} method is called.\n     * @type {string[]}\n     */\n    this.queue = [];\n    /**\n     * The total length of all messages currently stored in the {@link queue}.\n     * @type {number}\n     */\n    this.totalLen = 0;\n    /**\n     * An array used to temporarily store log batches, before the storage gets\n     * ready.\n     * @type {string[]}\n     */\n    this.outputCache = [];\n}\n\n/**\n * Method called inside of {@link formatLogMessage} in order to covert an\n * <tt>Object</tt> argument to string. The conversion will happen when either\n * 'stringifyObjects' option is enabled or on the {@link Logger.levels.ERROR}\n * log level. The default implementation uses <tt>JSON.stringify</tt> and\n * returns \"[object with circular refs?]\" instead of an object if it fails.\n *\n * @param {object} someObject the <tt>object</tt> to be stringified.\n *\n * @return {string} the result of <tt>JSON.stringify</tt> or\n * \"[object with circular refs?]\" if any error occurs during \"stringification\".\n *\n * @protected\n */\nLogCollector.prototype.stringify = function (someObject) {\n    try {\n        return JSON.stringify(someObject);\n    } catch (error) {\n        return \"[object with circular refs?]\";\n    }\n};\n\n/**\n * Formats log entry for the given logging level and arguments passed to the\n * <tt>Logger</tt>'s log method. The first argument is log level and the next\n * arguments have to be captured using JS built-in 'arguments' variable.\n *\n * @param {Logger.levels} logLevel provides the logging level of the message to\n * be logged.\n *\n * @return {string|null} a non-empty string representation of the log entry\n * crafted from the log arguments. If the return value is <tt>null</tt> then\n * the message wil be discarded by this <tt>LogCollector</tt>.\n *\n * @protected\n */\nLogCollector.prototype.formatLogMessage\n= function (logLevel/*, arg1, arg2, arg3... */) {\n    var msg = '';\n    for (var i = 1, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        // objects logged on error level are always converted to JSON\n        if ((this.stringifyObjects || logLevel === Logger.levels.ERROR)\n            && typeof arg === 'object') {\n            arg = this.stringify(arg);\n        }\n        msg += arg;\n        if (i != len - 1) {\n            msg += ' ';\n        }\n    }\n    return msg.length ? msg : null;\n};\n\n/**\n * The log method bound to each of the logging levels in order to implement\n * \"global log transport\" object.\n *\n * @private\n */\nLogCollector.prototype._log = function() {\n\n    // var logLevel = arguments[0]; first argument is the log level\n    var msg = this.formatLogMessage.apply(this, arguments);\n    if (msg) {\n        // The same as the previous message aggregation logic\n        var prevMessage\n            = this.queue.length ? this.queue[this.queue.length -1] : undefined;\n        // NOTE that typeof undefined is 'undefined'\n        var prevMessageText\n            = typeof prevMessage === 'object' ? prevMessage.text : prevMessage;\n        // Is it the same as the previous one ?\n        if (prevMessageText == msg) {\n            if (typeof prevMessage === 'object') {\n                prevMessage.count += 1;\n            } else {\n                this.queue[this.queue.length-1] = {\n                    text: msg,\n                    count: 2\n                }\n            }\n        } else {\n            this.queue.push(msg);\n            this.totalLen += msg.length;\n        }\n    }\n\n    if (this.totalLen >= this.maxEntryLength) {\n        this._flush(true /* force */, true /* reschedule */);\n    }\n};\n\n/**\n * Starts periodical \"store logs\" task which will be triggered at the interval\n * specified in the constructor options.\n */\nLogCollector.prototype.start = function () {\n    this._reschedulePublishInterval();\n};\n\n/**\n * Reschedules the periodical \"store logs\" task which will store the next batch\n * log entry in the storage.\n * @private\n */\nLogCollector.prototype._reschedulePublishInterval = function () {\n    if (this.storeLogsIntervalID) {\n        window.clearTimeout(this.storeLogsIntervalID);\n        this.storeLogsIntervalID = null;\n    }\n    // It's actually a timeout, because it is rescheduled on every flush\n    this.storeLogsIntervalID\n        = window.setTimeout(\n            this._flush.bind(\n                this, false /* do not force */, true /* reschedule */),\n            this.storeInterval);\n};\n\n/**\n * Call this method to flush the log entry buffer and store it in the log\n * storage immediately (given that the storage is ready).\n */\nLogCollector.prototype.flush = function() {\n    this._flush(\n        false /* do not force, as it will not be stored anyway */,\n        true /* reschedule next update */ )\n};\n\n/**\n * Stores the next batch log entry in the log storage.\n * @param {boolean} force enforce current logs batch to be stored or cached if\n * there is anything to be logged, but the storage is not ready yet. One of\n * legitimate reasons to force is when the logs length exceeds size limit which\n * could result in truncation.\n * @param {boolean} reschedule <tt>true</tt> if the next periodic task should be\n * scheduled after the log entry is stored. <tt>false</tt> will end the periodic\n * task cycle.\n * @private\n */\nLogCollector.prototype._flush = function(force, reschedule) {\n    // Publish only if there's anything to be logged\n    if (this.totalLen > 0 && (this.logStorage.isReady() || force)) {\n        //FIXME avoid truncating\n        // right now we don't care if the message size is \"slightly\" exceeded\n        if (this.logStorage.isReady()) {\n            // Sends all cached logs\n            if (this.outputCache.length) {\n                this.outputCache.forEach(\n                    function (cachedQueue) {\n                        this.logStorage.storeLogs(cachedQueue);\n                    }.bind(this)\n                );\n                // Clear the cache\n                this.outputCache = [];\n            }\n            // Send current batch\n            this.logStorage.storeLogs(this.queue);\n        } else {\n            this.outputCache.push(this.queue);\n        }\n\n        this.queue = [];\n        this.totalLen = 0;\n    }\n\n    if (reschedule) {\n        this._reschedulePublishInterval();\n    }\n};\n\n/**\n * Stops the periodical \"store logs\" task and immediately stores any pending\n * log entries as a batch.\n */\nLogCollector.prototype.stop = function() {\n    // Flush and stop publishing logs\n    this._flush(false /* do not force */, false /* do not reschedule */);\n};\n\nmodule.exports = LogCollector;\n","/* Copyright @ 2015-present 8x8, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Ordered log levels.\n */\nvar levels = {\n    \"trace\": 0,\n    \"debug\": 1,\n    \"info\": 2,\n    \"log\": 3,\n    \"warn\": 4,\n    \"error\": 5\n};\n\n/**\n * The default transport - console\n * @type LoggerTransport\n */\nLogger.consoleTransport = console;\n\n/**\n * The array which stores currently registered global transports.\n * @type {[LoggerTransport]}\n */\nvar globalTransports = [ Logger.consoleTransport ];\n\n/**\n * Adds given {@link LoggerTransport} instance to the list of global\n * transports which means that it'll be used by all {@link Logger}s\n * @param {LoggerTransport} transport\n */\nLogger.addGlobalTransport = function(transport) {\n    if (globalTransports.indexOf(transport) === -1) {\n        globalTransports.push(transport);\n    }\n};\n\n/**\n * Removes given {@link LoggerTransport} instance from the list of global\n * transports\n * @param {LoggerTransport} transport\n */\nLogger.removeGlobalTransport = function(transport) {\n    var transportIdx = globalTransports.indexOf(transport);\n    if (transportIdx !== -1) {\n        globalTransports.splice(transportIdx, 1);\n    }\n};\n\n/**\n * The global configuration options.\n */\nvar globalOptions = {};\n\n/**\n * Sets global options which will be used by all loggers. Changing these works\n * even after other loggers are created.\n */\nLogger.setGlobalOptions = function(options) {\n    globalOptions = options || {};\n}\n\n/**\n * Parses Error's object stack trace and extracts information about the last\n * caller before the log method was called.\n * @returns JS object with info about the caller - method name, file location,\n * line and column.\n */\nfunction getCallerInfo() {\n    var callerInfo = {\n        methodName: \"\",\n        fileLocation: \"\",\n        line: null,\n        column: null\n    };\n    //gets the part of the stack without the logger wrappers\n    var error = new Error();\n    var stack = error.stack? error.stack.split(\"\\n\") : [];\n    if(!stack || stack.length < 1) {\n        return callerInfo;\n    }\n    var m = null;\n    if(stack[3]) {\n        m = stack[3].match(/\\s*at\\s*(.+?)\\s*\\((\\S*)\\s*:(\\d*)\\s*:(\\d*)\\)/);\n    }\n    if(!m || m.length <= 4) {\n        //Firefox && Safari\n        if(stack[2].indexOf(\"log@\") === 0){\n            //Safari\n            callerInfo.methodName = stack[3].substr(0, stack[3].indexOf(\"@\"));\n        } else {\n            //Firefox\n            callerInfo.methodName = stack[2].substr(0, stack[2].indexOf(\"@\"));\n        }\n        return callerInfo;\n    }\n\n    callerInfo.methodName = m[1];\n    callerInfo.fileLocation = m[2];\n    callerInfo.line = m[3];\n    callerInfo.column = m[4];\n    return callerInfo;\n}\n\n/**\n * Logs messages using the transports and level from the logger.\n * @param logger a logger instance.\n * @param level the log level of the message. See the levels variable.\n * @param arguments array with arguments that will be logged.\n */\nfunction log() {\n    var logger = arguments[0], level = arguments[1],\n        args = Array.prototype.slice.call(arguments, 2);\n    if(levels[level] < logger.level) {\n        return;\n    }\n\n    var callerInfo\n        = !(logger.options.disableCallerInfo\n            || globalOptions.disableCallerInfo) && getCallerInfo();\n    var transports = globalTransports.concat(logger.transports);\n    for(var i = 0; i < transports.length; i++) {\n        var t = transports[i];\n        var l = t[level];\n        if(l && typeof(l) === \"function\") {\n            var logPrefixes = [];\n\n            if (logger.id) {\n                logPrefixes.push(\"[\" + logger.id + \"]\");\n            }\n\n            if (callerInfo && callerInfo.methodName.length > 1) {\n                logPrefixes.push(\"<\" + callerInfo.methodName + \">: \");\n            }\n\n            var fullLogParts = logPrefixes.concat(args);\n\n            l.bind(t).apply(t, fullLogParts);\n        }\n    }\n}\n\n/**\n *\n * Constructs new logger object.\n * @param level the logging level for the new logger\n * @param id optional identifier for the logger instance.\n * @param {LoggerTransport} transports optional list of handlers(objects) for\n * the logs. The handlers must support - log, warn, error, debug, info, trace.\n * @param options optional configuration file for how the logger should behave.\n * @param {boolean} options.disableCallerInfo Whether the call site of a logger\n * method invocation should be included in the log. Defaults to false, so the\n * call site will be included.\n */\nfunction Logger(level, id, transports, options) {\n    this.id = id;\n    this.options = options || {};\n    this.transports = transports;\n    if(!this.transports) {\n        this.transports = [];\n    }\n    this.level = levels[level];\n    var methods = Object.keys(levels);\n    for(var i = 0; i < methods.length; i++){\n        this[methods[i]] =\n            log.bind(null, this, methods[i]);\n    }\n}\n\n/**\n * Sets the log level for the logger.\n * @param level the new log level.\n */\nLogger.prototype.setLevel = function (level) {\n    this.level = levels[level];\n};\nmodule.exports = Logger;\n\n/**\n * Enum for the supported log levels.\n */\nLogger.levels = {\n    TRACE: \"trace\",\n    DEBUG: \"debug\",\n    INFO: \"info\",\n    LOG: \"log\",\n    WARN: \"warn\",\n    ERROR: \"error\"\n};\n","/* Copyright @ 2015-present 8x8, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Logger = require(\"./Logger\");\nvar LogCollector = require(\"./LogCollector\");\n\n/**\n * Definition of the log method\n * @name log_method\n * @function\n * @param {...*} log_args the arguments to be logged\n */\n/**\n * The logger's transport type definition.\n *\n * @typedef {object} LoggerTransport\n *\n * @property {log_method} trace method called to log on {@link Logger.levels.TRACE} logging level\n * @property {log_method} debug method called to log on {@link Logger.levels.DEBUG} logging level\n * @property {log_method} info method called to log on {@link Logger.levels.INFO} logging level\n * @property {log_method} log method called to log on {@link Logger.levels.LOG} logging level\n * @property {log_method} warn method called to log on {@link Logger.levels.WARN} logging level\n * @property {log_method} error method called to log on {@link Logger.levels.ERROR} logging level\n */\n\n/**\n * Map with the created loggers with ID.\n */\nvar idLoggers = {};\n\n/**\n * Array with the loggers without id.\n */\nvar loggers = [];\n\n/**\n * Log level for the lbrary.\n */\nvar curLevel = Logger.levels.TRACE;\n\n\nmodule.exports = {\n    /**\n     * Adds given {@link LoggerTransport} instance to the list of global\n     * transports which means that it'll be used by all {@link Logger}s\n     * @param {LoggerTransport} transport\n     */\n    addGlobalTransport: function(transport) {\n        Logger.addGlobalTransport(transport);\n    },\n    /**\n     * Removes given {@link LoggerTransport} instance from the list of global\n     * transports\n     * @param {LoggerTransport} transport\n     */\n    removeGlobalTransport: function(transport) {\n        Logger.removeGlobalTransport(transport);\n    },\n    /**\n    * Sets global options which will be used by all loggers. Changing these\n    * works even after other loggers are created.\n    */\n    setGlobalOptions: function(options) {\n        Logger.setGlobalOptions(options);\n    },\n    /**\n     * Creates new logger.\n     * @arguments the same as Logger constructor\n     */\n    getLogger: function(id, transports, options) {\n        var logger = new Logger(curLevel, id, transports, options);\n        if(id) {\n            idLoggers[id] = idLoggers[id] || [];\n            idLoggers[id].push(logger);\n        } else {\n            loggers.push(logger);\n        }\n        return logger;\n    },\n    /**\n     * Changes the log level for the existing loggers by id.\n     * @param level the new log level.\n     * @param id if specified the level will be changed only for loggers with the\n     * same id. Otherwise the operation will affect all loggers that don't\n     * have id.\n     */\n    setLogLevelById: function(level, id) {\n        var l = id? (idLoggers[id] || []) : loggers;\n        for(var i = 0; i < l.length; i++) {\n            l[i].setLevel(level);\n        }\n    },\n    /**\n     * Changes the log level for all existing loggers.\n     * @param level the new log level.\n     */\n    setLogLevel: function (level) {\n        curLevel = level;\n        var i = 0;\n        for(; i < loggers.length; i++) {\n            loggers[i].setLevel(level);\n        }\n\n        for(var id in idLoggers) {\n            var l = idLoggers[id] || [];\n            for(i = 0; i < l.length; i++) {\n                l[i].setLevel(level);\n            }\n        }\n    },\n    /**\n     * The supported log levels.\n     */\n    levels: Logger.levels,\n    /**\n     * Exports the <tt>LogCollector</tt>.\n     */\n    LogCollector: LogCollector\n};\n","/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_MD5_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [128, 32768, 8388608, -2147483648];\n  var SHIFT = [0, 8, 16, 24];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n  var blocks = [], buffer8;\n  if (ARRAY_BUFFER) {\n    var buffer = new ArrayBuffer(68);\n    buffer8 = new Uint8Array(buffer);\n    blocks = new Uint32Array(buffer);\n  }\n\n  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  /**\n   * @method hex\n   * @memberof md5\n   * @description Output hash as hex string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} Hex string\n   * @example\n   * md5.hex('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * md5('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method digest\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.digest('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method array\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.array('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method arrayBuffer\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method base64\n   * @memberof md5\n   * @description Output hash as base64 string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} base64 string\n   * @example\n   * md5.base64('The quick brown fox jumps over the lazy dog');\n   */\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Md5(true).update(message)[outputType]();\n    };\n  };\n\n  /**\n   * @method create\n   * @memberof md5\n   * @description Create Md5 object\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.create();\n   */\n  /**\n   * @method update\n   * @memberof md5\n   * @description Create and update Md5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * var hash = md5.create();\n   * hash.update('The quick brown fox jumps over the lazy dog');\n   */\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Md5();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw ERROR;\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  /**\n   * Md5 class\n   * @class Md5\n   * @description This is internal class.\n   * @see {@link md5.create}\n   */\n  function Md5(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n      this.buffer8 = buffer8;\n    } else {\n      if (ARRAY_BUFFER) {\n        var buffer = new ArrayBuffer(68);\n        this.buffer8 = new Uint8Array(buffer);\n        this.blocks = new Uint32Array(buffer);\n      } else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      }\n    }\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  /**\n   * @method update\n   * @memberof Md5\n   * @instance\n   * @description Update hash\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @see {@link md5.update}\n   */\n  Md5.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw ERROR;\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw ERROR;\n          }\n        }\n      } else {\n        throw ERROR;\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    var buffer8 = this.buffer8;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = blocks[16];\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            buffer8[i++] = message[index];\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              buffer8[i++] = code;\n            } else if (code < 0x800) {\n              buffer8[i++] = 0xc0 | (code >> 6);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else if (code < 0xd800 || code >= 0xe000) {\n              buffer8[i++] = 0xe0 | (code >> 12);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              buffer8[i++] = 0xf0 | (code >> 18);\n              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            }\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            }\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Md5.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = blocks[16];\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.bytes << 3;\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\n    this.hash();\n  };\n\n  Md5.prototype.hash = function () {\n    var a, b, c, d, bc, da, blocks = this.blocks;\n\n    if (this.first) {\n      a = blocks[0] - 680876937;\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\n      b = (b << 22 | b >>> 10) + c << 0;\n    } else {\n      a = this.h0;\n      b = this.h1;\n      c = this.h2;\n      d = this.h3;\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\n      a = (a << 7 | a >>> 25) + b << 0;\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\n      b = (b << 22 | b >>> 10) + c << 0;\n    }\n\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\n    b = (b << 20 | b >>> 12) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[5] - 378558;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[8] - 2022574463;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[11] + 1839030562;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[14] - 35309556;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[1] - 1530992060;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[4] + 1272893353;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[7] - 155497632;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[10] - 1094730640;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[13] + 681279174;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[0] - 358537222;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[3] - 722521979;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[6] + 76029189;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[9] - 640364487;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[12] - 421815835;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[15] + 530742520;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[2] - 995338651;\n    b = (b << 23 | b >>> 9) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\n    b = (b << 21 | b >>> 11) + c << 0;\n\n    if (this.first) {\n      this.h0 = a + 1732584193 << 0;\n      this.h1 = b - 271733879 << 0;\n      this.h2 = c - 1732584194 << 0;\n      this.h3 = d + 271733878 << 0;\n      this.first = false;\n    } else {\n      this.h0 = this.h0 + a << 0;\n      this.h1 = this.h1 + b << 0;\n      this.h2 = this.h2 + c << 0;\n      this.h3 = this.h3 + d << 0;\n    }\n  };\n\n  /**\n   * @method hex\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.hex();\n   */\n  Md5.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n\n    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\n  };\n\n  /**\n   * @method toString\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.toString();\n   */\n  Md5.prototype.toString = Md5.prototype.hex;\n\n  /**\n   * @method digest\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.digest}\n   * @example\n   * hash.digest();\n   */\n  Md5.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n    return [\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\n    ];\n  };\n\n  /**\n   * @method array\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.array}\n   * @example\n   * hash.array();\n   */\n  Md5.prototype.array = Md5.prototype.digest;\n\n  /**\n   * @method arrayBuffer\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.arrayBuffer}\n   * @example\n   * hash.arrayBuffer();\n   */\n  Md5.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(16);\n    var blocks = new Uint32Array(buffer);\n    blocks[0] = this.h0;\n    blocks[1] = this.h1;\n    blocks[2] = this.h2;\n    blocks[3] = this.h3;\n    return buffer;\n  };\n\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.buffer}\n   * @example\n   * hash.buffer();\n   */\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\n\n  /**\n   * @method base64\n   * @memberof Md5\n   * @instance\n   * @description Output hash as base64 string\n   * @returns {String} base64 string\n   * @see {@link md5.base64}\n   * @example\n   * hash.base64();\n   */\n  Md5.prototype.base64 = function () {\n    var v1, v2, v3, base64Str = '', bytes = this.array();\n    for (var i = 0; i < 15;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\n        BASE64_ENCODE_CHAR[v3 & 63];\n    }\n    v1 = bytes[i];\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\n      '==';\n    return base64Str;\n  };\n\n  var exports = createMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    /**\n     * @method md5\b\n     * @description Md5 hash function, export to global in browsers.\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n     * @returns {String} md5 hashes\n     * @example\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\n     *\n     * // It also supports UTF-8 encoding\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\n     *\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\n     */\n    root.md5 = exports;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","// @flow\n\nimport md5 from 'js-md5';\n\n/**\n * Returns the Avatar URL to be used for the participant.\n *\n * @param {string} [participant.avatarID] - Participant's avatar ID.\n * @param {string} [participant.email] - Participant's e-mail address.\n * @param {string} [participant.id] - Participant's ID.\n * @param {string} [avatarService.urlPrefix] - URL Prefix of the avatar service.\n * @param {string} [avatarService.urlSuffix] - URL Suffix of the avatar service.\n * @returns {string} - Avatar URL.\n */\nexport function getAvatarURL({ avatarID, email, id }: {\n        avatarID: string,\n        email: string,\n        id: string\n}, { urlPrefix, urlSuffix }: {\n        urlPrefix: string,\n        urlSuffix: string\n} = {\n    urlPrefix: 'https://abotars.jitsi.net/meeple/',\n    urlSuffix: ''\n}) {\n    return getGravatarURL(email)\n        || generateAvatarURL(avatarID || id, urlPrefix, urlSuffix);\n}\n\n/**\n * Returns the Avatar URL generated from the given avatar service.\n *\n * @param {string} key - Key using which avatar has to be generated.\n * @param {string} urlPrefix - URL Prefix of the avatar service to be used.\n * @param {string} urlSuffix - URL Suffix of the avatar service to be used.\n * @returns {string}\n */\nfunction generateAvatarURL(key: string, urlPrefix: string, urlSuffix: string) {\n    return urlPrefix + md5.hex(key.trim().toLowerCase()) + urlSuffix;\n}\n\n/**\n * Returns the Gravatar URL of a given email id.\n *\n * @param {string} email - Email id for which we need gravatar url.\n * @returns {string} - Gravatar URL.\n */\nfunction getGravatarURL(email: string) {\n    const urlPrefix = 'https://www.gravatar.com/avatar/';\n    const urlSuffix = '?d=wavatar&size=200';\n\n    // If email is valid, return gravatar url.\n    if (isValidEmail(email)) {\n        return generateAvatarURL(email, urlPrefix, urlSuffix);\n    }\n}\n\n/**\n * Returns if the email id is valid.\n *\n * @param {string} email - Email id to be checked.\n * @returns {boolean}\n */\nfunction isValidEmail(email: string) {\n    return email && email.indexOf('@') > 0;\n}\n","import { BrowserDetection } from '../browser-detection';\n\n// TODO: Move BrowserCapabilities from lib-jitsi-meet here and use the JSON\n// format for them.\n\n/**\n * Implements browser capabilities for lib-jitsi-meet.\n */\nexport default class BrowserCapabilities {\n    /**\n     * Creates new BrowserCapabilities instance.\n     *\n     * @param {Object} capabilitiesDB - The JSON database with capabilities.\n     * @param {boolean} [isUsingIFrame] - True if Jitsi Meet is loaded in iframe\n     * and false otherwise.\n     * @param {Object} [browserInfo] - Information about the browser.\n     * @param {string} browserInfo.name - The name of the browser.\n     * @param {string} browserInfo.version - The version of the browser.\n     */\n    constructor(capabilitiesDB = {}, isUsingIFrame = false, browserInfo) {\n        const browser = new BrowserDetection(browserInfo);\n        let capabilitiesByVersion;\n\n        // If the capabilitiesDB is not in the correct format or the type of the\n        // version of the browser is undefined(the version is unknown) or the\n        // version type is not compatible (not a string) we'll consider the\n        // browser as not supported.\n        if (typeof capabilitiesDB === 'object'\n                && typeof browser.getVersion() === 'string') {\n            const browserCapabilities = capabilitiesDB[browser.getName()] || [];\n\n            for (let i = 0; i < browserCapabilities.length; i++) {\n                const capabilities = browserCapabilities[i];\n\n                if (typeof capabilities !== 'object') {\n                    // eslint-disable-next-line no-continue\n                    continue;\n                }\n\n                const version = capabilities.version;\n\n                if (!version || !browser.isVersionGreaterThan(version)) {\n                    capabilitiesByVersion = capabilities;\n                    break;\n                }\n            }\n        }\n\n        if (!capabilitiesByVersion || !capabilitiesByVersion.capabilities) {\n            this._capabilities = { isSupported: false };\n        } else if (isUsingIFrame) {\n            this._capabilities = {\n                ...capabilitiesByVersion.capabilities,\n                ...capabilitiesByVersion.iframeCapabilities\n            };\n        } else {\n            this._capabilities = capabilitiesByVersion.capabilities;\n        }\n\n        if (typeof this._capabilities.isSupported === 'undefined') {\n            // we have some capabilities but isSupported property is not filled.\n            this._capabilities.isSupported = true;\n        } else if (this._capabilities.isSupported === false) {\n            // Clean the other capabilities.\n            this._capabilities = { isSupported: false };\n        }\n    }\n\n    /**\n     * Checks whether the browser is supported by Jitsi Meet.\n     *\n     * @returns {boolean}\n     */\n    isSupported() {\n        return this._capabilities.isSupported;\n    }\n\n    /**\n     * Checks whether the browser supports incoming audio.\n     *\n     * @returns {boolean}\n     */\n    supportsAudioIn() {\n        return this._capabilities.audioIn || false;\n    }\n\n    /**\n     * Checks whether the browser supports outgoing audio.\n     *\n     * @returns {boolean}\n     */\n    supportsAudioOut() {\n        return this._capabilities.audioOut || false;\n    }\n\n\n    /**\n     * Checks whether the browser supports screen sharing.\n     *\n     * @returns {boolean}\n     */\n    supportsScreenSharing() {\n        return this._capabilities.screenSharing || false;\n    }\n\n    /**\n     * Checks whether the browser supports incomming video.\n     *\n     * @returns {boolean}\n     */\n    supportsVideoIn() {\n        return this._capabilities.videoIn || false;\n    }\n\n    /**\n     * Checks whether the browser supports incomming video.\n     *\n     * @returns {boolean}\n     */\n    supportsVideoOut() {\n        return this._capabilities.videoOut || false;\n    }\n}\n","export { default as BrowserCapabilities } from './BrowserCapabilities';\n","import bowser from 'bowser';\n\nimport {\n    CHROME,\n    OPERA,\n    FIREFOX,\n    INTERNET_EXPLORER,\n    EDGE,\n    SAFARI,\n    NWJS,\n    ELECTRON,\n    REACT_NATIVE,\n    UNKNOWN\n} from './browsers';\n\n/**\n * Maps the names of the browsers from bowser to the internal names defined in\n * ./browsers.js\n */\nconst bowserNameToJitsiName = {\n    'Chrome': CHROME,\n    'Chromium': CHROME,\n    'Opera': OPERA,\n    'Firefox': FIREFOX,\n    'Internet Explorer': INTERNET_EXPLORER,\n    'Microsoft Edge': EDGE,\n    'Safari': SAFARI\n};\n\n/**\n * Detects a Chromium based environent.\n * \n * NOTE: Here we cannot check solely for \"Chrome\" in the UA string and the\n * \"window.chrome\" property, because Edge has both, so we add an explicit\n * check for NOT Edge.\n *\n * @returns {Object|undefined} - The name (CHROME) and version.\n */\nfunction _detectChromiumBased() {\n    const userAgent = navigator.userAgent;\n\n    if (Boolean(window.chrome)\n            && !userAgent.match(/Edge/) && userAgent.match(/Chrome/)) {\n        const version = userAgent.match(/Chrome\\/([\\d.]+)/)[1];\n\n        return {\n            name: CHROME,\n            version\n        };\n    }\n}\n\n/**\n * Detects Electron environment.\n *\n * @returns {Object|undefined} - The name (ELECTRON) and version.\n */\nfunction _detectElectron() {\n    const userAgent = navigator.userAgent;\n\n    if (userAgent.match(/Electron/)) {\n        const version = userAgent.match(/Electron\\/([\\d.]+)/)[1];\n\n        return {\n            name: ELECTRON,\n            version\n        };\n    }\n}\n\n/**\n * Detects NWJS environment.\n *\n * @returns {Object|undefined} - The name (NWJS) and version.\n */\nfunction _detectNWJS() {\n    const userAgent = navigator.userAgent;\n\n    if (userAgent.match(/JitsiMeetNW/)) {\n        const version = userAgent.match(/JitsiMeetNW\\/([\\d.]+)/)[1];\n\n        return {\n            name: NWJS,\n            version\n        };\n    }\n}\n\n/**\n * Detects React Native environment.\n * @returns {Object|undefined} - The name (REACT_NATIVE) and version.\n */\nfunction _detectReactNative() {\n    const match\n        = navigator.userAgent.match(/\\b(react[ \\t_-]*native)(?:\\/(\\S+))?/i);\n    let version;\n\n    // If we're remote debugging a React Native app, it may be treated as\n    // Chrome. Check navigator.product as well and always return some version\n    // even if we can't get the real one.\n\n    if (match || navigator.product === 'ReactNative') {\n        let name;\n\n        if (match && match.length > 2) {\n            name = match[1];\n            version = match[2];\n        }\n        name || (name = 'react-native');\n        version || (version = 'unknown');\n\n        return {\n            name: REACT_NATIVE,\n            version\n        };\n    }\n}\n\n/**\n * Returns information about the current browser.\n *\n * @returns {Object} - The name and version of the browser.\n */\nfunction _detect() {\n    let browserInfo;\n    const detectors = [\n        _detectReactNative,\n        _detectElectron,\n        _detectNWJS\n    ];\n\n    // Try all browser detectors\n    for (let i = 0; i < detectors.length; i++) {\n        browserInfo = detectors[i]();\n        if (browserInfo) {\n            return browserInfo;\n        }\n    }\n\n    const { name, version } = bowser;\n\n    if (name in bowserNameToJitsiName) {\n        return {\n            name: bowserNameToJitsiName[name],\n            version\n        };\n    }\n\n    // Detect other browsers with the Chrome engine, such as Vivaldi.\n    browserInfo = _detectChromiumBased();\n    if (browserInfo) {\n        return browserInfo;\n    }\n\n    return {\n        name: UNKNOWN,\n        version: undefined\n    };\n}\n\n/**\n * Implements browser detection.\n */\nexport default class BrowserDetection {\n    /**\n     * Creates new BrowserDetection instance.\n     *\n     * @param {Object} [browserInfo] - Information about the browser.\n     * @param {string} browserInfo.name - The name of the browser.\n     * @param {string} browserInfo.version - The version of the browser.\n     */\n    constructor(browserInfo) {\n        let name, version;\n\n        if (typeof browserInfo === 'undefined') {\n            const detectedBrowserInfo = _detect();\n\n            name = detectedBrowserInfo.name;\n            version = detectedBrowserInfo.version;\n        } else if (browserInfo.name in bowserNameToJitsiName) {\n            name = bowserNameToJitsiName[browserInfo.name];\n            version = browserInfo.version;\n        } else {\n            name = UNKNOWN;\n            version = undefined;\n        }\n\n        this._name = name;\n        this._version = version;\n    }\n\n    /**\n     * Gets current browser name.\n     * @returns {string}\n     */\n    getName() {\n        return this._name;\n    }\n\n    /**\n     * Checks if current browser is Chrome.\n     * @returns {boolean}\n     */\n    isChrome() {\n        return this._name === CHROME;\n    }\n\n    /**\n     * Checks if current browser is Opera.\n     * @returns {boolean}\n     */\n    isOpera() {\n        return this._name === OPERA;\n    }\n\n    /**\n     * Checks if current browser is Firefox.\n     * @returns {boolean}\n     */\n    isFirefox() {\n        return this._name === FIREFOX;\n    }\n\n    /**\n     * Checks if current browser is Internet Explorer.\n     * @returns {boolean}\n     */\n    isIExplorer() {\n        return this._name === INTERNET_EXPLORER;\n    }\n\n    /**\n     * Checks if current browser is Microsoft Edge.\n     * @returns {boolean}\n     */\n    isEdge() {\n        return this._name === EDGE;\n    }\n\n    /**\n     * Checks if current browser is Safari.\n     * @returns {boolean}\n     */\n    isSafari() {\n        return this._name === SAFARI;\n    }\n\n    /**\n     * Checks if current environment is NWJS.\n     * @returns {boolean}\n     */\n    isNWJS() {\n        return this._name === NWJS;\n    }\n\n    /**\n     * Checks if current environment is Electron.\n     * @returns {boolean}\n     */\n    isElectron() {\n        return this._name === ELECTRON;\n    }\n\n    /**\n     * Checks if current environment is React Native.\n     * @returns {boolean}\n     */\n    isReactNative() {\n        return this._name === REACT_NATIVE;\n    }\n\n    /**\n     * Returns the version of the current browser.\n     * @returns {string}\n     */\n    getVersion() {\n        return this._version;\n    }\n\n    /**\n     * Compares the passed version with the current browser version.\n     * {@see https://github.com/lancedikson/bowser}\n     */\n    static compareVersions = bowser.compareVersions;\n\n    /**\n     * Compares the passed version with the current browser version.\n     *\n     * @param {*} version - The version to compare with. Anything different\n     * than string will be converted to string.\n     * @returns {number|undefined} - Returns 0 if the version is equal to the\n     * current one, 1 if the version is greater than the current one, -1 if the\n     * version is lower than the current one and undefined if the current\n     * browser version is unknown.\n     */\n    compareVersion(version) {\n        if (this._version) {\n            return bowser.compareVersions([ String(version), this._version ]);\n        }\n    }\n\n    /**\n     * Compares the passed version with the current browser version.\n     *\n     * @param {*} version - The version to compare with. Anything different\n     * than string will be converted to string.\n     * @returns {boolean|undefined} - Returns true if the current version is\n     * greater than the passed version and false otherwise. Returns undefined if\n     * the current browser version is unknown.\n     */\n    isVersionGreaterThan(version) {\n        return this.compareVersion(version) === -1;\n    }\n\n    /**\n     * Compares the passed version with the current browser version.\n     *\n     * @param {*} version - The version to compare with. Anything different\n     * than string will be converted to string.\n     * @returns {boolean|undefined} - Returns true if the current version is\n     * lower than the passed version and false otherwise. Returns undefined if\n     * the current browser version is unknown.\n     */\n    isVersionLessThan(version) {\n        return this.compareVersion(version) === 1;\n    }\n\n    /**\n     * Compares the passed version with the current browser version.\n     *\n     * @param {*} version - The version to compare with. Anything different\n     * than string will be converted to string.\n     * @returns {boolean|undefined} - Returns true if the current version is\n     * equal to the passed version and false otherwise. Returns undefined if\n     * the current browser version is unknown.\n     */\n    isVersionEqualTo(version) {\n        return this.compareVersion(version) === 0;\n    }\n}\n","// TODO: Maybe fix the values to 'Chrome', 'Internet Explorer', etc. Currently\n// this values needs to be as they are becuse they are going to analytics,\n// callstats, etc.\n\nexport const CHROME = 'chrome';\n\nexport const OPERA = 'opera';\n\nexport const FIREFOX = 'firefox';\n\nexport const INTERNET_EXPLORER = 'iexplorer';\n\nexport const EDGE = 'edge';\n\nexport const SAFARI = 'safari';\n\nexport const NWJS = 'nwjs';\n\nexport const ELECTRON = 'electron';\n\nexport const REACT_NATIVE = 'react-native';\n\nexport const UNKNOWN = 'unknown';\n","export { default as BrowserDetection } from './BrowserDetection';\nexport * as browsers from './browsers';\n","export * from './browser-capabilities';\nexport * from './browser-detection';\nexport * from './avatar';\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this.localDescription = null;\n    this.remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (whih is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    this.transceivers.push(transceiver);\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n        event.candidate.candidate = serializedCandidate;\n      }\n\n      // update local description.\n      var sections = SDPUtils.splitSections(pc.localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex + 1] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex + 1] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc.localDescription.sdp = sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.isDatachannel) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc.localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          isDatachannel: true\n        };\n        return;\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc.remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      states[transceiver.iceTransport.state]++;\n      states[transceiver.dtlsTransport.state]++;\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0 || states.checking > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0 || states.completed > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    var mediaSectionsInOffer = SDPUtils.splitSections(\n        pc.remoteDescription.sdp).length - 1;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.isDatachannel) {\n        sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' +\n            'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc.remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].isDatachannel) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\n          sections[j + 1] += 'a=end-of-candidates\\r\\n';\n          pc.remoteDescription.sdp = sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.isDatachannel) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\n          sections[sdpMLineIndex + 1] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc.remoteDescription.sdp = sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function() {\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    var fixStatsType = function(stat) {\n      return {\n        inboundrtp: 'inbound-rtp',\n        outboundrtp: 'outbound-rtp',\n        candidatepair: 'candidate-pair',\n        localcandidate: 'local-candidate',\n        remotecandidate: 'remote-candidate'\n      }[stat.type] || stat.type;\n    };\n    return new Promise(function(resolve) {\n      // shim getStats with maplike support\n      var results = new Map();\n      Promise.all(promises).then(function(res) {\n        res.forEach(function(result) {\n          Object.keys(result).forEach(function(id) {\n            result[id].type = fixStatsType(result[id]);\n            results.set(id, result[id]);\n          });\n        });\n        resolve(results);\n      });\n    });\n  };\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{ //o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  //k: [{}], // outdated thing ignored\n  t: [{ //t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{ //c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{ //b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{ //m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    { //a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding) ?\n          'rtpmap:%d %s/%s/%s':\n          o.rate ?\n          'rtpmap:%d %s/%s':\n          'rtpmap:%d %s';\n      }\n    },\n    { //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      //a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    { //a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    { //a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null) ?\n          'rtcp:%d %s IP%d %s':\n          'rtcp:%d';\n      }\n    },\n    { //a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%d trr-int %d'\n    },\n    { //a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null) ?\n          'rtcp-fb:%s %s %s':\n          'rtcp-fb:%s %s';\n      }\n    },\n    { //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      //a=extmap:1/recvonly URI-gps-string\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'uri', 'config'],\n      format: function (o) {\n        return 'extmap:%d' + (o.direction ? '/%s' : '%v') + ' %s' + (o.config ? ' %s' : '');\n      }\n    },\n    { //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null) ?\n          'crypto:%d %s %s %s':\n          'crypto:%d %s %s';\n      }\n    },\n    { //a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    { //a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    { //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    { //a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*)/,\n      format: 'ptime:%d'\n    },\n    { //a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*)/,\n      format: 'maxptime:%d'\n    },\n    { //a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    { //a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    { //a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    { //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    { //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    { //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    { //a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    { //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    { //a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    { //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    { //a=ssrc-group:FEC 1 2\n      //a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    { //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    { //a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    { //a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    { //a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    { //a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null) ?\n          'sctpmap:%s %s %s' :\n          'sctpmap:%s %s';\n      }\n    },\n    { //a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    { //a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    { //a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      //a=imageattr:* send [x=800,y=640] recv *\n      //a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        //a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        //send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        //recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      //a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        //a=simulcast:\n        '^simulcast:' +\n        //send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        //space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        //end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //Old simulcast draft 03 (implemented by Firefox)\n      //  https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      //a=simulcast: recv pt=97;98 send pt=97\n      //a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      //a=framerate:25\n      //a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    { // any a= that we don't understand is kepts verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseFmtpConfig = parser.parseFmtpConfig;\nexports.parseParams = parser.parseParams;\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/\\;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n"," /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress); // was: relAddr\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort); // was: relPort\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n}\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  // was: channels\n  parsed.numChannels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (codec.numChannels !== 1 ? '/' + codec.numChannels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      params.push(param + '=' + codec.parameters[param]);\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n}\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  caps.headerExtensions.forEach(function(extension) {\n    sdp += SDPUtils.writeExtmap(extension);\n  });\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.split(' ');\n    parts.shift();\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n        rtx: {\n          ssrc: secondarySsrc\n        }\n      };\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: secondarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  var cname;\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=thisisadapterortc ' + sessionId + ' ' + version + ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n}\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/** File: strophe.js\n *  A JavaScript library for writing XMPP clients.\n *\n *  This library uses either Bidirectional-streams Over Synchronous HTTP (BOSH)\n *  to emulate a persistent, stateful, two-way connection to an XMPP server or\n *  alternatively WebSockets.\n *\n *  More information on BOSH can be found in XEP 124.\n *  For more information on XMPP-over WebSocket see this RFC:\n *  http://tools.ietf.org/html/rfc7395\n */\n\n/* All of the Strophe globals are defined in this special function below so\n * that references to the globals become closures.  This will ensure that\n * on page reload, these references will still be available to callbacks\n * that are still executing.\n */\n\n/* jshint ignore:start */\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        //Allow using this built library as an AMD module\n        //in another project. That other project will only\n        //see this AMD call, not the internal modules in\n        //the closure below.\n        define([], factory);\n    } else {\n        //Browser globals case.\n        var wrapper = factory();\n        root.Strophe        = wrapper.Strophe;\n        root.$build         = wrapper.$build;\n        root.$iq            = wrapper.$iq;\n        root.$msg           = wrapper.$msg;\n        root.$pres          = wrapper.$pres;\n        root.SHA1           = wrapper.SHA1;\n        root.MD5            = wrapper.MD5;\n        root.b64_hmac_sha1  = wrapper.b64_hmac_sha1;\n        root.b64_sha1       = wrapper.b64_sha1;\n        root.str_hmac_sha1  = wrapper.str_hmac_sha1;\n        root.str_sha1       = wrapper.str_sha1;\n    }\n}(this, function () {\n    //almond, and your modules will be inlined here\n/* jshint ignore:end */\n/**\n * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/almond/LICENSE\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part, normalizedBaseParts,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name) {\n            name = name.split('/');\n            lastIndex = name.length - 1;\n\n            // If wanting node ID compatibility, strip .js from end\n            // of IDs. Have to do this here, and not in nameToUrl\n            // because node allows either .js or non .js to map\n            // to same file.\n            if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n            }\n\n            // Starts with a '.' so need the baseName\n            if (name[0].charAt(0) === '.' && baseParts) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that 'directory' and not name of the baseName's\n                //module. For instance, baseName of 'one/two/three', maps to\n                //'one/two/three.js', but we want the directory, 'one/two' for\n                //this normalization.\n                normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                name = normalizedBaseParts.concat(name);\n            }\n\n            //start trimDots\n            for (i = 0; i < name.length; i++) {\n                part = name[i];\n                if (part === '.') {\n                    name.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    // If at the start, or previous value is still ..,\n                    // keep them so that when converted to a path it may\n                    // still work when converted to a path, even though\n                    // as an ID it is less than ideal. In larger point\n                    // releases, may be better to just kick out an error.\n                    if (i === 0 || (i === 1 && name[2] === '..') || name[i - 1] === '..') {\n                        continue;\n                    } else if (i > 0) {\n                        name.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n            //end trimDots\n\n            name = name.join('/');\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    //Creates a parts array for a relName where first part is plugin ID,\n    //second part is resource ID. Assumes relName has already been normalized.\n    function makeRelParts(relName) {\n        return relName ? splitPrefix(relName) : [];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relParts) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0],\n            relResourceName = relParts[1];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relResourceName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relResourceName));\n            } else {\n                name = normalize(name, relResourceName);\n            }\n        } else {\n            name = normalize(name, relResourceName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i, relParts,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n        relParts = makeRelParts(relName);\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relParts);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, makeRelParts(callback)).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"node_modules/almond/almond.js\", function(){});\n\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\n/* global define */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-polyfill',[], function () {\n            return factory(root);\n        });\n    } else {\n        // Browser globals\n        return factory(root);\n    }\n}(this, function (root) {\n\n/** Function: Function.prototype.bind\n *  Bind a function to an instance.\n *\n *  This Function object extension method creates a bound method similar\n *  to those in Python.  This means that the 'this' object will point\n *  to the instance you want.  See <MDC's bind() documentation at https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind>\n *  and <Bound Functions and Function Imports in JavaScript at http://benjamin.smedbergs.us/blog/2007-01-03/bound-functions-and-function-imports-in-javascript/>\n *  for a complete explanation.\n *\n *  This extension already exists in some browsers (namely, Firefox 3), but\n *  we provide it to support those that don't.\n *\n *  Parameters:\n *    (Object) obj - The object that will become 'this' in the bound function.\n *    (Object) argN - An option argument that will be prepended to the\n *      arguments given for the function call\n *\n *  Returns:\n *    The bound function.\n */\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (obj /*, arg1, arg2, ... */) {\n        var func = this;\n        var _slice = Array.prototype.slice;\n        var _concat = Array.prototype.concat;\n        var _args = _slice.call(arguments, 1);\n        return function () {\n            return func.apply(obj ? obj : this, _concat.call(_args, _slice.call(arguments, 0)));\n        };\n    };\n}\n\n/** Function: Array.isArray\n *  This is a polyfill for the ES5 Array.isArray method.\n */\nif (!Array.isArray) {\n    Array.isArray = function(arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n}\n\n/** Function: Array.prototype.indexOf\n *  Return the index of an object in an array.\n *\n *  This function is not supplied by some JavaScript implementations, so\n *  we provide it if it is missing.  This code is from:\n *  http://developer.mozilla.org/En/Core_JavaScript_1.5_Reference:Objects:Array:indexOf\n *\n *  Parameters:\n *    (Object) elt - The object to look for.\n *    (Integer) from - The index from which to start looking. (optional).\n *\n *  Returns:\n *    The index of elt in the array or -1 if not found.\n */\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function(elt /*, from*/) {\n        var len = this.length;\n        var from = Number(arguments[1]) || 0;\n        from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from++) {\n            if (from in this && this[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n}\n\n/** Function: Array.prototype.forEach\n *\n *  This function is not available in IE < 9\n *\n *  See <forEach on developer.mozilla.org at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach>\n */\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function(callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(' this is null or not defined');\n        }\n        // 1. Let O be the result of calling toObject() passing the\n        // |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get() internal\n        // method of O with the argument \"length\".\n        // 3. Let len be toUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If isCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let\n        // T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //        This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty\n            //        internal method of O with argument Pk.\n            //        This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal\n                // method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as\n                // the this value and argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n// This code was written by Tyler Akins and has been placed in the\n// public domain.  It would be nice if you left this header intact.\n// Base64 code from Tyler Akins -- http://rumkin.com\nvar keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nif (!root.btoa) {\n    root.btoa = function (input) {\n        /**\n         * Encodes a string in base64\n         * @param {String} input The string to encode in base64.\n         */\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        do {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n                enc2 = ((chr1 & 3) << 4);\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n            output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) +\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\n        } while (i < input.length);\n        return output;\n    };\n}\n\nif (!root.atob) {\n    root.atob = function (input) {\n        /**\n         * Decodes a base64 string.\n         * @param {String} input The string to decode.\n         */\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        do {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 !== 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 !== 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n        } while (i < input.length);\n        return output;\n    };\n}\n}));\n\n/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\n/* jshint undef: true, unused: true:, noarg: true, latedef: false */\n/* global define */\n\n/* Some functions and variables have been stripped for use with Strophe */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-sha1', [],function () {\n            return factory();\n        });\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        // Browser globals\n        root.SHA1 = factory();\n    }\n}(this, function () {\n\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */\nfunction core_sha1(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << (24 - len % 32);\n  x[((len + 64 >> 9) << 4) + 15] = len;\n\n  var w = new Array(80);\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n  var e = -1009589776;\n\n  var i, j, t, olda, oldb, oldc, oldd, olde;\n  for (i = 0; i < x.length; i += 16)\n  {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n    olde = e;\n\n    for (j = 0; j < 80; j++)\n    {\n      if (j < 16) { w[j] = x[i + j]; }\n      else { w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1); }\n      t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\n      e = d;\n      d = c;\n      c = rol(b, 30);\n      b = a;\n      a = t;\n    }\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n    e = safe_add(e, olde);\n  }\n  return [a, b, c, d, e];\n}\n\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */\nfunction sha1_ft(t, b, c, d)\n{\n  if (t < 20) { return (b & c) | ((~b) & d); }\n  if (t < 40) { return b ^ c ^ d; }\n  if (t < 60) { return (b & c) | (b & d) | (c & d); }\n  return b ^ c ^ d;\n}\n\n/*\n * Determine the appropriate additive constant for the current iteration\n */\nfunction sha1_kt(t)\n{\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\n         (t < 60) ? -1894007588 : -899497514;\n}\n\n/*\n * Calculate the HMAC-SHA1 of a key and some data\n */\nfunction core_hmac_sha1(key, data)\n{\n  var bkey = str2binb(key);\n  if (bkey.length > 16) { bkey = core_sha1(bkey, key.length * 8); }\n\n  var ipad = new Array(16), opad = new Array(16);\n  for (var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\n  return core_sha1(opad.concat(hash), 512 + 160);\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\n/*\n * Convert an 8-bit or 16-bit string to an array of big-endian words\n * In 8-bit function, characters >255 have their hi-byte silently ignored.\n */\nfunction str2binb(str)\n{\n  var bin = [];\n  var mask = 255;\n  for (var i = 0; i < str.length * 8; i += 8)\n  {\n    bin[i>>5] |= (str.charCodeAt(i / 8) & mask) << (24 - i%32);\n  }\n  return bin;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2str(bin)\n{\n  var str = \"\";\n  var mask = 255;\n  for (var i = 0; i < bin.length * 32; i += 8)\n  {\n    str += String.fromCharCode((bin[i>>5] >>> (24 - i%32)) & mask);\n  }\n  return str;\n}\n\n/*\n * Convert an array of big-endian words to a base-64 string\n */\nfunction binb2b64(binarray)\n{\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var str = \"\";\n  var triplet, j;\n  for (var i = 0; i < binarray.length * 4; i += 3)\n  {\n    triplet = (((binarray[i   >> 2] >> 8 * (3 -  i   %4)) & 0xFF) << 16) |\n              (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 ) |\n               ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF);\n    for (j = 0; j < 4; j++)\n    {\n      if (i * 8 + j * 6 > binarray.length * 32) { str += \"=\"; }\n      else { str += tab.charAt((triplet >> 6*(3-j)) & 0x3F); }\n    }\n  }\n  return str;\n}\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nreturn {\n    b64_hmac_sha1:  function (key, data){ return binb2b64(core_hmac_sha1(key, data)); },\n    b64_sha1:       function (s) { return binb2b64(core_sha1(str2binb(s),s.length * 8)); },\n    binb2str:       binb2str,\n    core_hmac_sha1: core_hmac_sha1,\n    str_hmac_sha1:  function (key, data){ return binb2str(core_hmac_sha1(key, data)); },\n    str_sha1:       function (s) { return binb2str(core_sha1(str2binb(s),s.length * 8)); },\n};\n}));\n\n/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n/*\n * Everything that isn't used by Strophe has been stripped here!\n */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-md5',[], function () {\n            return factory();\n        });\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        // Browser globals\n        root.MD5 = factory();\n    }\n}(this, function () {\n    /*\n     * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n     * to work around bugs in some JS interpreters.\n     */\n    var safe_add = function (x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    };\n\n    /*\n     * Bitwise rotate a 32-bit number to the left.\n     */\n    var bit_rol = function (num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    };\n\n    /*\n     * Convert a string to an array of little-endian words\n     */\n    var str2binl = function (str) {\n        var bin = [];\n        for(var i = 0; i < str.length * 8; i += 8)\n        {\n            bin[i>>5] |= (str.charCodeAt(i / 8) & 255) << (i%32);\n        }\n        return bin;\n    };\n\n    /*\n     * Convert an array of little-endian words to a string\n     */\n    var binl2str = function (bin) {\n        var str = \"\";\n        for(var i = 0; i < bin.length * 32; i += 8)\n        {\n            str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & 255);\n        }\n        return str;\n    };\n\n    /*\n     * Convert an array of little-endian words to a hex string.\n     */\n    var binl2hex = function (binarray) {\n        var hex_tab = \"0123456789abcdef\";\n        var str = \"\";\n        for(var i = 0; i < binarray.length * 4; i++)\n        {\n            str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n                hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n        }\n        return str;\n    };\n\n    /*\n     * These functions implement the four basic operations the algorithm uses.\n     */\n    var md5_cmn = function (q, a, b, x, s, t) {\n        return safe_add(bit_rol(safe_add(safe_add(a, q),safe_add(x, t)), s),b);\n    };\n\n    var md5_ff = function (a, b, c, d, x, s, t) {\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    };\n\n    var md5_gg = function (a, b, c, d, x, s, t) {\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    };\n\n    var md5_hh = function (a, b, c, d, x, s, t) {\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    };\n\n    var md5_ii = function (a, b, c, d, x, s, t) {\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    };\n\n    /*\n     * Calculate the MD5 of an array of little-endian words, and a bit length\n     */\n    var core_md5 = function (x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << ((len) % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var a =  1732584193;\n        var b = -271733879;\n        var c = -1732584194;\n        var d =  271733878;\n\n        var olda, oldb, oldc, oldd;\n        for (var i = 0; i < x.length; i += 16)\n        {\n            olda = a;\n            oldb = b;\n            oldc = c;\n            oldd = d;\n\n            a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n            d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n            c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n            b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n            a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n            d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n            c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n            b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n            a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n            d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n            c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n            b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n            a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n            d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n            c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n            b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n            a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n            d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n            c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n            b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n            a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n            d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n            c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n            b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n            a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n            d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n            c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n            b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n            a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n            d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n            c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n            b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n            a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n            d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n            c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n            b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n            a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n            d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n            c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n            b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n            a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n            d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n            c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n            b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n            a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n            d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n            c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n            b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n            a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n            d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n            c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n            b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n            a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n            d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n            c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n            b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n            a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n            d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n            c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n            b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n            a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n            d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n            c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n            b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n            a = safe_add(a, olda);\n            b = safe_add(b, oldb);\n            c = safe_add(c, oldc);\n            d = safe_add(d, oldd);\n        }\n        return [a, b, c, d];\n    };\n\n    var obj = {\n        /*\n         * These are the functions you'll usually want to call.\n         * They take string arguments and return either hex or base-64 encoded\n         * strings.\n         */\n        hexdigest: function (s) {\n            return binl2hex(core_md5(str2binl(s), s.length * 8));\n        },\n\n        hash: function (s) {\n            return binl2str(core_md5(str2binl(s), s.length * 8));\n        }\n    };\n    return obj;\n}));\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-utils',[], function () {\n            return factory();\n        });\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        // Browser globals\n        root.stropheUtils = factory();\n    }\n}(this, function () {\n\n    var utils = {\n\n        utf16to8: function (str) {\n            var i, c;\n            var out = \"\";\n            var len = str.length;\n            for (i = 0; i < len; i++) {\n                c = str.charCodeAt(i);\n                if ((c >= 0x0000) && (c <= 0x007F)) {\n                    out += str.charAt(i);\n                } else if (c > 0x07FF) {\n                    out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n                    out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n                    out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n                } else {\n                    out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n                    out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n                }\n            }\n            return out;\n        },\n\n        addCookies: function (cookies) {\n            /* Parameters:\n             *  (Object) cookies - either a map of cookie names\n             *    to string values or to maps of cookie values.\n             *\n             * For example:\n             * { \"myCookie\": \"1234\" }\n             *\n             * or:\n             * { \"myCookie\": {\n             *      \"value\": \"1234\",\n             *      \"domain\": \".example.org\",\n             *      \"path\": \"/\",\n             *      \"expires\": expirationDate\n             *      }\n             *  }\n             *\n             *  These values get passed to Strophe.Connection via\n             *   options.cookies\n             */\n            var cookieName, cookieObj, isObj, cookieValue, expires, domain, path;\n            for (cookieName in (cookies || {})) {\n                expires = '';\n                domain = '';\n                path = '';\n                cookieObj = cookies[cookieName];\n                isObj = typeof cookieObj === \"object\";\n                cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\n                if (isObj) {\n                    expires = cookieObj.expires ? \";expires=\"+cookieObj.expires : '';\n                    domain = cookieObj.domain ? \";domain=\"+cookieObj.domain : '';\n                    path = cookieObj.path ? \";path=\"+cookieObj.path : '';\n                }\n                document.cookie =\n                    cookieName+'='+cookieValue + expires + domain + path;\n            }\n        }\n    };\n    return utils;\n}));\n\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\n/*global define, document, sessionStorage, setTimeout, clearTimeout, ActiveXObject, DOMParser, btoa, atob */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-core',[\n            'strophe-sha1',\n            'strophe-md5',\n            'strophe-utils'\n        ], function () {\n            return factory.apply(this, arguments);\n        });\n    }  else if (typeof exports === 'object') {\n        module.exports = factory(\n            require('./sha1'),\n            require('./md5'),\n            require('./utils')\n        );\n    } else {\n        // Browser globals\n        var o = factory(root.SHA1, root.MD5, root.stropheUtils);\n        root.Strophe =        o.Strophe;\n        root.$build =         o.$build;\n        root.$iq =            o.$iq;\n        root.$msg =           o.$msg;\n        root.$pres =          o.$pres;\n        root.SHA1 =           o.SHA1;\n        root.MD5 =            o.MD5;\n        root.b64_hmac_sha1 =  o.SHA1.b64_hmac_sha1;\n        root.b64_sha1 =       o.SHA1.b64_sha1;\n        root.str_hmac_sha1 =  o.SHA1.str_hmac_sha1;\n        root.str_sha1 =       o.SHA1.str_sha1;\n    }\n}(this, function (SHA1, MD5, utils) {\n\nvar Strophe;\n\n/** Function: $build\n *  Create a Strophe.Builder.\n *  This is an alias for 'new Strophe.Builder(name, attrs)'.\n *\n *  Parameters:\n *    (String) name - The root element name.\n *    (Object) attrs - The attributes for the root element in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $build(name, attrs) { return new Strophe.Builder(name, attrs); }\n\n/** Function: $msg\n *  Create a Strophe.Builder with a <message/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <message/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $msg(attrs) { return new Strophe.Builder(\"message\", attrs); }\n\n/** Function: $iq\n *  Create a Strophe.Builder with an <iq/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <iq/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $iq(attrs) { return new Strophe.Builder(\"iq\", attrs); }\n\n/** Function: $pres\n *  Create a Strophe.Builder with a <presence/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <presence/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $pres(attrs) { return new Strophe.Builder(\"presence\", attrs); }\n\n/** Class: Strophe\n *  An object container for all Strophe library functions.\n *\n *  This class is just a container for all the objects and constants\n *  used in the library.  It is not meant to be instantiated, but to\n *  provide a namespace for library objects, constants, and functions.\n */\nStrophe = {\n    /** Constant: VERSION */\n    VERSION: \"1.2.16\",\n\n    /** Constants: XMPP Namespace Constants\n     *  Common namespace constants from the XMPP RFCs and XEPs.\n     *\n     *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\n     *  NS.BOSH - BOSH namespace from XEP 206.\n     *  NS.CLIENT - Main XMPP client namespace.\n     *  NS.AUTH - Legacy authentication namespace.\n     *  NS.ROSTER - Roster operations namespace.\n     *  NS.PROFILE - Profile namespace.\n     *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\n     *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\n     *  NS.MUC - Multi-User Chat namespace from XEP 45.\n     *  NS.SASL - XMPP SASL namespace from RFC 3920.\n     *  NS.STREAM - XMPP Streams namespace from RFC 3920.\n     *  NS.BIND - XMPP Binding namespace from RFC 3920.\n     *  NS.SESSION - XMPP Session namespace from RFC 3920.\n     *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\n     *  NS.XHTML - XHTML body namespace from XEP 71.\n     */\n    NS: {\n        HTTPBIND: \"http://jabber.org/protocol/httpbind\",\n        BOSH: \"urn:xmpp:xbosh\",\n        CLIENT: \"jabber:client\",\n        AUTH: \"jabber:iq:auth\",\n        ROSTER: \"jabber:iq:roster\",\n        PROFILE: \"jabber:iq:profile\",\n        DISCO_INFO: \"http://jabber.org/protocol/disco#info\",\n        DISCO_ITEMS: \"http://jabber.org/protocol/disco#items\",\n        MUC: \"http://jabber.org/protocol/muc\",\n        SASL: \"urn:ietf:params:xml:ns:xmpp-sasl\",\n        STREAM: \"http://etherx.jabber.org/streams\",\n        FRAMING: \"urn:ietf:params:xml:ns:xmpp-framing\",\n        BIND: \"urn:ietf:params:xml:ns:xmpp-bind\",\n        SESSION: \"urn:ietf:params:xml:ns:xmpp-session\",\n        VERSION: \"jabber:iq:version\",\n        STANZAS: \"urn:ietf:params:xml:ns:xmpp-stanzas\",\n        XHTML_IM: \"http://jabber.org/protocol/xhtml-im\",\n        XHTML: \"http://www.w3.org/1999/xhtml\"\n    },\n\n    /** Constants: XHTML_IM Namespace\n     *  contains allowed tags, tag attributes, and css properties.\n     *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\n     *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\n     *  allowed tags and their attributes.\n     */\n    XHTML: {\n        tags: ['a','blockquote','br','cite','em','img','li','ol','p','span','strong','ul','body'],\n        attributes: {\n            'a':          ['href'],\n            'blockquote': ['style'],\n            'br':         [],\n            'cite':       ['style'],\n            'em':         [],\n            'img':        ['src', 'alt', 'style', 'height', 'width'],\n            'li':         ['style'],\n            'ol':         ['style'],\n            'p':          ['style'],\n            'span':       ['style'],\n            'strong':     [],\n            'ul':         ['style'],\n            'body':       []\n        },\n        css: ['background-color','color','font-family','font-size','font-style','font-weight','margin-left','margin-right','text-align','text-decoration'],\n        /** Function: XHTML.validTag\n         *\n         * Utility method to determine whether a tag is allowed\n         * in the XHTML_IM namespace.\n         *\n         * XHTML tag names are case sensitive and must be lower case.\n         */\n        validTag: function(tag) {\n            for (var i = 0; i < Strophe.XHTML.tags.length; i++) {\n                if (tag === Strophe.XHTML.tags[i]) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        /** Function: XHTML.validAttribute\n         *\n         * Utility method to determine whether an attribute is allowed\n         * as recommended per XEP-0071\n         *\n         * XHTML attribute names are case sensitive and must be lower case.\n         */\n        validAttribute: function(tag, attribute) {\n            if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\n                for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                    if (attribute === Strophe.XHTML.attributes[tag][i]) {\n                        return true;\n                    }\n                }\n            }\n        return false;\n        },\n        validCSS: function(style) {\n            for (var i = 0; i < Strophe.XHTML.css.length; i++) {\n                if (style === Strophe.XHTML.css[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n\n    /** Constants: Connection Status Constants\n     *  Connection status constants for use by the connection handler\n     *  callback.\n     *\n     *  Status.ERROR - An error has occurred\n     *  Status.CONNECTING - The connection is currently being made\n     *  Status.CONNFAIL - The connection attempt failed\n     *  Status.AUTHENTICATING - The connection is authenticating\n     *  Status.AUTHFAIL - The authentication attempt failed\n     *  Status.CONNECTED - The connection has succeeded\n     *  Status.DISCONNECTED - The connection has been terminated\n     *  Status.DISCONNECTING - The connection is currently being terminated\n     *  Status.ATTACHED - The connection has been attached\n     *  Status.REDIRECT - The connection has been redirected\n     *  Status.CONNTIMEOUT - The connection has timed out\n     */\n    Status: {\n        ERROR: 0,\n        CONNECTING: 1,\n        CONNFAIL: 2,\n        AUTHENTICATING: 3,\n        AUTHFAIL: 4,\n        CONNECTED: 5,\n        DISCONNECTED: 6,\n        DISCONNECTING: 7,\n        ATTACHED: 8,\n        REDIRECT: 9,\n        CONNTIMEOUT: 10\n    },\n\n    ErrorCondition: {\n        BAD_FORMAT: \"bad-format\",\n        CONFLICT: \"conflict\",\n        MISSING_JID_NODE: \"x-strophe-bad-non-anon-jid\",\n        NO_AUTH_MECH: \"no-auth-mech\",\n        UNKNOWN_REASON: \"unknown\",\n    },\n\n    /** Constants: Log Level Constants\n     *  Logging level indicators.\n     *\n     *  LogLevel.DEBUG - Debug output\n     *  LogLevel.INFO - Informational output\n     *  LogLevel.WARN - Warnings\n     *  LogLevel.ERROR - Errors\n     *  LogLevel.FATAL - Fatal errors\n     */\n    LogLevel: {\n        DEBUG: 0,\n        INFO: 1,\n        WARN: 2,\n        ERROR: 3,\n        FATAL: 4\n    },\n\n    /** PrivateConstants: DOM Element Type Constants\n     *  DOM element types.\n     *\n     *  ElementType.NORMAL - Normal element.\n     *  ElementType.TEXT - Text data element.\n     *  ElementType.FRAGMENT - XHTML fragment element.\n     */\n    ElementType: {\n        NORMAL: 1,\n        TEXT: 3,\n        CDATA: 4,\n        FRAGMENT: 11\n    },\n\n    /** PrivateConstants: Timeout Values\n     *  Timeout values for error states.  These values are in seconds.\n     *  These should not be changed unless you know exactly what you are\n     *  doing.\n     *\n     *  TIMEOUT - Timeout multiplier. A waiting request will be considered\n     *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\n     *      This defaults to 1.1, and with default wait, 66 seconds.\n     *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\n     *      Strophe can detect early failure, it will consider the request\n     *      failed if it doesn't return after\n     *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\n     *      This defaults to 0.1, and with default wait, 6 seconds.\n     */\n    TIMEOUT: 1.1,\n    SECONDARY_TIMEOUT: 0.1,\n\n    /** Function: addNamespace\n     *  This function is used to extend the current namespaces in\n     *  Strophe.NS.  It takes a key and a value with the key being the\n     *  name of the new namespace, with its actual value.\n     *  For example:\n     *  Strophe.addNamespace('PUBSUB', \"http://jabber.org/protocol/pubsub\");\n     *\n     *  Parameters:\n     *    (String) name - The name under which the namespace will be\n     *      referenced under Strophe.NS\n     *    (String) value - The actual namespace.\n     */\n    addNamespace: function (name, value) {\n        Strophe.NS[name] = value;\n    },\n\n    /** Function: forEachChild\n     *  Map a function over some or all child elements of a given element.\n     *\n     *  This is a small convenience function for mapping a function over\n     *  some or all of the children of an element.  If elemName is null, all\n     *  children will be passed to the function, otherwise only children\n     *  whose tag names match elemName will be passed.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The element to operate on.\n     *    (String) elemName - The child element tag name filter.\n     *    (Function) func - The function to apply to each child.  This\n     *      function should take a single argument, a DOM element.\n     */\n    forEachChild: function (elem, elemName, func) {\n        var i, childNode;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            childNode = elem.childNodes[i];\n            if (childNode.nodeType === Strophe.ElementType.NORMAL &&\n                (!elemName || this.isTagEqual(childNode, elemName))) {\n                func(childNode);\n            }\n        }\n    },\n\n    /** Function: isTagEqual\n     *  Compare an element's tag name with a string.\n     *\n     *  This function is case sensitive.\n     *\n     *  Parameters:\n     *    (XMLElement) el - A DOM element.\n     *    (String) name - The element name.\n     *\n     *  Returns:\n     *    true if the element's tag name matches _el_, and false\n     *    otherwise.\n     */\n    isTagEqual: function (el, name) {\n        return el.tagName === name;\n    },\n\n    /** PrivateVariable: _xmlGenerator\n     *  _Private_ variable that caches a DOM document to\n     *  generate elements.\n     */\n    _xmlGenerator: null,\n\n    /** PrivateFunction: _makeGenerator\n     *  _Private_ function that creates a dummy XML DOM document to serve as\n     *  an element and text node generator.\n     */\n    _makeGenerator: function () {\n        var doc;\n        // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\n        // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\n                // less than 10 in the case of IE9 and below.\n        if (document.implementation.createDocument === undefined ||\n                        document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\n            doc = this._getIEXmlDom();\n            doc.appendChild(doc.createElement('strophe'));\n        } else {\n            doc = document.implementation\n                .createDocument('jabber:client', 'strophe', null);\n        }\n        return doc;\n    },\n\n    /** Function: xmlGenerator\n     *  Get the DOM document to generate elements.\n     *\n     *  Returns:\n     *    The currently used DOM document.\n     */\n    xmlGenerator: function () {\n        if (!Strophe._xmlGenerator) {\n            Strophe._xmlGenerator = Strophe._makeGenerator();\n        }\n        return Strophe._xmlGenerator;\n    },\n\n    /** PrivateFunction: _getIEXmlDom\n     *  Gets IE xml doc object\n     *\n     *  Returns:\n     *    A Microsoft XML DOM Object\n     *  See Also:\n     *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\n     */\n    _getIEXmlDom : function() {\n        var doc = null;\n        var docStrings = [\n            \"Msxml2.DOMDocument.6.0\",\n            \"Msxml2.DOMDocument.5.0\",\n            \"Msxml2.DOMDocument.4.0\",\n            \"MSXML2.DOMDocument.3.0\",\n            \"MSXML2.DOMDocument\",\n            \"MSXML.DOMDocument\",\n            \"Microsoft.XMLDOM\"\n        ];\n\n        for (var d = 0; d < docStrings.length; d++) {\n            if (doc === null) {\n                try {\n                    doc = new ActiveXObject(docStrings[d]);\n                } catch (e) {\n                    doc = null;\n                }\n            } else {\n                break;\n            }\n        }\n        return doc;\n    },\n\n    /** Function: xmlElement\n     *  Create an XML DOM element.\n     *\n     *  This function creates an XML DOM element correctly across all\n     *  implementations. Note that these are not HTML DOM elements, which\n     *  aren't appropriate for XMPP stanzas.\n     *\n     *  Parameters:\n     *    (String) name - The name for the element.\n     *    (Array|Object) attrs - An optional array or object containing\n     *      key/value pairs to use as element attributes. The object should\n     *      be in the format {'key': 'value'} or {key: 'value'}. The array\n     *      should have the format [['key1', 'value1'], ['key2', 'value2']].\n     *    (String) text - The text child data for the element.\n     *\n     *  Returns:\n     *    A new XML DOM element.\n     */\n    xmlElement: function (name) {\n        if (!name) { return null; }\n\n        var node = Strophe.xmlGenerator().createElement(name);\n        // FIXME: this should throw errors if args are the wrong type or\n        // there are more than two optional args\n        var a, i, k;\n        for (a = 1; a < arguments.length; a++) {\n            var arg = arguments[a];\n            if (!arg) { continue; }\n            if (typeof(arg) === \"string\" ||\n                typeof(arg) === \"number\") {\n                node.appendChild(Strophe.xmlTextNode(arg));\n            } else if (typeof(arg) === \"object\" &&\n                       typeof(arg.sort) === \"function\") {\n                for (i = 0; i < arg.length; i++) {\n                    var attr = arg[i];\n                    if (typeof(attr) === \"object\" &&\n                        typeof(attr.sort) === \"function\" &&\n                        attr[1] !== undefined &&\n                        attr[1] !== null) {\n                        node.setAttribute(attr[0], attr[1]);\n                    }\n                }\n            } else if (typeof(arg) === \"object\") {\n                for (k in arg) {\n                    if (arg.hasOwnProperty(k)) {\n                        if (arg[k] !== undefined &&\n                            arg[k] !== null) {\n                            node.setAttribute(k, arg[k]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return node;\n    },\n\n    /*  Function: xmlescape\n     *  Excapes invalid xml characters.\n     *\n     *  Parameters:\n     *     (String) text - text to escape.\n     *\n     *  Returns:\n     *      Escaped text.\n     */\n    xmlescape: function(text) {\n        text = text.replace(/\\&/g, \"&amp;\");\n        text = text.replace(/</g,  \"&lt;\");\n        text = text.replace(/>/g,  \"&gt;\");\n        text = text.replace(/'/g,  \"&apos;\");\n        text = text.replace(/\"/g,  \"&quot;\");\n        return text;\n    },\n\n    /*  Function: xmlunescape\n    *  Unexcapes invalid xml characters.\n    *\n    *  Parameters:\n    *     (String) text - text to unescape.\n    *\n    *  Returns:\n    *      Unescaped text.\n    */\n    xmlunescape: function(text) {\n        text = text.replace(/\\&amp;/g, \"&\");\n        text = text.replace(/&lt;/g,  \"<\");\n        text = text.replace(/&gt;/g,  \">\");\n        text = text.replace(/&apos;/g,  \"'\");\n        text = text.replace(/&quot;/g,  \"\\\"\");\n        return text;\n    },\n\n    /** Function: xmlTextNode\n     *  Creates an XML DOM text node.\n     *\n     *  Provides a cross implementation version of document.createTextNode.\n     *\n     *  Parameters:\n     *    (String) text - The content of the text node.\n     *\n     *  Returns:\n     *    A new XML DOM text node.\n     */\n    xmlTextNode: function (text) {\n        return Strophe.xmlGenerator().createTextNode(text);\n    },\n\n    /** Function: xmlHtmlNode\n     *  Creates an XML DOM html node.\n     *\n     *  Parameters:\n     *    (String) html - The content of the html node.\n     *\n     *  Returns:\n     *    A new XML DOM text node.\n     */\n    xmlHtmlNode: function (html) {\n        var node;\n        //ensure text is escaped\n        if (DOMParser) {\n            var parser = new DOMParser();\n            node = parser.parseFromString(html, \"text/xml\");\n        } else {\n            node = new ActiveXObject(\"Microsoft.XMLDOM\");\n            node.async=\"false\";\n            node.loadXML(html);\n        }\n        return node;\n    },\n\n    /** Function: getText\n     *  Get the concatenation of all text children of an element.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    A String with the concatenated text of all text element children.\n     */\n    getText: function (elem) {\n        if (!elem) { return null; }\n\n        var str = \"\";\n        if (elem.childNodes.length === 0 && elem.nodeType === Strophe.ElementType.TEXT) {\n            str += elem.nodeValue;\n        }\n\n        for (var i = 0; i < elem.childNodes.length; i++) {\n            if (elem.childNodes[i].nodeType === Strophe.ElementType.TEXT) {\n                str += elem.childNodes[i].nodeValue;\n            }\n        }\n\n        return Strophe.xmlescape(str);\n    },\n\n    /** Function: copyElement\n     *  Copy an XML DOM element.\n     *\n     *  This function copies a DOM element and all its descendants and returns\n     *  the new copy.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    A new, copied DOM element tree.\n     */\n    copyElement: function (elem) {\n        var i, el;\n        if (elem.nodeType === Strophe.ElementType.NORMAL) {\n            el = Strophe.xmlElement(elem.tagName);\n\n            for (i = 0; i < elem.attributes.length; i++) {\n                el.setAttribute(elem.attributes[i].nodeName,\n                                elem.attributes[i].value);\n            }\n\n            for (i = 0; i < elem.childNodes.length; i++) {\n                el.appendChild(Strophe.copyElement(elem.childNodes[i]));\n            }\n        } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n            el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\n        }\n        return el;\n    },\n\n\n    /** Function: createHtml\n     *  Copy an HTML DOM element into an XML DOM.\n     *\n     *  This function copies a DOM element and all its descendants and returns\n     *  the new copy.\n     *\n     *  Parameters:\n     *    (HTMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    A new, copied DOM element tree.\n     */\n    createHtml: function (elem) {\n        var i, el, j, tag, attribute, value, css, cssAttrs, attr, cssName, cssValue;\n        if (elem.nodeType === Strophe.ElementType.NORMAL) {\n            tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\n            if(Strophe.XHTML.validTag(tag)) {\n                try {\n                    el = Strophe.xmlElement(tag);\n                    for(i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                        attribute = Strophe.XHTML.attributes[tag][i];\n                        value = elem.getAttribute(attribute);\n                        if(typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\n                            continue;\n                        }\n                        if(attribute === 'style' && typeof value === 'object') {\n                            if(typeof value.cssText !== 'undefined') {\n                                value = value.cssText; // we're dealing with IE, need to get CSS out\n                            }\n                        }\n                        // filter out invalid css styles\n                        if(attribute === 'style') {\n                            css = [];\n                            cssAttrs = value.split(';');\n                            for(j = 0; j < cssAttrs.length; j++) {\n                                attr = cssAttrs[j].split(':');\n                                cssName = attr[0].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").toLowerCase();\n                                if(Strophe.XHTML.validCSS(cssName)) {\n                                    cssValue = attr[1].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n                                    css.push(cssName + ': ' + cssValue);\n                                }\n                            }\n                            if(css.length > 0) {\n                                value = css.join('; ');\n                                el.setAttribute(attribute, value);\n                            }\n                        } else {\n                            el.setAttribute(attribute, value);\n                        }\n                    }\n\n                    for (i = 0; i < elem.childNodes.length; i++) {\n                        el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n                    }\n                } catch(e) { // invalid elements\n                  el = Strophe.xmlTextNode('');\n                }\n            } else {\n                el = Strophe.xmlGenerator().createDocumentFragment();\n                for (i = 0; i < elem.childNodes.length; i++) {\n                    el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n                }\n            }\n        } else if (elem.nodeType === Strophe.ElementType.FRAGMENT) {\n            el = Strophe.xmlGenerator().createDocumentFragment();\n            for (i = 0; i < elem.childNodes.length; i++) {\n                el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n            }\n        } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n            el = Strophe.xmlTextNode(elem.nodeValue);\n        }\n        return el;\n    },\n\n    /** Function: escapeNode\n     *  Escape the node part (also called local part) of a JID.\n     *\n     *  Parameters:\n     *    (String) node - A node (or local part).\n     *\n     *  Returns:\n     *    An escaped node (or local part).\n     */\n    escapeNode: function (node) {\n        if (typeof node !== \"string\") { return node; }\n        return node.replace(/^\\s+|\\s+$/g, '')\n            .replace(/\\\\/g,  \"\\\\5c\")\n            .replace(/ /g,   \"\\\\20\")\n            .replace(/\\\"/g,  \"\\\\22\")\n            .replace(/\\&/g,  \"\\\\26\")\n            .replace(/\\'/g,  \"\\\\27\")\n            .replace(/\\//g,  \"\\\\2f\")\n            .replace(/:/g,   \"\\\\3a\")\n            .replace(/</g,   \"\\\\3c\")\n            .replace(/>/g,   \"\\\\3e\")\n            .replace(/@/g,   \"\\\\40\");\n    },\n\n    /** Function: unescapeNode\n     *  Unescape a node part (also called local part) of a JID.\n     *\n     *  Parameters:\n     *    (String) node - A node (or local part).\n     *\n     *  Returns:\n     *    An unescaped node (or local part).\n     */\n    unescapeNode: function (node) {\n        if (typeof node !== \"string\") { return node; }\n        return node.replace(/\\\\20/g, \" \")\n            .replace(/\\\\22/g, '\"')\n            .replace(/\\\\26/g, \"&\")\n            .replace(/\\\\27/g, \"'\")\n            .replace(/\\\\2f/g, \"/\")\n            .replace(/\\\\3a/g, \":\")\n            .replace(/\\\\3c/g, \"<\")\n            .replace(/\\\\3e/g, \">\")\n            .replace(/\\\\40/g, \"@\")\n            .replace(/\\\\5c/g, \"\\\\\");\n    },\n\n    /** Function: getNodeFromJid\n     *  Get the node portion of a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the node.\n     */\n    getNodeFromJid: function (jid) {\n        if (jid.indexOf(\"@\") < 0) { return null; }\n        return jid.split(\"@\")[0];\n    },\n\n    /** Function: getDomainFromJid\n     *  Get the domain portion of a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the domain.\n     */\n    getDomainFromJid: function (jid) {\n        var bare = Strophe.getBareJidFromJid(jid);\n        if (bare.indexOf(\"@\") < 0) {\n            return bare;\n        } else {\n            var parts = bare.split(\"@\");\n            parts.splice(0, 1);\n            return parts.join('@');\n        }\n    },\n\n    /** Function: getResourceFromJid\n     *  Get the resource portion of a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the resource.\n     */\n    getResourceFromJid: function (jid) {\n        var s = jid.split(\"/\");\n        if (s.length < 2) { return null; }\n        s.splice(0, 1);\n        return s.join('/');\n    },\n\n    /** Function: getBareJidFromJid\n     *  Get the bare JID from a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the bare JID.\n     */\n    getBareJidFromJid: function (jid) {\n        return jid ? jid.split(\"/\")[0] : null;\n    },\n\n    /** PrivateFunction: _handleError\n     *  _Private_ function that properly logs an error to the console\n     */\n    _handleError: function (e) {\n        if (typeof e.stack !== \"undefined\") {\n            Strophe.fatal(e.stack);\n        }\n        if (e.sourceURL) {\n            Strophe.fatal(\"error: \" + this.handler + \" \" + e.sourceURL + \":\" +\n                          e.line + \" - \" + e.name + \": \" + e.message);\n        } else if (e.fileName) {\n            Strophe.fatal(\"error: \" + this.handler + \" \" +\n                          e.fileName + \":\" + e.lineNumber + \" - \" +\n                          e.name + \": \" + e.message);\n        } else {\n            Strophe.fatal(\"error: \" + e.message);\n        }\n    },\n\n    /** Function: log\n     *  User overrideable logging function.\n     *\n     *  This function is called whenever the Strophe library calls any\n     *  of the logging functions.  The default implementation of this\n     *  function logs only fatal errors.  If client code wishes to handle the logging\n     *  messages, it should override this with\n     *  > Strophe.log = function (level, msg) {\n     *  >   (user code here)\n     *  > };\n     *\n     *  Please note that data sent and received over the wire is logged\n     *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\n     *\n     *  The different levels and their meanings are\n     *\n     *    DEBUG - Messages useful for debugging purposes.\n     *    INFO - Informational messages.  This is mostly information like\n     *      'disconnect was called' or 'SASL auth succeeded'.\n     *    WARN - Warnings about potential problems.  This is mostly used\n     *      to report transient connection errors like request timeouts.\n     *    ERROR - Some error occurred.\n     *    FATAL - A non-recoverable fatal error occurred.\n     *\n     *  Parameters:\n     *    (Integer) level - The log level of the log message.  This will\n     *      be one of the values in Strophe.LogLevel.\n     *    (String) msg - The log message.\n     */\n    log: function (level, msg) {\n        if (level === this.LogLevel.FATAL &&\n            typeof window.console === 'object' &&\n            typeof window.console.error === 'function') {\n            window.console.error(msg);\n        }\n    },\n\n    /** Function: debug\n     *  Log a message at the Strophe.LogLevel.DEBUG level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    debug: function(msg) {\n        this.log(this.LogLevel.DEBUG, msg);\n    },\n\n    /** Function: info\n     *  Log a message at the Strophe.LogLevel.INFO level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    info: function (msg) {\n        this.log(this.LogLevel.INFO, msg);\n    },\n\n    /** Function: warn\n     *  Log a message at the Strophe.LogLevel.WARN level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    warn: function (msg) {\n        this.log(this.LogLevel.WARN, msg);\n    },\n\n    /** Function: error\n     *  Log a message at the Strophe.LogLevel.ERROR level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    error: function (msg) {\n        this.log(this.LogLevel.ERROR, msg);\n    },\n\n    /** Function: fatal\n     *  Log a message at the Strophe.LogLevel.FATAL level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    fatal: function (msg) {\n        this.log(this.LogLevel.FATAL, msg);\n    },\n\n    /** Function: serialize\n     *  Render a DOM element and all descendants to a String.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    The serialized element tree as a String.\n     */\n    serialize: function (elem) {\n        var result;\n\n        if (!elem) { return null; }\n\n        if (typeof(elem.tree) === \"function\") {\n            elem = elem.tree();\n        }\n\n        var nodeName = elem.nodeName;\n        var i, child;\n\n        if (elem.getAttribute(\"_realname\")) {\n            nodeName = elem.getAttribute(\"_realname\");\n        }\n\n        result = \"<\" + nodeName;\n        for (i = 0; i < elem.attributes.length; i++) {\n             if(elem.attributes[i].nodeName !== \"_realname\") {\n               result += \" \" + elem.attributes[i].nodeName +\n                   \"='\" + Strophe.xmlescape(elem.attributes[i].value) + \"'\";\n             }\n        }\n\n        if (elem.childNodes.length > 0) {\n            result += \">\";\n            for (i = 0; i < elem.childNodes.length; i++) {\n                child = elem.childNodes[i];\n                switch( child.nodeType ){\n                  case Strophe.ElementType.NORMAL:\n                    // normal element, so recurse\n                    result += Strophe.serialize(child);\n                    break;\n                  case Strophe.ElementType.TEXT:\n                    // text element to escape values\n                    result += Strophe.xmlescape(child.nodeValue);\n                    break;\n                  case Strophe.ElementType.CDATA:\n                    // cdata section so don't escape values\n                    result += \"<![CDATA[\"+child.nodeValue+\"]]>\";\n                }\n            }\n            result += \"</\" + nodeName + \">\";\n        } else {\n            result += \"/>\";\n        }\n\n        return result;\n    },\n\n    /** PrivateVariable: _requestId\n     *  _Private_ variable that keeps track of the request ids for\n     *  connections.\n     */\n    _requestId: 0,\n\n    /** PrivateVariable: Strophe.connectionPlugins\n     *  _Private_ variable Used to store plugin names that need\n     *  initialization on Strophe.Connection construction.\n     */\n    _connectionPlugins: {},\n\n    /** Function: addConnectionPlugin\n     *  Extends the Strophe.Connection object with the given plugin.\n     *\n     *  Parameters:\n     *    (String) name - The name of the extension.\n     *    (Object) ptype - The plugin's prototype.\n     */\n    addConnectionPlugin: function (name, ptype) {\n        Strophe._connectionPlugins[name] = ptype;\n    }\n};\n\n/** Class: Strophe.Builder\n *  XML DOM builder.\n *\n *  This object provides an interface similar to JQuery but for building\n *  DOM elements easily and rapidly.  All the functions except for toString()\n *  and tree() return the object, so calls can be chained.  Here's an\n *  example using the $iq() builder helper.\n *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\n *  >     .c('query', {xmlns: 'strophe:example'})\n *  >     .c('example')\n *  >     .toString()\n *\n *  The above generates this XML fragment\n *  > <iq to='you' from='me' type='get' id='1'>\n *  >   <query xmlns='strophe:example'>\n *  >     <example/>\n *  >   </query>\n *  > </iq>\n *  The corresponding DOM manipulations to get a similar fragment would be\n *  a lot more tedious and probably involve several helper variables.\n *\n *  Since adding children makes new operations operate on the child, up()\n *  is provided to traverse up the tree.  To add two children, do\n *  > builder.c('child1', ...).up().c('child2', ...)\n *  The next operation on the Builder will be relative to the second child.\n */\n\n/** Constructor: Strophe.Builder\n *  Create a Strophe.Builder object.\n *\n *  The attributes should be passed in object notation.  For example\n *  > var b = new Builder('message', {to: 'you', from: 'me'});\n *  or\n *  > var b = new Builder('messsage', {'xml:lang': 'en'});\n *\n *  Parameters:\n *    (String) name - The name of the root element.\n *    (Object) attrs - The attributes for the root element in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder.\n */\nStrophe.Builder = function (name, attrs) {\n    // Set correct namespace for jabber:client elements\n    if (name === \"presence\" || name === \"message\" || name === \"iq\") {\n        if (attrs && !attrs.xmlns) {\n            attrs.xmlns = Strophe.NS.CLIENT;\n        } else if (!attrs) {\n            attrs = {xmlns: Strophe.NS.CLIENT};\n        }\n    }\n\n    // Holds the tree being built.\n    this.nodeTree = Strophe.xmlElement(name, attrs);\n\n    // Points to the current operation node.\n    this.node = this.nodeTree;\n};\n\nStrophe.Builder.prototype = {\n    /** Function: tree\n     *  Return the DOM tree.\n     *\n     *  This function returns the current DOM tree as an element object.  This\n     *  is suitable for passing to functions like Strophe.Connection.send().\n     *\n     *  Returns:\n     *    The DOM tree as a element object.\n     */\n    tree: function () {\n        return this.nodeTree;\n    },\n\n    /** Function: toString\n     *  Serialize the DOM tree to a String.\n     *\n     *  This function returns a string serialization of the current DOM\n     *  tree.  It is often used internally to pass data to a\n     *  Strophe.Request object.\n     *\n     *  Returns:\n     *    The serialized DOM tree in a String.\n     */\n    toString: function () {\n        return Strophe.serialize(this.nodeTree);\n    },\n\n    /** Function: up\n     *  Make the current parent element the new current element.\n     *\n     *  This function is often used after c() to traverse back up the tree.\n     *  For example, to add two children to the same element\n     *  > builder.c('child1', {}).up().c('child2', {});\n     *\n     *  Returns:\n     *    The Stophe.Builder object.\n     */\n    up: function () {\n        this.node = this.node.parentNode;\n        return this;\n    },\n\n    /** Function: root\n     *  Make the root element the new current element.\n     *\n     *  When at a deeply nested element in the tree, this function can be used\n     *  to jump back to the root of the tree, instead of having to repeatedly\n     *  call up().\n     *\n     *  Returns:\n     *    The Stophe.Builder object.\n     */\n    root: function () {\n        this.node = this.nodeTree;\n        return this;\n    },\n\n    /** Function: attrs\n     *  Add or modify attributes of the current element.\n     *\n     *  The attributes should be passed in object notation.  This function\n     *  does not move the current element pointer.\n     *\n     *  Parameters:\n     *    (Object) moreattrs - The attributes to add/modify in object notation.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    attrs: function (moreattrs) {\n        for (var k in moreattrs) {\n            if (moreattrs.hasOwnProperty(k)) {\n                if (moreattrs[k] === undefined) {\n                    this.node.removeAttribute(k);\n                } else {\n                    this.node.setAttribute(k, moreattrs[k]);\n                }\n            }\n        }\n        return this;\n    },\n\n    /** Function: c\n     *  Add a child to the current element and make it the new current\n     *  element.\n     *\n     *  This function moves the current element pointer to the child,\n     *  unless text is provided.  If you need to add another child, it\n     *  is necessary to use up() to go back to the parent in the tree.\n     *\n     *  Parameters:\n     *    (String) name - The name of the child.\n     *    (Object) attrs - The attributes of the child in object notation.\n     *    (String) text - The text to add to the child.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    c: function (name, attrs, text) {\n        var child = Strophe.xmlElement(name, attrs, text);\n        this.node.appendChild(child);\n        if (typeof text !== \"string\" && typeof text !==\"number\") {\n            this.node = child;\n        }\n        return this;\n    },\n\n    /** Function: cnode\n     *  Add a child to the current element and make it the new current\n     *  element.\n     *\n     *  This function is the same as c() except that instead of using a\n     *  name and an attributes object to create the child it uses an\n     *  existing DOM element object.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    cnode: function (elem) {\n        var impNode;\n        var xmlGen = Strophe.xmlGenerator();\n        try {\n            impNode = (xmlGen.importNode !== undefined);\n        } catch (e) {\n            impNode = false;\n        }\n        var newElem = impNode ?\n                      xmlGen.importNode(elem, true) :\n                      Strophe.copyElement(elem);\n        this.node.appendChild(newElem);\n        this.node = newElem;\n        return this;\n    },\n\n    /** Function: t\n     *  Add a child text element.\n     *\n     *  This *does not* make the child the new current element since there\n     *  are no children of text elements.\n     *\n     *  Parameters:\n     *    (String) text - The text data to append to the current element.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    t: function (text) {\n        var child = Strophe.xmlTextNode(text);\n        this.node.appendChild(child);\n        return this;\n    },\n\n    /** Function: h\n     *  Replace current element contents with the HTML passed in.\n     *\n     *  This *does not* make the child the new current element\n     *\n     *  Parameters:\n     *    (String) html - The html to insert as contents of current element.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    h: function (html) {\n        var fragment = document.createElement('body');\n\n        // force the browser to try and fix any invalid HTML tags\n        fragment.innerHTML = html;\n\n        // copy cleaned html into an xml dom\n        var xhtml = Strophe.createHtml(fragment);\n\n        while(xhtml.childNodes.length > 0) {\n            this.node.appendChild(xhtml.childNodes[0]);\n        }\n        return this;\n    }\n};\n\n/** PrivateClass: Strophe.Handler\n *  _Private_ helper class for managing stanza handlers.\n *\n *  A Strophe.Handler encapsulates a user provided callback function to be\n *  executed when matching stanzas are received by the connection.\n *  Handlers can be either one-off or persistant depending on their\n *  return value. Returning true will cause a Handler to remain active, and\n *  returning false will remove the Handler.\n *\n *  Users will not use Strophe.Handler objects directly, but instead they\n *  will use Strophe.Connection.addHandler() and\n *  Strophe.Connection.deleteHandler().\n */\n\n/** PrivateConstructor: Strophe.Handler\n *  Create and initialize a new Strophe.Handler.\n *\n *  Parameters:\n *    (Function) handler - A function to be executed when the handler is run.\n *    (String) ns - The namespace to match.\n *    (String) name - The element name to match.\n *    (String) type - The element type to match.\n *    (String) id - The element id attribute to match.\n *    (String) from - The element from attribute to match.\n *    (Object) options - Handler options\n *\n *  Returns:\n *    A new Strophe.Handler object.\n */\nStrophe.Handler = function (handler, ns, name, type, id, from, options) {\n    this.handler = handler;\n    this.ns = ns;\n    this.name = name;\n    this.type = type;\n    this.id = id;\n    this.options = options || {'matchBareFromJid': false, 'ignoreNamespaceFragment': false};\n    // BBB: Maintain backward compatibility with old `matchBare` option\n    if (this.options.matchBare) {\n        Strophe.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.');\n        this.options.matchBareFromJid = this.options.matchBare;\n        delete this.options.matchBare;\n    }\n\n    if (this.options.matchBareFromJid) {\n        this.from = from ? Strophe.getBareJidFromJid(from) : null;\n    } else {\n        this.from = from;\n    }\n    // whether the handler is a user handler or a system handler\n    this.user = true;\n};\n\nStrophe.Handler.prototype = {\n    /** PrivateFunction: getNamespace\n     *  Returns the XML namespace attribute on an element.\n     *  If `ignoreNamespaceFragment` was passed in for this handler, then the\n     *  URL fragment will be stripped.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML element with the namespace.\n     *\n     *  Returns:\n     *    The namespace, with optionally the fragment stripped.\n     */\n    getNamespace: function (elem) {\n        var elNamespace = elem.getAttribute(\"xmlns\");\n        if (elNamespace && this.options.ignoreNamespaceFragment) {\n            elNamespace = elNamespace.split('#')[0];\n        }\n        return elNamespace;\n    },\n\n    /** PrivateFunction: namespaceMatch\n     *  Tests if a stanza matches the namespace set for this Strophe.Handler.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML element to test.\n     *\n     *  Returns:\n     *    true if the stanza matches and false otherwise.\n     */\n    namespaceMatch: function (elem) {\n        var nsMatch = false;\n        if (!this.ns) {\n            return true;\n        } else {\n            var that = this;\n            Strophe.forEachChild(elem, null, function (elem) {\n                if (that.getNamespace(elem) === that.ns) {\n                    nsMatch = true;\n                }\n            });\n            nsMatch = nsMatch || this.getNamespace(elem) === this.ns;\n        }\n        return nsMatch;\n    },\n\n    /** PrivateFunction: isMatch\n     *  Tests if a stanza matches the Strophe.Handler.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML element to test.\n     *\n     *  Returns:\n     *    true if the stanza matches and false otherwise.\n     */\n    isMatch: function (elem) {\n        var from = elem.getAttribute('from');\n        if (this.options.matchBareFromJid) {\n            from = Strophe.getBareJidFromJid(from);\n        }\n        var elem_type = elem.getAttribute(\"type\");\n        if (this.namespaceMatch(elem) &&\n            (!this.name || Strophe.isTagEqual(elem, this.name)) &&\n            (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) &&\n            (!this.id || elem.getAttribute(\"id\") === this.id) &&\n            (!this.from || from === this.from)) {\n                return true;\n        }\n        return false;\n    },\n\n    /** PrivateFunction: run\n     *  Run the callback on a matching stanza.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The DOM element that triggered the\n     *      Strophe.Handler.\n     *\n     *  Returns:\n     *    A boolean indicating if the handler should remain active.\n     */\n    run: function (elem) {\n        var result = null;\n        try {\n            result = this.handler(elem);\n        } catch (e) {\n            Strophe._handleError(e);\n            throw e;\n        }\n        return result;\n    },\n\n    /** PrivateFunction: toString\n     *  Get a String representation of the Strophe.Handler object.\n     *\n     *  Returns:\n     *    A String.\n     */\n    toString: function () {\n        return \"{Handler: \" + this.handler + \"(\" + this.name + \",\" +\n            this.id + \",\" + this.ns + \")}\";\n    }\n};\n\n/** PrivateClass: Strophe.TimedHandler\n *  _Private_ helper class for managing timed handlers.\n *\n *  A Strophe.TimedHandler encapsulates a user provided callback that\n *  should be called after a certain period of time or at regular\n *  intervals.  The return value of the callback determines whether the\n *  Strophe.TimedHandler will continue to fire.\n *\n *  Users will not use Strophe.TimedHandler objects directly, but instead\n *  they will use Strophe.Connection.addTimedHandler() and\n *  Strophe.Connection.deleteTimedHandler().\n */\n\n/** PrivateConstructor: Strophe.TimedHandler\n *  Create and initialize a new Strophe.TimedHandler object.\n *\n *  Parameters:\n *    (Integer) period - The number of milliseconds to wait before the\n *      handler is called.\n *    (Function) handler - The callback to run when the handler fires.  This\n *      function should take no arguments.\n *\n *  Returns:\n *    A new Strophe.TimedHandler object.\n */\nStrophe.TimedHandler = function (period, handler) {\n    this.period = period;\n    this.handler = handler;\n    this.lastCalled = new Date().getTime();\n    this.user = true;\n};\n\nStrophe.TimedHandler.prototype = {\n    /** PrivateFunction: run\n     *  Run the callback for the Strophe.TimedHandler.\n     *\n     *  Returns:\n     *    true if the Strophe.TimedHandler should be called again, and false\n     *      otherwise.\n     */\n    run: function () {\n        this.lastCalled = new Date().getTime();\n        return this.handler();\n    },\n\n    /** PrivateFunction: reset\n     *  Reset the last called time for the Strophe.TimedHandler.\n     */\n    reset: function () {\n        this.lastCalled = new Date().getTime();\n    },\n\n    /** PrivateFunction: toString\n     *  Get a string representation of the Strophe.TimedHandler object.\n     *\n     *  Returns:\n     *    The string representation.\n     */\n    toString: function () {\n        return \"{TimedHandler: \" + this.handler + \"(\" + this.period +\")}\";\n    }\n};\n\n/** Class: Strophe.Connection\n *  XMPP Connection manager.\n *\n *  This class is the main part of Strophe.  It manages a BOSH or websocket\n *  connection to an XMPP server and dispatches events to the user callbacks\n *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\n *  and legacy authentication.\n *\n *  After creating a Strophe.Connection object, the user will typically\n *  call connect() with a user supplied callback to handle connection level\n *  events like authentication failure, disconnection, or connection\n *  complete.\n *\n *  The user will also have several event handlers defined by using\n *  addHandler() and addTimedHandler().  These will allow the user code to\n *  respond to interesting stanzas or do something periodically with the\n *  connection. These handlers will be active once authentication is\n *  finished.\n *\n *  To send data to the connection, use send().\n */\n\n/** Constructor: Strophe.Connection\n *  Create and initialize a Strophe.Connection object.\n *\n *  The transport-protocol for this connection will be chosen automatically\n *  based on the given service parameter. URLs starting with \"ws://\" or\n *  \"wss://\" will use WebSockets, URLs starting with \"http://\", \"https://\"\n *  or without a protocol will use BOSH.\n *\n *  To make Strophe connect to the current host you can leave out the protocol\n *  and host part and just pass the path, e.g.\n *\n *  > var conn = new Strophe.Connection(\"/http-bind/\");\n *\n *  Options common to both Websocket and BOSH:\n *  ------------------------------------------\n *\n *  cookies:\n *\n *  The *cookies* option allows you to pass in cookies to be added to the\n *  document. These cookies will then be included in the BOSH XMLHttpRequest\n *  or in the websocket connection.\n *\n *  The passed in value must be a map of cookie names and string values.\n *\n *  > { \"myCookie\": {\n *  >     \"value\": \"1234\",\n *  >     \"domain\": \".example.org\",\n *  >     \"path\": \"/\",\n *  >     \"expires\": expirationDate\n *  >     }\n *  > }\n *\n *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\n *  Those cookies need to be set under those domains, for example they can be\n *  set server-side by making a XHR call to that domain to ask it to set any\n *  necessary cookies.\n *\n *  mechanisms:\n *\n *  The *mechanisms* option allows you to specify the SASL mechanisms that this\n *  instance of Strophe.Connection (and therefore your XMPP client) will\n *  support.\n *\n *  The value must be an array of objects with Strophe.SASLMechanism\n *  prototypes.\n *\n *  If nothing is specified, then the following mechanisms (and their\n *  priorities) are registered:\n *\n *      SCRAM-SHA1 - 70\n *      DIGEST-MD5 - 60\n *      PLAIN - 50\n *      OAUTH-BEARER - 40\n *      OAUTH-2 - 30\n *      ANONYMOUS - 20\n *      EXTERNAL - 10\n *\n *  WebSocket options:\n *  ------------------\n *\n *  If you want to connect to the current host with a WebSocket connection you\n *  can tell Strophe to use WebSockets through a \"protocol\" attribute in the\n *  optional options parameter. Valid values are \"ws\" for WebSocket and \"wss\"\n *  for Secure WebSocket.\n *  So to connect to \"wss://CURRENT_HOSTNAME/xmpp-websocket\" you would call\n *\n *  > var conn = new Strophe.Connection(\"/xmpp-websocket/\", {protocol: \"wss\"});\n *\n *  Note that relative URLs _NOT_ starting with a \"/\" will also include the path\n *  of the current site.\n *\n *  Also because downgrading security is not permitted by browsers, when using\n *  relative URLs both BOSH and WebSocket connections will use their secure\n *  variants if the current connection to the site is also secure (https).\n *\n *  BOSH options:\n *  -------------\n *\n *  By adding \"sync\" to the options, you can control if requests will\n *  be made synchronously or not. The default behaviour is asynchronous.\n *  If you want to make requests synchronous, make \"sync\" evaluate to true.\n *  > var conn = new Strophe.Connection(\"/http-bind/\", {sync: true});\n *\n *  You can also toggle this on an already established connection.\n *  > conn.options.sync = true;\n *\n *  The *customHeaders* option can be used to provide custom HTTP headers to be\n *  included in the XMLHttpRequests made.\n *\n *  The *keepalive* option can be used to instruct Strophe to maintain the\n *  current BOSH session across interruptions such as webpage reloads.\n *\n *  It will do this by caching the sessions tokens in sessionStorage, and when\n *  \"restore\" is called it will check whether there are cached tokens with\n *  which it can resume an existing session.\n *\n *  The *withCredentials* option should receive a Boolean value and is used to\n *  indicate wether cookies should be included in ajax requests (by default\n *  they're not).\n *  Set this value to true if you are connecting to a BOSH service\n *  and for some reason need to send cookies to it.\n *  In order for this to work cross-domain, the server must also enable\n *  credentials by setting the Access-Control-Allow-Credentials response header\n *  to \"true\". For most usecases however this setting should be false (which\n *  is the default).\n *  Additionally, when using Access-Control-Allow-Credentials, the\n *  Access-Control-Allow-Origin header can't be set to the wildcard \"*\", but\n *  instead must be restricted to actual domains.\n *\n *  The *contentType* option can be set to change the default Content-Type\n *  of \"text/xml; charset=utf-8\", which can be useful to reduce the amount of\n *  CORS preflight requests that are sent to the server.\n *\n *  Parameters:\n *    (String) service - The BOSH or WebSocket service URL.\n *    (Object) options - A hash of configuration options\n *\n *  Returns:\n *    A new Strophe.Connection object.\n */\nStrophe.Connection = function (service, options) {\n    // The service URL\n    this.service = service;\n    // Configuration options\n    this.options = options || {};\n    var proto = this.options.protocol || \"\";\n\n    // Select protocal based on service or options\n    if (service.indexOf(\"ws:\") === 0 || service.indexOf(\"wss:\") === 0 ||\n            proto.indexOf(\"ws\") === 0) {\n        this._proto = new Strophe.Websocket(this);\n    } else {\n        this._proto = new Strophe.Bosh(this);\n    }\n\n    /* The connected JID. */\n    this.jid = \"\";\n    /* the JIDs domain */\n    this.domain = null;\n    /* stream:features */\n    this.features = null;\n\n    // SASL\n    this._sasl_data = {};\n    this.do_session = false;\n    this.do_bind = false;\n\n    // handler lists\n    this.timedHandlers = [];\n    this.handlers = [];\n    this.removeTimeds = [];\n    this.removeHandlers = [];\n    this.addTimeds = [];\n    this.addHandlers = [];\n    this.protocolErrorHandlers = {\n        'HTTP': {},\n        'websocket': {}\n    };\n\n    this._idleTimeout = null;\n    this._disconnectTimeout = null;\n\n    this.authenticated = false;\n    this.connected = false;\n    this.disconnecting = false;\n    this.do_authentication = true;\n    this.paused = false;\n    this.restored = false;\n\n    this._data = [];\n    this._uniqueId = 0;\n\n    this._sasl_success_handler = null;\n    this._sasl_failure_handler = null;\n    this._sasl_challenge_handler = null;\n\n    // Max retries before disconnecting\n    this.maxRetries = 5;\n\n    // Call onIdle callback every 1/10th of a second\n    // XXX: setTimeout should be called only with function expressions (23974bc1)\n    this._idleTimeout = setTimeout(function() {\n        this._onIdle();\n    }.bind(this), 100);\n\n    utils.addCookies(this.options.cookies);\n    this.registerSASLMechanisms(this.options.mechanisms);\n\n    // initialize plugins\n    for (var k in Strophe._connectionPlugins) {\n        if (Strophe._connectionPlugins.hasOwnProperty(k)) {\n            var ptype = Strophe._connectionPlugins[k];\n            // jslint complaints about the below line, but this is fine\n            var F = function () {}; // jshint ignore:line\n            F.prototype = ptype;\n            this[k] = new F();\n            this[k].init(this);\n        }\n    }\n};\n\nStrophe.Connection.prototype = {\n    /** Function: reset\n     *  Reset the connection.\n     *\n     *  This function should be called after a connection is disconnected\n     *  before that connection is reused.\n     */\n    reset: function () {\n        this._proto._reset();\n\n        // SASL\n        this.do_session = false;\n        this.do_bind = false;\n\n        // handler lists\n        this.timedHandlers = [];\n        this.handlers = [];\n        this.removeTimeds = [];\n        this.removeHandlers = [];\n        this.addTimeds = [];\n        this.addHandlers = [];\n\n        this.authenticated = false;\n        this.connected = false;\n        this.disconnecting = false;\n        this.restored = false;\n\n        this._data = [];\n        this._requests = [];\n        this._uniqueId = 0;\n    },\n\n    /** Function: pause\n     *  Pause the request manager.\n     *\n     *  This will prevent Strophe from sending any more requests to the\n     *  server.  This is very useful for temporarily pausing\n     *  BOSH-Connections while a lot of send() calls are happening quickly.\n     *  This causes Strophe to send the data in a single request, saving\n     *  many request trips.\n     */\n    pause: function () {\n        this.paused = true;\n    },\n\n    /** Function: resume\n     *  Resume the request manager.\n     *\n     *  This resumes after pause() has been called.\n     */\n    resume: function () {\n        this.paused = false;\n    },\n\n    /** Function: getUniqueId\n     *  Generate a unique ID for use in <iq/> elements.\n     *\n     *  All <iq/> stanzas are required to have unique id attributes.  This\n     *  function makes creating these easy.  Each connection instance has\n     *  a counter which starts from zero, and the value of this counter\n     *  plus a colon followed by the suffix becomes the unique id. If no\n     *  suffix is supplied, the counter is used as the unique id.\n     *\n     *  Suffixes are used to make debugging easier when reading the stream\n     *  data, and their use is recommended.  The counter resets to 0 for\n     *  every new connection for the same reason.  For connections to the\n     *  same server that authenticate the same way, all the ids should be\n     *  the same, which makes it easy to see changes.  This is useful for\n     *  automated testing as well.\n     *\n     *  Parameters:\n     *    (String) suffix - A optional suffix to append to the id.\n     *\n     *  Returns:\n     *    A unique string to be used for the id attribute.\n     */\n    getUniqueId: function(suffix) {\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random() * 16 | 0,\n                v = c === 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n        if (typeof(suffix) === \"string\" || typeof(suffix) === \"number\") {\n            return uuid + \":\" + suffix;\n        } else {\n            return uuid + \"\";\n        }\n    },\n\n    /** Function: addProtocolErrorHandler\n     *  Register a handler function for when a protocol (websocker or HTTP)\n     *  error occurs.\n     *\n     *  NOTE: Currently only HTTP errors for BOSH requests are handled.\n     *  Patches that handle websocket errors would be very welcome.\n     *\n     *  Parameters:\n     *    (String) protocol - 'HTTP' or 'websocket'\n     *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\n     *    (Function) callback - Function that will fire on Http error\n     *\n     *  Example:\n     *  function onError(err_code){\n     *    //do stuff\n     *  }\n     *\n     *  var conn = Strophe.connect('http://example.com/http-bind');\n     *  conn.addProtocolErrorHandler('HTTP', 500, onError);\n     *  // Triggers HTTP 500 error and onError handler will be called\n     *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\n     */\n    addProtocolErrorHandler: function(protocol, status_code, callback){\n        this.protocolErrorHandlers[protocol][status_code] = callback;\n    },\n\n\n    /** Function: connect\n     *  Starts the connection process.\n     *\n     *  As the connection process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\n     *  for BOSH connections. Please see XEP 124 for a more detailed explanation\n     *  of the optional parameters.\n     *\n     *  Parameters:\n     *    (String) jid - The user's JID.  This may be a bare JID,\n     *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\n     *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\n     *      process the provided password value as an access token).\n     *    (String) pass - The user's password.\n     *    (Function) callback - The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (String) route - The optional route value.\n     *    (String) authcid - The optional alternative authentication identity\n     *      (username) if intending to impersonate another user.\n     *      When using the SASL-EXTERNAL authentication mechanism, for example\n     *      with client certificates, then the authcid value is used to\n     *      determine whether an authorization JID (authzid) should be sent to\n     *      the server. The authzid should not be sent to the server if the\n     *      authzid and authcid are the same. So to prevent it from being sent\n     *      (for example when the JID is already contained in the client\n     *      certificate), set authcid to that same JID. See XEP-178 for more\n     *      details.\n     */\n    connect: function (jid, pass, callback, wait, hold, route, authcid) {\n        this.jid = jid;\n        /** Variable: authzid\n         *  Authorization identity.\n         */\n        this.authzid = Strophe.getBareJidFromJid(this.jid);\n\n        /** Variable: authcid\n         *  Authentication identity (User name).\n         */\n        this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\n\n        /** Variable: pass\n         *  Authentication identity (User password).\n         */\n        this.pass = pass;\n\n        /** Variable: servtype\n         *  Digest MD5 compatibility.\n         */\n        this.servtype = \"xmpp\";\n\n        this.connect_callback = callback;\n        this.disconnecting = false;\n        this.connected = false;\n        this.authenticated = false;\n        this.restored = false;\n\n        // parse jid for domain\n        this.domain = Strophe.getDomainFromJid(this.jid);\n\n        this._changeConnectStatus(Strophe.Status.CONNECTING, null);\n\n        this._proto._connect(wait, hold, route);\n    },\n\n    /** Function: attach\n     *  Attach to an already created and authenticated BOSH session.\n     *\n     *  This function is provided to allow Strophe to attach to BOSH\n     *  sessions which have been created externally, perhaps by a Web\n     *  application.  This is often used to support auto-login type features\n     *  without putting user credentials into the page.\n     *\n     *  Parameters:\n     *    (String) jid - The full JID that is bound by the session.\n     *    (String) sid - The SID of the BOSH session.\n     *    (String) rid - The current RID of the BOSH session.  This RID\n     *      will be used by the next request.\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    attach: function (jid, sid, rid, callback, wait, hold, wind) {\n        if (this._proto instanceof Strophe.Bosh) {\n            this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\n        } else {\n            throw {\n                name: 'StropheSessionError',\n                message: 'The \"attach\" method can only be used with a BOSH connection.'\n            };\n        }\n    },\n\n    /** Function: restore\n     *  Attempt to restore a cached BOSH session.\n     *\n     *  This function is only useful in conjunction with providing the\n     *  \"keepalive\":true option when instantiating a new Strophe.Connection.\n     *\n     *  When \"keepalive\" is set to true, Strophe will cache the BOSH tokens\n     *  RID (Request ID) and SID (Session ID) and then when this function is\n     *  called, it will attempt to restore the session from those cached\n     *  tokens.\n     *\n     *  This function must therefore be called instead of connect or attach.\n     *\n     *  For an example on how to use it, please see examples/restore.js\n     *\n     *  Parameters:\n     *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\n     *    (Function) callback - The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    restore: function (jid, callback, wait, hold, wind) {\n        if (this._sessionCachingSupported()) {\n            this._proto._restore(jid, callback, wait, hold, wind);\n        } else {\n            throw {\n                name: 'StropheSessionError',\n                message: 'The \"restore\" method can only be used with a BOSH connection.'\n            };\n        }\n    },\n\n    /** PrivateFunction: _sessionCachingSupported\n     * Checks whether sessionStorage and JSON are supported and whether we're\n     * using BOSH.\n     */\n    _sessionCachingSupported: function () {\n        if (this._proto instanceof Strophe.Bosh) {\n            if (!JSON) { return false; }\n            try {\n                sessionStorage.setItem('_strophe_', '_strophe_');\n                sessionStorage.removeItem('_strophe_');\n            } catch (e) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    },\n\n    /** Function: xmlInput\n     *  User overrideable function that receives XML data coming into the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.xmlInput = function (elem) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n     *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n     *\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n     *  <Strophe.Bosh.strip> if you want to strip this tag.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML data received by the connection.\n     */\n    /* jshint unused:false */\n    xmlInput: function (elem) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: xmlOutput\n     *  User overrideable function that receives XML data sent to the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.xmlOutput = function (elem) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n     *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n     *\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n     *  <Strophe.Bosh.strip> if you want to strip this tag.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XMLdata sent by the connection.\n     */\n    /* jshint unused:false */\n    xmlOutput: function (elem) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: rawInput\n     *  User overrideable function that receives raw data coming into the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.rawInput = function (data) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Parameters:\n     *    (String) data - The data received by the connection.\n     */\n    /* jshint unused:false */\n    rawInput: function (data) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: rawOutput\n     *  User overrideable function that receives raw data sent to the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.rawOutput = function (data) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Parameters:\n     *    (String) data - The data sent by the connection.\n     */\n    /* jshint unused:false */\n    rawOutput: function (data) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: nextValidRid\n     *  User overrideable function that receives the new valid rid.\n     *\n     *  The default function does nothing. User code can override this with\n     *  > Strophe.Connection.nextValidRid = function (rid) {\n     *  >    (user code)\n     *  > };\n     *\n     *  Parameters:\n     *    (Number) rid - The next valid rid\n     */\n    /* jshint unused:false */\n    nextValidRid: function (rid) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: send\n     *  Send a stanza.\n     *\n     *  This function is called to push data onto the send queue to\n     *  go out over the wire.  Whenever a request is sent to the BOSH\n     *  server, all pending data is sent and the queue is flushed.\n     *\n     *  Parameters:\n     *    (XMLElement |\n     *     [XMLElement] |\n     *     Strophe.Builder) elem - The stanza to send.\n     */\n    send: function (elem) {\n        if (elem === null) { return ; }\n        if (typeof(elem.sort) === \"function\") {\n            for (var i = 0; i < elem.length; i++) {\n                this._queueData(elem[i]);\n            }\n        } else if (typeof(elem.tree) === \"function\") {\n            this._queueData(elem.tree());\n        } else {\n            this._queueData(elem);\n        }\n\n        this._proto._send();\n    },\n\n    /** Function: flush\n     *  Immediately send any pending outgoing data.\n     *\n     *  Normally send() queues outgoing data until the next idle period\n     *  (100ms), which optimizes network use in the common cases when\n     *  several send()s are called in succession. flush() can be used to\n     *  immediately send all pending data.\n     */\n    flush: function () {\n        // cancel the pending idle period and run the idle function\n        // immediately\n        clearTimeout(this._idleTimeout);\n        this._onIdle();\n    },\n\n    /** Function: sendPresence\n     *  Helper function to send presence stanzas. The main benefit is for\n     *  sending presence stanzas for which you expect a responding presence\n     *  stanza with the same id (for example when leaving a chat room).\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza to send.\n     *    (Function) callback - The callback function for a successful request.\n     *    (Function) errback - The callback function for a failed or timed\n     *      out request.  On timeout, the stanza will be null.\n     *    (Integer) timeout - The time specified in milliseconds for a\n     *      timeout to occur.\n     *\n     *  Returns:\n     *    The id used to send the presence.\n     */\n    sendPresence: function(elem, callback, errback, timeout) {\n        var timeoutHandler = null;\n        var that = this;\n        if (typeof(elem.tree) === \"function\") {\n            elem = elem.tree();\n        }\n        var id = elem.getAttribute('id');\n        if (!id) { // inject id if not found\n            id = this.getUniqueId(\"sendPresence\");\n            elem.setAttribute(\"id\", id);\n        }\n\n        if (typeof callback === \"function\" || typeof errback === \"function\") {\n            var handler = this.addHandler(function (stanza) {\n                // remove timeout handler if there is one\n                if (timeoutHandler) {\n                    that.deleteTimedHandler(timeoutHandler);\n                }\n                var type = stanza.getAttribute('type');\n                if (type === 'error') {\n                    if (errback) {\n                        errback(stanza);\n                    }\n                } else if (callback) {\n                    callback(stanza);\n                }\n            }, null, 'presence', null, id);\n\n            // if timeout specified, set up a timeout handler.\n            if (timeout) {\n                timeoutHandler = this.addTimedHandler(timeout, function () {\n                    // get rid of normal handler\n                    that.deleteHandler(handler);\n                    // call errback on timeout with null stanza\n                    if (errback) {\n                        errback(null);\n                    }\n                    return false;\n                });\n            }\n        }\n        this.send(elem);\n        return id;\n    },\n\n    /** Function: sendIQ\n     *  Helper function to send IQ stanzas.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza to send.\n     *    (Function) callback - The callback function for a successful request.\n     *    (Function) errback - The callback function for a failed or timed\n     *      out request.  On timeout, the stanza will be null.\n     *    (Integer) timeout - The time specified in milliseconds for a\n     *      timeout to occur.\n     *\n     *  Returns:\n     *    The id used to send the IQ.\n    */\n    sendIQ: function(elem, callback, errback, timeout) {\n        var timeoutHandler = null;\n        var that = this;\n        if (typeof(elem.tree) === \"function\") {\n            elem = elem.tree();\n        }\n        var id = elem.getAttribute('id');\n        if (!id) { // inject id if not found\n            id = this.getUniqueId(\"sendIQ\");\n            elem.setAttribute(\"id\", id);\n        }\n\n        if (typeof callback === \"function\" || typeof errback === \"function\") {\n            var handler = this.addHandler(function (stanza) {\n                // remove timeout handler if there is one\n                if (timeoutHandler) {\n                    that.deleteTimedHandler(timeoutHandler);\n                }\n                var iqtype = stanza.getAttribute('type');\n                if (iqtype === 'result') {\n                    if (callback) {\n                        callback(stanza);\n                    }\n                } else if (iqtype === 'error') {\n                    if (errback) {\n                        errback(stanza);\n                    }\n                } else {\n                    throw {\n                        name: \"StropheError\",\n                        message: \"Got bad IQ type of \" + iqtype\n                    };\n                }\n            }, null, 'iq', ['error', 'result'], id);\n\n            // if timeout specified, set up a timeout handler.\n            if (timeout) {\n                timeoutHandler = this.addTimedHandler(timeout, function () {\n                    // get rid of normal handler\n                    that.deleteHandler(handler);\n                    // call errback on timeout with null stanza\n                    if (errback) {\n                        errback(null);\n                    }\n                    return false;\n                });\n            }\n        }\n        this.send(elem);\n        return id;\n    },\n\n    /** PrivateFunction: _queueData\n     *  Queue outgoing data for later sending.  Also ensures that the data\n     *  is a DOMElement.\n     */\n    _queueData: function (element) {\n        if (element === null ||\n            !element.tagName ||\n            !element.childNodes) {\n            throw {\n                name: \"StropheError\",\n                message: \"Cannot queue non-DOMElement.\"\n            };\n        }\n        this._data.push(element);\n    },\n\n    /** PrivateFunction: _sendRestart\n     *  Send an xmpp:restart stanza.\n     */\n    _sendRestart: function () {\n        this._data.push(\"restart\");\n        this._proto._sendRestart();\n        // XXX: setTimeout should be called only with function expressions (23974bc1)\n        this._idleTimeout = setTimeout(function() {\n            this._onIdle();\n        }.bind(this), 100);\n    },\n\n    /** Function: addTimedHandler\n     *  Add a timed handler to the connection.\n     *\n     *  This function adds a timed handler.  The provided handler will\n     *  be called every period milliseconds until it returns false,\n     *  the connection is terminated, or the handler is removed.  Handlers\n     *  that wish to continue being invoked should return true.\n     *\n     *  Because of method binding it is necessary to save the result of\n     *  this function if you wish to remove a handler with\n     *  deleteTimedHandler().\n     *\n     *  Note that user handlers are not active until authentication is\n     *  successful.\n     *\n     *  Parameters:\n     *    (Integer) period - The period of the handler.\n     *    (Function) handler - The callback function.\n     *\n     *  Returns:\n     *    A reference to the handler that can be used to remove it.\n     */\n    addTimedHandler: function (period, handler) {\n        var thand = new Strophe.TimedHandler(period, handler);\n        this.addTimeds.push(thand);\n        return thand;\n    },\n\n    /** Function: deleteTimedHandler\n     *  Delete a timed handler for a connection.\n     *\n     *  This function removes a timed handler from the connection.  The\n     *  handRef parameter is *not* the function passed to addTimedHandler(),\n     *  but is the reference returned from addTimedHandler().\n     *\n     *  Parameters:\n     *    (Strophe.TimedHandler) handRef - The handler reference.\n     */\n    deleteTimedHandler: function (handRef) {\n        // this must be done in the Idle loop so that we don't change\n        // the handlers during iteration\n        this.removeTimeds.push(handRef);\n    },\n\n    /** Function: addHandler\n     *  Add a stanza handler for the connection.\n     *\n     *  This function adds a stanza handler to the connection.  The\n     *  handler callback will be called for any stanza that matches\n     *  the parameters.  Note that if multiple parameters are supplied,\n     *  they must all match for the handler to be invoked.\n     *\n     *  The handler will receive the stanza that triggered it as its argument.\n     *  *The handler should return true if it is to be invoked again;\n     *  returning false will remove the handler after it returns.*\n     *\n     *  As a convenience, the ns parameters applies to the top level element\n     *  and also any of its immediate children.  This is primarily to make\n     *  matching /iq/query elements easy.\n     *\n     *  Options\n     *  ~~~~~~~\n     *  With the options argument, you can specify boolean flags that affect how\n     *  matches are being done.\n     *\n     *  Currently two flags exist:\n     *\n     *  - matchBareFromJid:\n     *      When set to true, the from parameter and the\n     *      from attribute on the stanza will be matched as bare JIDs instead\n     *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\n     *      value of options. The default value for matchBareFromJid is false.\n     *\n     *  - ignoreNamespaceFragment:\n     *      When set to true, a fragment specified on the stanza's namespace\n     *      URL will be ignored when it's matched with the one configured for\n     *      the handler.\n     *\n     *      This means that if you register like this:\n     *      >   connection.addHandler(\n     *      >       handler,\n     *      >       'http://jabber.org/protocol/muc',\n     *      >       null, null, null, null,\n     *      >       {'ignoreNamespaceFragment': true}\n     *      >   );\n     *\n     *      Then a stanza with XML namespace of\n     *      'http://jabber.org/protocol/muc#user' will also be matched. If\n     *      'ignoreNamespaceFragment' is false, then only stanzas with\n     *      'http://jabber.org/protocol/muc' will be matched.\n     *\n     *  Deleting the handler\n     *  ~~~~~~~~~~~~~~~~~~~~\n     *  The return value should be saved if you wish to remove the handler\n     *  with deleteHandler().\n     *\n     *  Parameters:\n     *    (Function) handler - The user callback.\n     *    (String) ns - The namespace to match.\n     *    (String) name - The stanza name to match.\n     *    (String|Array) type - The stanza type (or types if an array) to match.\n     *    (String) id - The stanza id attribute to match.\n     *    (String) from - The stanza from attribute to match.\n     *    (String) options - The handler options\n     *\n     *  Returns:\n     *    A reference to the handler that can be used to remove it.\n     */\n    addHandler: function (handler, ns, name, type, id, from, options) {\n        var hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\n        this.addHandlers.push(hand);\n        return hand;\n    },\n\n    /** Function: deleteHandler\n     *  Delete a stanza handler for a connection.\n     *\n     *  This function removes a stanza handler from the connection.  The\n     *  handRef parameter is *not* the function passed to addHandler(),\n     *  but is the reference returned from addHandler().\n     *\n     *  Parameters:\n     *    (Strophe.Handler) handRef - The handler reference.\n     */\n    deleteHandler: function (handRef) {\n        // this must be done in the Idle loop so that we don't change\n        // the handlers during iteration\n        this.removeHandlers.push(handRef);\n        // If a handler is being deleted while it is being added,\n        // prevent it from getting added\n        var i = this.addHandlers.indexOf(handRef);\n        if (i >= 0) {\n            this.addHandlers.splice(i, 1);\n        }\n    },\n\n    /** Function: registerSASLMechanisms\n     *\n     * Register the SASL mechanisms which will be supported by this instance of\n     * Strophe.Connection (i.e. which this XMPP client will support).\n     *\n     *  Parameters:\n     *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\n     *\n     */\n    registerSASLMechanisms: function (mechanisms) {\n        this.mechanisms = {};\n        mechanisms = mechanisms || [\n            Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLOAuthBearer,\n            Strophe.SASLXOAuth2,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1\n        ];\n        mechanisms.forEach(this.registerSASLMechanism.bind(this));\n    },\n\n    /** Function: registerSASLMechanism\n     *\n     * Register a single SASL mechanism, to be supported by this client.\n     *\n     *  Parameters:\n     *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\n     *\n     */\n    registerSASLMechanism: function (mechanism) {\n        this.mechanisms[mechanism.prototype.name] = mechanism;\n    },\n\n    /** Function: disconnect\n     *  Start the graceful disconnection process.\n     *\n     *  This function starts the disconnection process.  This process starts\n     *  by sending unavailable presence and sending BOSH body of type\n     *  terminate.  A timeout handler makes sure that disconnection happens\n     *  even if the BOSH server does not respond.\n     *  If the Connection object isn't connected, at least tries to abort all pending requests\n     *  so the connection object won't generate successful requests (which were already opened).\n     *\n     *  The user supplied connection callback will be notified of the\n     *  progress as this process happens.\n     *\n     *  Parameters:\n     *    (String) reason - The reason the disconnect is occuring.\n     */\n    disconnect: function (reason) {\n        this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\n\n        Strophe.info(\"Disconnect was called because: \" + reason);\n        if (this.connected) {\n            var pres = false;\n            this.disconnecting = true;\n            if (this.authenticated) {\n                pres = $pres({\n                    xmlns: Strophe.NS.CLIENT,\n                    type: 'unavailable'\n                });\n            }\n            // setup timeout handler\n            this._disconnectTimeout = this._addSysTimedHandler(\n                3000, this._onDisconnectTimeout.bind(this));\n            this._proto._disconnect(pres);\n        } else {\n            Strophe.info(\"Disconnect was called before Strophe connected to the server\");\n            this._proto._abortAllRequests();\n            this._doDisconnect();\n        }\n    },\n\n    /** PrivateFunction: _changeConnectStatus\n     *  _Private_ helper function that makes sure plugins and the user's\n     *  callback are notified of connection status changes.\n     *\n     *  Parameters:\n     *    (Integer) status - the new connection status, one of the values\n     *      in Strophe.Status\n     *    (String) condition - the error condition or null\n     *    (XMLElement) elem - The triggering stanza.\n     */\n    _changeConnectStatus: function (status, condition, elem) {\n        // notify all plugins listening for status changes\n        for (var k in Strophe._connectionPlugins) {\n            if (Strophe._connectionPlugins.hasOwnProperty(k)) {\n                var plugin = this[k];\n                if (plugin.statusChanged) {\n                    try {\n                        plugin.statusChanged(status, condition);\n                    } catch (err) {\n                        Strophe.error(\"\" + k + \" plugin caused an exception \" +\n                                      \"changing status: \" + err);\n                    }\n                }\n            }\n        }\n\n        // notify the user's callback\n        if (this.connect_callback) {\n            try {\n                this.connect_callback(status, condition, elem);\n            } catch (e) {\n                Strophe._handleError(e);\n                Strophe.error(\n                    \"User connection callback caused an \"+\"exception: \"+e);\n            }\n        }\n    },\n\n    /** PrivateFunction: _doDisconnect\n     *  _Private_ function to disconnect.\n     *\n     *  This is the last piece of the disconnection logic.  This resets the\n     *  connection and alerts the user's connection callback.\n     */\n    _doDisconnect: function (condition) {\n        if (typeof this._idleTimeout === \"number\") {\n            clearTimeout(this._idleTimeout);\n        }\n\n        // Cancel Disconnect Timeout\n        if (this._disconnectTimeout !== null) {\n            this.deleteTimedHandler(this._disconnectTimeout);\n            this._disconnectTimeout = null;\n        }\n\n        Strophe.info(\"_doDisconnect was called\");\n        this._proto._doDisconnect();\n\n        this.authenticated = false;\n        this.disconnecting = false;\n        this.restored = false;\n\n        // delete handlers\n        this.handlers = [];\n        this.timedHandlers = [];\n        this.removeTimeds = [];\n        this.removeHandlers = [];\n        this.addTimeds = [];\n        this.addHandlers = [];\n\n        // tell the parent we disconnected\n        this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\n        this.connected = false;\n    },\n\n    /** PrivateFunction: _dataRecv\n     *  _Private_ handler to processes incoming data from the the connection.\n     *\n     *  Except for _connect_cb handling the initial connection request,\n     *  this function handles the incoming data for all requests.  This\n     *  function also fires stanza handlers that match each incoming\n     *  stanza.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The request that has data ready.\n     *    (string) req - The stanza a raw string (optiona).\n     */\n    _dataRecv: function (req, raw) {\n        Strophe.info(\"_dataRecv called\");\n        var elem = this._proto._reqToData(req);\n        if (elem === null) { return; }\n\n        if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\n                this.xmlInput(elem.childNodes[0]);\n            } else {\n                this.xmlInput(elem);\n            }\n        }\n        if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                this.rawInput(raw);\n            } else {\n                this.rawInput(Strophe.serialize(elem));\n            }\n        }\n\n        // remove handlers scheduled for deletion\n        var i, hand;\n        while (this.removeHandlers.length > 0) {\n            hand = this.removeHandlers.pop();\n            i = this.handlers.indexOf(hand);\n            if (i >= 0) {\n                this.handlers.splice(i, 1);\n            }\n        }\n\n        // add handlers scheduled for addition\n        while (this.addHandlers.length > 0) {\n            this.handlers.push(this.addHandlers.pop());\n        }\n\n        // handle graceful disconnect\n        if (this.disconnecting && this._proto._emptyQueue()) {\n            this._doDisconnect();\n            return;\n        }\n\n        var type = elem.getAttribute(\"type\");\n        var cond, conflict;\n        if (type !== null && type === \"terminate\") {\n            // Don't process stanzas that come in after disconnect\n            if (this.disconnecting) {\n                return;\n            }\n\n            // an error occurred\n            cond = elem.getAttribute(\"condition\");\n            conflict = elem.getElementsByTagName(\"conflict\");\n            if (cond !== null) {\n                if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                    cond = \"conflict\";\n                }\n                this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n            } else {\n                this._changeConnectStatus(\n                    Strophe.Status.CONNFAIL,\n                    Strophe.ErrorCondition.UNKOWN_REASON\n                );\n            }\n            this._doDisconnect(cond);\n            return;\n        }\n\n        // send each incoming stanza through the handler chain\n        var that = this;\n        Strophe.forEachChild(elem, null, function (child) {\n            var i, newList;\n            // process handlers\n            newList = that.handlers;\n            that.handlers = [];\n            for (i = 0; i < newList.length; i++) {\n                var hand = newList[i];\n                // encapsulate 'handler.run' not to lose the whole handler list if\n                // one of the handlers throws an exception\n                try {\n                    if (hand.isMatch(child) &&\n                        (that.authenticated || !hand.user)) {\n                        if (hand.run(child)) {\n                            that.handlers.push(hand);\n                        }\n                    } else {\n                        that.handlers.push(hand);\n                    }\n                } catch(e) {\n                    // if the handler throws an exception, we consider it as false\n                    Strophe.warn('Removing Strophe handlers due to uncaught exception: '+e.message);\n                }\n            }\n        });\n    },\n\n\n    /** Attribute: mechanisms\n     *  SASL Mechanisms available for Connection.\n     */\n    mechanisms: {},\n\n    /** PrivateFunction: _connect_cb\n     *  _Private_ handler for initial connection request.\n     *\n     *  This handler is used to process the initial connection request\n     *  response from the BOSH server. It is used to set up authentication\n     *  handlers and start the authentication process.\n     *\n     *  SASL authentication will be attempted if available, otherwise\n     *  the code will fall back to legacy authentication.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     *    (Function) _callback - low level (xmpp) connect callback function.\n     *      Useful for plugins with their own xmpp connect callback (when they\n     *      want to do something special).\n     */\n    _connect_cb: function (req, _callback, raw) {\n        Strophe.info(\"_connect_cb was called\");\n        this.connected = true;\n\n        var bodyWrap;\n        try {\n            bodyWrap = this._proto._reqToData(req);\n        } catch (e) {\n            if (e !== \"badformat\") { throw e; }\n            this._changeConnectStatus(\n                Strophe.Status.CONNFAIL,\n                Strophe.ErrorCondition.BAD_FORMAT\n            );\n            this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT);\n        }\n        if (!bodyWrap) { return; }\n\n        if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\n                this.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                this.xmlInput(bodyWrap);\n            }\n        }\n        if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                this.rawInput(raw);\n            } else {\n                this.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = this._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return;\n        }\n\n        // Check for the stream:features tag\n        var hasFeatures;\n        if (bodyWrap.getElementsByTagNameNS) {\n            hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"features\").length > 0;\n        } else {\n            hasFeatures = bodyWrap.getElementsByTagName(\"stream:features\").length > 0 ||\n                            bodyWrap.getElementsByTagName(\"features\").length > 0;\n        }\n        if (!hasFeatures) {\n            this._proto._no_auth_received(_callback);\n            return;\n        }\n\n        var matched = [], i, mech;\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (mechanisms.length > 0) {\n            for (i = 0; i < mechanisms.length; i++) {\n                mech = Strophe.getText(mechanisms[i]);\n                if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\n            }\n        }\n        if (matched.length === 0) {\n            if (bodyWrap.getElementsByTagName(\"auth\").length === 0) {\n                // There are no matching SASL mechanisms and also no legacy\n                // auth available.\n                this._proto._no_auth_received(_callback);\n                return;\n            }\n        }\n        if (this.do_authentication !== false) {\n            this.authenticate(matched);\n        }\n    },\n\n    /** Function: sortMechanismsByPriority\n     *\n     *  Sorts an array of objects with prototype SASLMechanism according to\n     *  their priorities.\n     *\n     *  Parameters:\n     *    (Array) mechanisms - Array of SASL mechanisms.\n     *\n     */\n    sortMechanismsByPriority: function (mechanisms) {\n        // Sorting mechanisms according to priority.\n        var i, j, higher, swap;\n        for (i = 0; i < mechanisms.length - 1; ++i) {\n            higher = i;\n            for (j = i + 1; j < mechanisms.length; ++j) {\n                if (mechanisms[j].prototype.priority > mechanisms[higher].prototype.priority) {\n                    higher = j;\n                }\n            }\n            if (higher !== i) {\n                swap = mechanisms[i];\n                mechanisms[i] = mechanisms[higher];\n                mechanisms[higher] = swap;\n            }\n        }\n        return mechanisms;\n    },\n\n    /** PrivateFunction: _attemptSASLAuth\n     *\n     *  Iterate through an array of SASL mechanisms and attempt authentication\n     *  with the highest priority (enabled) mechanism.\n     *\n     *  Parameters:\n     *    (Array) mechanisms - Array of SASL mechanisms.\n     *\n     *  Returns:\n     *    (Boolean) mechanism_found - true or false, depending on whether a\n     *          valid SASL mechanism was found with which authentication could be\n     *          started.\n     */\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            break;\n        }\n        return mechanism_found;\n    },\n\n    /** PrivateFunction: _attemptLegacyAuth\n     *\n     *  Attempt legacy (i.e. non-SASL) authentication.\n     *\n     */\n    _attemptLegacyAuth: function () {\n        if (Strophe.getNodeFromJid(this.jid) === null) {\n            // we don't have a node, which is required for non-anonymous\n            // client connections\n            this._changeConnectStatus(\n                Strophe.Status.CONNFAIL,\n                Strophe.ErrorCondition.MISSING_JID_NODE\n            );\n            this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE);\n        } else {\n            // Fall back to legacy authentication\n            this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\n            this._addSysHandler(\n                this._auth1_cb.bind(this),\n                null, null, null, \"_auth_1\"\n            );\n            this.send($iq({\n                    'type': \"get\",\n                    'to': this.domain,\n                    'id': \"_auth_1\"\n                }).c(\"query\", {xmlns: Strophe.NS.AUTH})\n                .c(\"username\", {}).t(Strophe.getNodeFromJid(this.jid))\n                .tree());\n        }\n    },\n\n    /** Function: authenticate\n     * Set up authentication\n     *\n     *  Continues the initial connection request by setting up authentication\n     *  handlers and starting the authentication process.\n     *\n     *  SASL authentication will be attempted if available, otherwise\n     *  the code will fall back to legacy authentication.\n     *\n     *  Parameters:\n     *    (Array) matched - Array of SASL mechanisms supported.\n     *\n     */\n    authenticate: function (matched) {\n        if (!this._attemptSASLAuth(matched)) {\n            this._attemptLegacyAuth();\n        }\n    },\n\n    /** PrivateFunction: _sasl_challenge_cb\n     *  _Private_ handler for the SASL challenge\n     *\n     */\n    _sasl_challenge_cb: function(elem) {\n      var challenge = atob(Strophe.getText(elem));\n      var response = this._sasl_mechanism.onChallenge(this, challenge);\n      var stanza = $build('response', {\n          'xmlns': Strophe.NS.SASL\n      });\n      if (response !== \"\") {\n        stanza.t(btoa(response));\n      }\n      this.send(stanza.tree());\n      return true;\n    },\n\n    /** PrivateFunction: _auth1_cb\n     *  _Private_ handler for legacy authentication.\n     *\n     *  This handler is called in response to the initial <iq type='get'/>\n     *  for legacy authentication.  It builds an authentication <iq/> and\n     *  sends it, creating a handler (calling back to _auth2_cb()) to\n     *  handle the result\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza that triggered the callback.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    /* jshint unused:false */\n    _auth1_cb: function (elem) {\n        // build plaintext auth iq\n        var iq = $iq({type: \"set\", id: \"_auth_2\"})\n            .c('query', {xmlns: Strophe.NS.AUTH})\n            .c('username', {}).t(Strophe.getNodeFromJid(this.jid))\n            .up()\n            .c('password').t(this.pass);\n\n        if (!Strophe.getResourceFromJid(this.jid)) {\n            // since the user has not supplied a resource, we pick\n            // a default one here.  unlike other auth methods, the server\n            // cannot do this for us.\n            this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\n        }\n        iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\n\n        this._addSysHandler(this._auth2_cb.bind(this), null,\n                            null, null, \"_auth_2\");\n        this.send(iq.tree());\n        return false;\n    },\n    /* jshint unused:true */\n\n    /** PrivateFunction: _sasl_success_cb\n     *  _Private_ handler for succesful SASL authentication.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_success_cb: function (elem) {\n        if (this._sasl_data[\"server-signature\"]) {\n            var serverSignature;\n            var success = atob(Strophe.getText(elem));\n            var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n            var matches = success.match(attribMatch);\n            if (matches[1] === \"v\") {\n                serverSignature = matches[2];\n            }\n\n            if (serverSignature !== this._sasl_data[\"server-signature\"]) {\n              // remove old handlers\n              this.deleteHandler(this._sasl_failure_handler);\n              this._sasl_failure_handler = null;\n              if (this._sasl_challenge_handler) {\n                this.deleteHandler(this._sasl_challenge_handler);\n                this._sasl_challenge_handler = null;\n              }\n\n              this._sasl_data = {};\n              return this._sasl_failure_cb(null);\n            }\n        }\n        Strophe.info(\"SASL authentication succeeded.\");\n\n        if (this._sasl_mechanism) {\n          this._sasl_mechanism.onSuccess();\n        }\n\n        // remove old handlers\n        this.deleteHandler(this._sasl_failure_handler);\n        this._sasl_failure_handler = null;\n        if (this._sasl_challenge_handler) {\n            this.deleteHandler(this._sasl_challenge_handler);\n            this._sasl_challenge_handler = null;\n        }\n\n        var streamfeature_handlers = [];\n        var wrapper = function(handlers, elem) {\n            while (handlers.length) {\n                this.deleteHandler(handlers.pop());\n            }\n            this._sasl_auth1_cb.bind(this)(elem);\n            return false;\n        };\n        streamfeature_handlers.push(this._addSysHandler(function(elem) {\n            wrapper.bind(this)(streamfeature_handlers, elem);\n        }.bind(this), null, \"stream:features\", null, null));\n        streamfeature_handlers.push(this._addSysHandler(function(elem) {\n            wrapper.bind(this)(streamfeature_handlers, elem);\n        }.bind(this), Strophe.NS.STREAM, \"features\", null, null));\n\n        // we must send an xmpp:restart now\n        this._sendRestart();\n\n        return false;\n    },\n\n    /** PrivateFunction: _sasl_auth1_cb\n     *  _Private_ handler to start stream binding.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_auth1_cb: function (elem) {\n        // save stream:features for future usage\n        this.features = elem;\n        var i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n                                null, \"_bind_auth_2\");\n\n            var resource = Strophe.getResourceFromJid(this.jid);\n            if (resource) {\n                this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                          .c('bind', {xmlns: Strophe.NS.BIND})\n                          .c('resource', {}).t(resource).tree());\n            } else {\n                this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                          .c('bind', {xmlns: Strophe.NS.BIND})\n                          .tree());\n            }\n        }\n        return false;\n    },\n\n    /** PrivateFunction: _sasl_bind_cb\n     *  _Private_ handler for binding result and session start.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_bind_cb: function (elem) {\n        if (elem.getAttribute(\"type\") === \"error\") {\n            Strophe.info(\"SASL binding failed.\");\n            var conflict = elem.getElementsByTagName(\"conflict\"), condition;\n            if (conflict.length > 0) {\n                condition = Strophe.ErrorCondition.CONFLICT;\n            }\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition, elem);\n            return false;\n        }\n\n        // TODO - need to grab errors\n        var bind = elem.getElementsByTagName(\"bind\");\n        var jidNode;\n        if (bind.length > 0) {\n            // Grab jid\n            jidNode = bind[0].getElementsByTagName(\"jid\");\n            if (jidNode.length > 0) {\n                this.jid = Strophe.getText(jidNode[0]);\n\n                if (this.do_session) {\n                    this._addSysHandler(this._sasl_session_cb.bind(this),\n                                        null, null, null, \"_session_auth_2\");\n\n                    this.send($iq({type: \"set\", id: \"_session_auth_2\"})\n                                  .c('session', {xmlns: Strophe.NS.SESSION})\n                                  .tree());\n                } else {\n                    this.authenticated = true;\n                    this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                }\n            }\n        } else {\n            Strophe.info(\"SASL binding failed.\");\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n            return false;\n        }\n    },\n\n    /** PrivateFunction: _sasl_session_cb\n     *  _Private_ handler to finish successful SASL connection.\n     *\n     *  This sets Connection.authenticated to true on success, which\n     *  starts the processing of user handlers.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_session_cb: function (elem) {\n        if (elem.getAttribute(\"type\") === \"result\") {\n            this.authenticated = true;\n            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n        } else if (elem.getAttribute(\"type\") === \"error\") {\n            Strophe.info(\"Session creation failed.\");\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n            return false;\n        }\n        return false;\n    },\n\n    /** PrivateFunction: _sasl_failure_cb\n     *  _Private_ handler for SASL authentication failure.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    /* jshint unused:false */\n    _sasl_failure_cb: function (elem) {\n        // delete unneeded handlers\n        if (this._sasl_success_handler) {\n            this.deleteHandler(this._sasl_success_handler);\n            this._sasl_success_handler = null;\n        }\n        if (this._sasl_challenge_handler) {\n            this.deleteHandler(this._sasl_challenge_handler);\n            this._sasl_challenge_handler = null;\n        }\n\n        if(this._sasl_mechanism)\n          this._sasl_mechanism.onFailure();\n        this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n        return false;\n    },\n    /* jshint unused:true */\n\n    /** PrivateFunction: _auth2_cb\n     *  _Private_ handler to finish legacy authentication.\n     *\n     *  This handler is called when the result from the jabber:iq:auth\n     *  <iq/> stanza is returned.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza that triggered the callback.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _auth2_cb: function (elem) {\n        if (elem.getAttribute(\"type\") === \"result\") {\n            this.authenticated = true;\n            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n        } else if (elem.getAttribute(\"type\") === \"error\") {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n            this.disconnect('authentication failed');\n        }\n        return false;\n    },\n\n    /** PrivateFunction: _addSysTimedHandler\n     *  _Private_ function to add a system level timed handler.\n     *\n     *  This function is used to add a Strophe.TimedHandler for the\n     *  library code.  System timed handlers are allowed to run before\n     *  authentication is complete.\n     *\n     *  Parameters:\n     *    (Integer) period - The period of the handler.\n     *    (Function) handler - The callback function.\n     */\n    _addSysTimedHandler: function (period, handler) {\n        var thand = new Strophe.TimedHandler(period, handler);\n        thand.user = false;\n        this.addTimeds.push(thand);\n        return thand;\n    },\n\n    /** PrivateFunction: _addSysHandler\n     *  _Private_ function to add a system level stanza handler.\n     *\n     *  This function is used to add a Strophe.Handler for the\n     *  library code.  System stanza handlers are allowed to run before\n     *  authentication is complete.\n     *\n     *  Parameters:\n     *    (Function) handler - The callback function.\n     *    (String) ns - The namespace to match.\n     *    (String) name - The stanza name to match.\n     *    (String) type - The stanza type attribute to match.\n     *    (String) id - The stanza id attribute to match.\n     */\n    _addSysHandler: function (handler, ns, name, type, id) {\n        var hand = new Strophe.Handler(handler, ns, name, type, id);\n        hand.user = false;\n        this.addHandlers.push(hand);\n        return hand;\n    },\n\n    /** PrivateFunction: _onDisconnectTimeout\n     *  _Private_ timeout handler for handling non-graceful disconnection.\n     *\n     *  If the graceful disconnect process does not complete within the\n     *  time allotted, this handler finishes the disconnect anyway.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _onDisconnectTimeout: function () {\n        Strophe.info(\"_onDisconnectTimeout was called\");\n        this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\n        this._proto._onDisconnectTimeout();\n        // actually disconnect\n        this._doDisconnect();\n        return false;\n    },\n\n    /** PrivateFunction: _onIdle\n     *  _Private_ handler to process events during idle cycle.\n     *\n     *  This handler is called every 100ms to fire timed handlers that\n     *  are ready and keep poll requests going.\n     */\n    _onIdle: function () {\n        var i, thand, since, newList;\n\n        // add timed handlers scheduled for addition\n        // NOTE: we add before remove in the case a timed handler is\n        // added and then deleted before the next _onIdle() call.\n        while (this.addTimeds.length > 0) {\n            this.timedHandlers.push(this.addTimeds.pop());\n        }\n\n        // remove timed handlers that have been scheduled for deletion\n        while (this.removeTimeds.length > 0) {\n            thand = this.removeTimeds.pop();\n            i = this.timedHandlers.indexOf(thand);\n            if (i >= 0) {\n                this.timedHandlers.splice(i, 1);\n            }\n        }\n\n        // call ready timed handlers\n        var now = new Date().getTime();\n        newList = [];\n        for (i = 0; i < this.timedHandlers.length; i++) {\n            thand = this.timedHandlers[i];\n            if (this.authenticated || !thand.user) {\n                since = thand.lastCalled + thand.period;\n                if (since - now <= 0) {\n                    if (thand.run()) {\n                        newList.push(thand);\n                    }\n                } else {\n                    newList.push(thand);\n                }\n            }\n        }\n        this.timedHandlers = newList;\n\n        clearTimeout(this._idleTimeout);\n\n        this._proto._onIdle();\n\n        // reactivate the timer only if connected\n        if (this.connected) {\n            // XXX: setTimeout should be called only with function expressions (23974bc1)\n            this._idleTimeout = setTimeout(function() {\n                this._onIdle();\n            }.bind(this), 100);\n        }\n    }\n};\n\n/** Class: Strophe.SASLMechanism\n *\n *  encapsulates SASL authentication mechanisms.\n *\n *  User code may override the priority for each mechanism or disable it completely.\n *  See <priority> for information about changing priority and <test> for informatian on\n *  how to disable a mechanism.\n *\n *  By default, all mechanisms are enabled and the priorities are\n *\n *      OAUTHBEARER - 60\n *      SCRAM-SHA1 - 50\n *      DIGEST-MD5 - 40\n *      PLAIN - 30\n *      ANONYMOUS - 20\n *      EXTERNAL - 10\n *\n *  See: Strophe.Connection.addSupportedSASLMechanisms\n */\n\n/**\n * PrivateConstructor: Strophe.SASLMechanism\n * SASL auth mechanism abstraction.\n *\n *  Parameters:\n *    (String) name - SASL Mechanism name.\n *    (Boolean) isClientFirst - If client should send response first without challenge.\n *    (Number) priority - Priority.\n *\n *  Returns:\n *    A new Strophe.SASLMechanism object.\n */\nStrophe.SASLMechanism = function(name, isClientFirst, priority) {\n  /** PrivateVariable: name\n   *  Mechanism name.\n   */\n  this.name = name;\n  /** PrivateVariable: isClientFirst\n   *  If client sends response without initial server challenge.\n   */\n  this.isClientFirst = isClientFirst;\n  /** Variable: priority\n   *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\n   *  Users may override this to prioritize mechanisms differently.\n   *\n   *  In the default configuration the priorities are\n   *\n   *  SCRAM-SHA1 - 40\n   *  DIGEST-MD5 - 30\n   *  Plain - 20\n   *\n   *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\n   *\n   *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\n   *\n   *  See <SASL mechanisms> for a list of available mechanisms.\n   *\n   */\n  this.priority = priority;\n};\n\nStrophe.SASLMechanism.prototype = {\n  /**\n   *  Function: test\n   *  Checks if mechanism able to run.\n   *  To disable a mechanism, make this return false;\n   *\n   *  To disable plain authentication run\n   *  > Strophe.SASLPlain.test = function() {\n   *  >   return false;\n   *  > }\n   *\n   *  See <SASL mechanisms> for a list of available mechanisms.\n   *\n   *  Parameters:\n   *    (Strophe.Connection) connection - Target Connection.\n   *\n   *  Returns:\n   *    (Boolean) If mechanism was able to run.\n   */\n  /* jshint unused:false */\n  test: function(connection) {\n    return true;\n  },\n  /* jshint unused:true */\n\n  /** PrivateFunction: onStart\n   *  Called before starting mechanism on some connection.\n   *\n   *  Parameters:\n   *    (Strophe.Connection) connection - Target Connection.\n   */\n  onStart: function(connection) {\n    this._connection = connection;\n  },\n\n  /** PrivateFunction: onChallenge\n   *  Called by protocol implementation on incoming challenge. If client is\n   *  first (isClientFirst === true) challenge will be null on the first call.\n   *\n   *  Parameters:\n   *    (Strophe.Connection) connection - Target Connection.\n   *    (String) challenge - current challenge to handle.\n   *\n   *  Returns:\n   *    (String) Mechanism response.\n   */\n  /* jshint unused:false */\n  onChallenge: function(connection, challenge) {\n    throw new Error(\"You should implement challenge handling!\");\n  },\n  /* jshint unused:true */\n\n  /** PrivateFunction: onFailure\n   *  Protocol informs mechanism implementation about SASL failure.\n   */\n  onFailure: function() {\n    this._connection = null;\n  },\n\n  /** PrivateFunction: onSuccess\n   *  Protocol informs mechanism implementation about SASL success.\n   */\n  onSuccess: function() {\n    this._connection = null;\n  }\n};\n\n  /** Constants: SASL mechanisms\n   *  Available authentication mechanisms\n   *\n   *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\n   *  Strophe.SASLPlain - SASL PLAIN authentication.\n   *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\n   *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\n   *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\n   *  Strophe.SASLExternal - SASL EXTERNAL authentication\n   *  Strophe.SASLXOAuth2 - SASL X-OAuth2 authentication\n   */\n\n// Building SASL callbacks\n\n/** PrivateConstructor: SASLAnonymous\n *  SASL ANONYMOUS authentication.\n */\nStrophe.SASLAnonymous = function() {};\nStrophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\"ANONYMOUS\", false, 20);\n\nStrophe.SASLAnonymous.prototype.test = function(connection) {\n    return connection.authcid === null;\n};\n\n\n/** PrivateConstructor: SASLPlain\n *  SASL PLAIN authentication.\n */\nStrophe.SASLPlain = function() {};\nStrophe.SASLPlain.prototype = new Strophe.SASLMechanism(\"PLAIN\", true, 50);\n\nStrophe.SASLPlain.prototype.test = function(connection) {\n    return connection.authcid !== null;\n};\n\nStrophe.SASLPlain.prototype.onChallenge = function(connection) {\n    var auth_str = connection.authzid;\n    auth_str = auth_str + \"\\u0000\";\n    auth_str = auth_str + connection.authcid;\n    auth_str = auth_str + \"\\u0000\";\n    auth_str = auth_str + connection.pass;\n    return utils.utf16to8(auth_str);\n};\n\n\n/** PrivateConstructor: SASLSHA1\n *  SASL SCRAM SHA 1 authentication.\n */\nStrophe.SASLSHA1 = function() {};\nStrophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\"SCRAM-SHA-1\", true, 70);\n\nStrophe.SASLSHA1.prototype.test = function(connection) {\n    return connection.authcid !== null;\n};\n\nStrophe.SASLSHA1.prototype.onChallenge = function(connection, challenge, test_cnonce) {\n  var cnonce = test_cnonce || MD5.hexdigest(Math.random() * 1234567890);\n  var auth_str = \"n=\" + utils.utf16to8(connection.authcid);\n  auth_str += \",r=\";\n  auth_str += cnonce;\n  connection._sasl_data.cnonce = cnonce;\n  connection._sasl_data[\"client-first-message-bare\"] = auth_str;\n\n  auth_str = \"n,,\" + auth_str;\n\n  this.onChallenge = function (connection, challenge) {\n    var nonce, salt, iter, Hi, U, U_old, i, k, pass;\n    var clientKey, serverKey, clientSignature;\n    var responseText = \"c=biws,\";\n    var authMessage = connection._sasl_data[\"client-first-message-bare\"] + \",\" +\n      challenge + \",\";\n    var cnonce = connection._sasl_data.cnonce;\n    var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n\n    while (challenge.match(attribMatch)) {\n      var matches = challenge.match(attribMatch);\n      challenge = challenge.replace(matches[0], \"\");\n      switch (matches[1]) {\n      case \"r\":\n        nonce = matches[2];\n        break;\n      case \"s\":\n        salt = matches[2];\n        break;\n      case \"i\":\n        iter = matches[2];\n        break;\n      }\n    }\n\n    if (nonce.substr(0, cnonce.length) !== cnonce) {\n      connection._sasl_data = {};\n      return connection._sasl_failure_cb();\n    }\n\n    responseText += \"r=\" + nonce;\n    authMessage += responseText;\n\n    salt = atob(salt);\n    salt += \"\\x00\\x00\\x00\\x01\";\n\n    pass = utils.utf16to8(connection.pass);\n    Hi = U_old = SHA1.core_hmac_sha1(pass, salt);\n    for (i = 1; i < iter; i++) {\n      U = SHA1.core_hmac_sha1(pass, SHA1.binb2str(U_old));\n      for (k = 0; k < 5; k++) {\n        Hi[k] ^= U[k];\n      }\n      U_old = U;\n    }\n    Hi = SHA1.binb2str(Hi);\n\n    clientKey = SHA1.core_hmac_sha1(Hi, \"Client Key\");\n    serverKey = SHA1.str_hmac_sha1(Hi, \"Server Key\");\n    clientSignature = SHA1.core_hmac_sha1(SHA1.str_sha1(SHA1.binb2str(clientKey)), authMessage);\n    connection._sasl_data[\"server-signature\"] = SHA1.b64_hmac_sha1(serverKey, authMessage);\n\n    for (k = 0; k < 5; k++) {\n      clientKey[k] ^= clientSignature[k];\n    }\n\n    responseText += \",p=\" + btoa(SHA1.binb2str(clientKey));\n    return responseText;\n  }.bind(this);\n\n  return auth_str;\n};\n\n\n/** PrivateConstructor: SASLMD5\n *  SASL DIGEST MD5 authentication.\n */\nStrophe.SASLMD5 = function() {};\nStrophe.SASLMD5.prototype = new Strophe.SASLMechanism(\"DIGEST-MD5\", false, 60);\n\nStrophe.SASLMD5.prototype.test = function(connection) {\n    return connection.authcid !== null;\n};\n\n/** PrivateFunction: _quote\n *  _Private_ utility function to backslash escape and quote strings.\n *\n *  Parameters:\n *    (String) str - The string to be quoted.\n *\n *  Returns:\n *    quoted string\n */\nStrophe.SASLMD5.prototype._quote = function (str) {\n    return '\"' + str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"') + '\"';\n    //\" end string workaround for emacs\n};\n\nStrophe.SASLMD5.prototype.onChallenge = function(connection, challenge, test_cnonce) {\n  var attribMatch = /([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/;\n  var cnonce = test_cnonce || MD5.hexdigest(\"\" + (Math.random() * 1234567890));\n  var realm = \"\";\n  var host = null;\n  var nonce = \"\";\n  var qop = \"\";\n  var matches;\n\n  while (challenge.match(attribMatch)) {\n    matches = challenge.match(attribMatch);\n    challenge = challenge.replace(matches[0], \"\");\n    matches[2] = matches[2].replace(/^\"(.+)\"$/, \"$1\");\n    switch (matches[1]) {\n    case \"realm\":\n      realm = matches[2];\n      break;\n    case \"nonce\":\n      nonce = matches[2];\n      break;\n    case \"qop\":\n      qop = matches[2];\n      break;\n    case \"host\":\n      host = matches[2];\n      break;\n    }\n  }\n\n  var digest_uri = connection.servtype + \"/\" + connection.domain;\n  if (host !== null) {\n    digest_uri = digest_uri + \"/\" + host;\n  }\n\n  var cred = utils.utf16to8(connection.authcid + \":\" + realm + \":\" + this._connection.pass);\n  var A1 = MD5.hash(cred) + \":\" + nonce + \":\" + cnonce;\n  var A2 = 'AUTHENTICATE:' + digest_uri;\n\n  var responseText = \"\";\n  responseText += 'charset=utf-8,';\n  responseText += 'username=' + this._quote(utils.utf16to8(connection.authcid)) + ',';\n  responseText += 'realm=' + this._quote(realm) + ',';\n  responseText += 'nonce=' + this._quote(nonce) + ',';\n  responseText += 'nc=00000001,';\n  responseText += 'cnonce=' + this._quote(cnonce) + ',';\n  responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\n  responseText += 'response=' + MD5.hexdigest(MD5.hexdigest(A1) + \":\" +\n                                              nonce + \":00000001:\" +\n                                              cnonce + \":auth:\" +\n                                              MD5.hexdigest(A2)) + \",\";\n  responseText += 'qop=auth';\n\n  this.onChallenge = function () {\n      return \"\";\n  };\n  return responseText;\n};\n\n\n/** PrivateConstructor: SASLOAuthBearer\n *  SASL OAuth Bearer authentication.\n */\nStrophe.SASLOAuthBearer = function() {};\nStrophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\"OAUTHBEARER\", true, 40);\n\nStrophe.SASLOAuthBearer.prototype.test = function(connection) {\n    return connection.pass !== null;\n};\n\nStrophe.SASLOAuthBearer.prototype.onChallenge = function(connection) {\n    var auth_str = 'n,';\n    if (connection.authcid !== null) {\n      auth_str = auth_str + 'a=' + connection.authzid;\n    }\n    auth_str = auth_str + ',';\n    auth_str = auth_str + \"\\u0001\";\n    auth_str = auth_str + 'auth=Bearer ';\n    auth_str = auth_str + connection.pass;\n    auth_str = auth_str + \"\\u0001\";\n    auth_str = auth_str + \"\\u0001\";\n\n    return utils.utf16to8(auth_str);\n};\n\n\n/** PrivateConstructor: SASLExternal\n *  SASL EXTERNAL authentication.\n *\n *  The EXTERNAL mechanism allows a client to request the server to use\n *  credentials established by means external to the mechanism to\n *  authenticate the client. The external means may be, for instance,\n *  TLS services.\n */\nStrophe.SASLExternal = function() {};\nStrophe.SASLExternal.prototype = new Strophe.SASLMechanism(\"EXTERNAL\", true, 10);\n\nStrophe.SASLExternal.prototype.onChallenge = function(connection) {\n    /** According to XEP-178, an authzid SHOULD NOT be presented when the\n     * authcid contained or implied in the client certificate is the JID (i.e.\n     * authzid) with which the user wants to log in as.\n     *\n     * To NOT send the authzid, the user should therefore set the authcid equal\n     * to the JID when instantiating a new Strophe.Connection object.\n     */\n    return connection.authcid === connection.authzid ? '' : connection.authzid;\n};\n\n\n/** PrivateConstructor: SASLXOAuth2\n *  SASL X-OAuth2 authentication.\n */\nStrophe.SASLXOAuth2 = function () { };\nStrophe.SASLXOAuth2.prototype = new Strophe.SASLMechanism(\"X-OAUTH2\", true, 30);\n\nStrophe.SASLXOAuth2.prototype.test = function (connection) {\n    return connection.pass !== null;\n};\n\nStrophe.SASLXOAuth2.prototype.onChallenge = function (connection) {\n    var auth_str = '\\u0000';\n    if (connection.authcid !== null) {\n        auth_str = auth_str + connection.authzid;\n    }\n    auth_str = auth_str + \"\\u0000\";\n    auth_str = auth_str + connection.pass;\n\n    return utils.utf16to8(auth_str);\n};\n\n\nreturn {\n    'Strophe':         Strophe,\n    '$build':          $build,\n    '$iq':             $iq,\n    '$msg':            $msg,\n    '$pres':           $pres,\n    'SHA1':            SHA1,\n    'MD5':             MD5,\n    'b64_hmac_sha1':   SHA1.b64_hmac_sha1,\n    'b64_sha1':        SHA1.b64_sha1,\n    'str_hmac_sha1':   SHA1.str_hmac_sha1,\n    'str_sha1':        SHA1.str_sha1\n};\n}));\n\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\n/* global define, window, setTimeout, clearTimeout, XMLHttpRequest, ActiveXObject, Strophe, $build */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-bosh',['strophe-core'], function (core) {\n            return factory(\n                core.Strophe,\n                core.$build\n            );\n        });\n    } else if (typeof exports === 'object') {\n        var core = require('./core');\n\n        module.exports = factory(core.Strophe, core.$build);\n    } else {\n        // Browser globals\n        return factory(Strophe, $build);\n    }\n}(this, function (Strophe, $build) {\n\n/** PrivateClass: Strophe.Request\n *  _Private_ helper class that provides a cross implementation abstraction\n *  for a BOSH related XMLHttpRequest.\n *\n *  The Strophe.Request class is used internally to encapsulate BOSH request\n *  information.  It is not meant to be used from user's code.\n */\n\n/** PrivateConstructor: Strophe.Request\n *  Create and initialize a new Strophe.Request object.\n *\n *  Parameters:\n *    (XMLElement) elem - The XML data to be sent in the request.\n *    (Function) func - The function that will be called when the\n *      XMLHttpRequest readyState changes.\n *    (Integer) rid - The BOSH rid attribute associated with this request.\n *    (Integer) sends - The number of times this same request has been sent.\n */\nStrophe.Request = function (elem, func, rid, sends) {\n    this.id = ++Strophe._requestId;\n    this.xmlData = elem;\n    this.data = Strophe.serialize(elem);\n    // save original function in case we need to make a new request\n    // from this one.\n    this.origFunc = func;\n    this.func = func;\n    this.rid = rid;\n    this.date = NaN;\n    this.sends = sends || 0;\n    this.abort = false;\n    this.dead = null;\n\n    this.age = function () {\n        if (!this.date) { return 0; }\n        var now = new Date();\n        return (now - this.date) / 1000;\n    };\n    this.timeDead = function () {\n        if (!this.dead) { return 0; }\n        var now = new Date();\n        return (now - this.dead) / 1000;\n    };\n    this.xhr = this._newXHR();\n};\n\nStrophe.Request.prototype = {\n    /** PrivateFunction: getResponse\n     *  Get a response from the underlying XMLHttpRequest.\n     *\n     *  This function attempts to get a response from the request and checks\n     *  for errors.\n     *\n     *  Throws:\n     *    \"parsererror\" - A parser error occured.\n     *    \"badformat\" - The entity has sent XML that cannot be processed.\n     *\n     *  Returns:\n     *    The DOM element tree of the response.\n     */\n    getResponse: function () {\n        var node = null;\n        if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\n            node = this.xhr.responseXML.documentElement;\n            if (node.tagName === \"parsererror\") {\n                Strophe.error(\"invalid response received\");\n                Strophe.error(\"responseText: \" + this.xhr.responseText);\n                Strophe.error(\"responseXML: \" +\n                              Strophe.serialize(this.xhr.responseXML));\n                throw \"parsererror\";\n            }\n        } else if (this.xhr.responseText) {\n            // In React Native, we may get responseText but no responseXML.  We can try to parse it manually.\n            Strophe.debug(\"Got responseText but no responseXML; attempting to parse it with DOMParser...\");\n            node = new DOMParser().parseFromString(this.xhr.responseText, 'application/xml').documentElement;\n            if (!node) {\n                throw new Error('Parsing produced null node');\n            } else if (node.querySelector('parsererror')) {\n                Strophe.error(\"invalid response received: \" + node.querySelector('parsererror').textContent);\n                Strophe.error(\"responseText: \" + this.xhr.responseText);\n                throw \"badformat\";\n            }\n        }\n        return node;\n    },\n\n    /** PrivateFunction: _newXHR\n     *  _Private_ helper function to create XMLHttpRequests.\n     *\n     *  This function creates XMLHttpRequests across all implementations.\n     *\n     *  Returns:\n     *    A new XMLHttpRequest.\n     */\n    _newXHR: function () {\n        var xhr = null;\n        if (window.XMLHttpRequest) {\n            xhr = new XMLHttpRequest();\n            if (xhr.overrideMimeType) {\n                xhr.overrideMimeType(\"text/xml; charset=utf-8\");\n            }\n        } else if (window.ActiveXObject) {\n            xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }\n        // use Function.bind() to prepend ourselves as an argument\n        xhr.onreadystatechange = this.func.bind(null, this);\n        return xhr;\n    }\n};\n\n/** Class: Strophe.Bosh\n *  _Private_ helper class that handles BOSH Connections\n *\n *  The Strophe.Bosh class is used internally by Strophe.Connection\n *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\n */\n\n/** File: bosh.js\n *  A JavaScript library to enable BOSH in Strophejs.\n *\n *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\n *  to emulate a persistent, stateful, two-way connection to an XMPP server.\n *  More information on BOSH can be found in XEP 124.\n */\n\n/** PrivateConstructor: Strophe.Bosh\n *  Create and initialize a Strophe.Bosh object.\n *\n *  Parameters:\n *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\n *\n *  Returns:\n *    A new Strophe.Bosh object.\n */\nStrophe.Bosh = function(connection) {\n    this._conn = connection;\n    /* request id for body tags */\n    this.rid = Math.floor(Math.random() * 4294967295);\n    /* The current session ID. */\n    this.sid = null;\n\n    // default BOSH values\n    this.hold = 1;\n    this.wait = 60;\n    this.window = 5;\n    this.errors = 0;\n    this.inactivity = null;\n\n    this.lastResponseHeaders = null;\n\n    this._requests = [];\n};\n\nStrophe.Bosh.prototype = {\n    /** Variable: strip\n     *\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\n     *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\n     *  To strip this tag, User code can set <Strophe.Bosh.strip> to \"body\":\n     *\n     *  > Strophe.Bosh.prototype.strip = \"body\";\n     *\n     *  This will enable stripping of the body tag in both\n     *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\n     */\n    strip: null,\n\n    /** PrivateFunction: _buildBody\n     *  _Private_ helper function to generate the <body/> wrapper for BOSH.\n     *\n     *  Returns:\n     *    A Strophe.Builder with a <body/> element.\n     */\n    _buildBody: function () {\n        var bodyWrap = $build('body', {\n            rid: this.rid++,\n            xmlns: Strophe.NS.HTTPBIND\n        });\n        if (this.sid !== null) {\n            bodyWrap.attrs({sid: this.sid});\n        }\n        if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\n            this._cacheSession();\n        }\n        return bodyWrap;\n    },\n\n    /** PrivateFunction: _reset\n     *  Reset the connection.\n     *\n     *  This function is called by the reset function of the Strophe Connection\n     */\n    _reset: function () {\n        this.rid = Math.floor(Math.random() * 4294967295);\n        this.sid = null;\n        this.errors = 0;\n        if (this._conn._sessionCachingSupported()) {\n            window.sessionStorage.removeItem('strophe-bosh-session');\n        }\n\n        this._conn.nextValidRid(this.rid);\n    },\n\n    /** PrivateFunction: _connect\n     *  _Private_ function that initializes the BOSH connection.\n     *\n     *  Creates and sends the Request that initializes the BOSH connection.\n     */\n    _connect: function (wait, hold, route) {\n        this.wait = wait || this.wait;\n        this.hold = hold || this.hold;\n        this.errors = 0;\n\n        // build the body tag\n        var body = this._buildBody().attrs({\n            to: this._conn.domain,\n            \"xml:lang\": \"en\",\n            wait: this.wait,\n            hold: this.hold,\n            content: \"text/xml; charset=utf-8\",\n            ver: \"1.6\",\n            \"xmpp:version\": \"1.0\",\n            \"xmlns:xmpp\": Strophe.NS.BOSH\n        });\n\n        if(route){\n            body.attrs({\n                route: route\n            });\n        }\n\n        var _connect_cb = this._conn._connect_cb;\n\n        this._requests.push(\n            new Strophe.Request(body.tree(),\n                                this._onRequestStateChange.bind(\n                                    this, _connect_cb.bind(this._conn)),\n                                body.tree().getAttribute(\"rid\")));\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _attach\n     *  Attach to an already created and authenticated BOSH session.\n     *\n     *  This function is provided to allow Strophe to attach to BOSH\n     *  sessions which have been created externally, perhaps by a Web\n     *  application.  This is often used to support auto-login type features\n     *  without putting user credentials into the page.\n     *\n     *  Parameters:\n     *    (String) jid - The full JID that is bound by the session.\n     *    (String) sid - The SID of the BOSH session.\n     *    (String) rid - The current RID of the BOSH session.  This RID\n     *      will be used by the next request.\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    _attach: function (jid, sid, rid, callback, wait, hold, wind) {\n        this._conn.jid = jid;\n        this.sid = sid;\n        this.rid = rid;\n\n        this._conn.connect_callback = callback;\n\n        this._conn.domain = Strophe.getDomainFromJid(this._conn.jid);\n\n        this._conn.authenticated = true;\n        this._conn.connected = true;\n\n        this.wait = wait || this.wait;\n        this.hold = hold || this.hold;\n        this.window = wind || this.window;\n\n        this._conn._changeConnectStatus(Strophe.Status.ATTACHED, null);\n    },\n\n    /** PrivateFunction: _restore\n     *  Attempt to restore a cached BOSH session\n     *\n     *  Parameters:\n     *    (String) jid - The full JID that is bound by the session.\n     *      This parameter is optional but recommended, specifically in cases\n     *      where prebinded BOSH sessions are used where it's important to know\n     *      that the right session is being restored.\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    _restore: function (jid, callback, wait, hold, wind) {\n        var session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\n        if (typeof session !== \"undefined\" &&\n                   session !== null &&\n                   session.rid &&\n                   session.sid &&\n                   session.jid &&\n                   (    typeof jid === \"undefined\" ||\n                        jid === null ||\n                        Strophe.getBareJidFromJid(session.jid) === Strophe.getBareJidFromJid(jid) ||\n                        // If authcid is null, then it's an anonymous login, so\n                        // we compare only the domains:\n                        ((Strophe.getNodeFromJid(jid) === null) && (Strophe.getDomainFromJid(session.jid) === jid))\n                    )\n        ) {\n            this._conn.restored = true;\n            this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\n        } else {\n            throw { name: \"StropheSessionError\", message: \"_restore: no restoreable session.\" };\n        }\n    },\n\n    /** PrivateFunction: _cacheSession\n     *  _Private_ handler for the beforeunload event.\n     *\n     *  This handler is used to process the Bosh-part of the initial request.\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     */\n    _cacheSession: function () {\n        if (this._conn.authenticated) {\n            if (this._conn.jid && this.rid && this.sid) {\n                window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\n                    'jid': this._conn.jid,\n                    'rid': this.rid,\n                    'sid': this.sid\n                }));\n            }\n        } else {\n            window.sessionStorage.removeItem('strophe-bosh-session');\n        }\n    },\n\n    /** PrivateFunction: _connect_cb\n     *  _Private_ handler for initial connection request.\n     *\n     *  This handler is used to process the Bosh-part of the initial request.\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     */\n    _connect_cb: function (bodyWrap) {\n        var typ = bodyWrap.getAttribute(\"type\");\n        var cond, conflict;\n        if (typ !== null && typ === \"terminate\") {\n            // an error occurred\n            cond = bodyWrap.getAttribute(\"condition\");\n            Strophe.error(\"BOSH-Connection failed: \" + cond);\n            conflict = bodyWrap.getElementsByTagName(\"conflict\");\n            if (cond !== null) {\n                if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                    cond = \"conflict\";\n                }\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n            } else {\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"unknown\");\n            }\n            this._conn._doDisconnect(cond);\n            return Strophe.Status.CONNFAIL;\n        }\n\n        // check to make sure we don't overwrite these if _connect_cb is\n        // called multiple times in the case of missing stream:features\n        if (!this.sid) {\n            this.sid = bodyWrap.getAttribute(\"sid\");\n        }\n        var wind = bodyWrap.getAttribute('requests');\n        if (wind) { this.window = parseInt(wind, 10); }\n        var hold = bodyWrap.getAttribute('hold');\n        if (hold) { this.hold = parseInt(hold, 10); }\n        var wait = bodyWrap.getAttribute('wait');\n        if (wait) { this.wait = parseInt(wait, 10); }\n        var inactivity = bodyWrap.getAttribute('inactivity');\n        if (inactivity) { this.inactivity = parseInt(inactivity, 10); }\n    },\n\n    /** PrivateFunction: _disconnect\n     *  _Private_ part of Connection.disconnect for Bosh\n     *\n     *  Parameters:\n     *    (Request) pres - This stanza will be sent before disconnecting.\n     */\n    _disconnect: function (pres) {\n        this._sendTerminate(pres);\n    },\n\n    /** PrivateFunction: _doDisconnect\n     *  _Private_ function to disconnect.\n     *\n     *  Resets the SID and RID.\n     */\n    _doDisconnect: function () {\n        this.sid = null;\n        this.rid = Math.floor(Math.random() * 4294967295);\n        if (this._conn._sessionCachingSupported()) {\n            window.sessionStorage.removeItem('strophe-bosh-session');\n        }\n\n        this._conn.nextValidRid(this.rid);\n    },\n\n    /** PrivateFunction: _emptyQueue\n     * _Private_ function to check if the Request queue is empty.\n     *\n     *  Returns:\n     *    True, if there are no Requests queued, False otherwise.\n     */\n    _emptyQueue: function () {\n        return this._requests.length === 0;\n    },\n\n    /** PrivateFunction: _callProtocolErrorHandlers\n     *  _Private_ function to call error handlers registered for HTTP errors.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The request that is changing readyState.\n     */\n    _callProtocolErrorHandlers: function (req) {\n        var reqStatus = this._getRequestStatus(req),\n            err_callback;\n        err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\n        if (err_callback) {\n            err_callback.call(this, reqStatus);\n        }\n    },\n\n    /** PrivateFunction: _hitError\n     *  _Private_ function to handle the error count.\n     *\n     *  Requests are resent automatically until their error count reaches\n     *  5.  Each time an error is encountered, this function is called to\n     *  increment the count and disconnect if the count is too high.\n     *\n     *  Parameters:\n     *    (Integer) reqStatus - The request status.\n     */\n    _hitError: function (reqStatus) {\n        this.errors++;\n        Strophe.warn(\"request errored, status: \" + reqStatus +\n                     \", number of errors: \" + this.errors);\n        if (this.errors > 4) {\n            this._conn._onDisconnectTimeout();\n        }\n    },\n\n    /** PrivateFunction: _no_auth_received\n     *\n     * Called on stream start/restart when no stream:features\n     * has been received and sends a blank poll request.\n     */\n    _no_auth_received: function (callback) {\n        Strophe.warn(\"Server did not yet offer a supported authentication \"+\n                     \"mechanism. Sending a blank poll request.\");\n        if (callback) {\n            callback = callback.bind(this._conn);\n        } else {\n            callback = this._conn._connect_cb.bind(this._conn);\n        }\n        var body = this._buildBody();\n        this._requests.push(\n            new Strophe.Request(\n                body.tree(),\n                this._onRequestStateChange.bind(this, callback),\n                body.tree().getAttribute(\"rid\")\n            )\n        );\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _onDisconnectTimeout\n     *  _Private_ timeout handler for handling non-graceful disconnection.\n     *\n     *  Cancels all remaining Requests and clears the queue.\n     */\n    _onDisconnectTimeout: function () {\n        this._abortAllRequests();\n    },\n\n    /** PrivateFunction: _abortAllRequests\n     *  _Private_ helper function that makes sure all pending requests are aborted.\n     */\n    _abortAllRequests: function _abortAllRequests() {\n        var req;\n        while (this._requests.length > 0) {\n            req = this._requests.pop();\n            req.abort = true;\n            req.xhr.abort();\n            // jslint complains, but this is fine. setting to empty func\n            // is necessary for IE6\n            req.xhr.onreadystatechange = function () {}; // jshint ignore:line\n        }\n    },\n\n    /** PrivateFunction: _onIdle\n     *  _Private_ handler called by Strophe.Connection._onIdle\n     *\n     *  Sends all queued Requests or polls with empty Request if there are none.\n     */\n    _onIdle: function () {\n        var data = this._conn._data;\n        // if no requests are in progress, poll\n        if (this._conn.authenticated && this._requests.length === 0 &&\n            data.length === 0 && !this._conn.disconnecting) {\n            Strophe.info(\"no requests during idle cycle, sending \" +\n                         \"blank request\");\n            data.push(null);\n        }\n\n        if (this._conn.paused) {\n            return;\n        }\n\n        if (this._requests.length < 2 && data.length > 0) {\n            var body = this._buildBody();\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    if (data[i] === \"restart\") {\n                        body.attrs({\n                            to: this._conn.domain,\n                            \"xml:lang\": \"en\",\n                            \"xmpp:restart\": \"true\",\n                            \"xmlns:xmpp\": Strophe.NS.BOSH\n                        });\n                    } else {\n                        body.cnode(data[i]).up();\n                    }\n                }\n            }\n            delete this._conn._data;\n            this._conn._data = [];\n            this._requests.push(\n                new Strophe.Request(body.tree(),\n                                    this._onRequestStateChange.bind(\n                                        this, this._conn._dataRecv.bind(this._conn)),\n                                    body.tree().getAttribute(\"rid\")));\n            this._throttledRequestHandler();\n        }\n\n        if (this._requests.length > 0) {\n            var time_elapsed = this._requests[0].age();\n            if (this._requests[0].dead !== null) {\n                if (this._requests[0].timeDead() >\n                    Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait)) {\n                    this._throttledRequestHandler();\n                }\n            }\n\n            if (time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait)) {\n                Strophe.warn(\"Request \" +\n                             this._requests[0].id +\n                             \" timed out, over \" + Math.floor(Strophe.TIMEOUT * this.wait) +\n                             \" seconds since last activity\");\n                this._throttledRequestHandler();\n            }\n        }\n    },\n\n    /** PrivateFunction: _getRequestStatus\n     *\n     *  Returns the HTTP status code from a Strophe.Request\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The Strophe.Request instance.\n     *    (Integer) def - The default value that should be returned if no\n     *          status value was found.\n     */\n    _getRequestStatus: function (req, def) {\n        var reqStatus;\n        if (req.xhr.readyState === 4) {\n            try {\n                reqStatus = req.xhr.status;\n            } catch (e) {\n                // ignore errors from undefined status attribute. Works\n                // around a browser bug\n                Strophe.error(\n                    \"Caught an error while retrieving a request's status, \" +\n                    \"reqStatus: \" + reqStatus);\n            }\n        }\n        if (typeof(reqStatus) === \"undefined\") {\n            reqStatus = typeof def === 'number' ? def : 0;\n        }\n        return reqStatus;\n    },\n\n    /** PrivateFunction: _onRequestStateChange\n     *  _Private_ handler for Strophe.Request state changes.\n     *\n     *  This function is called when the XMLHttpRequest readyState changes.\n     *  It contains a lot of error handling logic for the many ways that\n     *  requests can fail, and calls the request callback when requests\n     *  succeed.\n     *\n     *  Parameters:\n     *    (Function) func - The handler for the request.\n     *    (Strophe.Request) req - The request that is changing readyState.\n     */\n    _onRequestStateChange: function (func, req) {\n        Strophe.debug(\"request id \"+req.id+\".\"+req.sends+\n                      \" state changed to \"+req.xhr.readyState);\n        if (req.abort) {\n            req.abort = false;\n            return;\n        }\n        if (req.xhr.readyState !== 4) {\n            // The request is not yet complete\n            return;\n        }\n        var reqStatus = this._getRequestStatus(req);\n        this.lastResponseHeaders = req.xhr.getAllResponseHeaders();\n        if (this.disconnecting && reqStatus >= 400) {\n            this._hitError(reqStatus);\n            this._callProtocolErrorHandlers(req);\n            return;\n        }\n\n        var valid_request = reqStatus > 0 && reqStatus < 500;\n        var too_many_retries = req.sends > this._conn.maxRetries;\n        if (valid_request || too_many_retries) {\n            // remove from internal queue\n            this._removeRequest(req);\n            Strophe.debug(\"request id \"+req.id+\" should now be removed\");\n        }\n\n        if (reqStatus === 200) {\n            // request succeeded\n            var reqIs0 = (this._requests[0] === req);\n            var reqIs1 = (this._requests[1] === req);\n            // if request 1 finished, or request 0 finished and request\n            // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\n            // restart the other - both will be in the first spot, as the\n            // completed request has been removed from the queue already\n            if (reqIs1 ||\n                (reqIs0 && this._requests.length > 0 &&\n                    this._requests[0].age() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait))) {\n                this._restartRequest(0);\n            }\n            this._conn.nextValidRid(Number(req.rid) + 1);\n            Strophe.debug(\"request id \"+req.id+\".\"+req.sends+\" got 200\");\n            func(req); // call handler\n            this.errors = 0;\n        } else if (reqStatus === 0 ||\n                   (reqStatus >= 400 && reqStatus < 600) ||\n                   reqStatus >= 12000) {\n            // request failed\n            Strophe.error(\"request id \"+req.id+\".\"+req.sends+\" error \"+reqStatus+\" happened\");\n            this._hitError(reqStatus);\n            this._callProtocolErrorHandlers(req);\n            if (reqStatus >= 400 && reqStatus < 500) {\n                this._conn._changeConnectStatus(Strophe.Status.DISCONNECTING, null);\n                this._conn._doDisconnect();\n            }\n        } else {\n            Strophe.error(\"request id \"+req.id+\".\"+req.sends+\" error \"+reqStatus+\" happened\");\n        }\n\n        if (!valid_request && !too_many_retries) {\n            this._throttledRequestHandler();\n        } else if (too_many_retries && !this._conn.connected) {\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"giving-up\");\n        }\n    },\n\n    /** PrivateFunction: _processRequest\n     *  _Private_ function to process a request in the queue.\n     *\n     *  This function takes requests off the queue and sends them and\n     *  restarts dead requests.\n     *\n     *  Parameters:\n     *    (Integer) i - The index of the request in the queue.\n     */\n    _processRequest: function (i) {\n        var self = this;\n        var req = this._requests[i];\n        var reqStatus = this._getRequestStatus(req, -1);\n\n        // make sure we limit the number of retries\n        if (req.sends > this._conn.maxRetries) {\n            this._conn._onDisconnectTimeout();\n            return;\n        }\n\n        var time_elapsed = req.age();\n        var primaryTimeout = (!isNaN(time_elapsed) &&\n                              time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait));\n        var secondaryTimeout = (req.dead !== null &&\n                                req.timeDead() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait));\n        var requestCompletedWithServerError = (req.xhr.readyState === 4 &&\n                                               (reqStatus < 1 || reqStatus >= 500));\n        if (primaryTimeout || secondaryTimeout ||\n            requestCompletedWithServerError) {\n            if (secondaryTimeout) {\n                Strophe.error(\"Request \" + this._requests[i].id +\n                              \" timed out (secondary), restarting\");\n            }\n            req.abort = true;\n            req.xhr.abort();\n            // setting to null fails on IE6, so set to empty function\n            req.xhr.onreadystatechange = function () {};\n            this._requests[i] = new Strophe.Request(req.xmlData,\n                                                    req.origFunc,\n                                                    req.rid,\n                                                    req.sends);\n            req = this._requests[i];\n        }\n\n        if (req.xhr.readyState === 0) {\n            Strophe.debug(\"request id \"+req.id+\".\"+req.sends+\" posting\");\n\n            try {\n                var contentType = this._conn.options.contentType || \"text/xml; charset=utf-8\";\n                req.xhr.open(\"POST\", this._conn.service, this._conn.options.sync ? false : true);\n                if (typeof req.xhr.setRequestHeader !== 'undefined') {\n                    // IE9 doesn't have setRequestHeader\n                    req.xhr.setRequestHeader(\"Content-Type\", contentType);\n                }\n                if (this._conn.options.withCredentials) {\n                    req.xhr.withCredentials = true;\n                }\n            } catch (e2) {\n                Strophe.error(\"XHR open failed: \" + e2.toString());\n                if (!this._conn.connected) {\n                    this._conn._changeConnectStatus(\n                            Strophe.Status.CONNFAIL, \"bad-service\");\n                }\n                this._conn.disconnect();\n                return;\n            }\n\n            // Fires the XHR request -- may be invoked immediately\n            // or on a gradually expanding retry window for reconnects\n            var sendFunc = function () {\n                req.date = new Date();\n                if (self._conn.options.customHeaders){\n                    var headers = self._conn.options.customHeaders;\n                    for (var header in headers) {\n                        if (headers.hasOwnProperty(header)) {\n                            req.xhr.setRequestHeader(header, headers[header]);\n                        }\n                    }\n                }\n                req.xhr.send(req.data);\n            };\n\n            // Implement progressive backoff for reconnects --\n            // First retry (send === 1) should also be instantaneous\n            if (req.sends > 1) {\n                // Using a cube of the retry number creates a nicely\n                // expanding retry window\n                var backoff = Math.min(Math.floor(Strophe.TIMEOUT * this.wait),\n                                       Math.pow(req.sends, 3)) * 1000;\n                setTimeout(function() {\n                    // XXX: setTimeout should be called only with function expressions (23974bc1)\n                    sendFunc();\n                }, backoff);\n            } else {\n                sendFunc();\n            }\n\n            req.sends++;\n\n            if (this._conn.xmlOutput !== Strophe.Connection.prototype.xmlOutput) {\n                if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\n                    this._conn.xmlOutput(req.xmlData.childNodes[0]);\n                } else {\n                    this._conn.xmlOutput(req.xmlData);\n                }\n            }\n            if (this._conn.rawOutput !== Strophe.Connection.prototype.rawOutput) {\n                this._conn.rawOutput(req.data);\n            }\n        } else {\n            Strophe.debug(\"_processRequest: \" +\n                          (i === 0 ? \"first\" : \"second\") +\n                          \" request has readyState of \" +\n                          req.xhr.readyState);\n        }\n    },\n\n    /** PrivateFunction: _removeRequest\n     *  _Private_ function to remove a request from the queue.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The request to remove.\n     */\n    _removeRequest: function (req) {\n        Strophe.debug(\"removing request\");\n        var i;\n        for (i = this._requests.length - 1; i >= 0; i--) {\n            if (req === this._requests[i]) {\n                this._requests.splice(i, 1);\n            }\n        }\n        // IE6 fails on setting to null, so set to empty function\n        req.xhr.onreadystatechange = function () {};\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _restartRequest\n     *  _Private_ function to restart a request that is presumed dead.\n     *\n     *  Parameters:\n     *    (Integer) i - The index of the request in the queue.\n     */\n    _restartRequest: function (i) {\n        var req = this._requests[i];\n        if (req.dead === null) {\n            req.dead = new Date();\n        }\n\n        this._processRequest(i);\n    },\n\n    /** PrivateFunction: _reqToData\n     * _Private_ function to get a stanza out of a request.\n     *\n     * Tries to extract a stanza out of a Request Object.\n     * When this fails the current connection will be disconnected.\n     *\n     *  Parameters:\n     *    (Object) req - The Request.\n     *\n     *  Returns:\n     *    The stanza that was passed.\n     */\n    _reqToData: function (req) {\n        try {\n            return req.getResponse();\n        } catch (e) {\n            if (e !== \"parsererror\") { throw e; }\n            this._conn.disconnect(\"strophe-parsererror\");\n        }\n    },\n\n    /** PrivateFunction: _sendTerminate\n     *  _Private_ function to send initial disconnect sequence.\n     *\n     *  This is the first step in a graceful disconnect.  It sends\n     *  the BOSH server a terminate body and includes an unavailable\n     *  presence if authentication has completed.\n     */\n    _sendTerminate: function (pres) {\n        Strophe.info(\"_sendTerminate was called\");\n        var body = this._buildBody().attrs({type: \"terminate\"});\n        if (pres) {\n            body.cnode(pres.tree());\n        }\n        var req = new Strophe.Request(\n            body.tree(),\n            this._onRequestStateChange.bind(\n            this, this._conn._dataRecv.bind(this._conn)),\n            body.tree().getAttribute(\"rid\")\n        );\n        this._requests.push(req);\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _send\n     *  _Private_ part of the Connection.send function for BOSH\n     *\n     * Just triggers the RequestHandler to send the messages that are in the queue\n     */\n    _send: function () {\n        clearTimeout(this._conn._idleTimeout);\n        this._throttledRequestHandler();\n\n        // XXX: setTimeout should be called only with function expressions (23974bc1)\n        this._conn._idleTimeout = setTimeout(function() {\n            this._onIdle();\n        }.bind(this._conn), 100);\n    },\n\n    /** PrivateFunction: _sendRestart\n     *\n     *  Send an xmpp:restart stanza.\n     */\n    _sendRestart: function () {\n        this._throttledRequestHandler();\n        clearTimeout(this._conn._idleTimeout);\n    },\n\n    /** PrivateFunction: _throttledRequestHandler\n     *  _Private_ function to throttle requests to the connection window.\n     *\n     *  This function makes sure we don't send requests so fast that the\n     *  request ids overflow the connection window in the case that one\n     *  request died.\n     */\n    _throttledRequestHandler: function () {\n        if (!this._requests) {\n            Strophe.debug(\"_throttledRequestHandler called with \" +\n                          \"undefined requests\");\n        } else {\n            Strophe.debug(\"_throttledRequestHandler called with \" +\n                          this._requests.length + \" requests\");\n        }\n\n        if (!this._requests || this._requests.length === 0) {\n            return;\n        }\n\n        if (this._requests.length > 0) {\n            this._processRequest(0);\n        }\n\n        if (this._requests.length > 1 &&\n            Math.abs(this._requests[0].rid -\n                     this._requests[1].rid) < this.window) {\n            this._processRequest(1);\n        }\n    }\n};\nreturn Strophe;\n}));\n\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\n/* global define, window, clearTimeout, WebSocket, DOMParser, Strophe, $build */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-websocket',['strophe-core'], function (core) {\n            return factory(\n                core.Strophe,\n                core.$build\n            );\n        });\n    } else if (typeof exports === 'object') {\n        var core = require('./core');\n\n        module.exports = factory(core.Strophe, core.$build);\n    } else {\n        // Browser globals\n        return factory(Strophe, $build);\n    }\n}(this, function (Strophe, $build) {\n\n/** Class: Strophe.WebSocket\n *  _Private_ helper class that handles WebSocket Connections\n *\n *  The Strophe.WebSocket class is used internally by Strophe.Connection\n *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\n */\n\n/** File: websocket.js\n *  A JavaScript library to enable XMPP over Websocket in Strophejs.\n *\n *  This file implements XMPP over WebSockets for Strophejs.\n *  If a Connection is established with a Websocket url (ws://...)\n *  Strophe will use WebSockets.\n *  For more information on XMPP-over-WebSocket see RFC 7395:\n *  http://tools.ietf.org/html/rfc7395\n *\n *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\n */\n\n/** PrivateConstructor: Strophe.Websocket\n *  Create and initialize a Strophe.WebSocket object.\n *  Currently only sets the connection Object.\n *\n *  Parameters:\n *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\n *\n *  Returns:\n *    A new Strophe.WebSocket object.\n */\nStrophe.Websocket = function(connection) {\n    this._conn = connection;\n    this.strip = \"wrapper\";\n\n    var service = connection.service;\n    if (service.indexOf(\"ws:\") !== 0 && service.indexOf(\"wss:\") !== 0) {\n        // If the service is not an absolute URL, assume it is a path and put the absolute\n        // URL together from options, current URL and the path.\n        var new_service = \"\";\n\n        if (connection.options.protocol === \"ws\" && window.location.protocol !== \"https:\") {\n            new_service += \"ws\";\n        } else {\n            new_service += \"wss\";\n        }\n\n        new_service += \"://\" + window.location.host;\n\n        if (service.indexOf(\"/\") !== 0) {\n            new_service += window.location.pathname + service;\n        } else {\n            new_service += service;\n        }\n\n        connection.service = new_service;\n    }\n};\n\nStrophe.Websocket.prototype = {\n    /** PrivateFunction: _buildStream\n     *  _Private_ helper function to generate the <stream> start tag for WebSockets\n     *\n     *  Returns:\n     *    A Strophe.Builder with a <stream> element.\n     */\n    _buildStream: function () {\n        return $build(\"open\", {\n            \"xmlns\": Strophe.NS.FRAMING,\n            \"to\": this._conn.domain,\n            \"version\": '1.0'\n        });\n    },\n\n    /** PrivateFunction: _check_streamerror\n     * _Private_ checks a message for stream:error\n     *\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     *    connectstatus - The ConnectStatus that will be set on error.\n     *  Returns:\n     *     true if there was a streamerror, false otherwise.\n     */\n    _check_streamerror: function (bodyWrap, connectstatus) {\n        var errors;\n        if (bodyWrap.getElementsByTagNameNS) {\n            errors = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"error\");\n        } else {\n            errors = bodyWrap.getElementsByTagName(\"stream:error\");\n        }\n        if (errors.length === 0) {\n            return false;\n        }\n        var error = errors[0];\n\n        var condition = \"\";\n        var text = \"\";\n\n        var ns = \"urn:ietf:params:xml:ns:xmpp-streams\";\n        for (var i = 0; i < error.childNodes.length; i++) {\n            var e = error.childNodes[i];\n            if (e.getAttribute(\"xmlns\") !== ns) {\n                break;\n            } if (e.nodeName === \"text\") {\n                text = e.textContent;\n            } else {\n                condition = e.nodeName;\n            }\n        }\n\n        var errorString = \"WebSocket stream error: \";\n\n        if (condition) {\n            errorString += condition;\n        } else {\n            errorString += \"unknown\";\n        }\n\n        if (text) {\n            errorString += \" - \" + text;\n        }\n\n        Strophe.error(errorString);\n\n        // close the connection on stream_error\n        this._conn._changeConnectStatus(connectstatus, condition);\n        this._conn._doDisconnect();\n        return true;\n    },\n\n    /** PrivateFunction: _reset\n     *  Reset the connection.\n     *\n     *  This function is called by the reset function of the Strophe Connection.\n     *  Is not needed by WebSockets.\n     */\n    _reset: function () {\n        return;\n    },\n\n    /** PrivateFunction: _connect\n     *  _Private_ function called by Strophe.Connection.connect\n     *\n     *  Creates a WebSocket for a connection and assigns Callbacks to it.\n     *  Does nothing if there already is a WebSocket.\n     */\n    _connect: function () {\n        // Ensure that there is no open WebSocket from a previous Connection.\n        this._closeSocket();\n\n        // Create the new WobSocket\n        this.socket = new WebSocket(this._conn.service, \"xmpp\");\n        this.socket.onopen = this._onOpen.bind(this);\n        this.socket.onerror = this._onError.bind(this);\n        this.socket.onclose = this._onClose.bind(this);\n        this.socket.onmessage = this._connect_cb_wrapper.bind(this);\n    },\n\n    /** PrivateFunction: _connect_cb\n     *  _Private_ function called by Strophe.Connection._connect_cb\n     *\n     * checks for stream:error\n     *\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     */\n    _connect_cb: function(bodyWrap) {\n        var error = this._check_streamerror(bodyWrap, Strophe.Status.CONNFAIL);\n        if (error) {\n            return Strophe.Status.CONNFAIL;\n        }\n    },\n\n    /** PrivateFunction: _handleStreamStart\n     * _Private_ function that checks the opening <open /> tag for errors.\n     *\n     * Disconnects if there is an error and returns false, true otherwise.\n     *\n     *  Parameters:\n     *    (Node) message - Stanza containing the <open /> tag.\n     */\n    _handleStreamStart: function(message) {\n        var error = false;\n\n        // Check for errors in the <open /> tag\n        var ns = message.getAttribute(\"xmlns\");\n        if (typeof ns !== \"string\") {\n            error = \"Missing xmlns in <open />\";\n        } else if (ns !== Strophe.NS.FRAMING) {\n            error = \"Wrong xmlns in <open />: \" + ns;\n        }\n\n        var ver = message.getAttribute(\"version\");\n        if (typeof ver !== \"string\") {\n            error = \"Missing version in <open />\";\n        } else if (ver !== \"1.0\") {\n            error = \"Wrong version in <open />: \" + ver;\n        }\n\n        if (error) {\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, error);\n            this._conn._doDisconnect();\n            return false;\n        }\n\n        return true;\n    },\n\n    /** PrivateFunction: _connect_cb_wrapper\n     * _Private_ function that handles the first connection messages.\n     *\n     * On receiving an opening stream tag this callback replaces itself with the real\n     * message handler. On receiving a stream error the connection is terminated.\n     */\n    _connect_cb_wrapper: function(message) {\n        if (message.data.indexOf(\"<open \") === 0 || message.data.indexOf(\"<?xml\") === 0) {\n            // Strip the XML Declaration, if there is one\n            var data = message.data.replace(/^(<\\?.*?\\?>\\s*)*/, \"\");\n            if (data === '') return;\n\n            var streamStart = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n            this._conn.xmlInput(streamStart);\n            this._conn.rawInput(message.data);\n\n            //_handleStreamSteart will check for XML errors and disconnect on error\n            if (this._handleStreamStart(streamStart)) {\n                //_connect_cb will check for stream:error and disconnect on error\n                this._connect_cb(streamStart);\n            }\n        } else if (message.data.indexOf(\"<close \") === 0) { // <close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing />\n            // Parse the raw string to an XML element\n            var parsedMessage = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n            // Report this input to the raw and xml handlers\n            this._conn.xmlInput(parsedMessage);\n            this._conn.rawInput(message.data);\n            var see_uri = parsedMessage.getAttribute(\"see-other-uri\");\n            if (see_uri) {\n                var service = this._conn.service;\n                // Valid scenarios: WSS->WSS, WS->ANY\n                var isSecureRedirect = (service.indexOf(\"wss:\") >= 0 && see_uri.indexOf(\"wss:\") >= 0) || (service.indexOf(\"ws:\") >= 0);\n                if(isSecureRedirect) {\n                    this._conn._changeConnectStatus(\n                        Strophe.Status.REDIRECT,\n                        \"Received see-other-uri, resetting connection\"\n                    );\n                    this._conn.reset();\n                    this._conn.service = see_uri;\n                    this._connect();\n                }\n            } else {\n                this._conn._changeConnectStatus(\n                    Strophe.Status.CONNFAIL,\n                    \"Received closing stream\"\n                );\n                this._conn._doDisconnect();\n            }\n        } else {\n            var string = this._streamWrap(message.data);\n            var elem = new DOMParser().parseFromString(string, \"text/xml\").documentElement;\n            this.socket.onmessage = this._onMessage.bind(this);\n            this._conn._connect_cb(elem, null, message.data);\n        }\n    },\n\n    /** PrivateFunction: _disconnect\n     *  _Private_ function called by Strophe.Connection.disconnect\n     *\n     *  Disconnects and sends a last stanza if one is given\n     *\n     *  Parameters:\n     *    (Request) pres - This stanza will be sent before disconnecting.\n     */\n    _disconnect: function (pres) {\n        if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n            if (pres) {\n                this._conn.send(pres);\n            }\n            var close = $build(\"close\", { \"xmlns\": Strophe.NS.FRAMING });\n            this._conn.xmlOutput(close.tree());\n            var closeString = Strophe.serialize(close);\n            this._conn.rawOutput(closeString);\n            try {\n                this.socket.send(closeString);\n            } catch (e) {\n                Strophe.info(\"Couldn't send <close /> tag.\");\n            }\n        }\n        this._conn._doDisconnect();\n    },\n\n    /** PrivateFunction: _doDisconnect\n     *  _Private_ function to disconnect.\n     *\n     *  Just closes the Socket for WebSockets\n     */\n    _doDisconnect: function () {\n        Strophe.info(\"WebSockets _doDisconnect was called\");\n        this._closeSocket();\n    },\n\n    /** PrivateFunction _streamWrap\n     *  _Private_ helper function to wrap a stanza in a <stream> tag.\n     *  This is used so Strophe can process stanzas from WebSockets like BOSH\n     */\n    _streamWrap: function (stanza) {\n        return \"<wrapper>\" + stanza + '</wrapper>';\n    },\n\n\n    /** PrivateFunction: _closeSocket\n     *  _Private_ function to close the WebSocket.\n     *\n     *  Closes the socket if it is still open and deletes it\n     */\n    _closeSocket: function () {\n        if (this.socket) { try {\n            this.socket.onerror = null;\n            this.socket.close();\n        } catch (e) {} }\n        this.socket = null;\n    },\n\n    /** PrivateFunction: _emptyQueue\n     * _Private_ function to check if the message queue is empty.\n     *\n     *  Returns:\n     *    True, because WebSocket messages are send immediately after queueing.\n     */\n    _emptyQueue: function () {\n        return true;\n    },\n\n    /** PrivateFunction: _onClose\n     * _Private_ function to handle websockets closing.\n     *\n     * Nothing to do here for WebSockets\n     */\n    _onClose: function(e) {\n        if(this._conn.connected && !this._conn.disconnecting) {\n            Strophe.error(\"Websocket closed unexpectedly\");\n            this._conn._doDisconnect();\n        } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\n            // in case the onError callback was not called (Safari 10 does not\n            // call onerror when the initial connection fails) we need to\n            // dispatch a CONNFAIL status update to be consistent with the\n            // behavior on other browsers.\n            Strophe.error(\"Websocket closed unexcectedly\");\n            this._conn._changeConnectStatus(\n                Strophe.Status.CONNFAIL,\n                \"The WebSocket connection could not be established or was disconnected.\"\n            );\n            this._conn._doDisconnect();\n        } else {\n            Strophe.info(\"Websocket closed\");\n        }\n    },\n\n    /** PrivateFunction: _no_auth_received\n     *\n     * Called on stream start/restart when no stream:features\n     * has been received.\n     */\n    _no_auth_received: function (callback) {\n        Strophe.error(\"Server did not offer a supported authentication mechanism\");\n        this._changeConnectStatus(\n            Strophe.Status.CONNFAIL,\n            Strophe.ErrorCondition.NO_AUTH_MECH\n        );\n        if (callback) {\n            callback.call(this._conn);\n        }\n        this._conn._doDisconnect();\n    },\n\n    /** PrivateFunction: _onDisconnectTimeout\n     *  _Private_ timeout handler for handling non-graceful disconnection.\n     *\n     *  This does nothing for WebSockets\n     */\n    _onDisconnectTimeout: function () {},\n\n    /** PrivateFunction: _abortAllRequests\n     *  _Private_ helper function that makes sure all pending requests are aborted.\n     */\n    _abortAllRequests: function () {},\n\n    /** PrivateFunction: _onError\n     * _Private_ function to handle websockets errors.\n     *\n     * Parameters:\n     * (Object) error - The websocket error.\n     */\n    _onError: function(error) {\n        Strophe.error(\"Websocket error \" + error);\n        this._conn._changeConnectStatus(\n            Strophe.Status.CONNFAIL,\n            \"The WebSocket connection could not be established or was disconnected.\"\n        );\n        this._disconnect();\n    },\n\n    /** PrivateFunction: _onIdle\n     *  _Private_ function called by Strophe.Connection._onIdle\n     *\n     *  sends all queued stanzas\n     */\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    this.socket.send(rawStanza);\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n\n    /** PrivateFunction: _onMessage\n     * _Private_ function to handle websockets messages.\n     *\n     * This function parses each of the messages as if they are full documents.\n     * [TODO : We may actually want to use a SAX Push parser].\n     *\n     * Since all XMPP traffic starts with\n     *  <stream:stream version='1.0'\n     *                 xml:lang='en'\n     *                 xmlns='jabber:client'\n     *                 xmlns:stream='http://etherx.jabber.org/streams'\n     *                 id='3697395463'\n     *                 from='SERVER'>\n     *\n     * The first stanza will always fail to be parsed.\n     *\n     * Additionally, the seconds stanza will always be <stream:features> with\n     * the stream NS defined in the previous stanza, so we need to 'force'\n     * the inclusion of the NS in this stanza.\n     *\n     * Parameters:\n     * (string) message - The websocket message.\n     */\n    _onMessage: function(message) {\n        var elem, data;\n        // check for closing stream\n        var close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n        if (message.data === close) {\n            this._conn.rawInput(close);\n            this._conn.xmlInput(message);\n            if (!this._conn.disconnecting) {\n                this._conn._doDisconnect();\n            }\n            return;\n        } else if (message.data.search(\"<open \") === 0) {\n            // This handles stream restarts\n            elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n            if (!this._handleStreamStart(elem)) {\n                return;\n            }\n        } else {\n            data = this._streamWrap(message.data);\n            elem = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n        }\n\n        if (this._check_streamerror(elem, Strophe.Status.ERROR)) {\n            return;\n        }\n\n        //handle unavailable presence stanza before disconnecting\n        if (this._conn.disconnecting &&\n                elem.firstChild.nodeName === \"presence\" &&\n                elem.firstChild.getAttribute(\"type\") === \"unavailable\") {\n            this._conn.xmlInput(elem);\n            this._conn.rawInput(Strophe.serialize(elem));\n            // if we are already disconnecting we will ignore the unavailable stanza and\n            // wait for the </stream:stream> tag before we close the connection\n            return;\n        }\n        this._conn._dataRecv(elem, message.data);\n    },\n\n    /** PrivateFunction: _onOpen\n     * _Private_ function to handle websockets connection setup.\n     *\n     * The opening stream tag is sent here.\n     */\n    _onOpen: function() {\n        Strophe.info(\"Websocket open\");\n        var start = this._buildStream();\n        this._conn.xmlOutput(start.tree());\n\n        var startString = Strophe.serialize(start);\n        this._conn.rawOutput(startString);\n        this.socket.send(startString);\n    },\n\n    /** PrivateFunction: _reqToData\n     * _Private_ function to get a stanza out of a request.\n     *\n     * WebSockets don't use requests, so the passed argument is just returned.\n     *\n     *  Parameters:\n     *    (Object) stanza - The stanza.\n     *\n     *  Returns:\n     *    The stanza that was passed.\n     */\n    _reqToData: function (stanza) {\n        return stanza;\n    },\n\n    /** PrivateFunction: _send\n     *  _Private_ part of the Connection.send function for WebSocket\n     *\n     * Just flushes the messages that are in the queue\n     */\n    _send: function () {\n        this._conn.flush();\n    },\n\n    /** PrivateFunction: _sendRestart\n     *\n     *  Send an xmpp:restart stanza.\n     */\n    _sendRestart: function () {\n        clearTimeout(this._conn._idleTimeout);\n        this._conn._onIdle.bind(this._conn)();\n    }\n};\nreturn Strophe;\n}));\n\n(function(root){\n    if(typeof define === 'function' && define.amd){\n        define('strophe',[\n            \"strophe-core\",\n            \"strophe-bosh\",\n            \"strophe-websocket\"\n        ], function (wrapper) {\n            return wrapper;\n        });\n    } else if (typeof exports === 'object') {\n        var core = require('./core');\n        require('./bosh');\n        require('./websocket');\n        module.exports = core;\n    }\n})(this);\n\n\nrequire([\"strophe-polyfill\"]);\n/* jshint ignore:start */\n    //The modules for your project will be inlined above\n    //this snippet. Ask almond to synchronously require the\n    //module value for 'main' here and return it as the\n    //value to use for the public API for the built file.\n    return require('strophe');\n}));\n/* jshint ignore:end */\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('strophe.js')) :\n\ttypeof define === 'function' && define.amd ? define(['strophe.js'], factory) :\n\t(factory(global.window));\n}(this, (function (strophe_js) { 'use strict';\n\nstrophe_js.Strophe.addConnectionPlugin('disco',\n{\n    _connection: null,\n    _identities : [],\n    _features : [],\n    _items : [],\n    /** Function: init\n     * Plugin init\n     *\n     * Parameters:\n     *   (Strophe.Connection) conn - Strophe connection\n     */\n    init: function(conn)\n    {\n    this._connection = conn;\n        this._identities = [];\n        this._features   = [];\n        this._items      = [];\n        // disco info\n        conn.addHandler(this._onDiscoInfo.bind(this), strophe_js.Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n        // disco items\n        conn.addHandler(this._onDiscoItems.bind(this), strophe_js.Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n    },\n    /** Function: addIdentity\n     * See http://xmpp.org/registrar/disco-categories.html\n     * Parameters:\n     *   (String) category - category of identity (like client, automation, etc ...)\n     *   (String) type - type of identity (like pc, web, bot , etc ...)\n     *   (String) name - name of identity in natural language\n     *   (String) lang - lang of name parameter\n     *\n     * Returns:\n     *   Boolean\n     */\n    addIdentity: function(category, type, name, lang)\n    {\n        for (var i=0; i<this._identities.length; i++)\n        {\n            if (this._identities[i].category == category &&\n                this._identities[i].type == type &&\n                this._identities[i].name == name &&\n                this._identities[i].lang == lang)\n            {\n                return false;\n            }\n        }\n        this._identities.push({category: category, type: type, name: name, lang: lang});\n        return true;\n    },\n    /** Function: addFeature\n     *\n     * Parameters:\n     *   (String) var_name - feature name (like jabber:iq:version)\n     *\n     * Returns:\n     *   boolean\n     */\n    addFeature: function(var_name)\n    {\n        for (var i=0; i<this._features.length; i++)\n        {\n             if (this._features[i] == var_name)\n                 return false;\n        }\n        this._features.push(var_name);\n        return true;\n    },\n    /** Function: removeFeature\n     *\n     * Parameters:\n     *   (String) var_name - feature name (like jabber:iq:version)\n     *\n     * Returns:\n     *   boolean\n     */\n    removeFeature: function(var_name)\n    {\n        for (var i=0; i<this._features.length; i++)\n        {\n             if (this._features[i] === var_name){\n                 this._features.splice(i,1);\n                 return true;\n             }\n        }\n        return false;\n    },\n    /** Function: addItem\n     *\n     * Parameters:\n     *   (String) jid\n     *   (String) name\n     *   (String) node\n     *   (Function) call_back\n     *\n     * Returns:\n     *   boolean\n     */\n    addItem: function(jid, name, node, call_back)\n    {\n        if (node && !call_back)\n            return false;\n        this._items.push({jid: jid, name: name, node: node, call_back: call_back});\n        return true;\n    },\n    /** Function: info\n     * Info query\n     *\n     * Parameters:\n     *   (Function) call_back\n     *   (String) jid\n     *   (String) node\n     */\n    info: function(jid, node, success, error, timeout)\n    {\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_INFO};\n        if (node)\n            attrs.node = node;\n\n        var info = strophe_js.$iq({from:this._connection.jid,\n                         to:jid, type:'get'}).c('query', attrs);\n        this._connection.sendIQ(info, success, error, timeout);\n    },\n    /** Function: items\n     * Items query\n     *\n     * Parameters:\n     *   (Function) call_back\n     *   (String) jid\n     *   (String) node\n     */\n    items: function(jid, node, success, error, timeout)\n    {\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_ITEMS};\n        if (node)\n            attrs.node = node;\n\n        var items = strophe_js.$iq({from:this._connection.jid,\n                         to:jid, type:'get'}).c('query', attrs);\n        this._connection.sendIQ(items, success, error, timeout);\n    },\n\n    /** PrivateFunction: _buildIQResult\n     */\n    _buildIQResult: function(stanza, query_attrs)\n    {\n        var id   =  stanza.getAttribute('id');\n        var from = stanza.getAttribute('from');\n        var iqresult = strophe_js.$iq({type: 'result', id: id});\n\n        if (from !== null) {\n            iqresult.attrs({to: from});\n        }\n\n        return iqresult.c('query', query_attrs);\n    },\n\n    /** PrivateFunction: _onDiscoInfo\n     * Called when receive info request\n     */\n    _onDiscoInfo: function(stanza)\n    {\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_INFO};\n        var i;\n        if (node)\n        {\n            attrs.node = node;\n        }\n        var iqresult = this._buildIQResult(stanza, attrs);\n        for (i=0; i<this._identities.length; i++)\n        {\n            attrs = {category: this._identities[i].category,\n                         type    : this._identities[i].type};\n            if (this._identities[i].name)\n                attrs.name = this._identities[i].name;\n            if (this._identities[i].lang)\n                attrs['xml:lang'] = this._identities[i].lang;\n            iqresult.c('identity', attrs).up();\n        }\n        for (i=0; i<this._features.length; i++)\n        {\n            iqresult.c('feature', {'var':this._features[i]}).up();\n        }\n        this._connection.send(iqresult.tree());\n        return true;\n    },\n    /** PrivateFunction: _onDiscoItems\n     * Called when receive items request\n     */\n    _onDiscoItems: function(stanza)\n    {\n        var query_attrs = {xmlns: strophe_js.Strophe.NS.DISCO_ITEMS};\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\n        var items, i;\n        if (node)\n        {\n            query_attrs.node = node;\n            items = [];\n            for (i = 0; i < this._items.length; i++)\n            {\n                if (this._items[i].node == node)\n                {\n                    items = this._items[i].call_back(stanza);\n                    break;\n                }\n            }\n        }\n        else\n        {\n            items = this._items;\n        }\n        var iqresult = this._buildIQResult(stanza, query_attrs);\n        for (i = 0; i < items.length; i++)\n        {\n            var attrs = {jid:  items[i].jid};\n            if (items[i].name)\n                attrs.name = items[i].name;\n            if (items[i].node)\n                attrs.node = items[i].node;\n            iqresult.c('item', attrs).up();\n        }\n        this._connection.send(iqresult.tree());\n        return true;\n    }\n});\n\n})));\n//# sourceMappingURL=strophe.disco.js.map\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar adapterFactory = require('./adapter_factory.js');\nmodule.exports = adapterFactory({window: global.window});\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar utils = require('./utils');\n// Shimming starts here.\nmodule.exports = function(dependencies, opts) {\n  var window = dependencies && dependencies.window;\n\n  var options = {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true,\n  };\n\n  for (var key in opts) {\n    if (hasOwnProperty.call(opts, key)) {\n      options[key] = opts[key];\n    }\n  }\n\n  // Utils.\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window);\n\n  // Export to the adapter global object visible in the browser.\n  var adapter = {\n    browserDetails: browserDetails,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Uncomment the line below if you want logging to occur, including logging\n  // for the switch statement below. Can also be turned on in the browser via\n  // adapter.disableLog(false), but then logging from the switch statement below\n  // will not appear.\n  // require('./utils').disableLog(false);\n\n  // Browser shims.\n  var chromeShim = require('./chrome/chrome_shim') || null;\n  var edgeShim = require('./edge/edge_shim') || null;\n  var firefoxShim = require('./firefox/firefox_shim') || null;\n  var safariShim = require('./safari/safari_shim') || null;\n  var commonShim = require('./common_shim') || null;\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimSourceObject(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n      commonShim.shimCreateObjectURL(window);\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimSourceObject(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n      commonShim.shimCreateObjectURL(window);\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n      safariShim.shimCreateOfferLegacy(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n};\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\nvar chromeShim = {\n  shimMediaStream: function(window) {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n  },\n\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n          }\n          this.addEventListener('track', this._ontrack = f);\n        }\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!pc._ontrackpoly) {\n          pc._ontrackpoly = function(e) {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', function(te) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === te.track.id;\n                });\n              } else {\n                receiver = {track: te.track};\n              }\n\n              var event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(function(track) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === track.id;\n                });\n              } else {\n                receiver = {track: track};\n              }\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n          };\n          pc.addEventListener('addstream', pc._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    }\n  },\n\n  shimGetSendersWithDtmf: function(window) {\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        !('getSenders' in window.RTCPeerConnection.prototype) &&\n        'createDTMFSender' in window.RTCPeerConnection.prototype) {\n      var shimSenderWithDtmf = function(pc, track) {\n        return {\n          track: track,\n          get dtmf() {\n            if (this._dtmf === undefined) {\n              if (track.kind === 'audio') {\n                this._dtmf = pc.createDTMFSender(track);\n              } else {\n                this._dtmf = null;\n              }\n            }\n            return this._dtmf;\n          },\n          _pc: pc\n        };\n      };\n\n      // augment addTrack when getSenders is not available.\n      if (!window.RTCPeerConnection.prototype.getSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          this._senders = this._senders || [];\n          return this._senders.slice(); // return a copy of the internal state.\n        };\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n        window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n          var pc = this;\n          var sender = origAddTrack.apply(pc, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(pc, track);\n            pc._senders.push(sender);\n          }\n          return sender;\n        };\n\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n        window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n          var pc = this;\n          origRemoveTrack.apply(pc, arguments);\n          var idx = pc._senders.indexOf(sender);\n          if (idx !== -1) {\n            pc._senders.splice(idx, 1);\n          }\n        };\n      }\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origAddStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function(track) {\n          pc._senders.push(shimSenderWithDtmf(pc, track));\n        });\n      };\n\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origRemoveStream.apply(pc, [stream]);\n\n        stream.getTracks().forEach(function(track) {\n          var sender = pc._senders.find(function(s) {\n            return s.track === track;\n          });\n          if (sender) {\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\n          }\n        });\n      };\n    } else if (typeof window === 'object' && window.RTCPeerConnection &&\n               'getSenders' in window.RTCPeerConnection.prototype &&\n               'createDTMFSender' in window.RTCPeerConnection.prototype &&\n               window.RTCRtpSender &&\n               !('dtmf' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = this._pc.createDTMFSender(this.track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function(window) {\n    var URL = window && window.URL;\n\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this._srcObject;\n          },\n          set: function(stream) {\n            var self = this;\n            // Use _srcObject as a private property for this shim\n            this._srcObject = stream;\n            if (this.src) {\n              URL.revokeObjectURL(this.src);\n            }\n\n            if (!stream) {\n              this.src = '';\n              return undefined;\n            }\n            this.src = URL.createObjectURL(stream);\n            // We need to recreate the blob url when a track is added or\n            // removed. Doing it manually since we want to avoid a recursion.\n            stream.addEventListener('addtrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n            stream.addEventListener('removetrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n          }\n        });\n      }\n    }\n  },\n\n  shimAddTrackRemoveTrack: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n    // shim addTrack and removeTrack.\n    if (window.RTCPeerConnection.prototype.addTrack &&\n        browserDetails.version >= 63) {\n      return;\n    }\n\n    // also shim pc.getLocalStreams when addTrack is shimmed\n    // to return the original streams.\n    var origGetLocalStreams = window.RTCPeerConnection.prototype\n        .getLocalStreams;\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var self = this;\n      var nativeStreams = origGetLocalStreams.apply(this);\n      self._reverseStreams = self._reverseStreams || {};\n      return nativeStreams.map(function(stream) {\n        return self._reverseStreams[stream.id];\n      });\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      // Add identity mapping for consistency with addTrack.\n      // Unless this is being used with a stream from addTrack.\n      if (!pc._reverseStreams[stream.id]) {\n        var newStream = new window.MediaStream(stream.getTracks());\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        stream = newStream;\n      }\n      origAddStream.apply(pc, [stream]);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\n      delete pc._reverseStreams[(pc._streams[stream.id] ?\n          pc._streams[stream.id].id : stream.id)];\n      delete pc._streams[stream.id];\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      var streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(function(t) {\n            return t === track;\n          })) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      var alreadyExists = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n      var oldStream = pc._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(function() {\n          pc.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        var newStream = new window.MediaStream([track]);\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        pc.addStream(newStream);\n      }\n      return pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n    };\n\n    // replace the internal stream id with the external one and\n    // vice versa.\n    function replaceInternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n            externalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    function replaceExternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n            internalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    ['createOffer', 'createAnswer'].forEach(function(method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      window.RTCPeerConnection.prototype[method] = function() {\n        var pc = this;\n        var args = arguments;\n        var isLegacyCall = arguments.length &&\n            typeof arguments[0] === 'function';\n        if (isLegacyCall) {\n          return nativeMethod.apply(pc, [\n            function(description) {\n              var desc = replaceInternalStreamId(pc, description);\n              args[0].apply(null, [desc]);\n            },\n            function(err) {\n              if (args[1]) {\n                args[1].apply(null, err);\n              }\n            }, arguments[2]\n          ]);\n        }\n        return nativeMethod.apply(pc, arguments)\n        .then(function(description) {\n          return replaceInternalStreamId(pc, description);\n        });\n      };\n    });\n\n    var origSetLocalDescription =\n        window.RTCPeerConnection.prototype.setLocalDescription;\n    window.RTCPeerConnection.prototype.setLocalDescription = function() {\n      var pc = this;\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(pc, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(pc, arguments[0]);\n      return origSetLocalDescription.apply(pc, arguments);\n    };\n\n    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n    var origLocalDescription = Object.getOwnPropertyDescriptor(\n        window.RTCPeerConnection.prototype, 'localDescription');\n    Object.defineProperty(window.RTCPeerConnection.prototype,\n        'localDescription', {\n          get: function() {\n            var pc = this;\n            var description = origLocalDescription.get.apply(this);\n            if (description.type === '') {\n              return description;\n            }\n            return replaceInternalStreamId(pc, description);\n          }\n        });\n\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      var isLocal = sender._pc === pc;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      pc._streams = pc._streams || {};\n      var stream;\n      Object.keys(pc._streams).forEach(function(streamid) {\n        var hasTrack = pc._streams[streamid].getTracks().find(function(track) {\n          return sender.track === track;\n        });\n        if (hasTrack) {\n          stream = pc._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          pc.removeStream(pc._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        pc.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\n        logging('PeerConnection');\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.webkitRTCPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      if (window.webkitRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.webkitRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n    } else {\n      // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n      var OrigPeerConnection = window.RTCPeerConnection;\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (pcConfig && pcConfig.iceServers) {\n          var newIceServers = [];\n          for (var i = 0; i < pcConfig.iceServers.length; i++) {\n            var server = pcConfig.iceServers[i];\n            if (!server.hasOwnProperty('urls') &&\n                server.hasOwnProperty('url')) {\n              utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n              server = JSON.parse(JSON.stringify(server));\n              server.urls = server.url;\n              newIceServers.push(server);\n            } else {\n              newIceServers.push(pcConfig.iceServers[i]);\n            }\n          }\n          pcConfig.iceServers = newIceServers;\n        }\n        return new OrigPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(selector,\n        successCallback, errorCallback) {\n      var self = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats.apply(this, arguments);\n      }\n\n      // When spec-style getStats is supported, return those when called with\n      // either no arguments or the selector argument is null.\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\n          typeof arguments[0] !== 'function')) {\n        return origGetStats.apply(this, []);\n      }\n\n      var fixChromeStats_ = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: {\n              localcandidate: 'local-candidate',\n              remotecandidate: 'remote-candidate'\n            }[report.type] || report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      // shim getStats with maplike support\n      var makeMapStats = function(stats) {\n        return new Map(Object.keys(stats).map(function(key) {\n          return [key, stats[key]];\n        }));\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper_ = function(response) {\n          args[1](makeMapStats(fixChromeStats_(response)));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper_,\n          arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        origGetStats.apply(self, [\n          function(response) {\n            resolve(makeMapStats(fixChromeStats_(response)));\n          }, reject]);\n      }).then(successCallback, errorCallback);\n    };\n\n    // add promise support -- natively available in Chrome 51\n    if (browserDetails.version < 51) {\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = window.RTCPeerConnection.prototype[method];\n            window.RTCPeerConnection.prototype[method] = function() {\n              var args = arguments;\n              var self = this;\n              var promise = new Promise(function(resolve, reject) {\n                nativeMethod.apply(self, [args[0], resolve, reject]);\n              });\n              if (args.length < 2) {\n                return promise;\n              }\n              return promise.then(function() {\n                args[1].apply(null, []);\n              },\n              function(err) {\n                if (args.length >= 3) {\n                  args[2].apply(null, [err]);\n                }\n              });\n            };\n          });\n    }\n\n    // promise support for createOffer and createAnswer. Available (without\n    // bugs) since M52: crbug/619289\n    if (browserDetails.version < 52) {\n      ['createOffer', 'createAnswer'].forEach(function(method) {\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          var self = this;\n          if (arguments.length < 1 || (arguments.length === 1 &&\n              typeof arguments[0] === 'object')) {\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\n            return new Promise(function(resolve, reject) {\n              nativeMethod.apply(self, [resolve, reject, opts]);\n            });\n          }\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n    }\n\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n};\n\n\n// Expose public methods.\nmodule.exports = {\n  shimMediaStream: chromeShim.shimMediaStream,\n  shimOnTrack: chromeShim.shimOnTrack,\n  shimAddTrackRemoveTrack: chromeShim.shimAddTrackRemoveTrack,\n  shimGetSendersWithDtmf: chromeShim.shimGetSendersWithDtmf,\n  shimSourceObject: chromeShim.shimSourceObject,\n  shimPeerConnection: chromeShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n\n  var constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      var remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      var getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(function(devices) {\n            devices = devices.filter(function(d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function(d) {\n              return matches.some(function(match) {\n                return d.label.toLowerCase().indexOf(match) !== -1;\n              });\n            });\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        InvalidStateError: 'NotReadableError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotReadableError',\n        MediaDeviceKillSwitchOn: 'NotReadableError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraintName,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function(c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_;\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  };\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      enumerateDevices: function() {\n        return new Promise(function(resolve) {\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\n          return window.MediaStreamTrack.getSources(function(devices) {\n            resolve(devices.map(function(device) {\n              return {label: device.label,\n                kind: kinds[device.kind],\n                deviceId: device.id,\n                groupId: ''};\n            }));\n          });\n        });\n      },\n      getSupportedConstraints: function() {\n        return {\n          deviceId: true, echoCancellation: true, facingMode: true,\n          frameRate: true, height: true, width: true\n        };\n      }\n    };\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return getUserMediaPromise_(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, function(c) {\n        return origGetUserMedia(c).then(function(stream) {\n          if (c.audio && !stream.getAudioTracks().length ||\n              c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function(track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function(e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      logging('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      logging('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n};\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nvar utils = require('./utils');\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object.\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    var wrappedCallback = function(e) {\n      cb(wrapper(e));\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    var unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    }\n  });\n}\n\nmodule.exports = {\n  shimRTCIceCandidate: function(window) {\n    // foundation is arbitrarily chosen as an indicator for full support for\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n    if (window.RTCIceCandidate && 'foundation' in\n        window.RTCIceCandidate.prototype) {\n      return;\n    }\n\n    var NativeRTCIceCandidate = window.RTCIceCandidate;\n    window.RTCIceCandidate = function(args) {\n      // Remove the a= which shouldn't be part of the candidate string.\n      if (typeof args === 'object' && args.candidate &&\n          args.candidate.indexOf('a=') === 0) {\n        args = JSON.parse(JSON.stringify(args));\n        args.candidate = args.candidate.substr(2);\n      }\n\n      // Augment the native candidate with the parsed fields.\n      var nativeCandidate = new NativeRTCIceCandidate(args);\n      var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      var augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    };\n\n    // Hook up the augmented candidate in onicecandidate and\n    // addEventListener('icecandidate', ...)\n    wrapPeerConnectionEvent(window, 'icecandidate', function(e) {\n      if (e.candidate) {\n        Object.defineProperty(e, 'candidate', {\n          value: new window.RTCIceCandidate(e.candidate),\n          writable: 'false'\n        });\n      }\n      return e;\n    });\n  },\n\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\n\n  shimCreateObjectURL: function(window) {\n    var URL = window && window.URL;\n\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\n          'srcObject' in window.HTMLMediaElement.prototype &&\n        URL.createObjectURL && URL.revokeObjectURL)) {\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\n      return undefined;\n    }\n\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\n    var streams = new Map(), newId = 0;\n\n    URL.createObjectURL = function(stream) {\n      if ('getTracks' in stream) {\n        var url = 'polyblob:' + (++newId);\n        streams.set(url, stream);\n        utils.deprecated('URL.createObjectURL(stream)',\n            'elem.srcObject = stream');\n        return url;\n      }\n      return nativeCreateObjectURL(stream);\n    };\n    URL.revokeObjectURL = function(url) {\n      nativeRevokeObjectURL(url);\n      streams.delete(url);\n    };\n\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\n                                              'src');\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\n      get: function() {\n        return dsc.get.apply(this);\n      },\n      set: function(url) {\n        this.srcObject = streams.get(url) || null;\n        return dsc.set.apply(this, [url]);\n      }\n    });\n\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\n    window.HTMLMediaElement.prototype.setAttribute = function() {\n      if (arguments.length === 2 &&\n          ('' + arguments[0]).toLowerCase() === 'src') {\n        this.srcObject = streams.get(arguments[1]) || null;\n      }\n      return nativeSetAttribute.apply(this, arguments);\n    };\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar shimRTCPeerConnection = require('rtcpeerconnection-shim');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (window.RTCIceGatherer) {\n      // ORTC defines an RTCIceCandidate object but no constructor.\n      // Not implemented in Edge.\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      // ORTC does not have a session description object but\n      // other browsers (i.e. Chrome) that will support both PC and ORTC\n      // in the future might have this defined already.\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n      // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed. Workaround for a bug in\n      // addStream, see below. No longer required in 15025+\n      if (browserDetails.version < 15025) {\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\n            window.MediaStreamTrack.prototype, 'enabled');\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n          set: function(value) {\n            origMSTEnabled.set.call(this, value);\n            var ev = new Event('enabled');\n            ev.enabled = value;\n            this.dispatchEvent(ev);\n          }\n        });\n      }\n    }\n\n    // ORTC defines the DTMF sender a bit different.\n    // https://github.com/w3c/ortc/issues/714\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = new window.RTCDtmfSender(this);\n            } else if (this.track.kind === 'video') {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n\n    window.RTCPeerConnection =\n        shimRTCPeerConnection(window, browserDetails.version);\n  },\n  shimReplaceTrack: function(window) {\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n    if (window.RTCRtpSender &&\n        !('replaceTrack' in window.RTCRtpSender.prototype)) {\n      window.RTCRtpSender.prototype.replaceTrack =\n          window.RTCRtpSender.prototype.setTrack;\n    }\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var navigator = window && window.navigator;\n\n  var shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(function(e) {\n      return Promise.reject(shimError_(e));\n    });\n  };\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n\nvar firefoxShim = {\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.transceiver = {receiver: event.receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        }\n      });\n    }\n    if (typeof window === 'object' && window.RTCTrackEvent &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        !('transceiver' in window.RTCTrackEvent.prototype)) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function(window) {\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this.mozSrcObject;\n          },\n          set: function(stream) {\n            this.mozSrcObject = stream;\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n        window.mozRTCPeerConnection)) {\n      return; // probably media.peerconnection.enabled=false in about:config\n    }\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (browserDetails.version < 38) {\n          // .urls is not supported in FF < 38.\n          // create RTCIceServers with a single url.\n          if (pcConfig && pcConfig.iceServers) {\n            var newIceServers = [];\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n              var server = pcConfig.iceServers[i];\n              if (server.hasOwnProperty('urls')) {\n                for (var j = 0; j < server.urls.length; j++) {\n                  var newServer = {\n                    url: server.urls[j]\n                  };\n                  if (server.urls[j].indexOf('turn') === 0) {\n                    newServer.username = server.username;\n                    newServer.credential = server.credential;\n                  }\n                  newIceServers.push(newServer);\n                }\n              } else {\n                newIceServers.push(pcConfig.iceServers[i]);\n              }\n            }\n            pcConfig.iceServers = newIceServers;\n          }\n        }\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.mozRTCPeerConnection.prototype;\n\n      // wrap static methods. Currently just generateCertificate.\n      if (window.mozRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.mozRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\n    }\n\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function(stats) {\n      var map = new Map();\n      Object.keys(stats).forEach(function(key) {\n        map.set(key, stats[key]);\n        map[key] = stats[key];\n      });\n      return map;\n    };\n\n    var modernStatsTypes = {\n      inboundrtp: 'inbound-rtp',\n      outboundrtp: 'outbound-rtp',\n      candidatepair: 'candidate-pair',\n      localcandidate: 'local-candidate',\n      remotecandidate: 'remote-candidate'\n    };\n\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(\n      selector,\n      onSucc,\n      onErr\n    ) {\n      return nativeGetStats.apply(this, [selector || null])\n        .then(function(stats) {\n          if (browserDetails.version < 48) {\n            stats = makeMapStats(stats);\n          }\n          if (browserDetails.version < 53 && !onSucc) {\n            // Shim only promise getStats with spec-hyphens in type names\n            // Leave callback version alone; misc old uses of forEach before Map\n            try {\n              stats.forEach(function(stat) {\n                stat.type = modernStatsTypes[stat.type] || stat.type;\n              });\n            } catch (e) {\n              if (e.name !== 'TypeError') {\n                throw e;\n              }\n              // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n              stats.forEach(function(stat, i) {\n                stats.set(i, Object.assign({}, stat, {\n                  type: modernStatsTypes[stat.type] || stat.type\n                }));\n              });\n            }\n          }\n          return stats;\n        })\n        .then(onSucc, onErr);\n    };\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimOnTrack: firefoxShim.shimOnTrack,\n  shimSourceObject: firefoxShim.shimSourceObject,\n  shimPeerConnection: firefoxShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        InternalError: 'NotReadableError',\n        NotSupportedError: 'TypeError',\n        PermissionDeniedError: 'NotAllowedError',\n        SecurityError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: {\n        'The operation is insecure.': 'The request is not allowed by the ' +\n        'user agent or the platform in the current context.'\n      }[e.message] || e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  // getUserMedia constraints shim.\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    var constraintsToFF37_ = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r. min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (browserDetails.version < 38) {\n      logging('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37_(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37_(constraints.video);\n      }\n      logging('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\n      onError(shimError_(e));\n    });\n  };\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      getUserMedia_(constraints, resolve, reject);\n    });\n  };\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n        return new Promise(function(resolve) {\n          var infos = [\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n          ];\n          resolve(infos);\n        });\n      };\n\n  if (browserDetails.version < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n  if (browserDetails.version < 49) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      return origGetUserMedia(c).then(function(stream) {\n        // Work around https://bugzil.la/802326\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(function(track) {\n            track.stop();\n          });\n          throw new DOMException('The object can not be found here.',\n                                 'NotFoundError');\n        }\n        return stream;\n      }, function(e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  }\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    if (browserDetails.version < 44) {\n      return getUserMedia_(constraints, onSuccess, onError);\n    }\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nvar utils = require('../utils');\n\nvar safariShim = {\n  // TODO: DrAlex, should be here, double check against LayoutTests\n\n  // TODO: once the back-end for the mac port is done, add.\n  // TODO: check for webkitGTK+\n  // shimPeerConnection: function() { },\n\n  shimLocalStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getLocalStreams = function() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n    }\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getStreamById = function(id) {\n        var result = null;\n        if (this._localStreams) {\n          this._localStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        if (this._remoteStreams) {\n          this._remoteStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        return result;\n      };\n    }\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        if (this._localStreams.indexOf(stream) === -1) {\n          this._localStreams.push(stream);\n        }\n        var self = this;\n        stream.getTracks().forEach(function(track) {\n          _addTrack.call(self, track, stream);\n        });\n      };\n\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (this._localStreams.indexOf(stream) === -1) {\n            this._localStreams.push(stream);\n          }\n        }\n        _addTrack.call(this, track, stream);\n      };\n    }\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        var index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        var self = this;\n        var tracks = stream.getTracks();\n        this.getSenders().forEach(function(sender) {\n          if (tracks.indexOf(sender.track) !== -1) {\n            self.removeTrack(sender);\n          }\n        });\n      };\n    }\n  },\n  shimRemoteStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n    }\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n        get: function() {\n          return this._onaddstream;\n        },\n        set: function(f) {\n          if (this._onaddstream) {\n            this.removeEventListener('addstream', this._onaddstream);\n            this.removeEventListener('track', this._onaddstreampoly);\n          }\n          this.addEventListener('addstream', this._onaddstream = f);\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            var stream = e.streams[0];\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            var event = new Event('addstream');\n            event.stream = e.streams[0];\n            this.dispatchEvent(event);\n          }.bind(this));\n        }\n      });\n    }\n  },\n  shimCallbacksAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    var prototype = window.RTCPeerConnection.prototype;\n    var createOffer = prototype.createOffer;\n    var createAnswer = prototype.createAnswer;\n    var setLocalDescription = prototype.setLocalDescription;\n    var setRemoteDescription = prototype.setRemoteDescription;\n    var addIceCandidate = prototype.addIceCandidate;\n\n    prototype.createOffer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.createAnswer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    var withCallback = function(description, successCallback, failureCallback) {\n      var promise = setLocalDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setLocalDescription = withCallback;\n\n    withCallback = function(description, successCallback, failureCallback) {\n      var promise = setRemoteDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setRemoteDescription = withCallback;\n\n    withCallback = function(candidate, successCallback, failureCallback) {\n      var promise = addIceCandidate.apply(this, [candidate]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.addIceCandidate = withCallback;\n  },\n  shimGetUserMedia: function(window) {\n    var navigator = window && window.navigator;\n\n    if (!navigator.getUserMedia) {\n      if (navigator.webkitGetUserMedia) {\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n      } else if (navigator.mediaDevices &&\n          navigator.mediaDevices.getUserMedia) {\n        navigator.getUserMedia = function(constraints, cb, errcb) {\n          navigator.mediaDevices.getUserMedia(constraints)\n          .then(cb, errcb);\n        }.bind(navigator);\n      }\n    }\n  },\n  shimRTCIceServerUrls: function(window) {\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n    var OrigPeerConnection = window.RTCPeerConnection;\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n    // wrap static methods. Currently just generateCertificate.\n    if ('generateCertificate' in window.RTCPeerConnection) {\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n  },\n  shimTrackEventTransceiver: function(window) {\n    // Add event.transceiver member over deprecated event.receiver\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n        // defined for some reason even when window.RTCTransceiver is not.\n        !window.RTCTransceiver) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimCreateOfferLegacy: function(window) {\n    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n    window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\n      var pc = this;\n      if (offerOptions) {\n        var audioTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'audio';\n        });\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            audioTransceiver.setDirection('sendonly');\n          } else if (audioTransceiver.direction === 'recvonly') {\n            audioTransceiver.setDirection('inactive');\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          pc.addTransceiver('audio');\n        }\n\n        var videoTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'video';\n        });\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            videoTransceiver.setDirection('sendonly');\n          } else if (videoTransceiver.direction === 'recvonly') {\n            videoTransceiver.setDirection('inactive');\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          pc.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(pc, arguments);\n    };\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimCallbacksAPI: safariShim.shimCallbacksAPI,\n  shimLocalStreamsAPI: safariShim.shimLocalStreamsAPI,\n  shimRemoteStreamsAPI: safariShim.shimRemoteStreamsAPI,\n  shimGetUserMedia: safariShim.shimGetUserMedia,\n  shimRTCIceServerUrls: safariShim.shimRTCIceServerUrls,\n  shimTrackEventTransceiver: safariShim.shimTrackEventTransceiver,\n  shimCreateOfferLegacy: safariShim.shimCreateOfferLegacy\n  // TODO\n  // shimPeerConnection: safariShim.shimPeerConnection\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n\n// Utility methods.\nvar utils = {\n  disableLog: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    logDisabled_ = bool;\n    return (bool) ? 'adapter.js logging disabled' :\n        'adapter.js logging enabled';\n  },\n\n  /**\n   * Disable or enable deprecation warnings\n   * @param {!boolean} bool set to true to disable warnings.\n   */\n  disableWarnings: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n  },\n\n  log: function() {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\n   */\n  deprecated: function(oldMethod, newMethod) {\n    if (!deprecationWarnings_) {\n      return;\n    }\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n        ' instead.');\n  },\n\n  /**\n   * Extract browser version out of the provided user agent string.\n   *\n   * @param {!string} uastring userAgent string.\n   * @param {!string} expr Regular expression used as match criteria.\n   * @param {!number} pos position in the version string to be returned.\n   * @return {!number} browser version.\n   */\n  extractVersion: function(uastring, expr, pos) {\n    var match = uastring.match(expr);\n    return match && match.length >= pos && parseInt(match[pos], 10);\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function(window) {\n    var navigator = window && window.navigator;\n\n    // Returned result object.\n    var result = {};\n    result.browser = null;\n    result.version = null;\n\n    // Fail early if it's not a browser\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    // Firefox.\n    if (navigator.mozGetUserMedia) {\n      result.browser = 'firefox';\n      result.version = this.extractVersion(navigator.userAgent,\n          /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\n      if (window.webkitRTCPeerConnection) {\n        result.browser = 'chrome';\n        result.version = this.extractVersion(navigator.userAgent,\n          /Chrom(e|ium)\\/(\\d+)\\./, 2);\n      } else { // Safari (in an unpublished version) or unknown webkit-based.\n        if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\n          result.browser = 'safari';\n          result.version = this.extractVersion(navigator.userAgent,\n            /AppleWebKit\\/(\\d+)\\./, 1);\n        } else { // unknown webkit-based browser.\n          result.browser = 'Unsupported webkit-based browser ' +\n              'with GUM support but no WebRTC support.';\n          return result;\n        }\n      }\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n      result.browser = 'edge';\n      result.version = this.extractVersion(navigator.userAgent,\n          /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n        // Safari, with webkitGetUserMedia removed.\n      result.browser = 'safari';\n      result.version = this.extractVersion(navigator.userAgent,\n          /AppleWebKit\\/(\\d+)\\./, 1);\n    } else { // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  },\n\n};\n\n// Export.\nmodule.exports = {\n  log: utils.log,\n  deprecated: utils.deprecated,\n  disableLog: utils.disableLog,\n  disableWarnings: utils.disableWarnings,\n  extractVersion: utils.extractVersion,\n  shimCreateObjectURL: utils.shimCreateObjectURL,\n  detectBrowser: utils.detectBrowser.bind(utils)\n};\n","/**\n * The possible camera facing modes. For now support only 'user' and\n * 'environment' because 'left' and 'right' are not used anywhere in our\n * projects at the time of this writing. For more information please refer to\n * https://w3c.github.io/mediacapture-main/getusermedia.html\n * #def-constraint-facingMode.\n *\n * @enum {string}\n */\nconst CameraFacingMode = {\n    /**\n     * The mode which specifies the environment-facing camera.\n     */\n    ENVIRONMENT: 'environment',\n\n    /**\n     * The mode which specifies the user-facing camera.\n     */\n    USER: 'user'\n};\n\nmodule.exports = CameraFacingMode;\n","/**\n * The audio type.\n */\nexport const AUDIO = 'audio';\n\n/**\n * The video type.\n */\nexport const VIDEO = 'video';\n","const RTCEvents = {\n    /**\n     * Indicates error while create answer call.\n     */\n    CREATE_ANSWER_FAILED: 'rtc.create_answer_failed',\n\n    /**\n     * Indicates error while create offer call.\n     */\n    CREATE_OFFER_FAILED: 'rtc.create_offer_failed',\n    DATA_CHANNEL_OPEN: 'rtc.data_channel_open',\n    ENDPOINT_CONN_STATUS_CHANGED: 'rtc.endpoint_conn_status_changed',\n    DOMINANT_SPEAKER_CHANGED: 'rtc.dominant_speaker_changed',\n    LASTN_ENDPOINT_CHANGED: 'rtc.lastn_endpoint_changed',\n\n    /**\n     * Event emitted when the user granted a permission for the camera / mic.\n     * Used to keep track of the granted permissions on browsers which don't\n     * support the Permissions API.\n     */\n    GRANTED_PERMISSIONS: 'rtc.granted_permissions',\n\n    IS_SELECTED_CHANGED: 'rtc.is_selected_change',\n\n    /**\n     * Event emitted when {@link RTC.setLastN} method is called to update with\n     * the new value set.\n     * The first argument is the value passed to {@link RTC.setLastN}.\n     */\n    LASTN_VALUE_CHANGED: 'rtc.lastn_value_changed',\n\n    /**\n     * Event emitted when ssrc for a local track is extracted and stored\n     * in {@link TraceablePeerConnection}.\n     * @param {JitsiLocalTrack} track which ssrc was updated\n     * @param {string} ssrc that was stored\n     */\n    LOCAL_TRACK_SSRC_UPDATED: 'rtc.local_track_ssrc_updated',\n\n    TRACK_ATTACHED: 'rtc.track_attached',\n\n    /**\n     * Event fired when we remote track is added to the conference.\n     * 1st event argument is the added <tt>JitsiRemoteTrack</tt> instance.\n     **/\n    REMOTE_TRACK_ADDED: 'rtc.remote_track_added',\n\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\n    // (currently implemented for local tracks only)\n    REMOTE_TRACK_MUTE: 'rtc.remote_track_mute',\n\n    /**\n     * Indicates that the remote track has been removed from the conference.\n     * 1st event argument is the removed {@link JitsiRemoteTrack} instance.\n     */\n    REMOTE_TRACK_REMOVED: 'rtc.remote_track_removed',\n\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\n    // (currently implemented for local tracks only)\n    REMOTE_TRACK_UNMUTE: 'rtc.remote_track_unmute',\n\n    /**\n     * Indicates error while set local description.\n     */\n    SET_LOCAL_DESCRIPTION_FAILED: 'rtc.set_local_description_failed',\n\n    /**\n     * Indicates error while set remote description.\n     */\n    SET_REMOTE_DESCRIPTION_FAILED: 'rtc.set_remote_description_failed',\n    AUDIO_OUTPUT_DEVICE_CHANGED: 'rtc.audio_output_device_changed',\n    DEVICE_LIST_CHANGED: 'rtc.device_list_changed',\n\n    /**\n     * Indicates that the list with available devices will change.\n     */\n    DEVICE_LIST_WILL_CHANGE: 'rtc.device_list_will_change',\n    DEVICE_LIST_AVAILABLE: 'rtc.device_list_available',\n\n    /**\n     * Indicates that a message from another participant is received on\n     * data channel.\n     */\n    ENDPOINT_MESSAGE_RECEIVED: 'rtc.endpoint_message_received',\n\n    /**\n     * Designates an event indicating that the local ICE username fragment of\n     * the jingle session has changed.\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\n     * is the source of the event.\n     * The second argument is the actual \"ufrag\" string.\n     */\n    LOCAL_UFRAG_CHANGED: 'rtc.local_ufrag_changed',\n\n    /**\n     * Designates an event indicating that the local ICE username fragment of\n     * the jingle session has changed.\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\n     * is the source of the event.\n     * The second argument is the actual \"ufrag\" string.\n     */\n    REMOTE_UFRAG_CHANGED: 'rtc.remote_ufrag_changed'\n};\n\nmodule.exports = RTCEvents;\n","const Resolutions = {\n    '1080': {\n        width: 1920,\n        height: 1080,\n        order: 8\n    },\n    'fullhd': {\n        width: 1920,\n        height: 1080,\n        order: 8\n    },\n    '720': {\n        width: 1280,\n        height: 720,\n        order: 7\n    },\n    'hd': {\n        width: 1280,\n        height: 720,\n        order: 7\n    },\n    '960': {\n        width: 960,\n        height: 720,\n        order: 6\n    },\n    '540': {\n        width: 960,\n        height: 540,\n        order: 5\n    },\n    'qhd': {\n        width: 960,\n        height: 540,\n        order: 5\n    },\n\n    // 16:9 resolution first.\n    '360': {\n        width: 640,\n        height: 360,\n        order: 4\n    },\n    '640': {\n        width: 640,\n        height: 480,\n        order: 3\n    },\n    'vga': {\n        width: 640,\n        height: 480,\n        order: 3\n    },\n\n    // 16:9 resolution first.\n    '180': {\n        width: 320,\n        height: 180,\n        order: 2\n    },\n    '320': {\n        width: 320,\n        height: 240,\n        order: 1\n    }\n};\n\nmodule.exports = Resolutions;\n","/**\n * Event triggered when participant's muted status changes.\n * @param {string} endpointId the track owner's identifier (MUC nickname)\n * @param {MediaType} mediaType \"audio\" or \"video\"\n * @param {boolean} isMuted the new muted state\n */\nexport const PEER_MUTED_CHANGED = 'signaling.peerMuted';\n\n/**\n * Event triggered when participant's video type changes.\n * @param {string} endpointId the video owner's ID (MUC nickname)\n * @param {VideoType} videoType the new value\n */\nexport const PEER_VIDEO_TYPE_CHANGED = 'signaling.peerVideoType';\n","\nimport Listenable from '../../modules/util/Listenable';\n\n/**\n * An object that carries the info about specific media type advertised by\n * participant in the signaling channel.\n * @typedef {Object} PeerMediaInfo\n * @property {boolean} muted indicates if the media is currently muted\n * @property {VideoType|undefined} videoType the type of the video if applicable\n */\n\n/**\n * Interface used to expose the information carried over the signaling channel\n * which is not available to the RTC module in the media SDP.\n *\n * @interface SignalingLayer\n */\nexport default class SignalingLayer extends Listenable {\n\n    /**\n     * Obtains the endpoint ID for given SSRC.\n     * @param {number} ssrc the SSRC number.\n     * @return {string|null} the endpoint ID for given media SSRC.\n     */\n    getSSRCOwner(ssrc) { // eslint-disable-line no-unused-vars\n        throw new Error('not implemented');\n    }\n\n    /**\n     * Obtains the info about given media advertised in the MUC presence of\n     * the participant identified by the given MUC JID.\n     * @param {string} owner the MUC jid of the participant for whom\n     * {@link PeerMediaInfo} will be obtained.\n     * @param {MediaType} mediaType the type of the media for which presence\n     * info will be obtained.\n     * @return {PeerMediaInfo|null} presenceInfo an object with media presence\n     * info or <tt>null</tt> either if there is no presence available for given\n     * JID or if the media type given is invalid.\n     */\n    getPeerMediaInfo(owner, mediaType) { // eslint-disable-line no-unused-vars\n        throw new Error('not implemented');\n    }\n}\n","/* global module */\n/**\n * Enumeration of the video types\n * @type {{CAMERA: string, DESKTOP: string}}\n */\nconst VideoType = {\n    /**\n     * The camera video type.\n     */\n    CAMERA: 'camera',\n\n    /**\n     * The desktop video type.\n     */\n    DESKTOP: 'desktop'\n};\n\nmodule.exports = VideoType;\n","const AuthenticationEvents = {\n    /**\n     * Event callback arguments:\n     * function(authenticationEnabled, userIdentity)\n     * authenticationEnabled - indicates whether authentication has been enabled\n     *                         in this session\n     * userIdentity - if user has been logged in then it contains user name. If\n     *                contains 'null' or 'undefined' then user is not logged in.\n     */\n    IDENTITY_UPDATED: 'authentication.identity_updated'\n};\n\nmodule.exports = AuthenticationEvents;\n","/**\n * Indicates that the local connection statistics were updated.\n */\nexport const LOCAL_STATS_UPDATED = 'cq.local_stats_updated';\n\n/**\n * Indicates that the connection statistics for a particular remote participant\n * were updated.\n */\nexport const REMOTE_STATS_UPDATED = 'cq.remote_stats_updated';\n","/**\n * Indicates that the end-to-end round-trip-time for a participant has changed.\n */\nexport const E2E_RTT_CHANGED = 'e2eping.e2e_rtt_changed';\n","/**\n * This class exports constants and factory methods related to the analytics\n * API provided by AnalyticsAdapter. In order for entries in a database to be\n * somewhat easily traceable back to the code which produced them, events sent\n * through analytics should be defined here.\n *\n * Since the AnalyticsAdapter API can be used in different ways, for some events\n * it is more convenient to just define the event name as a constant. For other\n * events a factory function is easier.\n *\n * A general approach for adding a new event:\n * 1. Determine the event type: track, UI, page, or operational. If in doubt use\n * operational.\n * 2. Determine whether the event is related to other existing events, and\n * which fields are desired to be set: name, action, actionSubject, source.\n * 3. If the name is sufficient (the other fields are not important), use a\n * constant. Otherwise use a factory function.\n *\n * Note that the AnalyticsAdapter uses the events passed to its functions for\n * its own purposes, and might modify them. Because of this, factory functions\n * should create new objects.\n *\n */\n\n/**\n * The constant which identifies an event of type \"operational\".\n * @type {string}\n */\nexport const TYPE_OPERATIONAL = 'operational';\n\n/**\n * The constant which identifies an event of type \"page\".\n * @type {string}\n */\nexport const TYPE_PAGE = 'page';\n\n/**\n * The constant which identifies an event of type \"track\".\n * @type {string}\n */\nexport const TYPE_TRACK = 'track';\n\n/**\n * The constant which identifies an event of type \"ui\".\n * @type {string}\n */\nexport const TYPE_UI = 'ui';\n\n/**\n * The \"action\" value for Jingle events which indicates that the Jingle session\n * was restarted (TODO: verify/fix the documentation)\n * @type {string}\n */\nexport const ACTION_JINGLE_RESTART = 'restart';\n\n/**\n * The \"action\" value for Jingle events which indicates that a session-accept\n * timed out (TODO: verify/fix the documentation)\n * @type {string}\n */\nexport const ACTION_JINGLE_SA_TIMEOUT = 'session-accept.timeout';\n\n/**\n * The \"action\" value for Jingle events which indicates that a session-initiate\n * was received.\n * @type {string}\n */\nexport const ACTION_JINGLE_SI_RECEIVED = 'session-initiate.received';\n\n/**\n * The \"action\" value for Jingle events which indicates that a session-initiate\n * not arrived within a timeout (the value is specified in\n * the {@link JingleSessionPC}.\n * @type {string}\n */\nexport const ACTION_JINGLE_SI_TIMEOUT = 'session-initiate.timeout';\n\n/**\n * A constant for the \"terminate\" action for Jingle events. TODO: verify/fix\n * the documentation)\n * @type {string}\n */\nexport const ACTION_JINGLE_TERMINATE = 'terminate';\n\n/**\n * The \"action\" value for Jingle events which indicates that a transport-replace\n * was received.\n * @type {string}\n */\nexport const ACTION_JINGLE_TR_RECEIVED\n    = 'transport-replace.received';\n\n/**\n * The \"action\" value for Jingle events which indicates that a transport-replace\n * succeeded (TODO: verify/fix the documentation)\n * @type {string}\n */\nexport const ACTION_JINGLE_TR_SUCCESS\n    = 'transport-replace.success';\n\n/**\n * The \"action\" value for P2P events which indicates that P2P session initiate message has been rejected by the client\n * because the mandatory requirements were not met.\n * @type {string}\n */\nexport const ACTION_P2P_DECLINED = 'decline';\n\n/**\n * The \"action\" value for P2P events which indicates that a connection was\n * established (TODO: verify/fix the documentation)\n * @type {string}\n */\nexport const ACTION_P2P_ESTABLISHED = 'established';\n\n/**\n * The \"action\" value for P2P events which indicates that something failed.\n * @type {string}\n */\nexport const ACTION_P2P_FAILED = 'failed';\n\n/**\n * The \"action\" value for P2P events which indicates that a switch to\n * jitsi-videobridge happened.\n * @type {string}\n */\nexport const ACTION_P2P_SWITCH_TO_JVB = 'switch.to.jvb';\n\n/**\n * The name of an event which indicates an available device. We send one such\n * event per available device once when the available devices are first known,\n * and every time that they change\n * @type {string}\n *\n * Properties:\n *      audio_input_device_count: the number of audio input devices available at\n *          the time the event was sent.\n *      audio_output_device_count: the number of audio output devices available\n *          at the time the event was sent.\n *      video_input_device_count: the number of video input devices available at\n *          the time the event was sent.\n *      video_output_device_count: the number of video output devices available\n *          at the time the event was sent.\n *      device_id: an identifier of the device described in this event.\n *      device_group_id:\n *      device_kind: one of 'audioinput', 'audiooutput', 'videoinput' or\n *          'videooutput'.\n *      device_label: a string which describes the device.\n */\nexport const AVAILABLE_DEVICE = 'available.device';\n\n/**\n * This appears to be fired only in certain cases when the XMPP connection\n * disconnects (and it was intentional?). It is currently never observed to\n * fire in production.\n *\n * TODO: document\n *\n * Properties:\n *      message: an error message\n */\nexport const CONNECTION_DISCONNECTED = 'connection.disconnected';\n\n/**\n * Indicates that the user of the application provided feedback in terms of a\n * rating (an integer from 1 to 5) and an optional comment.\n * Properties:\n *      value: the user's rating (an integer from 1 to 5)\n *      comment: the user's comment\n */\nexport const FEEDBACK = 'feedback';\n\n/**\n * Indicates the duration of a particular phase of the ICE connectivity\n * establishment.\n *\n * Properties:\n *      phase: the ICE phase (e.g. 'gathering', 'checking', 'establishment')\n *      value: the duration in milliseconds.\n *      p2p: whether the associated ICE connection is p2p or towards a\n *          jitsi-videobridge\n *      initiator: whether the local Jingle peer is the initiator or responder\n *          in the Jingle session. XXX we probably actually care about the ICE\n *          role (controlling vs controlled), and we assume that this correlates\n *          with the Jingle initiator.\n */\nexport const ICE_DURATION = 'ice.duration';\n\n/**\n * Indicates the difference in milliseconds between the ICE establishment time\n * for the P2P and JVB connections (e.g. a value of 10 would indicate that the\n * P2P connection took 10ms more than JVB connection to establish).\n *\n * Properties:\n *      value: the difference in establishment durations in milliseconds.\n *\n */\nexport const ICE_ESTABLISHMENT_DURATION_DIFF\n    = 'ice.establishment.duration.diff';\n\n/**\n * Indicates that the ICE state has changed.\n *\n * Properties:\n *      state: the ICE state which was entered (e.g. 'checking', 'connected',\n *          'completed', etc).\n *      value: the time in milliseconds (as reported by\n *          window.performance.now()) that the state change occurred.\n *      p2p: whether the associated ICE connection is p2p or towards a\n *          jitsi-videobridge\n *      signalingState: The signaling state of the associated PeerConnection\n *      reconnect: whether the associated Jingle session is in the process of\n *          reconnecting (or is it ICE? TODO: verify/fix the documentation)\n */\nexport const ICE_STATE_CHANGED = 'ice.state.changed';\n\n/**\n * Indicates that no bytes have been sent for the track.\n *\n * Properties:\n *      mediaType: the media type of the local track ('audio' or 'video').\n */\nexport const NO_BYTES_SENT = 'track.no-bytes-sent';\n\n/**\n * Indicates that a track was unmuted (?).\n *\n * Properties:\n *      mediaType: the media type of the local track ('audio' or 'video').\n *      trackType: the type of the track ('local' or 'remote').\n *      value: TODO: document\n */\nexport const TRACK_UNMUTED = 'track.unmuted';\n\n/**\n * Creates an operational event which indicates that we have received a\n * \"bridge down\" event from jicofo.\n */\nexport const createBridgeDownEvent = function() {\n    const bridgeDown = 'bridge.down';\n\n    return {\n        action: bridgeDown,\n        actionSubject: bridgeDown,\n        type: TYPE_OPERATIONAL\n    };\n};\n\n/**\n * Creates an event which indicates that the XMPP connection failed\n * @param errorType TODO\n * @param errorMessage TODO\n * @param detail connection failed details.\n */\nexport const createConnectionFailedEvent\n    = function(errorType, errorMessage, details) {\n        return {\n            type: TYPE_OPERATIONAL,\n            action: 'connection.failed',\n            attributes: {\n                'error_type': errorType,\n                'error_message': errorMessage,\n                ...details\n            }\n        };\n    };\n\n/**\n * Creates an operational event which indicates that a particular connection\n * stage was reached (i.e. the XMPP connection transitioned to the \"connected\"\n * state).\n *\n * @param stage the stage which was reached\n * @param attributes additional attributes for the event. This should be an\n * object with a \"value\" property indicating a timestamp in milliseconds\n * relative to the beginning of the document's lifetime.\n *\n */\nexport const createConnectionStageReachedEvent = function(stage, attributes) {\n    const action = 'connection.stage.reached';\n\n    return {\n        action,\n        actionSubject: stage,\n        attributes,\n        source: action,\n        type: TYPE_OPERATIONAL\n    };\n};\n\n/**\n * Creates an operational event for the end-to-end round trip time to a\n * specific remote participant.\n * @param participantId the ID of the remote participant.\n * @param region the region of the remote participant\n * @param rtt the rtt\n */\nexport const createE2eRttEvent = function(participantId, region, rtt) {\n    const attributes = {\n        'participant_id': participantId,\n        region,\n        rtt\n    };\n\n    return {\n        attributes,\n        name: 'e2e_rtt',\n        type: TYPE_OPERATIONAL\n    };\n};\n\n/**\n * Creates an event which indicates that the focus has left the MUC.\n */\nexport const createFocusLeftEvent = function() {\n    const action = 'focus.left';\n\n    return {\n        action,\n        actionSubject: action,\n        type: TYPE_OPERATIONAL\n    };\n};\n\n/**\n * Creates an event related to a getUserMedia call.\n *\n * @param action the type of the result that the event represents: 'error',\n * 'success', 'warning', etc.\n * @param attributes the attributes to attach to the event.\n * @returns {{type: string, source: string, name: string}}\n */\nexport const createGetUserMediaEvent = function(action, attributes = {}) {\n    return {\n        type: TYPE_OPERATIONAL,\n        source: 'get.user.media',\n        action,\n        attributes\n    };\n};\n\n/**\n * Creates an event related to remote participant connection status changes.\n *\n * @param attributes the attributes to attach to the event.\n * @returns {{type: string, source: string, name: string}}\n */\nexport const createParticipantConnectionStatusEvent = function(attributes = {}) {\n    const action = 'duration';\n\n    return {\n        type: TYPE_OPERATIONAL,\n        source: 'peer.conn.status',\n        action,\n        attributes\n    };\n};\n\n/**\n * Creates an event for a Jingle-related event.\n * @param action the action of the event\n * @param attributes attributes to add to the event.\n */\nexport const createJingleEvent = function(action, attributes = {}) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action,\n        source: 'jingle',\n        attributes\n    };\n};\n\n/**\n * Creates an event which indicates that a local track was not able to read\n * data from its source (a camera or a microphone).\n *\n * @param mediaType {String} the media type of the local track ('audio' or\n * 'video').\n */\nexport const createNoDataFromSourceEvent = function(mediaType, value) {\n    return {\n        attributes: {\n            'media_type': mediaType,\n            value\n        },\n        action: 'track.no.data.from.source',\n        type: TYPE_OPERATIONAL\n    };\n};\n\n/**\n * Creates an event for a p2p-related event.\n * @param action the action of the event\n * @param attributes attributes to add to the event.\n */\nexport const createP2PEvent = function(action, attributes = {}) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action,\n        source: 'p2p',\n        attributes\n    };\n};\n\n/**\n * Indicates that we received a remote command to mute.\n */\nexport const createRemotelyMutedEvent = function() {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'remotely.muted'\n    };\n};\n\n/**\n * Creates an event which contains RTP statistics such as RTT and packet loss.\n *\n * All average RTP stats are currently reported under 1 event name, but with\n * different properties that allows to distinguish between a P2P call, a\n * call relayed through TURN or the JVB, and multiparty vs 1:1.\n *\n * The structure of the event is:\n *\n * {\n *      p2p: true,\n *      conferenceSize: 2,\n *      localCandidateType: \"relay\",\n *      remoteCandidateType: \"relay\",\n *      transportType: \"udp\",\n *\n *      // Average RTT of 200ms\n *      \"rtt.avg\": 200,\n *      \"rtt.samples\": \"[100, 200, 300]\",\n *\n *      // Average packet loss of 10%\n *      \"packet.loss.avg\": 10,\n *      \"packet.loss.samples\": '[5, 10, 15]'\n *\n *      // Difference in milliseconds in the end-to-end RTT between p2p and jvb.\n *      // The e2e RTT through jvb is 15ms shorter:\n *      \"rtt.diff\": 15,\n *\n *      // End-to-end RTT through JVB is ms.\n *      \"end2end.rtt.avg\" = 100\n * }\n *\n * Note that the value of the \"samples\" properties are (JSON encoded) strings,\n * and not JSON arrays, as events' attributes can not be nested. The samples are\n * currently included for debug purposes only and can be removed anytime soon\n * from the structure.\n *\n * Also note that not all of values are present in each event, as values are\n * obtained and calculated as part of different process/event pipe. For example\n * {@link ConnectionAvgStats} instances are doing the reports for each\n * {@link TraceablePeerConnection} and work independently from the main stats\n * pipe.\n */\nexport const createRtpStatsEvent = function(attributes) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'rtp.stats',\n        attributes\n    };\n};\n\n/**\n * Creates an event which contains the round trip time (RTT) to a set of\n * regions.\n *\n * @param attributes\n * @returns {{type: string, action: string, attributes: *}}\n */\nexport const createRttByRegionEvent = function(attributes) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'rtt.by.region',\n        attributes\n    };\n};\n\n/**\n * Creates an event which contains information about the audio output problem (the user id of the affected participant,\n * the local audio levels and the remote audio levels that triggered the event).\n *\n * @param {string} userID - The user id of the affected participant.\n * @param {*} localAudioLevels - The local audio levels.\n * @param {*} remoteAudioLevels - The audio levels received from the participant.\n */\nexport function createAudioOutputProblemEvent(userID, localAudioLevels, remoteAudioLevels) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'audio.output.problem',\n        attributes: {\n            userID,\n            localAudioLevels,\n            remoteAudioLevels\n        }\n    };\n}\n\n/**\n * Creates an event which contains an information related to the bridge channel close event.\n *\n * @param {string} code - A code from {@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * @param {string} reason - A string which describes the reason for closing the bridge channel.\n * @returns {{type: string, action: string, attributes: { code: string, reason: string }}}\n */\nexport const createBridgeChannelClosedEvent = function(code, reason) {\n    return {\n        type: TYPE_OPERATIONAL,\n        action: 'bridge-channel.error',\n        attributes: {\n            code,\n            reason\n        }\n    };\n};\n\n/**\n * Creates an event which indicates the Time To First Media (TTFM).\n * It is measured in milliseconds relative to the beginning of the document's\n * lifetime (i.e. the origin used by window.performance.now()), and it excludes\n * the following:\n * 1. The delay due to getUserMedia()\n * 2. The period between the MUC being joined and the reception of the Jingle\n * session-initiate from jicofo. This is because jicofo will not start a Jingle\n * session until there are at least 2 participants in the room.\n *\n * @param attributes the attributes to add to the event. Currently used fields:\n *      mediaType: the media type of the local track ('audio' or 'video').\n *      muted: whether the track has ever been muted (?)\n *      value: the TTMF in milliseconds.\n */\nexport const createTtfmEvent = function(attributes) {\n    return createConnectionStageReachedEvent('ttfm', attributes);\n};\n","/**\n * Notifies about audio level in RTP statistics by SSRC.\n *\n * @param ssrc - The synchronization source identifier (SSRC) of the\n * endpoint/participant whose audio level is being reported.\n * @param {number} audioLevel - The audio level of <tt>ssrc</tt> according to\n * RTP statistics.\n * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> identifies the\n * local endpoint/participant; otherwise, <tt>false</tt>.\n */\nexport const AUDIO_LEVEL = 'statistics.audioLevel';\n\n/**\n * An event fired just before the statistics module gets disposes and it's\n * the last chance to submit some logs that will end up in stats services like\n * CallStats (if enabled).\n */\nexport const BEFORE_DISPOSED = 'statistics.before_disposed';\n\n/**\n * An event carrying all statistics by ssrc.\n */\nexport const BYTE_SENT_STATS = 'statistics.byte_sent_stats';\n\n/**\n * An event carrying connection statistics.\n *\n * @param {object} connectionStats - The connection statistics carried by the\n * event such as <tt>bandwidth</tt>, <tt>bitrate</tt>, <tt>packetLoss</tt>,\n * <tt>resolution</tt>, and <tt>transport</tt>.\n */\nexport const CONNECTION_STATS = 'statistics.connectionstats';\n","const Constants = {\n    LOCAL_JID: 'local'\n};\n\nmodule.exports = Constants;\n","const XMPPEvents = {\n    /**\n     * Indicates error while adding ice candidate.\n     */\n    ADD_ICE_CANDIDATE_FAILED: 'xmpp.add_ice_candidate_failed',\n\n    // Designates an event indicating that the focus has asked us to mute our\n    // audio.\n    AUDIO_MUTED_BY_FOCUS: 'xmpp.audio_muted_by_focus',\n    AUTHENTICATION_REQUIRED: 'xmpp.authentication_required',\n    BRIDGE_DOWN: 'xmpp.bridge_down',\n\n    /**\n     * Triggered when 'session-accept' is received from the responder.\n     */\n    CALL_ACCEPTED: 'xmpp.callaccepted.jingle',\n\n    // Designates an event indicating that an offer (e.g. Jingle\n    // session-initiate) was received.\n    CALL_INCOMING: 'xmpp.callincoming.jingle',\n\n    // Triggered when Jicofo kills our media session, this can happen while\n    // we're still in the MUC, when it decides to terminate the media session.\n    // For example when the session is idle for too long, because we're the only\n    // person in the conference room.\n    CALL_ENDED: 'xmpp.callended.jingle',\n    CHAT_ERROR_RECEIVED: 'xmpp.chat_error_received',\n\n    // The conference properties (as advertised by jicofo) have changed\n    CONFERENCE_PROPERTIES_CHANGED: 'xmpp.conference_properties_changed',\n\n    /**\n     * This event is triggered when the ICE connects for the first time.\n     */\n    CONNECTION_ESTABLISHED: 'xmpp.connection.connected',\n\n    // Designates an event indicating that the connection to the XMPP server\n    // failed.\n    CONNECTION_FAILED: 'xmpp.connection.failed',\n\n    // Designates an event indicating that the media (ICE) connection was\n    // interrupted. This should go to the RTC module.\n    CONNECTION_INTERRUPTED: 'xmpp.connection.interrupted',\n\n    // Designates an event indicating that the media (ICE) connection was\n    // restored. This should go to the RTC module.\n    CONNECTION_RESTORED: 'xmpp.connection.restored',\n\n    // Designates an event indicating that the media (ICE) connection failed.\n    // This should go to the RTC module.\n    CONNECTION_ICE_FAILED: 'xmpp.connection.ice.failed',\n\n    /**\n     * Designates an event indicating connection status changes.\n     */\n    CONNECTION_STATUS_CHANGED: 'xmpp.connection.status.changed',\n\n    // Designates an event indicating that the display name of a participant\n    // has changed.\n    DISPLAY_NAME_CHANGED: 'xmpp.display_name_changed',\n\n    /**\n     * Chat room instance have been added to Strophe.emuc plugin.\n     */\n    EMUC_ROOM_ADDED: 'xmpp.emuc_room_added',\n\n    /**\n     * Chat room instance have been removed from Strophe.emuc plugin.\n     */\n    EMUC_ROOM_REMOVED: 'xmpp.emuc_room_removed',\n    ETHERPAD: 'xmpp.etherpad',\n    FOCUS_DISCONNECTED: 'xmpp.focus_disconnected',\n    FOCUS_LEFT: 'xmpp.focus_left',\n    GRACEFUL_SHUTDOWN: 'xmpp.graceful_shutdown',\n\n    /**\n     * Event fired when 'transport-replace' Jingle message has been received,\n     * before the new offer is set on the PeerConnection.\n     */\n    ICE_RESTARTING: 'rtc.ice_restarting',\n\n    /**\n     * Event fired after the 'transport-replace' message has been processed\n     * and the new offer has been set successfully.\n     */\n    ICE_RESTART_SUCCESS: 'rtc.ice_restart_success',\n\n    /**\n     * Designates an event indicating that we were kicked from the XMPP MUC.\n     * @param {boolean} isSelfPresence - whether it is for local participant\n     * or another participant.\n     * @param {string} actorJid - the jid of the participant who was initator\n     * of the kick.\n     * @param {?string} participantJid - when it is not a kick for local participant,\n     * this is the jid of the participant which was kicked.\n     */\n    KICKED: 'xmpp.kicked',\n\n    // Designates an event indicating that our role in the XMPP MUC has changed.\n    LOCAL_ROLE_CHANGED: 'xmpp.localrole_changed',\n\n    // Designates an event indicating that an XMPP message in the MUC was\n    // received.\n    MESSAGE_RECEIVED: 'xmpp.message_received',\n\n    // Designates an event indicating that a private XMPP message in the MUC was\n    // received.\n    PRIVATE_MESSAGE_RECEIVED: 'xmpp.private_message_received',\n\n    // Designates an event indicating that a bot participant type had changed\n    MUC_MEMBER_BOT_TYPE_CHANGED: 'xmpp.muc_member_bot_type_changed',\n\n    // Designates an event indicating that the XMPP MUC was destroyed.\n    MUC_DESTROYED: 'xmpp.muc_destroyed',\n\n    // Designates an event indicating that we have joined the XMPP MUC.\n    MUC_JOINED: 'xmpp.muc_joined',\n\n    // Designates an event indicating that a participant joined the XMPP MUC.\n    MUC_MEMBER_JOINED: 'xmpp.muc_member_joined',\n\n    // Designates an event indicating that a participant left the XMPP MUC.\n    MUC_MEMBER_LEFT: 'xmpp.muc_member_left',\n\n    // Designates an event indicating that local participant left the muc\n    MUC_LEFT: 'xmpp.muc_left',\n\n    // Designates an event indicating that the MUC role of a participant has\n    // changed.\n    MUC_ROLE_CHANGED: 'xmpp.muc_role_changed',\n\n    // Designates an event indicating that the MUC has been locked or unlocked.\n    MUC_LOCK_CHANGED: 'xmpp.muc_lock_changed',\n\n    // Designates an event indicating that a participant in the XMPP MUC has\n    // advertised that they have audio muted (or unmuted).\n    PARTICIPANT_AUDIO_MUTED: 'xmpp.audio_muted',\n\n    // Designates an event indicating that a participant in the XMPP MUC has\n    // advertised that they have video muted (or unmuted).\n    PARTICIPANT_VIDEO_MUTED: 'xmpp.video_muted',\n\n    // Designates an event indicating that the video type (e.g. 'camera' or\n    // 'screen') for a participant has changed.\n    // Note: currently this event fires every time we receive presence from\n    // someone (regardless of whether or not the \"video type\" changed).\n    PARTICIPANT_VIDEO_TYPE_CHANGED: 'xmpp.video_type',\n\n    /**\n     * Indicates that the features of the participant has been changed.\n     */\n    PARTCIPANT_FEATURES_CHANGED: 'xmpp.partcipant_features_changed',\n    PASSWORD_REQUIRED: 'xmpp.password_required',\n    PEERCONNECTION_READY: 'xmpp.peerconnection_ready',\n\n    /**\n     * Indicates that phone number changed.\n     */\n    PHONE_NUMBER_CHANGED: 'conference.phoneNumberChanged',\n    PRESENCE_RECEIVED: 'xmpp.presence_received',\n    PRESENCE_STATUS: 'xmpp.presence_status',\n    PROMPT_FOR_LOGIN: 'xmpp.prompt_for_login',\n\n    // xmpp is connected and obtained user media\n    READY_TO_JOIN: 'xmpp.ready_to_join',\n\n    /**\n     * Indicates that recording state changed.\n     */\n    RECORDER_STATE_CHANGED: 'xmpp.recorderStateChanged',\n\n    // Designates an event indicating that we received statistics from a\n    // participant in the MUC.\n    REMOTE_STATS: 'xmpp.remote_stats',\n\n    /**\n     * Indicates that the offer / answer renegotiation has failed.\n     */\n    RENEGOTIATION_FAILED: 'xmpp.renegotiation_failed',\n    RESERVATION_ERROR: 'xmpp.room_reservation_error',\n    ROOM_CONNECT_ERROR: 'xmpp.room_connect_error',\n    ROOM_CONNECT_NOT_ALLOWED_ERROR: 'xmpp.room_connect_error.not_allowed',\n    ROOM_JOIN_ERROR: 'xmpp.room_join_error',\n\n    /**\n     * Indicates that max users limit has been reached.\n     */\n    ROOM_MAX_USERS_ERROR: 'xmpp.room_max_users_error',\n\n    // Designates an event indicating that we sent an XMPP message to the MUC.\n    SENDING_CHAT_MESSAGE: 'xmpp.sending_chat_message',\n\n    // Designates an event indicating that we sent a private XMPP message to\n    // a specific user of the muc.\n    SENDING_PRIVATE_CHAT_MESSAGE: 'xmpp.sending_private_chat_message',\n\n    /**\n     * Event fired when we do not get our 'session-accept' acknowledged by\n     * Jicofo. It most likely means that there is serious problem with our\n     * connection or XMPP server and we should reload the conference.\n     *\n     * We have seen that to happen in BOSH requests race condition when the BOSH\n     * request table containing the 'session-accept' was discarded by Prosody.\n     * Jicofo does send the RESULT immediately without any condition, so missing\n     * packets means that most likely it has never seen our IQ.\n     */\n    SESSION_ACCEPT_TIMEOUT: 'xmpp.session_accept_timeout',\n\n    /**\n     * Event fired when speaker stats update message is received.\n     */\n    SPEAKER_STATS_RECEIVED: 'xmpp.speaker_stats_received',\n\n    // Designates an event indicating that we should join the conference with\n    // audio and/or video muted.\n    START_MUTED_FROM_FOCUS: 'xmpp.start_muted_from_focus',\n\n    // Designates an event indicating that the subject of the XMPP MUC has\n    // changed.\n    SUBJECT_CHANGED: 'xmpp.subject_changed',\n\n    // FIXME: how does it belong to XMPP ? - it's detected by the PeerConnection\n    // suspending detected\n    SUSPEND_DETECTED: 'xmpp.suspend_detected',\n\n    /**\n     * Notifies for transcription status changes. The event provides the\n     * following parameters to its listeners:\n     *\n     * @param {String} status - The new status.\n     */\n    TRANSCRIPTION_STATUS_CHANGED: 'xmpp.transcription_status_changed',\n\n    /**\n     * Event fired when 'transport-info' with new ICE candidates is received.\n     */\n    TRANSPORT_INFO: 'xmpp.transportinfo.jingle',\n\n    /**\n     * Indicates that video SIP GW state changed.\n     *\n     * @param {VideoSIPGWConstants} status - Any of the following statuses:\n     * STATUS_BUSY, STATUS_AVAILABLE or STATUS_UNDEFINED.\n     */\n    VIDEO_SIP_GW_AVAILABILITY_CHANGED: 'xmpp.videoSIPGWAvailabilityChanged',\n\n    /**\n     * Indicates that video SIP GW Session state changed.\n     * The statuses are any of the following statuses:\n     * STATE_ON, STATE_OFF, STATE_PENDING, STATE_RETRYING, STATE_FAILED.\n     * {@see VideoSIPGWConstants}\n     *\n     * @param {options} event - {address, oldState, newState, displayName}.\n     */\n    VIDEO_SIP_GW_SESSION_STATE_CHANGED:\n        'xmpp.videoSIPGWSessionStateChanged',\n\n    // Designates an event indicating that the local ICE connection state has\n    // changed.\n    ICE_CONNECTION_STATE_CHANGED: 'xmpp.ice_connection_state_changed',\n\n    /**\n     * Event which is emitted when the body in an XMPP message in the MUC\n     * contains JSON\n     */\n    JSON_MESSAGE_RECEIVED: 'xmmp.json_message_received'\n};\n\nmodule.exports = XMPPEvents;\n"],"sourceRoot":""}